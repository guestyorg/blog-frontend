const getInventory = async (api, app) => {
  const { content, encoding, sha } = await api.getFile({
    repo: 'platform-inventory',
    branch: 'master',
    file: `dimensions/y/apps/${app}.json`,
  });
  return {
    inventory: JSON.parse(Buffer.from(content, encoding).toString('ascii')),
    commitSha: sha,
  };
};

const branchAndPR = async ({
  repo,
  api,
  sha,
  manifest,
  inventoryEntry,
  env,
  workflowID,
  username,
  action,
}) => {
  const branchName = `app/${action}-${env}`;
  const inventoryString = JSON.stringify(inventoryEntry, null, 2);
  const manifestString = JSON.stringify(manifest, null, 2);
  const content = Buffer.from(inventoryString, 'ascii').toString('base64');
  await api.branchFromMaster({ repo: 'platform-inventory', name: branchName });
  await api.updateFile({
    repo: 'platform-inventory',
    sha,
    content,
    path: `dimensions/y/apps/${repo}.json`,
    branch: branchName,
  });

  return await api.prMaster({
    repo: 'platform-inventory',
    title: `App added for repo ${repo} by ${username}`,
    body:
      'manifest: \n' +
      '``` \n' +
      `${manifestString}` +
      '\n' +
      '``` \n' +
      `repo: https://github.com/guestyorg/${repo}` +
      '\n' +
      `circleci workflow: https://circleci.com/workflow-run/${workflowID}`,
    head: branchName,
  });
};

const createInventoryFile = ({ manifest }) => {
  const { name, owners } = manifest;
  if (!owners || !name) {
    throw new Error(
      'Manifest Error - Please make sure you have set the app owners and name in the manifest.'
    );
  }

  return { owners, name };
};

module.exports = {
  getInventory,
  branchAndPR,
  createInventoryFile,
};
