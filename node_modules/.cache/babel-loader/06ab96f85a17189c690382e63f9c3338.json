{"ast":null,"code":"import Axios from \"axios\";\nimport { BLOG_DETAILS_FAIL, BLOG_DETAILS_REQUEST, BLOG_DETAILS_SUCCESS, BLOG_REGISTER_FAIL, BLOG_REGISTER_REQUEST, BLOG_REGISTER_SUCCESS, BLOG_ADD_FAIL, BLOG_ADD_REQUEST, BLOG_ADD_SUCCESS, BLOG_SIGNIN_FAIL, BLOG_SIGNIN_REQUEST, BLOG_SIGNIN_SUCCESS, BLOG_SIGNOUT, BLOG_UPDATE_PROFILE_FAIL, BLOG_UPDATE_PROFILE_REQUEST, BLOG_UPDATE_PROFILE_SUCCESS, BLOG_LIST_REQUEST, BLOG_LIST_SUCCESS, BLOG_LIST_FAIL, BLOG_DELETE_REQUEST, BLOG_DELETE_SUCCESS, BLOG_DELETE_FAIL, BLOG_UPDATE_SUCCESS, BLOG_UPDATE_FAIL } from \"../constants/blogConstants\";\nimport Resource from \"@guestyci/agni\"; // const { api, env, config } = Resource.create();\n\nconst temp = Resource.create(\"user\");\ntemp.api.defaults.baseURL = `http://localhost:9999/api/blogs`;\nconst blogApi = temp.api;\nexport const listBlogs = () => async dispatch => {\n  dispatch({\n    type: BLOG_LIST_REQUEST\n  });\n  console.log(\"BLOG_LIST_REQUEST\");\n\n  try {\n    const {\n      data\n    } = await blogApi.get(); // const temp = Resource.create('tasks');\n    // temp.api.defaults.baseURL = `http://localhost:9999/tasks`;\n    // export const tasksApi = temp.api;\n    // const data = await blogApi.get(); // will go to `${config.MAILER_URL}/blogs`\n\n    console.log(\"data:\", data); // let counter = 1;\n\n    const arr = [];\n    let blogs = data;\n\n    for (let i = 0; i < blogs.length; i++) {\n      // console.log(\"blogs[i]: \", blogs[i]);\n      const arrBlog = Object.entries(blogs[i]);\n      console.log(\"arrBlog:\", arrBlog); //  title: {\n      //   children: 'John',\n      // },\n\n      const bigObj = {};\n\n      for (let j = 0; j < arrBlog.length; j++) {\n        const obj = {}; // console.log(\"arrBlog[j]: \", arrBlog[j]);\n        // console.log(\"arrBlog[0]: \",arrBlog[j][0]);\n        // console.log(\"arrBlog[1]: \",arrBlog[j][1]);\n        // console.log(\"obj:\", obj);\n\n        if (arrBlog[j][0] === \"_id\") {\n          obj.children = arrBlog[j][1]; //         obj= {children: '613e616d7ab4e566768e79d5'}\n\n          bigObj.id = obj; //    bigObj= {id: {children: '613e616d7ab4e566768e79d5'}}\n\n          bigObj._id = arrBlog[j][1]; //   bigObj= {_id: '613e616d7ab4e566768e79d5'}\n        } else if (arrBlog[j][0] === \"createdAt\" || arrBlog[j][0] === \"updatedAt\") {\n          // ['createdAt', '2021-09-13T08:46:49.849Z']\n          obj.children = new Date(arrBlog[j][1]).toLocaleString(); // {children: '9/13/2021, 11:46:49 AM'}\n\n          bigObj[arrBlog[j][0]] = obj; // {createdAt: {children: '9/13/2021, 11:46:49 AM'}}\n        } else if (arrBlog[j][0] === \"userId\") {\n          // console.log(\"arrBlog:\", arrBlog);\n          // ['userId',  {_id: '613e1486e5218626969838f0', name: 'Karamba'}]\n          obj.children = `${arrBlog[j][1].firstName} ${arrBlog[j][1].lastName}`; // {children: 'Karamba'}\n\n          let emailObj = {};\n          emailObj.children = arrBlog[j][1].email;\n          bigObj[\"admin\"] = obj;\n          bigObj[\"email\"] = emailObj;\n          let accountObj = {};\n          accountObj.children = arrBlog[j][1].accountId.name;\n          bigObj[\"account\"] = accountObj; //{ accountId: {children: 'Karamba'}}\n        } else {\n          // ['firstName', 'miki']\n          obj.children = arrBlog[j][1]; // {children: 'miki'}\n\n          bigObj[arrBlog[j][0]] = obj; // firstName: {children: 'miki'}\n        } // console.log(\"bigObj:\", bigObj);\n        // arr.push( `${arrBlog[j][0]}: {children: '${arrBlog[j][1]}',}`)\n\n      } // arr.push({gilad:1,...blogs[i]})\n\n\n      arr.push({ ...bigObj\n      }); // arr.push({ _id: `${counter}`, ...bigObj });\n      // counter++;\n    }\n\n    console.log(\"arr: \", arr); //  setData(response.data.results)\n\n    dispatch({\n      type: BLOG_LIST_SUCCESS,\n      payload: arr\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: BLOG_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const add = (title, userId) => async dispatch => {\n  dispatch({\n    type: BLOG_ADD_REQUEST,\n    payload: {\n      title,\n      userId\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await blogApi.post(\"/create\", {\n      title,\n      userId\n    });\n    dispatch({\n      type: BLOG_ADD_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: BLOG_ADD_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const register = (title, lastName, email, userId) => async dispatch => {\n  dispatch({\n    type: BLOG_REGISTER_REQUEST,\n    payload: {\n      title,\n      lastName,\n      email,\n      userId\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await blogApi.post(\"/create\", {\n      title,\n      lastName,\n      email,\n      userId\n    });\n    dispatch({\n      type: BLOG_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: BLOG_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"blogInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: BLOG_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signin = email => async dispatch => {\n  dispatch({\n    type: BLOG_SIGNIN_REQUEST,\n    payload: {\n      email\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await blogApi.post(\"/signin\", {\n      email\n    });\n    dispatch({\n      type: BLOG_SIGNIN_SUCCESS,\n      payload: data\n    }); // dispatch(emailBlog(email));\n\n    localStorage.setItem(\"blogInfo\", JSON.stringify(data));\n  } catch (error) {\n    // console.log(\"error :\", error);\n    dispatch({\n      type: BLOG_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signoutBlog = () => dispatch => {\n  localStorage.removeItem(\"blogInfo\");\n  dispatch({\n    type: BLOG_SIGNOUT\n  }); // document.location.href = \"/signin\";\n};\nexport const deleteBlog = blogId => async dispatch => {\n  console.log(\"blogId:\", blogId);\n  console.log(\"deleteBlog\");\n  dispatch({\n    type: BLOG_DELETE_REQUEST,\n    payload: blogId\n  });\n\n  try {\n    const {\n      data\n    } = await blogApi.delete(`/${blogId}`);\n    console.log(\"data:\", data);\n    dispatch({\n      type: BLOG_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(\"error\");\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: BLOG_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const detailsBlog = blogId => async dispatch => {\n  dispatch({\n    type: BLOG_DETAILS_REQUEST,\n    payload: blogId\n  });\n\n  try {\n    const {\n      data\n    } = await blogApi.get(`/${blogId}`);\n    dispatch({\n      type: BLOG_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: BLOG_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateBlog = blog => async dispatch => {\n  // console.log(\"blog:\", blog.id);\n  dispatch({\n    type: BLOG_UPDATE_PROFILE_REQUEST,\n    payload: blog\n  });\n\n  try {\n    const {\n      data\n    } = await blogApi.patch(`/${blog.id}`, blog);\n    dispatch({\n      type: BLOG_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: BLOG_UPDATE_FAIL,\n      payload: message\n    });\n  }\n}; /////post actions\n////-------get\n// router.route('/:id/posts/:postId').get\n// await blogApi.get(`/${blog.id}/posts`);\n//---------create\n// router.route('/:id/posts').post(async (req, res, next)\n// await blogApi.post(`/${blog.id}/posts`, post);\n///--------- update\n// router.route('/:id/posts/:postId').patch\n// await blogApi.patch(`/${blog.id}/posts/${postId}`, post)\n////-----------delete\n//router.route('/:id/posts/:postId').delete\n// await blogApi.delete(`/${blog.id}/posts/${postId}`)","map":{"version":3,"sources":["/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/actions/blogActions.js"],"names":["Axios","BLOG_DETAILS_FAIL","BLOG_DETAILS_REQUEST","BLOG_DETAILS_SUCCESS","BLOG_REGISTER_FAIL","BLOG_REGISTER_REQUEST","BLOG_REGISTER_SUCCESS","BLOG_ADD_FAIL","BLOG_ADD_REQUEST","BLOG_ADD_SUCCESS","BLOG_SIGNIN_FAIL","BLOG_SIGNIN_REQUEST","BLOG_SIGNIN_SUCCESS","BLOG_SIGNOUT","BLOG_UPDATE_PROFILE_FAIL","BLOG_UPDATE_PROFILE_REQUEST","BLOG_UPDATE_PROFILE_SUCCESS","BLOG_LIST_REQUEST","BLOG_LIST_SUCCESS","BLOG_LIST_FAIL","BLOG_DELETE_REQUEST","BLOG_DELETE_SUCCESS","BLOG_DELETE_FAIL","BLOG_UPDATE_SUCCESS","BLOG_UPDATE_FAIL","Resource","temp","create","api","defaults","baseURL","blogApi","listBlogs","dispatch","type","console","log","data","get","arr","blogs","i","length","arrBlog","Object","entries","bigObj","j","obj","children","id","_id","Date","toLocaleString","firstName","lastName","emailObj","email","accountObj","accountId","name","push","payload","error","message","response","add","title","userId","post","register","localStorage","setItem","JSON","stringify","signin","signoutBlog","removeItem","deleteBlog","blogId","delete","detailsBlog","updateBlog","blog","patch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,iBADF,EAEEC,oBAFF,EAGEC,oBAHF,EAIEC,kBAJF,EAKEC,qBALF,EAMEC,qBANF,EAOEC,aAPF,EAQEC,gBARF,EASEC,gBATF,EAUEC,gBAVF,EAWEC,mBAXF,EAYEC,mBAZF,EAaEC,YAbF,EAcEC,wBAdF,EAeEC,2BAfF,EAgBEC,2BAhBF,EAiBEC,iBAjBF,EAkBEC,iBAlBF,EAmBEC,cAnBF,EAoBEC,mBApBF,EAqBEC,mBArBF,EAsBEC,gBAtBF,EAuBEC,mBAvBF,EAwBEC,gBAxBF,QAyBO,4BAzBP;AA0BA,OAAOC,QAAP,MAAqB,gBAArB,C,CACA;;AACA,MAAMC,IAAI,GAAGD,QAAQ,CAACE,MAAT,CAAgB,MAAhB,CAAb;AACAD,IAAI,CAACE,GAAL,CAASC,QAAT,CAAkBC,OAAlB,GAA6B,iCAA7B;AAEA,MAAMC,OAAO,GAAGL,IAAI,CAACE,GAArB;AAEA,OAAO,MAAMI,SAAS,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACjDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEjB;AAAR,GAAD,CAAR;AACAkB,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;;AACA,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMN,OAAO,CAACO,GAAR,EAAvB,CADE,CAGF;AACA;AACA;AAEA;;AAEAH,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,IAArB,EATE,CAWF;;AACA,UAAME,GAAG,GAAG,EAAZ;AAEA,QAAIC,KAAK,GAAGH,IAAZ;;AAEA,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC;AAEA,YAAME,OAAO,GAAGC,MAAM,CAACC,OAAP,CAAeL,KAAK,CAACC,CAAD,CAApB,CAAhB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBO,OAAxB,EAJqC,CAMrC;AACA;AACA;;AAEA,YAAMG,MAAM,GAAG,EAAf;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,OAAO,CAACD,MAA5B,EAAoCK,CAAC,EAArC,EAAyC;AACvC,cAAMC,GAAG,GAAG,EAAZ,CADuC,CAEvC;AACA;AACA;AAEA;;AAEA,YAAIL,OAAO,CAACI,CAAD,CAAP,CAAW,CAAX,MAAkB,KAAtB,EAA6B;AAC3BC,UAAAA,GAAG,CAACC,QAAJ,GAAeN,OAAO,CAACI,CAAD,CAAP,CAAW,CAAX,CAAf,CAD2B,CAE3B;;AAEAD,UAAAA,MAAM,CAACI,EAAP,GAAYF,GAAZ,CAJ2B,CAK3B;;AAEAF,UAAAA,MAAM,CAACK,GAAP,GAAaR,OAAO,CAACI,CAAD,CAAP,CAAW,CAAX,CAAb,CAP2B,CAS3B;AACD,SAVD,MAUO,IACLJ,OAAO,CAACI,CAAD,CAAP,CAAW,CAAX,MAAkB,WAAlB,IACAJ,OAAO,CAACI,CAAD,CAAP,CAAW,CAAX,MAAkB,WAFb,EAGL;AACA;AAEAC,UAAAA,GAAG,CAACC,QAAJ,GAAe,IAAIG,IAAJ,CAAST,OAAO,CAACI,CAAD,CAAP,CAAW,CAAX,CAAT,EAAwBM,cAAxB,EAAf,CAHA,CAIA;;AAEAP,UAAAA,MAAM,CAACH,OAAO,CAACI,CAAD,CAAP,CAAW,CAAX,CAAD,CAAN,GAAwBC,GAAxB,CANA,CAQA;AACD,SAZM,MAYA,IAAIL,OAAO,CAACI,CAAD,CAAP,CAAW,CAAX,MAAkB,QAAtB,EAAgC;AACrC;AAEA;AACAC,UAAAA,GAAG,CAACC,QAAJ,GAAgB,GAAEN,OAAO,CAACI,CAAD,CAAP,CAAW,CAAX,EAAcO,SAAU,IAAGX,OAAO,CAACI,CAAD,CAAP,CAAW,CAAX,EAAcQ,QAAS,EAApE,CAJqC,CAMrC;;AAEA,cAAIC,QAAQ,GAAG,EAAf;AAEAA,UAAAA,QAAQ,CAACP,QAAT,GAAoBN,OAAO,CAACI,CAAD,CAAP,CAAW,CAAX,EAAcU,KAAlC;AAEAX,UAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBE,GAAlB;AAEAF,UAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBU,QAAlB;AAEA,cAAIE,UAAU,GAAG,EAAjB;AAEAA,UAAAA,UAAU,CAACT,QAAX,GAAsBN,OAAO,CAACI,CAAD,CAAP,CAAW,CAAX,EAAcY,SAAd,CAAwBC,IAA9C;AAEAd,UAAAA,MAAM,CAAC,SAAD,CAAN,GAAoBY,UAApB,CApBqC,CAsBrC;AACD,SAvBM,MAuBA;AACL;AAEAV,UAAAA,GAAG,CAACC,QAAJ,GAAeN,OAAO,CAACI,CAAD,CAAP,CAAW,CAAX,CAAf,CAHK,CAKL;;AAEAD,UAAAA,MAAM,CAACH,OAAO,CAACI,CAAD,CAAP,CAAW,CAAX,CAAD,CAAN,GAAwBC,GAAxB,CAPK,CASL;AACD,SA/DsC,CAiEvC;AAEA;;AACD,OAhFoC,CAiFrC;;;AACAT,MAAAA,GAAG,CAACsB,IAAJ,CAAS,EAAE,GAAGf;AAAL,OAAT,EAlFqC,CAmFrC;AAEA;AACD;;AAEDX,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBG,GAArB,EAxGE,CAyGF;;AAEAN,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEhB,iBAAR;AAA2B4C,MAAAA,OAAO,EAAEvB;AAApC,KAAD,CAAR;AACD,GA5GD,CA4GE,OAAOwB,KAAP,EAAc;AACd,UAAMC,OAAO,GACXD,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAe5B,IAAf,CAAoB2B,OAAtC,GACID,KAAK,CAACE,QAAN,CAAe5B,IAAf,CAAoB2B,OADxB,GAEID,KAAK,CAACC,OAHZ;AAIA/B,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEf,cAAR;AAAwB2C,MAAAA,OAAO,EAAEE;AAAjC,KAAD,CAAR;AACD;AACF,CAtHM;AAwHP,OAAO,MAAME,GAAG,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB,MAAOnC,QAAP,IAAoB;AACxDA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAE1B,gBADC;AAEPsD,IAAAA,OAAO,EAAE;AAAEK,MAAAA,KAAF;AAASC,MAAAA;AAAT;AAFF,GAAD,CAAR;;AAIA,MAAI;AACF,UAAM;AAAE/B,MAAAA;AAAF,QAAW,MAAMN,OAAO,CAACsC,IAAR,CAAa,SAAb,EAAwB;AAC7CF,MAAAA,KAD6C;AAE7CC,MAAAA;AAF6C,KAAxB,CAAvB;AAKAnC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEzB,gBAAR;AAA0BqD,MAAAA,OAAO,EAAEzB;AAAnC,KAAD,CAAR;AACD,GAPD,CAOE,OAAO0B,KAAP,EAAc;AACd9B,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAE3B,aADC;AAEPuD,MAAAA,OAAO,EACLC,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAe5B,IAAf,CAAoB2B,OAAtC,GACID,KAAK,CAACE,QAAN,CAAe5B,IAAf,CAAoB2B,OADxB,GAEID,KAAK,CAACC;AALL,KAAD,CAAR;AAOD;AACF,CArBM;AAuBP,OAAO,MAAMM,QAAQ,GACnB,CAACH,KAAD,EAAQZ,QAAR,EAAkBE,KAAlB,EAAyBW,MAAzB,KAAoC,MAAOnC,QAAP,IAAoB;AACtDA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAE7B,qBADC;AAEPyD,IAAAA,OAAO,EAAE;AAAEK,MAAAA,KAAF;AAASZ,MAAAA,QAAT;AAAmBE,MAAAA,KAAnB;AAA0BW,MAAAA;AAA1B;AAFF,GAAD,CAAR;;AAIA,MAAI;AACF,UAAM;AAAE/B,MAAAA;AAAF,QAAW,MAAMN,OAAO,CAACsC,IAAR,CAAa,SAAb,EAAwB;AAC7CF,MAAAA,KAD6C;AAE7CZ,MAAAA,QAF6C;AAG7CE,MAAAA,KAH6C;AAI7CW,MAAAA;AAJ6C,KAAxB,CAAvB;AAOAnC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE5B,qBAAR;AAA+BwD,MAAAA,OAAO,EAAEzB;AAAxC,KAAD,CAAR;AAEAJ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEtB,mBAAR;AAA6BkD,MAAAA,OAAO,EAAEzB;AAAtC,KAAD,CAAR;AACAkC,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAerC,IAAf,CAAjC;AACD,GAZD,CAYE,OAAO0B,KAAP,EAAc;AACd9B,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAE9B,kBADC;AAEP0D,MAAAA,OAAO,EACLC,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAe5B,IAAf,CAAoB2B,OAAtC,GACID,KAAK,CAACE,QAAN,CAAe5B,IAAf,CAAoB2B,OADxB,GAEID,KAAK,CAACC;AALL,KAAD,CAAR;AAOD;AACF,CA3BI;AA6BP,OAAO,MAAMW,MAAM,GAAIlB,KAAD,IAAW,MAAOxB,QAAP,IAAoB;AACnDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEvB,mBAAR;AAA6BmD,IAAAA,OAAO,EAAE;AAAEL,MAAAA;AAAF;AAAtC,GAAD,CAAR;;AACA,MAAI;AACF,UAAM;AAAEpB,MAAAA;AAAF,QAAW,MAAMN,OAAO,CAACsC,IAAR,CAAa,SAAb,EAAwB;AAAEZ,MAAAA;AAAF,KAAxB,CAAvB;AACAxB,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEtB,mBAAR;AAA6BkD,MAAAA,OAAO,EAAEzB;AAAtC,KAAD,CAAR,CAFE,CAGF;;AAEAkC,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAerC,IAAf,CAAjC;AACD,GAND,CAME,OAAO0B,KAAP,EAAc;AACd;AACA9B,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAExB,gBADC;AAEPoD,MAAAA,OAAO,EACLC,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAe5B,IAAf,CAAoB2B,OAAtC,GACID,KAAK,CAACE,QAAN,CAAe5B,IAAf,CAAoB2B,OADxB,GAEID,KAAK,CAACC;AALL,KAAD,CAAR;AAOD;AACF,CAlBM;AAoBP,OAAO,MAAMY,WAAW,GAAG,MAAO3C,QAAD,IAAc;AAC7CsC,EAAAA,YAAY,CAACM,UAAb,CAAwB,UAAxB;AAEA5C,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAErB;AAAR,GAAD,CAAR,CAH6C,CAI7C;AACD,CALM;AAOP,OAAO,MAAMiE,UAAU,GAAIC,MAAD,IAAY,MAAO9C,QAAP,IAAoB;AACxDE,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB2C,MAAvB;AACA5C,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAH,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEd,mBAAR;AAA6B0C,IAAAA,OAAO,EAAEiB;AAAtC,GAAD,CAAR;;AAEA,MAAI;AACF,UAAM;AAAE1C,MAAAA;AAAF,QAAW,MAAMN,OAAO,CAACiD,MAAR,CAAgB,IAAGD,MAAO,EAA1B,CAAvB;AACA5C,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,IAArB;AACAJ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEb,mBAAR;AAA6ByC,MAAAA,OAAO,EAAEzB;AAAtC,KAAD,CAAR;AACD,GAJD,CAIE,OAAO0B,KAAP,EAAc;AACd5B,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,UAAM4B,OAAO,GACXD,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAe5B,IAAf,CAAoB2B,OAAtC,GACID,KAAK,CAACE,QAAN,CAAe5B,IAAf,CAAoB2B,OADxB,GAEID,KAAK,CAACC,OAHZ;AAIA/B,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEZ,gBAAR;AAA0BwC,MAAAA,OAAO,EAAEE;AAAnC,KAAD,CAAR;AACD;AACF,CAjBM;AAmBP,OAAO,MAAMiB,WAAW,GAAIF,MAAD,IAAY,MAAO9C,QAAP,IAAoB;AACzDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEhC,oBAAR;AAA8B4D,IAAAA,OAAO,EAAEiB;AAAvC,GAAD,CAAR;;AAEA,MAAI;AACF,UAAM;AAAE1C,MAAAA;AAAF,QAAW,MAAMN,OAAO,CAACO,GAAR,CAAa,IAAGyC,MAAO,EAAvB,CAAvB;AACA9C,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE/B,oBAAR;AAA8B2D,MAAAA,OAAO,EAAEzB;AAAvC,KAAD,CAAR;AACD,GAHD,CAGE,OAAO0B,KAAP,EAAc;AACd,UAAMC,OAAO,GACXD,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAe5B,IAAf,CAAoB2B,OAAtC,GACID,KAAK,CAACE,QAAN,CAAe5B,IAAf,CAAoB2B,OADxB,GAEID,KAAK,CAACC,OAHZ;AAIA/B,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEjC,iBAAR;AAA2B6D,MAAAA,OAAO,EAAEE;AAApC,KAAD,CAAR;AACD;AACF,CAbM;AAeP,OAAO,MAAMkB,UAAU,GAAIC,IAAD,IAAU,MAAOlD,QAAP,IAAoB;AACtD;AACAA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEnB,2BAAR;AAAqC+C,IAAAA,OAAO,EAAEqB;AAA9C,GAAD,CAAR;;AACA,MAAI;AACF,UAAM;AAAE9C,MAAAA;AAAF,QAAW,MAAMN,OAAO,CAACqD,KAAR,CAAe,IAAGD,IAAI,CAACjC,EAAG,EAA1B,EAA6BiC,IAA7B,CAAvB;AACAlD,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEX,mBAAR;AAA6BuC,MAAAA,OAAO,EAAEzB;AAAtC,KAAD,CAAR;AACD,GAHD,CAGE,OAAO0B,KAAP,EAAc;AACd,UAAMC,OAAO,GACXD,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAe5B,IAAf,CAAoB2B,OAAtC,GACID,KAAK,CAACE,QAAN,CAAe5B,IAAf,CAAoB2B,OADxB,GAEID,KAAK,CAACC,OAHZ;AAIA/B,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEV,gBAAR;AAA0BsC,MAAAA,OAAO,EAAEE;AAAnC,KAAD,CAAR;AACD;AACF,CAbM,C,CAkBP;AAGA;AAEA;AAEA;AAIA;AAEA;AAEA;AAKA;AAEA;AAEA;AAMA;AAEA;AAGA","sourcesContent":["import Axios from \"axios\";\nimport {\n  BLOG_DETAILS_FAIL,\n  BLOG_DETAILS_REQUEST,\n  BLOG_DETAILS_SUCCESS,\n  BLOG_REGISTER_FAIL,\n  BLOG_REGISTER_REQUEST,\n  BLOG_REGISTER_SUCCESS,\n  BLOG_ADD_FAIL,\n  BLOG_ADD_REQUEST,\n  BLOG_ADD_SUCCESS,\n  BLOG_SIGNIN_FAIL,\n  BLOG_SIGNIN_REQUEST,\n  BLOG_SIGNIN_SUCCESS,\n  BLOG_SIGNOUT,\n  BLOG_UPDATE_PROFILE_FAIL,\n  BLOG_UPDATE_PROFILE_REQUEST,\n  BLOG_UPDATE_PROFILE_SUCCESS,\n  BLOG_LIST_REQUEST,\n  BLOG_LIST_SUCCESS,\n  BLOG_LIST_FAIL,\n  BLOG_DELETE_REQUEST,\n  BLOG_DELETE_SUCCESS,\n  BLOG_DELETE_FAIL,\n  BLOG_UPDATE_SUCCESS,\n  BLOG_UPDATE_FAIL,\n} from \"../constants/blogConstants\";\nimport Resource from \"@guestyci/agni\";\n// const { api, env, config } = Resource.create();\nconst temp = Resource.create(\"user\");\ntemp.api.defaults.baseURL = `http://localhost:9999/api/blogs`;\n\nconst blogApi = temp.api;\n\nexport const listBlogs = () => async (dispatch) => {\n  dispatch({ type: BLOG_LIST_REQUEST });\n  console.log(\"BLOG_LIST_REQUEST\");\n  try {\n    const { data } = await blogApi.get();\n\n    // const temp = Resource.create('tasks');\n    // temp.api.defaults.baseURL = `http://localhost:9999/tasks`;\n    // export const tasksApi = temp.api;\n\n    // const data = await blogApi.get(); // will go to `${config.MAILER_URL}/blogs`\n\n    console.log(\"data:\", data);\n\n    // let counter = 1;\n    const arr = [];\n\n    let blogs = data;\n\n    for (let i = 0; i < blogs.length; i++) {\n      // console.log(\"blogs[i]: \", blogs[i]);\n\n      const arrBlog = Object.entries(blogs[i]);\n      console.log(\"arrBlog:\", arrBlog);\n\n      //  title: {\n      //   children: 'John',\n      // },\n\n      const bigObj = {};\n\n      for (let j = 0; j < arrBlog.length; j++) {\n        const obj = {};\n        // console.log(\"arrBlog[j]: \", arrBlog[j]);\n        // console.log(\"arrBlog[0]: \",arrBlog[j][0]);\n        // console.log(\"arrBlog[1]: \",arrBlog[j][1]);\n\n        // console.log(\"obj:\", obj);\n\n        if (arrBlog[j][0] === \"_id\") {\n          obj.children = arrBlog[j][1];\n          //         obj= {children: '613e616d7ab4e566768e79d5'}\n\n          bigObj.id = obj;\n          //    bigObj= {id: {children: '613e616d7ab4e566768e79d5'}}\n\n          bigObj._id = arrBlog[j][1];\n\n          //   bigObj= {_id: '613e616d7ab4e566768e79d5'}\n        } else if (\n          arrBlog[j][0] === \"createdAt\" ||\n          arrBlog[j][0] === \"updatedAt\"\n        ) {\n          // ['createdAt', '2021-09-13T08:46:49.849Z']\n\n          obj.children = new Date(arrBlog[j][1]).toLocaleString();\n          // {children: '9/13/2021, 11:46:49 AM'}\n\n          bigObj[arrBlog[j][0]] = obj;\n\n          // {createdAt: {children: '9/13/2021, 11:46:49 AM'}}\n        } else if (arrBlog[j][0] === \"userId\") {\n          // console.log(\"arrBlog:\", arrBlog);\n\n          // ['userId',  {_id: '613e1486e5218626969838f0', name: 'Karamba'}]\n          obj.children = `${arrBlog[j][1].firstName} ${arrBlog[j][1].lastName}`;\n\n          // {children: 'Karamba'}\n\n          let emailObj = {};\n\n          emailObj.children = arrBlog[j][1].email;\n\n          bigObj[\"admin\"] = obj;\n\n          bigObj[\"email\"] = emailObj;\n\n          let accountObj = {};\n\n          accountObj.children = arrBlog[j][1].accountId.name;\n\n          bigObj[\"account\"] = accountObj;\n\n          //{ accountId: {children: 'Karamba'}}\n        } else {\n          // ['firstName', 'miki']\n\n          obj.children = arrBlog[j][1];\n\n          // {children: 'miki'}\n\n          bigObj[arrBlog[j][0]] = obj;\n\n          // firstName: {children: 'miki'}\n        }\n\n        // console.log(\"bigObj:\", bigObj);\n\n        // arr.push( `${arrBlog[j][0]}: {children: '${arrBlog[j][1]}',}`)\n      }\n      // arr.push({gilad:1,...blogs[i]})\n      arr.push({ ...bigObj });\n      // arr.push({ _id: `${counter}`, ...bigObj });\n\n      // counter++;\n    }\n\n    console.log(\"arr: \", arr);\n    //  setData(response.data.results)\n\n    dispatch({ type: BLOG_LIST_SUCCESS, payload: arr });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: BLOG_LIST_FAIL, payload: message });\n  }\n};\n\nexport const add = (title, userId) => async (dispatch) => {\n  dispatch({\n    type: BLOG_ADD_REQUEST,\n    payload: { title, userId },\n  });\n  try {\n    const { data } = await blogApi.post(\"/create\", {\n      title,\n      userId,\n    });\n\n    dispatch({ type: BLOG_ADD_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: BLOG_ADD_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const register =\n  (title, lastName, email, userId) => async (dispatch) => {\n    dispatch({\n      type: BLOG_REGISTER_REQUEST,\n      payload: { title, lastName, email, userId },\n    });\n    try {\n      const { data } = await blogApi.post(\"/create\", {\n        title,\n        lastName,\n        email,\n        userId,\n      });\n\n      dispatch({ type: BLOG_REGISTER_SUCCESS, payload: data });\n\n      dispatch({ type: BLOG_SIGNIN_SUCCESS, payload: data });\n      localStorage.setItem(\"blogInfo\", JSON.stringify(data));\n    } catch (error) {\n      dispatch({\n        type: BLOG_REGISTER_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\nexport const signin = (email) => async (dispatch) => {\n  dispatch({ type: BLOG_SIGNIN_REQUEST, payload: { email } });\n  try {\n    const { data } = await blogApi.post(\"/signin\", { email });\n    dispatch({ type: BLOG_SIGNIN_SUCCESS, payload: data });\n    // dispatch(emailBlog(email));\n\n    localStorage.setItem(\"blogInfo\", JSON.stringify(data));\n  } catch (error) {\n    // console.log(\"error :\", error);\n    dispatch({\n      type: BLOG_SIGNIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const signoutBlog = () => (dispatch) => {\n  localStorage.removeItem(\"blogInfo\");\n\n  dispatch({ type: BLOG_SIGNOUT });\n  // document.location.href = \"/signin\";\n};\n\nexport const deleteBlog = (blogId) => async (dispatch) => {\n  console.log(\"blogId:\", blogId);\n  console.log(\"deleteBlog\");\n  dispatch({ type: BLOG_DELETE_REQUEST, payload: blogId });\n\n  try {\n    const { data } = await blogApi.delete(`/${blogId}`);\n    console.log(\"data:\", data);\n    dispatch({ type: BLOG_DELETE_SUCCESS, payload: data });\n  } catch (error) {\n    console.log(\"error\");\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: BLOG_DELETE_FAIL, payload: message });\n  }\n};\n\nexport const detailsBlog = (blogId) => async (dispatch) => {\n  dispatch({ type: BLOG_DETAILS_REQUEST, payload: blogId });\n\n  try {\n    const { data } = await blogApi.get(`/${blogId}`);\n    dispatch({ type: BLOG_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: BLOG_DETAILS_FAIL, payload: message });\n  }\n};\n\nexport const updateBlog = (blog) => async (dispatch) => {\n  // console.log(\"blog:\", blog.id);\n  dispatch({ type: BLOG_UPDATE_PROFILE_REQUEST, payload: blog });\n  try {\n    const { data } = await blogApi.patch(`/${blog.id}`, blog);\n    dispatch({ type: BLOG_UPDATE_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: BLOG_UPDATE_FAIL, payload: message });\n  }\n};\n\n\n\n\n/////post actions\n\n\n////-------get\n\n// router.route('/:id/posts/:postId').get\n\n// await blogApi.get(`/${blog.id}/posts`);\n\n\n\n//---------create\n\n// router.route('/:id/posts').post(async (req, res, next)\n\n// await blogApi.post(`/${blog.id}/posts`, post);\n\n\n\n\n///--------- update\n\n// router.route('/:id/posts/:postId').patch\n\n// await blogApi.patch(`/${blog.id}/posts/${postId}`, post)\n\n\n\n\n\n////-----------delete\n\n//router.route('/:id/posts/:postId').delete\n\n\n// await blogApi.delete(`/${blog.id}/posts/${postId}`)\n"]},"metadata":{},"sourceType":"module"}