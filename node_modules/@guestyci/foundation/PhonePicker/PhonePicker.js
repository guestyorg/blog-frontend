"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.extractCountry = exports.getCleanNumber = exports.useStyles = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _debounce = _interopRequireDefault(require("lodash/debounce"));

var _noop = _interopRequireDefault(require("lodash/noop"));

var _createStyles = _interopRequireDefault(require("../createStyles"));

var _useHover3 = _interopRequireDefault(require("../useHover"));

var _useFocus3 = _interopRequireDefault(require("../useFocus"));

var _useComposeRefs = _interopRequireDefault(require("../useComposeRefs"));

var _Row = _interopRequireDefault(require("../Layout/Row"));

var _Input = _interopRequireDefault(require("../Input"));

var _TextField = _interopRequireDefault(require("../TextField"));

var _Dropdown = _interopRequireWildcard(require("../Dropdown"));

var _InputActions = _interopRequireDefault(require("../Input/InputActions"));

var _styles = _interopRequireDefault(require("../Input/styles"));

var _CountryFlagButton = _interopRequireDefault(require("./CountryFlagButton"));

var _PhonePickerDropdownItem = _interopRequireDefault(require("./PhonePickerDropdownItem"));

var _countries = _interopRequireDefault(require("./countries"));

var flags = _interopRequireWildcard(require("./flags"));

var useStyles = (0, _createStyles["default"])(function (theme) {
  return {
    root: {
      height: '46px',
      borderRadius: '2px',
      border: "solid 1px ".concat(theme.palette.border),
      color: "".concat(theme.palette.text.input, " !important"),
      transition: theme.transition.create(),
      '&:hover': _styles["default"].hover(theme)
    },
    focused: _styles["default"].focused(theme),
    disabled: _styles["default"].disabled(theme),
    error: _styles["default"].error(theme),
    dialCodeInput: {
      borderStyle: 'none',
      display: 'flex',
      alignItems: 'center',
      '&:hover': {
        borderStyle: 'none'
      },
      paddingLeft: theme.spacer(2),
      paddingRight: theme.spacer(1)
    },
    numberInput: {
      borderStyle: 'none',
      '&:hover': {
        borderStyle: 'none'
      },
      height: '100%',
      paddingLeft: '0px'
    },
    dropdown: {
      width: '45px'
    }
  };
});
exports.useStyles = useStyles;
var inputJssOverride = {
  input: {
    height: 'unset',
    width: '100%',
    border: 'none',
    backgroundColor: 'transparent'
  },
  focused: {
    borderStyle: 'none',
    boxShadow: 'none'
  }
};

var defaultCountry = _countries["default"].find(function (_ref) {
  var name = _ref.name;
  return name === 'United States';
});

var ALLOWED_SYMBOLS = '0-9-+*#';

var getCleanNumber = function getCleanNumber(number, dialCode) {
  return number.replace(new RegExp("^\\+(".concat(dialCode, ")|[^").concat(ALLOWED_SYMBOLS, "]"), 'g'), '');
};

exports.getCleanNumber = getCleanNumber;

var extractCountry = function extractCountry(number) {
  if (!number.startsWith('+')) {
    return;
  }

  var country;

  var countryWithAreaCode = _countries["default"].find(function (c) {
    var dialCode = c.dialCode,
        areaCodes = c.areaCodes;

    if (number.startsWith("+".concat(dialCode))) {
      country = c;
      var cleanNumber = getCleanNumber(number, dialCode);
      return areaCodes === null || areaCodes === void 0 ? void 0 : areaCodes.some(function (code) {
        return cleanNumber.startsWith(code);
      });
    }

    return false;
  });

  return countryWithAreaCode || country;
};

exports.extractCountry = extractCountry;

var PhonePicker = _react["default"].forwardRef(function PhonePicker(_ref2, ref) {
  var _ref2$name = _ref2.name,
      name = _ref2$name === void 0 ? '' : _ref2$name,
      _ref2$value = _ref2.value,
      value = _ref2$value === void 0 ? '' : _ref2$value,
      _ref2$onChange = _ref2.onChange,
      onChange = _ref2$onChange === void 0 ? _noop["default"] : _ref2$onChange,
      _ref2$className = _ref2.className,
      className = _ref2$className === void 0 ? '' : _ref2$className,
      _ref2$disabled = _ref2.disabled,
      disabled = _ref2$disabled === void 0 ? false : _ref2$disabled,
      _ref2$error = _ref2.error,
      error = _ref2$error === void 0 ? null : _ref2$error,
      _ref2$withActions = _ref2.withActions,
      withActions = _ref2$withActions === void 0 ? true : _ref2$withActions,
      _ref2$primary = _ref2.primary,
      primary = _ref2$primary === void 0 ? false : _ref2$primary,
      _ref2$onRemove = _ref2.onRemove,
      onRemove = _ref2$onRemove === void 0 ? _noop["default"] : _ref2$onRemove,
      _ref2$onStar = _ref2.onStar,
      onStar = _ref2$onStar === void 0 ? _noop["default"] : _ref2$onStar,
      _ref2$style = _ref2.style,
      style = _ref2$style === void 0 ? {} : _ref2$style,
      _ref2$jss = _ref2.jss,
      jss = _ref2$jss === void 0 ? {} : _ref2$jss,
      props = (0, _objectWithoutProperties2["default"])(_ref2, ["name", "value", "onChange", "className", "disabled", "error", "withActions", "primary", "onRemove", "onStar", "style", "jss"]);
  var classes = useStyles({
    jss: jss
  });

  var _useFocus = (0, _useFocus3["default"])(),
      _useFocus2 = (0, _slicedToArray2["default"])(_useFocus, 2),
      focused = _useFocus2[0],
      focusRef = _useFocus2[1];

  var _useHover = (0, _useHover3["default"])(),
      _useHover2 = (0, _slicedToArray2["default"])(_useHover, 2),
      isHovering = _useHover2[0],
      hoverRef = _useHover2[1];

  var _useState = (0, _react.useState)(defaultCountry),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      country = _useState2[0],
      setCountry = _useState2[1];

  var _useState3 = (0, _react.useState)(_countries["default"]),
      _useState4 = (0, _slicedToArray2["default"])(_useState3, 2),
      filteredCounties = _useState4[0],
      setFilteredCountries = _useState4[1];

  var containerRef = (0, _useComposeRefs["default"])(hoverRef, ref);

  var onDropdownChange = function onDropdownChange(e) {
    var c = e.target.value;
    setCountry(c);
    setFilteredCountries(_countries["default"]);
  };

  var onDropdownSearch = (0, _debounce["default"])(function (e) {
    var search = e.target.value;

    var filtered = _countries["default"].filter(function (_ref3) {
      var countryName = _ref3.name;
      return countryName.toLowerCase().includes(search.toLowerCase());
    });

    setFilteredCountries(filtered);
  }, 100);

  var manipulateEvent = function manipulateEvent(event, newValue) {
    event.persist();
    Object.defineProperty(event, 'target', {
      value: {
        value: newValue,
        name: name
      }
    });
    return event;
  };

  var onInputChange = function onInputChange(e) {
    var inputValue = e.target.value;

    if (inputValue === '') {
      onChange(e);
      return;
    }

    var regex = new RegExp("^[".concat(ALLOWED_SYMBOLS, "]+$"));

    if (!regex.test(inputValue)) {
      return;
    }

    var newValue = inputValue.startsWith('+') ? inputValue : "+".concat(country.dialCode, " ").concat(inputValue);
    onChange(manipulateEvent(e, newValue));
  };

  var inputNumber = (0, _react.useMemo)(function () {
    var c = extractCountry(value);

    if (!c) {
      return value;
    }

    setCountry(c);
    return getCleanNumber(value, c.dialCode);
  }, [value]);
  return /*#__PURE__*/_react["default"].createElement(_Row["default"], (0, _extends2["default"])({}, props, {
    ref: containerRef,
    className: (0, _classnames["default"])(classes.root, (0, _defineProperty2["default"])({}, classes.focused, focused), (0, _defineProperty2["default"])({}, classes.disabled, disabled), (0, _defineProperty2["default"])({}, classes.error, error), className),
    style: style
  }), /*#__PURE__*/_react["default"].createElement(_Dropdown["default"], {
    value: country,
    disabled: disabled,
    className: classes.dropdown,
    input: /*#__PURE__*/_react["default"].createElement(_CountryFlagButton["default"], {
      ref: focusRef,
      disabled: disabled,
      CountryIcon: flags[country.iso2.toUpperCase()]
    }),
    onChange: onDropdownChange,
    onSearchQueryChange: onDropdownSearch,
    searchable: true
  }, filteredCounties.map(function (c) {
    return /*#__PURE__*/_react["default"].createElement(_Dropdown.Option, {
      value: c,
      key: c.iso2
    }, /*#__PURE__*/_react["default"].createElement(_PhonePickerDropdownItem["default"], {
      country: c
    }));
  })), /*#__PURE__*/_react["default"].createElement(_TextField["default"], {
    className: classes.dialCodeInput
  }, "+".concat(country.dialCode)), /*#__PURE__*/_react["default"].createElement(_Input["default"], {
    value: inputNumber,
    className: classes.numberInput,
    jss: inputJssOverride,
    onChange: onInputChange,
    disabled: disabled,
    name: name,
    suffix: withActions && /*#__PURE__*/_react["default"].createElement(_InputActions["default"], {
      disabled: disabled,
      show: isHovering,
      primary: primary,
      onRemove: onRemove,
      onStar: onStar,
      name: name
    })
  }));
});

PhonePicker.propTypes = {
  /** Input level name property */
  name: _propTypes["default"].string,

  /** value for controlled component */
  value: _propTypes["default"].string,

  /** Cb for input change - params: {value: String, isValid: Boolean}, id|name {String | number} */
  onChange: _propTypes["default"].func,

  /** Additional class to the top component level */
  className: _propTypes["default"].string,

  /** Additional style to the top component level */
  style: _propTypes["default"].shape(),

  /** Boolean disable/enable component */
  disabled: _propTypes["default"].bool,

  /**  Cb for clicking on the trash icon */
  onRemove: _propTypes["default"].func,

  /** Cb for clicking on the star (set primary) icon */
  onStar: _propTypes["default"].func,

  /** Indicator whether to show the star/trash actions */
  withActions: _propTypes["default"].bool,

  /** Boolean setting the email as primary */
  primary: _propTypes["default"].bool
};
var _default = PhonePicker;
exports["default"] = _default;