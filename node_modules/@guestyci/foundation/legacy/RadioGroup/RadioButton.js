"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _reactJss = require("react-jss");

var _noop = _interopRequireDefault(require("lodash/noop"));

var useStyles = (0, _reactJss.createUseStyles)({
  current: {
    boxShadow: '0 0 20px 0 rgba(39, 43, 45, 0.15)',
    zIndex: 1
  }
});

var RadioButton = function RadioButton(_ref) {
  var _cn;

  var disabled = _ref.disabled,
      onChange = _ref.onChange,
      value = _ref.value,
      name = _ref.name,
      id = _ref.id,
      generatedChildId = _ref.generatedChildId,
      className = _ref.className,
      checked = _ref.checked,
      children = _ref.children;
  var classes = useStyles();
  var handleRadioButtonClick = (0, _react.useCallback)(function () {
    if (disabled) {
      return;
    }

    onChange(value, name, id, generatedChildId);
  });
  return /*#__PURE__*/_react["default"].createElement("div", {
    className: (0, _classnames["default"])(className, 'flex-space-between-center', 'radioButton-item', 'font-size-md', 'px-2', 'height-25', 'clickable', 'border-gray-lighter', 'text-gray-dark', 'bg-white', 'by-1', 'bx-1', (_cn = {
      'text-blue': checked
    }, (0, _defineProperty2["default"])(_cn, classes.current, checked), (0, _defineProperty2["default"])(_cn, 'text-hover-blue', !disabled), _cn)),
    onClick: handleRadioButtonClick,
    onKeyDown: handleRadioButtonClick,
    role: "button",
    disabled: disabled,
    "data-qa": "radio-button"
  }, children);
};

RadioButton.defaultProps = {
  disabled: false,
  checked: false,
  onChange: _noop["default"],
  name: undefined,
  id: undefined,
  className: ''
};
RadioButton.propTypes = {
  /** Indicator whether or not the radioButton is disabled */
  disabled: _propTypes["default"].bool,

  /** Set the radioButton checked attribute to show it as current */
  checked: _propTypes["default"].bool,

  /** children will be rendered inside the radio item */
  children: _propTypes["default"].node.isRequired,

  /** The radioButton value to be passed when clicked */
  value: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].number, _propTypes["default"].shape()]).isRequired,

  /** value will be return when click on this item */
  onChange: _propTypes["default"].func,

  /** value will be return when click on this item */
  name: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].number]),

  /** identifier will be return when click on this element */
  id: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].number]),

  /** identifier will be return when click on this element */

  /** classes to be added to the component */
  className: _propTypes["default"].string
};
var _default = RadioButton;
exports["default"] = _default;