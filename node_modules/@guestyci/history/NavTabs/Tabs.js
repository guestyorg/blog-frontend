"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _isNumber = _interopRequireDefault(require("lodash/isNumber"));

var _utils = require("@guestyci/foundation/utils");

var _createStyles = _interopRequireDefault(require("@guestyci/foundation/createStyles"));

var _utils2 = _interopRequireDefault(require("../utils"));

var _ActiveTabBottomBorder = _interopRequireDefault(require("./ActiveTabBottomBorder"));

var _useSizeHook = _interopRequireDefault(require("../utils/hooks/useSizeHook"));

var useStyles = (0, _createStyles["default"])(function (theme) {
  return {
    root: {
      color: theme.palette.text.running
    },
    active: {
      color: theme.palette.brand.primary
    },
    borderBottom: {
      borderBottom: "2px solid ".concat(theme.palette.border)
    }
  };
}, {
  name: 'NavTabs'
});

var getExactValueIndex = function getExactValueIndex(tabs, value) {
  return tabs.findIndex(function (tab) {
    return tab.getAttribute('href') === value;
  });
};

var getClosestMatchValueIndex = function getClosestMatchValueIndex(tabs, url) {
  var result = -1;
  var longestMatch = -1;
  tabs.forEach(function (tab, indexInArray) {
    var path = tab.getAttribute('href');
    var tabPathIndex = path.startsWith('/') && path.length > 1 ? 1 : 0;
    var matchIndex = -1;

    while (matchIndex < url.length - 1 && url.charAt(tabPathIndex) === path.charAt(tabPathIndex)) {
      matchIndex += 1;
      tabPathIndex += 1;
    }

    if (matchIndex > longestMatch) {
      longestMatch = matchIndex;
      result = indexInArray;
    }
  });
  return result;
};

var Tabs = function Tabs(_ref) {
  var children = _ref.children,
      className = _ref.className,
      style = _ref.style,
      exact = _ref.exact,
      noBorderBottom = _ref.noBorderBottom,
      fullWidth = _ref.fullWidth,
      activePathname = _ref.activePathname,
      noAnimate = _ref.noAnimate,
      onChange = _ref.onChange;
  var classes = useStyles();
  var tabsRef = (0, _react.useRef)();

  var _useState = (0, _react.useState)(true),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      isBootstrap = _useState2[0],
      setIsBootstrap = _useState2[1];

  var _useState3 = (0, _react.useState)(null),
      _useState4 = (0, _slicedToArray2["default"])(_useState3, 2),
      activeIndex = _useState4[0],
      setActiveIndex = _useState4[1];

  var _useState5 = (0, _react.useState)(0),
      _useState6 = (0, _slicedToArray2["default"])(_useState5, 2),
      borderWidth = _useState6[0],
      setBorderWidth = _useState6[1];

  var _useState7 = (0, _react.useState)(null),
      _useState8 = (0, _slicedToArray2["default"])(_useState7, 2),
      position = _useState8[0],
      setPosition = _useState8[1];

  var tabsSize = (0, _useSizeHook["default"])(tabsRef, !(0, _utils.isEmpty)(activeIndex));
  (0, _react.useEffect)(function () {
    var url = _utils2["default"].getPathName();

    setControlledPosition(url);
    setIsBootstrap(false);
  }, []);
  (0, _react.useEffect)(function () {
    setControlledPosition(activePathname);
  }, [activePathname]);
  (0, _react.useEffect)(function () {
    if (!(0, _utils.isEmpty)(activeIndex)) {
      setActiveIndexBorderWidth();
    }
  }, [activeIndex, tabsSize]);
  (0, _react.useEffect)(function () {
    if (!isBootstrap) {
      var timeout = setTimeout(function () {
        var url = activePathname || _utils2["default"].getPathName();

        setActiveIndexBorderWidth();
        setControlledPosition(url);
      }, 155);
      return function () {
        return clearTimeout(timeout);
      };
    }
  }, [children.length]);
  var setControlledPosition = (0, _react.useCallback)(function (value) {
    var tabs = tabsRef.current.getElementsByClassName('tab-item');
    var stringValue = String(value);
    var tabsArray = Array.from(tabs);
    var index = exact ? getExactValueIndex(tabsArray, stringValue) : getClosestMatchValueIndex(tabsArray, stringValue);

    if (index > -1) {
      setActiveIndex(index);
    }
  }, [tabsRef.current]);
  var setActiveIndexBorderWidth = (0, _react.useCallback)(function () {
    var tabs = tabsRef.current.getElementsByClassName('tab-item');
    var activeChild = tabs[activeIndex];

    if (activeChild) {
      setBorderWidth(activeChild.offsetWidth);
      setPosition(activeChild.offsetLeft);
    }
  }, [activeIndex, tabsRef.current]);
  var changeTab = (0, _react.useCallback)(function (_ref2) {
    var tabIndex = _ref2.tabIndex,
        to = _ref2.to,
        value = _ref2.value;
    setActiveIndex(tabIndex);

    _utils2["default"].push(to);

    if (onChange) {
      var tabProps = {
        to: to,
        activeTabIndex: tabIndex,
        value: value
      };
      onChange(tabProps);
    }
  });
  var validChildren = (0, _react.useMemo)(function () {
    return _react["default"].Children.toArray(children).filter(_react["default"].isValidElement);
  }, [children]);

  var isActiveIndex = function isActiveIndex(index) {
    return index === activeIndex;
  };

  var borderClass = !noBorderBottom ? classes.borderBottom : 'bb-2 border-transparent';
  return /*#__PURE__*/_react["default"].createElement("div", {
    className: (0, _classnames["default"])('d-flex-fill', 'relative', 'flex-column', {
      'w-fill': fullWidth
    }, className),
    ref: tabsRef,
    style: style
  }, /*#__PURE__*/_react["default"].createElement("div", {
    className: (0, _classnames["default"])('tabs-wrapper d-flex text-uppercase min-height-50 h-fill', classes.root, borderClass)
  }, validChildren.map(function (child, index) {
    return /*#__PURE__*/_react["default"].cloneElement(child, {
      onClick: changeTab,
      className: index !== validChildren.length - 1 ? 'mr-5' : '',
      tabIndex: index,
      isActive: isActiveIndex(index)
    });
  })), (0, _isNumber["default"])(activeIndex) && (0, _isNumber["default"])(position) && /*#__PURE__*/_react["default"].createElement(_ActiveTabBottomBorder["default"], {
    width: borderWidth,
    position: position,
    noAnimate: noAnimate
  }));
};

Tabs.defaultProps = {
  onChange: null,
  className: '',
  style: {},
  noBorderBottom: false,
  noAnimate: false,
  fullWidth: false,
  exact: true,
  activePathname: null
};
Tabs.propTypes = {
  /** The tabs children array to render */
  children: _propTypes["default"].node.isRequired,

  /** Callback for on tab change payload:{ activeTabIndex, value (as passed in tab) } */
  onChange: _propTypes["default"].func,

  /** Additional class to tabs root */
  className: _propTypes["default"].string,

  /** Additional style to tabs root */
  style: _propTypes["default"].shape(),

  /** Indicator whether or not to show the bottom line for the tabs */
  noBorderBottom: _propTypes["default"].bool,

  /** Indicator whether or not to animate change */
  noAnimate: _propTypes["default"].bool,

  /** Boolean indicator for parent full width */
  fullWidth: _propTypes["default"].bool,

  /** match route by exact value or closest match */
  exact: _propTypes["default"].bool,

  /** controlled value to pass to tabs */
  activePathname: _propTypes["default"].string
};
var _default = Tabs;
exports["default"] = _default;