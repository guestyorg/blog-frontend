{"ast":null,"code":"import Axios from \"axios\";\nimport { ACCOUNT_DETAILS_FAIL, ACCOUNT_DETAILS_REQUEST, ACCOUNT_DETAILS_SUCCESS, ACCOUNT_REGISTER_FAIL, ACCOUNT_REGISTER_REQUEST, ACCOUNT_REGISTER_SUCCESS, ACCOUNT_SIGNIN_FAIL, ACCOUNT_SIGNIN_REQUEST, ACCOUNT_SIGNIN_SUCCESS, ACCOUNT_SIGNOUT, ACCOUNT_UPDATE_PROFILE_FAIL, ACCOUNT_UPDATE_PROFILE_REQUEST, ACCOUNT_UPDATE_PROFILE_SUCCESS, ACCOUNT_LIST_REQUEST, ACCOUNT_LIST_SUCCESS, ACCOUNT_LIST_FAIL, ACCOUNT_DELETE_REQUEST, ACCOUNT_DELETE_SUCCESS, ACCOUNT_DELETE_FAIL, ACCOUNT_UPDATE_SUCCESS, ACCOUNT_UPDATE_FAIL } from \"../constants/accountConstants\";\nimport { USER_SIGNOUT } from \"../constants/userConstants\";\nimport Resource from \"@guestyci/agni\";\nimport { updateUser } from \"./userActions\"; // const { api, env, config } = Resource.create();\n\nconst temp = Resource.create(\"account\");\ntemp.api.defaults.baseURL = `http://localhost:9999/api/accounts`;\nconst accountApi = temp.api;\nexport const register = (name, email, creatorName, creatorEmail, userId) => async dispatch => {\n  dispatch({\n    type: ACCOUNT_REGISTER_REQUEST,\n    payload: {\n      name,\n      email,\n      creatorName,\n      creatorEmail,\n      userId\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await accountApi.post(\"/register\", {\n      name,\n      email,\n      creatorName,\n      creatorEmail\n    });\n    console.log(\"data:================\", data); // const { data } = await accountApi.post(\n    //   \"/register\",\n    //   {\n    //     name,\n    //     email,\n    //   }\n    // );\n\n    dispatch(updateUser({\n      userId,\n      accountId\n    }));\n    dispatch({\n      type: ACCOUNT_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: ACCOUNT_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"accountInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: ACCOUNT_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signin = email => async dispatch => {\n  dispatch({\n    type: ACCOUNT_SIGNIN_REQUEST,\n    payload: {\n      email\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await accountApi.post(\"/signin\", {\n      email\n    });\n    dispatch({\n      type: ACCOUNT_SIGNIN_SUCCESS,\n      payload: data\n    }); // dispatch(emailAccount(email));\n\n    localStorage.setItem(\"accountInfo\", JSON.stringify(data));\n  } catch (error) {\n    // console.log(\"error :\", error);\n    dispatch({\n      type: ACCOUNT_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signout = () => dispatch => {\n  localStorage.removeItem(\"accountInfo\");\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: ACCOUNT_SIGNOUT\n  });\n  dispatch({\n    type: USER_SIGNOUT\n  }); // document.location.href = \"/signin\";\n};\nexport const listAccounts = () => async (dispatch, getState) => {\n  dispatch({\n    type: ACCOUNT_LIST_REQUEST\n  });\n\n  try {\n    const {\n      accountSignin: {\n        accountInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await accountApi.get(\"\", {\n      headers: {\n        Authorization: `Bearer ${accountInfo.token}`\n      }\n    });\n    dispatch({\n      type: ACCOUNT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ACCOUNT_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deleteAccount = accountId => async (dispatch, getState) => {\n  dispatch({\n    type: ACCOUNT_DELETE_REQUEST,\n    payload: accountId\n  });\n  const {\n    accountSignin: {\n      accountInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await accountApi.delete(`/${accountId}`, {\n      headers: {\n        Authorization: `Bearer ${accountInfo.token}`\n      }\n    });\n    dispatch({\n      type: ACCOUNT_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ACCOUNT_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const detailsAccount = accountId => async dispatch => {\n  dispatch({\n    type: ACCOUNT_DETAILS_REQUEST,\n    payload: accountId\n  });\n\n  try {\n    const {\n      data\n    } = await accountApi.get(`/${accountId}`);\n    dispatch({\n      type: ACCOUNT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ACCOUNT_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateAccount = account => async (dispatch, getState) => {\n  console.log(\"account:\", account);\n  dispatch({\n    type: ACCOUNT_UPDATE_PROFILE_REQUEST,\n    payload: account\n  });\n  const {\n    accountSignin: {\n      accountInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await accountApi.patch(`/${account._id}`, account, {\n      headers: {\n        Authorization: `Bearer ${accountInfo.token}`\n      }\n    });\n    dispatch({\n      type: ACCOUNT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ACCOUNT_UPDATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/actions/accountActions.js"],"names":["Axios","ACCOUNT_DETAILS_FAIL","ACCOUNT_DETAILS_REQUEST","ACCOUNT_DETAILS_SUCCESS","ACCOUNT_REGISTER_FAIL","ACCOUNT_REGISTER_REQUEST","ACCOUNT_REGISTER_SUCCESS","ACCOUNT_SIGNIN_FAIL","ACCOUNT_SIGNIN_REQUEST","ACCOUNT_SIGNIN_SUCCESS","ACCOUNT_SIGNOUT","ACCOUNT_UPDATE_PROFILE_FAIL","ACCOUNT_UPDATE_PROFILE_REQUEST","ACCOUNT_UPDATE_PROFILE_SUCCESS","ACCOUNT_LIST_REQUEST","ACCOUNT_LIST_SUCCESS","ACCOUNT_LIST_FAIL","ACCOUNT_DELETE_REQUEST","ACCOUNT_DELETE_SUCCESS","ACCOUNT_DELETE_FAIL","ACCOUNT_UPDATE_SUCCESS","ACCOUNT_UPDATE_FAIL","USER_SIGNOUT","Resource","updateUser","temp","create","api","defaults","baseURL","accountApi","register","name","email","creatorName","creatorEmail","userId","dispatch","type","payload","data","post","console","log","accountId","localStorage","setItem","JSON","stringify","error","response","message","signin","signout","removeItem","listAccounts","getState","accountSignin","accountInfo","get","headers","Authorization","token","deleteAccount","delete","detailsAccount","updateAccount","account","patch","_id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,oBADF,EAEEC,uBAFF,EAGEC,uBAHF,EAIEC,qBAJF,EAKEC,wBALF,EAMEC,wBANF,EAOEC,mBAPF,EAQEC,sBARF,EASEC,sBATF,EAUEC,eAVF,EAWEC,2BAXF,EAYEC,8BAZF,EAaEC,8BAbF,EAcEC,oBAdF,EAeEC,oBAfF,EAgBEC,iBAhBF,EAiBEC,sBAjBF,EAkBEC,sBAlBF,EAmBEC,mBAnBF,EAoBEC,sBApBF,EAqBEC,mBArBF,QAsBO,+BAtBP;AAuBA,SAASC,YAAT,QAA6B,4BAA7B;AAEA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,UAAT,QAA2B,eAA3B,C,CACA;;AACA,MAAMC,IAAI,GAAGF,QAAQ,CAACG,MAAT,CAAgB,SAAhB,CAAb;AACAD,IAAI,CAACE,GAAL,CAASC,QAAT,CAAkBC,OAAlB,GAA6B,oCAA7B;AACA,MAAMC,UAAU,GAAGL,IAAI,CAACE,GAAxB;AAEA,OAAO,MAAMI,QAAQ,GACnB,CAACC,IAAD,EAAOC,KAAP,EAAcC,WAAd,EAA2BC,YAA3B,EAAyCC,MAAzC,KAAoD,MAAOC,QAAP,IAAoB;AACtEA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEjC,wBADC;AAEPkC,IAAAA,OAAO,EAAE;AAAEP,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA,WAAf;AAA4BC,MAAAA,YAA5B;AAA0CC,MAAAA;AAA1C;AAFF,GAAD,CAAR;;AAIA,MAAI;AACF,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMV,UAAU,CAACW,IAAX,CAAgB,WAAhB,EAA6B;AAClDT,MAAAA,IADkD;AAElDC,MAAAA,KAFkD;AAGlDC,MAAAA,WAHkD;AAIlDC,MAAAA;AAJkD,KAA7B,CAAvB;AAMAO,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCH,IAArC,EAPE,CASF;AACA;AACA;AACA;AACA;AACA;AACA;;AACAH,IAAAA,QAAQ,CAACb,UAAU,CAAC;AAAEY,MAAAA,MAAF;AAAUQ,MAAAA;AAAV,KAAD,CAAX,CAAR;AAEAP,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEhC,wBAAR;AAAkCiC,MAAAA,OAAO,EAAEC;AAA3C,KAAD,CAAR;AAEAH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE7B,sBAAR;AAAgC8B,MAAAA,OAAO,EAAEC;AAAzC,KAAD,CAAR;AAEAK,IAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAeR,IAAf,CAApC;AACD,GAvBD,CAuBE,OAAOS,KAAP,EAAc;AACdZ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAElC,qBADC;AAEPmC,MAAAA,OAAO,EACLU,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeV,IAAf,CAAoBW,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeV,IAAf,CAAoBW,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CAtCI;AAwCP,OAAO,MAAMC,MAAM,GAAInB,KAAD,IAAW,MAAOI,QAAP,IAAoB;AACnDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAE9B,sBAAR;AAAgC+B,IAAAA,OAAO,EAAE;AAAEN,MAAAA;AAAF;AAAzC,GAAD,CAAR;;AACA,MAAI;AACF,UAAM;AAAEO,MAAAA;AAAF,QAAW,MAAMV,UAAU,CAACW,IAAX,CAAgB,SAAhB,EAA2B;AAAER,MAAAA;AAAF,KAA3B,CAAvB;AACAI,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE7B,sBAAR;AAAgC8B,MAAAA,OAAO,EAAEC;AAAzC,KAAD,CAAR,CAFE,CAGF;;AAEAK,IAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAeR,IAAf,CAApC;AACD,GAND,CAME,OAAOS,KAAP,EAAc;AACd;AACAZ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAE/B,mBADC;AAEPgC,MAAAA,OAAO,EACLU,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeV,IAAf,CAAoBW,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeV,IAAf,CAAoBW,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CAlBM;AAoBP,OAAO,MAAME,OAAO,GAAG,MAAOhB,QAAD,IAAc;AACzCQ,EAAAA,YAAY,CAACS,UAAb,CAAwB,aAAxB;AACAT,EAAAA,YAAY,CAACS,UAAb,CAAwB,UAAxB;AAEAjB,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAE5B;AAAR,GAAD,CAAR;AAEA2B,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEhB;AAAR,GAAD,CAAR,CANyC,CAQzC;AACD,CATM;AAWP,OAAO,MAAMiC,YAAY,GAAG,MAAM,OAAOlB,QAAP,EAAiBmB,QAAjB,KAA8B;AAC9DnB,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAExB;AAAR,GAAD,CAAR;;AACA,MAAI;AACF,UAAM;AACJ2C,MAAAA,aAAa,EAAE;AAAEC,QAAAA;AAAF;AADX,QAEFF,QAAQ,EAFZ;AAGA,UAAM;AAAEhB,MAAAA;AAAF,QAAW,MAAMV,UAAU,CAAC6B,GAAX,CAAe,EAAf,EAAmB;AACxCC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASH,WAAW,CAACI,KAAM;AADpC;AAD+B,KAAnB,CAAvB;AAMAzB,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEvB,oBAAR;AAA8BwB,MAAAA,OAAO,EAAEC;AAAvC,KAAD,CAAR;AACD,GAXD,CAWE,OAAOS,KAAP,EAAc;AACd,UAAME,OAAO,GACXF,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeV,IAAf,CAAoBW,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeV,IAAf,CAAoBW,OADxB,GAEIF,KAAK,CAACE,OAHZ;AAIAd,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEtB,iBAAR;AAA2BuB,MAAAA,OAAO,EAAEY;AAApC,KAAD,CAAR;AACD;AACF,CApBM;AAsBP,OAAO,MAAMY,aAAa,GAAInB,SAAD,IAAe,OAAOP,QAAP,EAAiBmB,QAAjB,KAA8B;AACxEnB,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAErB,sBAAR;AAAgCsB,IAAAA,OAAO,EAAEK;AAAzC,GAAD,CAAR;AACA,QAAM;AACJa,IAAAA,aAAa,EAAE;AAAEC,MAAAA;AAAF;AADX,MAEFF,QAAQ,EAFZ;;AAGA,MAAI;AACF,UAAM;AAAEhB,MAAAA;AAAF,QAAW,MAAMV,UAAU,CAACkC,MAAX,CAAmB,IAAGpB,SAAU,EAAhC,EAAmC;AACxDgB,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASH,WAAW,CAACI,KAAM;AAA7C;AAD+C,KAAnC,CAAvB;AAGAzB,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEpB,sBAAR;AAAgCqB,MAAAA,OAAO,EAAEC;AAAzC,KAAD,CAAR;AACD,GALD,CAKE,OAAOS,KAAP,EAAc;AACd,UAAME,OAAO,GACXF,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeV,IAAf,CAAoBW,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeV,IAAf,CAAoBW,OADxB,GAEIF,KAAK,CAACE,OAHZ;AAIAd,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEnB,mBAAR;AAA6BoB,MAAAA,OAAO,EAAEY;AAAtC,KAAD,CAAR;AACD;AACF,CAjBM;AAmBP,OAAO,MAAMc,cAAc,GAAIrB,SAAD,IAAe,MAAOP,QAAP,IAAoB;AAC/DA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEpC,uBAAR;AAAiCqC,IAAAA,OAAO,EAAEK;AAA1C,GAAD,CAAR;;AACA,MAAI;AACF,UAAM;AAAEJ,MAAAA;AAAF,QAAW,MAAMV,UAAU,CAAC6B,GAAX,CAAgB,IAAGf,SAAU,EAA7B,CAAvB;AACAP,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEnC,uBAAR;AAAiCoC,MAAAA,OAAO,EAAEC;AAA1C,KAAD,CAAR;AACD,GAHD,CAGE,OAAOS,KAAP,EAAc;AACd,UAAME,OAAO,GACXF,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeV,IAAf,CAAoBW,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeV,IAAf,CAAoBW,OADxB,GAEIF,KAAK,CAACE,OAHZ;AAIAd,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAErC,oBAAR;AAA8BsC,MAAAA,OAAO,EAAEY;AAAvC,KAAD,CAAR;AACD;AACF,CAZM;AAcP,OAAO,MAAMe,aAAa,GAAIC,OAAD,IAAa,OAAO9B,QAAP,EAAiBmB,QAAjB,KAA8B;AACtEd,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBwB,OAAxB;AACA9B,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAE1B,8BAAR;AAAwC2B,IAAAA,OAAO,EAAE4B;AAAjD,GAAD,CAAR;AACA,QAAM;AACJV,IAAAA,aAAa,EAAE;AAAEC,MAAAA;AAAF;AADX,MAEFF,QAAQ,EAFZ;;AAGA,MAAI;AACF,UAAM;AAAEhB,MAAAA;AAAF,QAAW,MAAMV,UAAU,CAACsC,KAAX,CAAkB,IAAGD,OAAO,CAACE,GAAI,EAAjC,EAAoCF,OAApC,EAA6C;AAClEP,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASH,WAAW,CAACI,KAAM;AAA7C;AADyD,KAA7C,CAAvB;AAGAzB,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAElB,sBAAR;AAAgCmB,MAAAA,OAAO,EAAEC;AAAzC,KAAD,CAAR;AACD,GALD,CAKE,OAAOS,KAAP,EAAc;AACd,UAAME,OAAO,GACXF,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeV,IAAf,CAAoBW,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeV,IAAf,CAAoBW,OADxB,GAEIF,KAAK,CAACE,OAHZ;AAIAd,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEjB,mBAAR;AAA6BkB,MAAAA,OAAO,EAAEY;AAAtC,KAAD,CAAR;AACD;AACF,CAlBM","sourcesContent":["import Axios from \"axios\";\nimport {\n  ACCOUNT_DETAILS_FAIL,\n  ACCOUNT_DETAILS_REQUEST,\n  ACCOUNT_DETAILS_SUCCESS,\n  ACCOUNT_REGISTER_FAIL,\n  ACCOUNT_REGISTER_REQUEST,\n  ACCOUNT_REGISTER_SUCCESS,\n  ACCOUNT_SIGNIN_FAIL,\n  ACCOUNT_SIGNIN_REQUEST,\n  ACCOUNT_SIGNIN_SUCCESS,\n  ACCOUNT_SIGNOUT,\n  ACCOUNT_UPDATE_PROFILE_FAIL,\n  ACCOUNT_UPDATE_PROFILE_REQUEST,\n  ACCOUNT_UPDATE_PROFILE_SUCCESS,\n  ACCOUNT_LIST_REQUEST,\n  ACCOUNT_LIST_SUCCESS,\n  ACCOUNT_LIST_FAIL,\n  ACCOUNT_DELETE_REQUEST,\n  ACCOUNT_DELETE_SUCCESS,\n  ACCOUNT_DELETE_FAIL,\n  ACCOUNT_UPDATE_SUCCESS,\n  ACCOUNT_UPDATE_FAIL,\n} from \"../constants/accountConstants\";\nimport { USER_SIGNOUT } from \"../constants/userConstants\";\n\nimport Resource from \"@guestyci/agni\";\nimport { updateUser } from \"./userActions\";\n// const { api, env, config } = Resource.create();\nconst temp = Resource.create(\"account\");\ntemp.api.defaults.baseURL = `http://localhost:9999/api/accounts`;\nconst accountApi = temp.api;\n\nexport const register =\n  (name, email, creatorName, creatorEmail, userId) => async (dispatch) => {\n    dispatch({\n      type: ACCOUNT_REGISTER_REQUEST,\n      payload: { name, email, creatorName, creatorEmail, userId },\n    });\n    try {\n      const { data } = await accountApi.post(\"/register\", {\n        name,\n        email,\n        creatorName,\n        creatorEmail,\n      });\n      console.log(\"data:================\", data);\n\n      // const { data } = await accountApi.post(\n      //   \"/register\",\n      //   {\n      //     name,\n      //     email,\n      //   }\n      // );\n      dispatch(updateUser({ userId, accountId }));\n\n      dispatch({ type: ACCOUNT_REGISTER_SUCCESS, payload: data });\n\n      dispatch({ type: ACCOUNT_SIGNIN_SUCCESS, payload: data });\n\n      localStorage.setItem(\"accountInfo\", JSON.stringify(data));\n    } catch (error) {\n      dispatch({\n        type: ACCOUNT_REGISTER_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\nexport const signin = (email) => async (dispatch) => {\n  dispatch({ type: ACCOUNT_SIGNIN_REQUEST, payload: { email } });\n  try {\n    const { data } = await accountApi.post(\"/signin\", { email });\n    dispatch({ type: ACCOUNT_SIGNIN_SUCCESS, payload: data });\n    // dispatch(emailAccount(email));\n\n    localStorage.setItem(\"accountInfo\", JSON.stringify(data));\n  } catch (error) {\n    // console.log(\"error :\", error);\n    dispatch({\n      type: ACCOUNT_SIGNIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const signout = () => (dispatch) => {\n  localStorage.removeItem(\"accountInfo\");\n  localStorage.removeItem(\"userInfo\");\n\n  dispatch({ type: ACCOUNT_SIGNOUT });\n\n  dispatch({ type: USER_SIGNOUT });\n\n  // document.location.href = \"/signin\";\n};\n\nexport const listAccounts = () => async (dispatch, getState) => {\n  dispatch({ type: ACCOUNT_LIST_REQUEST });\n  try {\n    const {\n      accountSignin: { accountInfo },\n    } = getState();\n    const { data } = await accountApi.get(\"\", {\n      headers: {\n        Authorization: `Bearer ${accountInfo.token}`,\n      },\n    });\n\n    dispatch({ type: ACCOUNT_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ACCOUNT_LIST_FAIL, payload: message });\n  }\n};\n\nexport const deleteAccount = (accountId) => async (dispatch, getState) => {\n  dispatch({ type: ACCOUNT_DELETE_REQUEST, payload: accountId });\n  const {\n    accountSignin: { accountInfo },\n  } = getState();\n  try {\n    const { data } = await accountApi.delete(`/${accountId}`, {\n      headers: { Authorization: `Bearer ${accountInfo.token}` },\n    });\n    dispatch({ type: ACCOUNT_DELETE_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ACCOUNT_DELETE_FAIL, payload: message });\n  }\n};\n\nexport const detailsAccount = (accountId) => async (dispatch) => {\n  dispatch({ type: ACCOUNT_DETAILS_REQUEST, payload: accountId });\n  try {\n    const { data } = await accountApi.get(`/${accountId}`);\n    dispatch({ type: ACCOUNT_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ACCOUNT_DETAILS_FAIL, payload: message });\n  }\n};\n\nexport const updateAccount = (account) => async (dispatch, getState) => {\n  console.log(\"account:\", account);\n  dispatch({ type: ACCOUNT_UPDATE_PROFILE_REQUEST, payload: account });\n  const {\n    accountSignin: { accountInfo },\n  } = getState();\n  try {\n    const { data } = await accountApi.patch(`/${account._id}`, account, {\n      headers: { Authorization: `Bearer ${accountInfo.token}` },\n    });\n    dispatch({ type: ACCOUNT_UPDATE_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ACCOUNT_UPDATE_FAIL, payload: message });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}