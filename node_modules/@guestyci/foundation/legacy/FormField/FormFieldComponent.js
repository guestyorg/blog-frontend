"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _isUndefined = _interopRequireDefault(require("lodash/isUndefined"));

var _classnames = _interopRequireDefault(require("classnames"));

var _withPopover = _interopRequireDefault(require("../Popover/withPopover"));

var _formUtility = require("../../utils/formUtility");

var _Popover = _interopRequireDefault(require("../Popover"));

var getChildValue = function getChildValue(props) {
  return props.value || props.defaultValue;
};

var FormFieldComponent = function FormFieldComponent(_ref) {
  var input = _ref.input,
      children = _ref.children,
      isPopoverOpen = _ref.isPopoverOpen,
      className = _ref.className,
      meta = _ref.meta,
      _ref$input = _ref.input,
      name = _ref$input.name,
      inputValue = _ref$input.value,
      style = _ref.style,
      popoverId = _ref.popoverId,
      required = _ref.required,
      openPopover = _ref.openPopover,
      closePopover = _ref.closePopover;
  (0, _react.useEffect)(function () {
    var propsValue = getChildValue(children.props);

    if (!input.value && propsValue) {
      input.onChange(propsValue);
    }
  }, []);

  var onChangeValue = function onChangeValue() {
    var _children$props = children.props,
        onChange = _children$props.onChange,
        onSelect = _children$props.onSelect;

    if (onChange) {
      onChange.apply(void 0, arguments);
    }

    if (onSelect) {
      onSelect.apply(void 0, arguments);
    }

    input.onChange.apply(input, arguments);
  };

  var getFieldValue = function getFieldValue(propsValue, inptVal, isVisited) {
    if ((0, _isUndefined["default"])(propsValue)) {
      return inptVal;
    }

    if (isVisited) {
      return inptVal;
    }

    return propsValue;
  };

  var handleFocus = function handleFocus() {
    input.onFocus();

    if (!meta.visited) {
      input.onChange(input.value);
    }

    if (meta.error) {
      openPopover();
    }
  };

  var handleBlur = function handleBlur() {
    input.onBlur();
    closePopover();
  };

  var _children$props2 = children.props,
      value = _children$props2.value,
      placeholder = _children$props2.placeholder,
      disabled = _children$props2.disabled;
  return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, /*#__PURE__*/_react["default"].createElement(_Popover["default"], {
    isOpen: isPopoverOpen,
    body: meta.error,
    id: popoverId,
    theme: "error",
    containerClassName: "d-flex-fill",
    className: "font-weight-bold"
  }, /*#__PURE__*/_react["default"].createElement("div", {
    className: "w-fill"
  })), /*#__PURE__*/_react["default"].createElement("div", {
    className: (0, _classnames["default"])(className, 'form-field-component-wrapper', 'transition-borderColor', 'w-fill', 'b-1', "border-".concat(meta.touched && meta.error ? 'red' : 'transparent'), "".concat(meta.error ? 'invalid-field' : null)),
    onBlur: handleBlur,
    onFocus: handleFocus,
    tabIndex: -1,
    style: style
  }, _react["default"].cloneElement(children, {
    name: name,
    onChange: onChangeValue,
    required: required,
    disabled: disabled,
    placeholder: (0, _formUtility.getPlaceholder)(placeholder, required, disabled),
    value: getFieldValue(value, inputValue, meta.visited)
  })));
};

FormFieldComponent.defaultProps = {
  className: '',
  style: {},
  popoverId: null,
  required: false
};
FormFieldComponent.propTypes = {
  children: _propTypes["default"].node.isRequired,
  required: _propTypes["default"].bool,
  className: _propTypes["default"].string,
  style: _propTypes["default"].shape(),
  input: _propTypes["default"].shape().isRequired,
  meta: _propTypes["default"].shape().isRequired,
  popoverId: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].number])
};

var _default = (0, _withPopover["default"])(FormFieldComponent);

exports["default"] = _default;