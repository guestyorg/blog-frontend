import _extends from "@babel/runtime/helpers/esm/extends";
import React, { Component } from 'react';
/**
 * Create a wrapper compose to support Drawer functionality
 * @param ComposedComponent
 * @returns {{Component}}
 */

const withDrawer = ComposedComponent => {
  var _temp;

  return _temp = class extends Component {
    constructor(props) {
      super(props);

      this.defaultState = isOpen => {
        this.setState({
          show: isOpen
        });
      };

      this.closeDrawer = () => {
        this.setState({
          show: false
        });
      };

      this.openDrawer = event => {
        if (event) {
          event.stopPropagation();
        }

        this.setState({
          show: true
        });
      };

      this.toggleDrawer = event => {
        if (event) {
          event.stopPropagation();
        }

        this.setState(prevState => ({
          show: !prevState.show
        }));
      };

      this.state = {
        show: false
      };
    }

    render() {
      const {
        show
      } = this.state;
      return /*#__PURE__*/React.createElement(ComposedComponent, _extends({}, this.props, {
        isDrawerOpen: show,
        closeDrawer: this.closeDrawer,
        openDrawer: this.openDrawer,
        toggleDrawer: this.toggleDrawer,
        drawerDefaultState: this.defaultState
      }));
    }

  }, _temp;
};

export default withDrawer;