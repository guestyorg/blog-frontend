import _extends from "@babel/runtime/helpers/esm/extends";
import React from 'react';
import isObject from 'lodash/isObject';
import isString from 'lodash/isString';
import isNil from 'lodash/isNil';
import { isEmpty } from "../utils";
import TextField from "../TextField";
import Row from "../Layout/Row";

const renderInputComponent = (RenderValue, value, overflowEllipsis) => {
  if (isNil(RenderValue)) {
    return /*#__PURE__*/React.createElement(TextField, {
      overflowEllipsis: overflowEllipsis
    }, value);
  }

  if (isString(RenderValue)) {
    return /*#__PURE__*/React.createElement(TextField, {
      overflowEllipsis: overflowEllipsis
    }, value[RenderValue]);
  }

  return /*#__PURE__*/React.createElement(RenderValue, _extends({}, value || {}, {
    "data-qa": "render-input-component"
  }));
};

const DropdownInputSelectedValue = ({
  variant,
  renderValue,
  value
}) => {
  const isSingleSelect = variant === 'single';

  if (isEmpty(value)) {
    return null;
  }

  return isSingleSelect ? renderInputComponent(renderValue, value, isSingleSelect) : value.map((val, index) => {
    const key = isObject(val) ? `${val}_${index}` : val;
    const isLast = index === value.length - 1;
    return /*#__PURE__*/React.createElement(Row, {
      align: "center",
      key: key
    }, renderInputComponent(renderValue, val, isSingleSelect), !isLast && /*#__PURE__*/React.createElement(React.Fragment, null, "\xA0,"));
  });
};

export default DropdownInputSelectedValue;