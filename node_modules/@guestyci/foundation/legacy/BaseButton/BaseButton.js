"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Spinner = _interopRequireDefault(require("../Spinner/Spinner"));

var colors = {
  primary: 'blue',
  success: 'green',
  warning: 'yellow',
  danger: 'red',
  secondary: 'plain'
};

var BaseButton = function BaseButton(_ref) {
  var classes = _ref.classes,
      color = _ref.color,
      children = _ref.children,
      className = _ref.className,
      style = _ref.style,
      variant = _ref.variant,
      isLoading = _ref.isLoading,
      disabled = _ref.disabled,
      loaderColor = _ref.loaderColor,
      type = _ref.type,
      childrenClassName = _ref.childrenClassName,
      otherProps = (0, _objectWithoutProperties2["default"])(_ref, ["classes", "color", "children", "className", "style", "variant", "isLoading", "disabled", "loaderColor", "type", "childrenClassName"]);
  return /*#__PURE__*/_react["default"].createElement("button", (0, _extends2["default"])({
    type: type,
    className: (0, _classnames["default"])({
      'btn-loading': isLoading
    }, 'transition-all', 'btn base-btn', (0, _defineProperty2["default"])({}, "btn-".concat(colors[color]), colors[color]), (0, _defineProperty2["default"])({}, "btn-".concat(variant), variant), className)
  }, otherProps, {
    style: style,
    disabled: disabled,
    color: colors[color],
    "data-qa": "base-button"
  }), /*#__PURE__*/_react["default"].createElement("div", {
    className: "flex-center h-fill"
  }, /*#__PURE__*/_react["default"].createElement("div", {
    className: (0, _classnames["default"])(childrenClassName, 'overflow-ellipsis', {
      invisible: isLoading
    })
  }, children), isLoading && /*#__PURE__*/_react["default"].createElement(_Spinner["default"], {
    className: "absolute",
    size: 15,
    strokeWidth: 6,
    color: loaderColor
  })));
};

BaseButton.defaultProps = {
  color: 'secondary',
  className: '',
  variant: 'flat',
  isLoading: false,
  disabled: false,
  loaderColor: 'white',
  type: 'button'
};
BaseButton.propTypes = {
  /** children passed to the button - string or Node */
  children: _propTypes["default"].node.isRequired,

  /**  Color for button  - accept (primary, success, warning, danger) */
  color: _propTypes["default"].string,

  /**  Variant of button  - accept (raised, flat, outline, icon) */
  variant: _propTypes["default"].oneOf(['raised', 'flat', 'outline', 'icon']),

  /** Class for button base class */
  className: _propTypes["default"].string,

  /** Indicator for loading to show spinner */
  isLoading: _propTypes["default"].bool,

  /** Indicator whether the button is disabled */
  disabled: _propTypes["default"].bool,

  /** Color for loading spinner */
  loaderColor: _propTypes["default"].string,

  /** The button type */
  type: _propTypes["default"].string
};
var _default = BaseButton;
exports["default"] = _default;