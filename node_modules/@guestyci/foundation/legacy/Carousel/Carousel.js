"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactSlick = _interopRequireDefault(require("react-slick"));

require("slick-carousel/slick/slick.css");

require("slick-carousel/slick/slick-theme.css");

var _isNumber = _interopRequireDefault(require("lodash/isNumber"));

var _noop = _interopRequireDefault(require("lodash/noop"));

var _CarouselCustomArrow = _interopRequireDefault(require("./CarouselCustomArrow"));

var _Bullet = _interopRequireDefault(require("../Bullet/Bullet"));

var _enums = require("../../enums/enums");

var Carousel = function Carousel(_ref) {
  var children = _ref.children,
      dots = _ref.dots,
      arrows = _ref.arrows,
      infinite = _ref.infinite,
      showArrowsOnHover = _ref.showArrowsOnHover,
      activeSlide = _ref.activeSlide,
      draggable = _ref.draggable,
      onChange = _ref.onChange,
      className = _ref.className,
      arrowTheme = _ref.arrowTheme,
      arrowsFade = _ref.arrowsFade,
      style = _ref.style,
      accessibility = _ref.accessibility;
  var sliderRef = (0, _react.useRef)(null);
  var afterChange = (0, _react.useCallback)(function (slideIndex) {
    onChange(slideIndex);
  });
  var settings = {
    dots: dots,
    arrows: arrows,
    infinite: infinite,
    draggable: draggable,
    afterChange: afterChange,
    className: className,
    style: style,
    accessibility: accessibility,
    adptiveHeight: true,
    initialSlide: activeSlide !== undefined ? activeSlide : 0,
    prevArrow: /*#__PURE__*/_react["default"].createElement(_CarouselCustomArrow["default"], {
      fade: arrowsFade,
      theme: arrowTheme,
      direction: "left",
      showArrowsOnHover: showArrowsOnHover
    }),
    nextArrow: /*#__PURE__*/_react["default"].createElement(_CarouselCustomArrow["default"], {
      fade: arrowsFade,
      theme: arrowTheme,
      direction: "right",
      showArrowsOnHover: showArrowsOnHover
    }),
    dotsClass: 'absolute text-align-center w-fill carousel-dots',
    customPaging: function customPaging() {
      return /*#__PURE__*/_react["default"].createElement("div", null, /*#__PURE__*/_react["default"].createElement(_Bullet["default"], {
        color: "white",
        className: "clickable carousel-bullet"
      }));
    }
  };
  (0, _react.useEffect)(function () {
    if ((0, _isNumber["default"])(activeSlide)) {
      sliderRef.current.slickGoTo(activeSlide);
    }
  }, [activeSlide, sliderRef.current]);
  return /*#__PURE__*/_react["default"].createElement("div", {
    className: "d-flex w-fill",
    "data-qa": "carousel"
  }, /*#__PURE__*/_react["default"].createElement("div", {
    className: "flex-grow-1 width-0 carousel-component"
  }, /*#__PURE__*/_react["default"].createElement(_reactSlick["default"], (0, _extends2["default"])({
    ref: sliderRef
  }, settings), children)));
};

Carousel.defaultProps = {
  accessibility: true,
  dots: true,
  arrows: false,
  showArrowsOnHover: false,
  infinite: false,
  draggable: true,
  onChange: _noop["default"],
  className: '',
  arrowsFade: false,
  arrowTheme: _enums.Theme.Dark,
  style: {}
};
Carousel.propTypes = {
  /** indicates if to display dots */
  dots: _propTypes["default"].bool,

  /** indicates if to display arrows */
  arrows: _propTypes["default"].bool,

  /** indicates if to display fade around the arrows */
  arrowsFade: _propTypes["default"].bool,

  /** Display arrows only when hovering */
  showArrowsOnHover: _propTypes["default"].bool,

  /** arrow's theme */
  arrowTheme: _propTypes["default"].oneOf([_enums.Theme.Light, _enums.Theme.Dark]),

  /** Infinitely wrap around contents */
  infinite: _propTypes["default"].bool,

  /** Enable scrollable via dragging on desktop */
  draggable: _propTypes["default"].bool,

  /** Slide index to show */
  activeSlide: _propTypes["default"].number,

  /** Additional class name */
  className: _propTypes["default"].string,

  /** Additional style */
  style: _propTypes["default"].shape(),

  /** callback when slide changes through arrows/dots */
  onChange: _propTypes["default"].func,

  /** The item to render inside the carousel */
  children: _propTypes["default"].oneOfType([_propTypes["default"].arrayOf(_propTypes["default"].node), _propTypes["default"].node]).isRequired,

  /** Enable tabbing and arrow key navigation */
  accessibility: _propTypes["default"].bool
};
var _default = Carousel;
exports["default"] = _default;