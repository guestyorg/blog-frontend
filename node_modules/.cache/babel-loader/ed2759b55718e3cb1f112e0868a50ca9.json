{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport noop from 'lodash/noop';\nimport cn from 'classnames';\nimport useInfiniteScroll from \"../useInfiniteScroll\";\nimport useComposeRefs from \"../useComposeRefs\";\nimport createStyles from \"../createStyles\";\nimport Spinner from \"../Spinner\";\nimport Row from \"../Layout/Row\";\nvar useStyles = createStyles({\n  root: {\n    display: 'block',\n    height: 'inherit',\n    maxHeight: 'inherit',\n    overflow: 'auto'\n  },\n  loader: {}\n}, {\n  name: 'InfiniteScroll'\n});\nvar InfiniteScroll = React.forwardRef(function InfiniteScroll(_ref, ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      _ref$loader = _ref.loader,\n      loader = _ref$loader === void 0 ? /*#__PURE__*/React.createElement(Spinner, null) : _ref$loader,\n      _ref$component = _ref.component,\n      component = _ref$component === void 0 ? 'span' : _ref$component,\n      isLoading = _ref.isLoading,\n      totalCount = _ref.totalCount,\n      _ref$onLoadMore = _ref.onLoadMore,\n      onLoadMore = _ref$onLoadMore === void 0 ? noop : _ref$onLoadMore,\n      skip = _ref.skip,\n      _ref$scrollOffset = _ref.scrollOffset,\n      scrollOffset = _ref$scrollOffset === void 0 ? 200 : _ref$scrollOffset,\n      pageSize = _ref.pageSize,\n      jss = _ref.jss,\n      props = _objectWithoutProperties(_ref, [\"children\", \"className\", \"loader\", \"component\", \"isLoading\", \"totalCount\", \"onLoadMore\", \"skip\", \"scrollOffset\", \"pageSize\", \"jss\"]);\n\n  var scrollableRef = useInfiniteScroll({\n    onLoadMore: onLoadMore,\n    skip: skip,\n    pageSize: pageSize,\n    scrollOffset: scrollOffset,\n    isLoading: isLoading,\n    totalCount: totalCount\n  });\n  var infiniteScrollRef = useComposeRefs(scrollableRef, ref);\n  var classes = useStyles({\n    jss: jss\n  });\n  var Tag = component || 'span';\n  return totalCount ? /*#__PURE__*/React.createElement(Tag, _extends({\n    className: cn(classes.root, className),\n    ref: infiniteScrollRef\n  }, props), children, isLoading && /*#__PURE__*/React.createElement(Row, {\n    className: classes.loader,\n    justify: \"center\",\n    align: \"center\"\n  }, loader)) : children;\n});\nInfiniteScroll.propTypes = {\n  /** child elements to render into the infinite scroll */\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.arrayOf(PropTypes.node)]).isRequired,\n\n  /** Custom loader component */\n  loader: PropTypes.node,\n\n  /** Custom root component to render */\n  component: PropTypes.node,\n\n  /** loading state of the data */\n  isLoading: PropTypes.bool,\n\n  /** total count of the data entries */\n  totalCount: PropTypes.number,\n\n  /** Scroll offset, from the bottom, from which loading the next chunk should be triggered */\n  scrollOffset: PropTypes.number,\n\n  /** index of the first item in the current chunk */\n  skip: PropTypes.number,\n\n  /** cb function handle loading more data */\n  onLoadMore: PropTypes.func,\n\n  /** number of rows per page */\n  pageSize: PropTypes.number,\n\n  /** JSS overrides */\n  jss: PropTypes.oneOfType([PropTypes.shape(), PropTypes.func])\n};\nInfiniteScroll.displayName = 'InfiniteScroll';\nexport default InfiniteScroll;","map":{"version":3,"sources":["/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/node_modules/@guestyci/foundation/esm/InfiniteScroll/InfiniteScroll.js"],"names":["_extends","_objectWithoutProperties","React","PropTypes","noop","cn","useInfiniteScroll","useComposeRefs","createStyles","Spinner","Row","useStyles","root","display","height","maxHeight","overflow","loader","name","InfiniteScroll","forwardRef","_ref","ref","children","className","_ref$loader","createElement","_ref$component","component","isLoading","totalCount","_ref$onLoadMore","onLoadMore","skip","_ref$scrollOffset","scrollOffset","pageSize","jss","props","scrollableRef","infiniteScrollRef","classes","Tag","justify","align","propTypes","oneOfType","node","arrayOf","isRequired","bool","number","func","shape","displayName"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport noop from 'lodash/noop';\nimport cn from 'classnames';\nimport useInfiniteScroll from \"../useInfiniteScroll\";\nimport useComposeRefs from \"../useComposeRefs\";\nimport createStyles from \"../createStyles\";\nimport Spinner from \"../Spinner\";\nimport Row from \"../Layout/Row\";\nvar useStyles = createStyles({\n  root: {\n    display: 'block',\n    height: 'inherit',\n    maxHeight: 'inherit',\n    overflow: 'auto'\n  },\n  loader: {}\n}, {\n  name: 'InfiniteScroll'\n});\nvar InfiniteScroll = React.forwardRef(function InfiniteScroll(_ref, ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      _ref$loader = _ref.loader,\n      loader = _ref$loader === void 0 ? /*#__PURE__*/React.createElement(Spinner, null) : _ref$loader,\n      _ref$component = _ref.component,\n      component = _ref$component === void 0 ? 'span' : _ref$component,\n      isLoading = _ref.isLoading,\n      totalCount = _ref.totalCount,\n      _ref$onLoadMore = _ref.onLoadMore,\n      onLoadMore = _ref$onLoadMore === void 0 ? noop : _ref$onLoadMore,\n      skip = _ref.skip,\n      _ref$scrollOffset = _ref.scrollOffset,\n      scrollOffset = _ref$scrollOffset === void 0 ? 200 : _ref$scrollOffset,\n      pageSize = _ref.pageSize,\n      jss = _ref.jss,\n      props = _objectWithoutProperties(_ref, [\"children\", \"className\", \"loader\", \"component\", \"isLoading\", \"totalCount\", \"onLoadMore\", \"skip\", \"scrollOffset\", \"pageSize\", \"jss\"]);\n\n  var scrollableRef = useInfiniteScroll({\n    onLoadMore: onLoadMore,\n    skip: skip,\n    pageSize: pageSize,\n    scrollOffset: scrollOffset,\n    isLoading: isLoading,\n    totalCount: totalCount\n  });\n  var infiniteScrollRef = useComposeRefs(scrollableRef, ref);\n  var classes = useStyles({\n    jss: jss\n  });\n  var Tag = component || 'span';\n  return totalCount ? /*#__PURE__*/React.createElement(Tag, _extends({\n    className: cn(classes.root, className),\n    ref: infiniteScrollRef\n  }, props), children, isLoading && /*#__PURE__*/React.createElement(Row, {\n    className: classes.loader,\n    justify: \"center\",\n    align: \"center\"\n  }, loader)) : children;\n});\nInfiniteScroll.propTypes = {\n  /** child elements to render into the infinite scroll */\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.arrayOf(PropTypes.node)]).isRequired,\n\n  /** Custom loader component */\n  loader: PropTypes.node,\n\n  /** Custom root component to render */\n  component: PropTypes.node,\n\n  /** loading state of the data */\n  isLoading: PropTypes.bool,\n\n  /** total count of the data entries */\n  totalCount: PropTypes.number,\n\n  /** Scroll offset, from the bottom, from which loading the next chunk should be triggered */\n  scrollOffset: PropTypes.number,\n\n  /** index of the first item in the current chunk */\n  skip: PropTypes.number,\n\n  /** cb function handle loading more data */\n  onLoadMore: PropTypes.func,\n\n  /** number of rows per page */\n  pageSize: PropTypes.number,\n\n  /** JSS overrides */\n  jss: PropTypes.oneOfType([PropTypes.shape(), PropTypes.func])\n};\nInfiniteScroll.displayName = 'InfiniteScroll';\nexport default InfiniteScroll;"]},"metadata":{},"sourceType":"module"}