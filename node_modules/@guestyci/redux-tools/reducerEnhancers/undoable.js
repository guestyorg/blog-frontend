"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.undoable = undoable;

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

// eslint-disable-next-line import/prefer-default-export
function undoable(reducer) {
  // create an "upgraded" initial state
  var initialState = {
    past: [],
    present: reducer(undefined, {
      type: '@@INIT_UNDOABLE'
    })
  }; // return a reducer that handles the new state structure

  return function undoReducer() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
    var action = arguments.length > 1 ? arguments[1] : undefined;
    var past = state.past,
        present = state.present;
    var previous;
    var newPast;
    var newPresent;

    switch (action.type) {
      case 'UNDO':
        previous = past[past.length - 1];
        newPast = past.slice(0, past.length - 1);
        return {
          past: newPast,
          present: previous
        };

      default:
        newPresent = reducer(present, action);

        if (present === newPresent) {
          return state;
        }

        return {
          past: [].concat((0, _toConsumableArray2["default"])(past), [present]),
          present: newPresent
        };
    }
  };
}