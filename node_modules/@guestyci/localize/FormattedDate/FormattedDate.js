"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _moment = _interopRequireDefault(require("moment/moment"));

var _LocalizationContext = _interopRequireDefault(require("../LocalizationProvider/LocalizationContext"));

var _utils = require("../utils");

var _getDateFormat = _interopRequireDefault(require("./getDateFormat"));

var FormattedDate = function FormattedDate(_ref) {
  var format = _ref.format,
      date = _ref.date,
      variant = _ref.variant;
  var Tag = variant || _react.Fragment;
  var momentDate = (0, _moment["default"])(date);
  return momentDate.isValid() ? _react["default"].createElement(_LocalizationContext["default"].Consumer, null, function (_ref2) {
    var isEnglish = _ref2.isEnglish;
    return _react["default"].createElement(Tag, null, momentDate.format((0, _getDateFormat["default"])(format, isEnglish)));
  }) : _react["default"].createElement(_react.Fragment, null, "Invalid date");
};

FormattedDate.defaultProps = {
  format: _utils.MomentFormatTypes.Date,
  variant: undefined
};
FormattedDate.propTypes = {
  /** date value is required */
  date: _propTypes["default"].oneOfType([_propTypes["default"].instanceOf(Date), _propTypes["default"].string, _propTypes["default"].number]).isRequired,

  /** Date format to custom show moment (shortDate, date, fullDate, mmmm yyyyy, mmm yyyyy) */
  format: _propTypes["default"].oneOf([_utils.MomentFormatTypes.ShortDate, _utils.MomentFormatTypes.Date, _utils.MomentFormatTypes.FullDate, _utils.MomentFormatTypes.MMMM_YYYY, _utils.MomentFormatTypes.MMM_YYYY]),

  /** set the moment component to be variant ('div','string'...) in stead of fragment */
  variant: _propTypes["default"].string
};
var _default = FormattedDate;
exports["default"] = _default;