import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import React from 'react';
import { mount, shallow } from 'enzyme';
import MockJssProvider from "./MockJssProvider";
/**
 * Setup for component using jss classes
 * @param comp
 * @return {function(*=, *=): *}
 */

export default (function (comp) {
  return function () {
    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    var _options$isMount = options.isMount,
        isMount = _options$isMount === void 0 ? false : _options$isMount,
        rest = _objectWithoutProperties(options, ["isMount"]);

    var component = React.createElement(comp, _extends({}, props, {
      className: "".concat(props === null || props === void 0 ? void 0 : props.className, " test-rendered-component")
    }));
    var wrapper = isMount ? mount(component, _extends({}, rest, {
      wrappingComponent: MockJssProvider
    })) : shallow(component, _extends({}, rest, {
      wrappingComponent: MockJssProvider
    }));
    return isMount ? wrapper.find('.test-rendered-component').last() : wrapper.find('.test-rendered-component');
  };
});