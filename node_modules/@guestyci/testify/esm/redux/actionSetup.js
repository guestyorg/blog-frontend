import _toConsumableArray from "@babel/runtime/helpers/esm/toConsumableArray";
import thunk from 'redux-thunk';
import configureMockStore from 'redux-mock-store';
import nock from 'nock';
import Resource from '@guestyci/agni';
import httpAdapter from 'axios/lib/adapters/http';
import "../testSetup";

var _Resource$create = Resource.create({
  env: 'development'
}),
    api = _Resource$create.api,
    config = _Resource$create.config;

api.defaults.adapter = httpAdapter;
/**
 * Create the basic setup for redux action tests
 * @param middleware {Array} middleware array
 * @param serviceUrlKey {String}  Base service urlKey for api calls - As defined in the config file - Or an the service string,
 * @return {Object} {
 * store {Object} the store instance,
 * baseUrl {String} The base url defined
 * nock (Function) The nock function to call
 * }
 */

export default (function () {
  var middleware = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [thunk.withExtraArgument(api)];
  var serviceUrlKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'API_URL';
  return function (store) {
    var mockStore = configureMockStore(_toConsumableArray(middleware));
    var baseUrl = config[serviceUrlKey] || serviceUrlKey;
    return {
      store: mockStore(store),
      baseUrl: baseUrl,
      nock: nock(baseUrl)
    };
  };
});