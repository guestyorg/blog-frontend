import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import React from 'react';
import cn from 'classnames';
import PropTypes from 'prop-types';
import { createUseStyles } from 'react-jss';
var useStyles = createUseStyles({
  pill: {
    height: function height(_ref) {
      var _height = _ref.height;
      return _height;
    },
    width: function width(_ref2) {
      var _width = _ref2.width;
      return _width;
    },
    borderRadius: function borderRadius(_ref3) {
      var _borderRadius = _ref3.borderRadius;
      return _borderRadius;
    }
  }
});

var Pill = function Pill(_ref4) {
  var _cn;

  var className = _ref4.className,
      color = _ref4.color,
      width = _ref4.width,
      height = _ref4.height,
      bgColor = _ref4.bgColor,
      borderColor = _ref4.borderColor,
      textHover = _ref4.textHover,
      bgHover = _ref4.bgHover,
      borderHover = _ref4.borderHover,
      filter = _ref4.filter,
      children = _ref4.children,
      borderRadius = _ref4.borderRadius;
  var classes = useStyles({
    width: width,
    height: height,
    borderRadius: borderRadius
  });
  return /*#__PURE__*/React.createElement("div", {
    className: cn(className, classes.pill, (_cn = {}, _defineProperty(_cn, "text-".concat(color), color), _defineProperty(_cn, "border-".concat(borderColor), borderColor), _defineProperty(_cn, "bg-".concat(bgColor), bgColor), _defineProperty(_cn, "text-hover-".concat(textHover), textHover), _defineProperty(_cn, "border-hover-".concat(borderHover), borderHover), _defineProperty(_cn, "bg-hover-".concat(bgHover), bgHover), _defineProperty(_cn, 'b-1', borderColor), _defineProperty(_cn, 'bg-hover-blue box-shadow-hover-heavy box-shadow-active-0', filter), _cn), 'px-2  pill-element overflow-ellipsis w-fit-content flex-center'),
    "data-qa": "pill"
  }, children);
};

Pill.defaultProps = {
  className: '',
  color: 'white',
  bgColor: 'black',
  borderColor: '',
  textHover: '',
  bgHover: '',
  borderHover: '',
  filter: false,
  children: null,
  width: undefined,
  height: 21,
  borderRadius: 10
};
Pill.propTypes = {
  /** ClassName url for pill */
  className: PropTypes.string,

  /** Text for pill */
  color: PropTypes.string,

  /** Background Color for pill */
  bgColor: PropTypes.string,

  /** borderColor for pill */
  borderColor: PropTypes.string,

  /** textHover for pill */
  textHover: PropTypes.string,

  /** Background on hover for pill */
  bgHover: PropTypes.string,

  /** borderHover for pill */
  borderHover: PropTypes.string,

  /** Is it a filter */
  filter: PropTypes.bool,

  /** Array or nodes , or nodes */
  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),

  /** Set the pill width */
  width: PropTypes.number,

  /** Set the pill height */
  height: PropTypes.number,

  /** Set the pill border radius */
  borderRadius: PropTypes.number
};
export default Pill;