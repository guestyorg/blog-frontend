"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Popover = _interopRequireDefault(require("../Popover"));

var _enums = require("../enums");

var _useHover3 = _interopRequireDefault(require("../useHover"));

var Tooltip = _react["default"].forwardRef(function Tooltip(_ref, ref) {
  var children = _ref.children,
      _ref$className = _ref.className,
      className = _ref$className === void 0 ? '' : _ref$className,
      _ref$body = _ref.body,
      body = _ref$body === void 0 ? null : _ref$body,
      _ref$style = _ref.style,
      style = _ref$style === void 0 ? {} : _ref$style,
      _ref$placement = _ref.placement,
      placement = _ref$placement === void 0 ? _enums.OriginDirectionType.Top : _ref$placement,
      delay = _ref.delay,
      _ref$fullWidth = _ref.fullWidth,
      fullWidth = _ref$fullWidth === void 0 ? false : _ref$fullWidth,
      _ref$interactive = _ref.interactive,
      interactive = _ref$interactive === void 0 ? false : _ref$interactive,
      _ref$jss = _ref.jss,
      jss = _ref$jss === void 0 ? {} : _ref$jss,
      props = (0, _objectWithoutProperties2["default"])(_ref, ["children", "className", "body", "style", "placement", "delay", "fullWidth", "interactive", "jss"]);

  var _useHover = (0, _useHover3["default"])({
    delay: delay
  }),
      _useHover2 = (0, _slicedToArray2["default"])(_useHover, 2),
      isHoveringBody = _useHover2[0],
      hoverRef = _useHover2[1];

  var _useState = (0, _react.useState)(false),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      isHoveringTooltip = _useState2[0],
      setHoveringTooltip = _useState2[1];

  var handleTooltipMouseEnter = function handleTooltipMouseEnter() {
    return setHoveringTooltip(true);
  };

  var handleTooltipMouseLeave = function handleTooltipMouseLeave() {
    return setHoveringTooltip(false);
  };

  var isOpen = !!isHoveringBody || interactive && isHoveringTooltip;
  return /*#__PURE__*/_react["default"].createElement(_Popover["default"], (0, _extends2["default"])({}, props, {
    ref: ref,
    anchor: hoverRef,
    backdrop: false,
    delay: delay,
    className: className,
    body: body,
    style: style,
    placement: placement,
    fullWidth: fullWidth,
    jss: jss,
    open: isOpen,
    onMouseEnter: handleTooltipMouseEnter,
    onMouseLeave: handleTooltipMouseLeave
  }), children);
});

Tooltip.propTypes = {
  /** Node - the component wrapped by the tooltip */
  children: _propTypes["default"].node.isRequired,

  /** String || React Element - The tooltip body */
  body: _propTypes["default"].node,

  /** onClose  - Function to support the popover toggle */
  onClose: _propTypes["default"].func,

  /** Additional component class */
  className: _propTypes["default"].string,

  /** Additional component style */
  style: _propTypes["default"].shape(),

  /** Tooltip placement supporting:
   *  (top, bottom, left, right, top start, top end, bottom start, bottom end, left start, left end, right start, right end )
   *  */
  placement: _propTypes["default"].string,

  /** Set the popover content to fit to its children full width */
  fullWidth: _propTypes["default"].bool,

  /** Tooltip entry and leave delay */
  delay: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].shape({
    enter: _propTypes["default"].number,
    exit: _propTypes["default"].number
  })]),

  /** If true it won't close when the user hovers over the tooltip before the delay.exit is expired. */
  interactive: _propTypes["default"].bool,

  /** JSS overrides */
  jss: _propTypes["default"].oneOfType([_propTypes["default"].shape(), _propTypes["default"].func])
};
Tooltip.displayName = 'Tooltip';
var _default = Tooltip;
exports["default"] = _default;