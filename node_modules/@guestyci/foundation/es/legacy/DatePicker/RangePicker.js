import React from 'react';
import { DateRangePicker } from 'react-dates';
import { DateDisplayFormat } from "../../enums/enums";

const RangePicker = ({
  startDate,
  startDateId,
  endDateId,
  style,
  prevMonthButton,
  nextMonthButton,
  renderMonthElement,
  enableOutsideDays,
  isDayBlocked,
  isOutsideRange,
  verticalSpacing,
  disabled,
  endDate,
  readOnly,
  daySize,
  focusedInput,
  onFocus,
  numberOfMonths,
  minimumNights,
  onMonthChange,
  renderDayContents,
  initialVisibleMonth,
  onDatesChange,
  anchorDirection,
  openDirection,
  weekDayFormat,
  appendToBody,
  startDatePlaceholderText,
  endDatePlaceholderText
}) => /*#__PURE__*/React.createElement("div", {
  style: style,
  "data-qa": "range-picker"
}, /*#__PURE__*/React.createElement(DateRangePicker, {
  startDatePlaceholderText: startDatePlaceholderText,
  endDatePlaceholderText: endDatePlaceholderText,
  startDate: startDate,
  startDateId: startDateId,
  endDate: endDate,
  endDateId: endDateId,
  onDatesChange: onDatesChange,
  isDayBlocked: isDayBlocked,
  enableOutsideDays: enableOutsideDays,
  daySize: daySize,
  disabled: disabled,
  noBorder: true,
  onNextMonthClick: onMonthChange,
  onPrevMonthClick: onMonthChange,
  numberOfMonths: numberOfMonths,
  hideKeyboardShortcutsPanel: true,
  verticalSpacing: verticalSpacing,
  customArrowIcon: /*#__PURE__*/React.createElement("div", {
    className: `pl-1 pr-2 ${startDate || endDate ? 'text-black' : 'text-gray'}`
  }, "-"),
  navPrev: prevMonthButton,
  navNext: nextMonthButton,
  renderMonthElement: renderMonthElement,
  focusedInput: focusedInput,
  onFocusChange: onFocus,
  readOnly: readOnly,
  minimumNights: minimumNights,
  renderDayContents: renderDayContents,
  isOutsideRange: isOutsideRange,
  initialVisibleMonth: initialVisibleMonth,
  anchorDirection: anchorDirection,
  openDirection: openDirection,
  weekDayFormat: weekDayFormat,
  displayFormat: DateDisplayFormat,
  appendToBody: appendToBody
}));

export default RangePicker;