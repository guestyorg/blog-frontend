{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport noop from 'lodash/noop';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport Col from \"../Layout/Col\";\nimport createStyles from \"../createStyles\";\nimport InputStyles from \"../Input/styles\";\nimport { blueGray500 } from \"../theme/colors\";\nexport var useStyles = createStyles(function (theme) {\n  return {\n    root: _extends({}, theme.typography.primary),\n    textArea: _extends({}, InputStyles.shared(theme), {\n      '&::placeholder': InputStyles.placeholder(theme),\n      '&:hover': InputStyles.hover(theme),\n      '&:focus': InputStyles.focused(theme),\n      '&:disabled': InputStyles.disabled(theme),\n      paddingTop: theme.spacer(3),\n      paddingBottom: theme.spacer(3),\n      minHeight: '60px'\n    }),\n    error: InputStyles.error(theme),\n    charCount: {\n      marginTop: theme.spacer(1),\n      color: blueGray500\n    }\n  };\n}, {\n  name: 'TextArea'\n});\nvar TextArea = React.forwardRef(function TextArea(_ref, ref) {\n  var name = _ref.name,\n      value = _ref.value,\n      onChange = _ref.onChange,\n      disabled = _ref.disabled,\n      placeholder = _ref.placeholder,\n      className = _ref.className,\n      maxLength = _ref.maxLength,\n      minRows = _ref.minRows,\n      maxRows = _ref.maxRows,\n      error = _ref.error,\n      jss = _ref.jss,\n      props = _objectWithoutProperties(_ref, [\"name\", \"value\", \"onChange\", \"disabled\", \"placeholder\", \"className\", \"maxLength\", \"minRows\", \"maxRows\", \"error\", \"jss\"]);\n\n  var classes = useStyles({\n    jss: jss\n  });\n  var charCount = value.length;\n  return /*#__PURE__*/React.createElement(Col, {\n    className: cn(classes.root, className)\n  }, /*#__PURE__*/React.createElement(TextareaAutosize, _extends({\n    value: value,\n    onChange: onChange,\n    name: name,\n    placeholder: placeholder,\n    disabled: disabled,\n    maxRows: maxRows,\n    minRows: minRows,\n    maxLength: maxLength,\n    className: cn(classes.textArea, _defineProperty({}, classes.error, error)),\n    ref: ref\n  }, props)), maxLength && /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.charCount\n  }, \"\".concat(charCount, \"/\").concat(maxLength)));\n});\nTextArea.defaultProps = {\n  value: '',\n  name: '',\n  onChange: noop,\n  placeholder: '',\n  disabled: false,\n  minRows: 1,\n  maxRows: 5,\n  maxLength: undefined\n};\nTextArea.propTypes = {\n  /** text area value */\n  value: PropTypes.string,\n\n  /** text area name */\n  name: PropTypes.string,\n\n  /** On change trigger function to update on text change */\n  onChange: PropTypes.func,\n\n  /** The max length for the text area input */\n  maxLength: PropTypes.number,\n\n  /** TextArea Placeholder */\n  placeholder: PropTypes.string,\n\n  /** Indicator for disabled status */\n  disabled: PropTypes.bool,\n\n  /** Minimum height according by units of rows */\n  minRows: PropTypes.number,\n\n  /** Maximum height according by units of rows */\n  maxRows: PropTypes.number,\n\n  /** jss override object to customize the jss classes */\n  jss: PropTypes.oneOfType([PropTypes.shape(), PropTypes.func])\n};\nTextArea.displayName = 'TextArea';\nexport default TextArea;","map":{"version":3,"sources":["/Users/giladdekel/Workspace/Guesty/simple-app-archive/node_modules/@guestyci/foundation/esm/TextArea/TextArea.js"],"names":["_defineProperty","_objectWithoutProperties","_extends","React","PropTypes","cn","noop","TextareaAutosize","Col","createStyles","InputStyles","blueGray500","useStyles","theme","root","typography","primary","textArea","shared","placeholder","hover","focused","disabled","paddingTop","spacer","paddingBottom","minHeight","error","charCount","marginTop","color","name","TextArea","forwardRef","_ref","ref","value","onChange","className","maxLength","minRows","maxRows","jss","props","classes","length","createElement","concat","defaultProps","undefined","propTypes","string","func","number","bool","oneOfType","shape","displayName"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport noop from 'lodash/noop';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport Col from \"../Layout/Col\";\nimport createStyles from \"../createStyles\";\nimport InputStyles from \"../Input/styles\";\nimport { blueGray500 } from \"../theme/colors\";\nexport var useStyles = createStyles(function (theme) {\n  return {\n    root: _extends({}, theme.typography.primary),\n    textArea: _extends({}, InputStyles.shared(theme), {\n      '&::placeholder': InputStyles.placeholder(theme),\n      '&:hover': InputStyles.hover(theme),\n      '&:focus': InputStyles.focused(theme),\n      '&:disabled': InputStyles.disabled(theme),\n      paddingTop: theme.spacer(3),\n      paddingBottom: theme.spacer(3),\n      minHeight: '60px'\n    }),\n    error: InputStyles.error(theme),\n    charCount: {\n      marginTop: theme.spacer(1),\n      color: blueGray500\n    }\n  };\n}, {\n  name: 'TextArea'\n});\nvar TextArea = React.forwardRef(function TextArea(_ref, ref) {\n  var name = _ref.name,\n      value = _ref.value,\n      onChange = _ref.onChange,\n      disabled = _ref.disabled,\n      placeholder = _ref.placeholder,\n      className = _ref.className,\n      maxLength = _ref.maxLength,\n      minRows = _ref.minRows,\n      maxRows = _ref.maxRows,\n      error = _ref.error,\n      jss = _ref.jss,\n      props = _objectWithoutProperties(_ref, [\"name\", \"value\", \"onChange\", \"disabled\", \"placeholder\", \"className\", \"maxLength\", \"minRows\", \"maxRows\", \"error\", \"jss\"]);\n\n  var classes = useStyles({\n    jss: jss\n  });\n  var charCount = value.length;\n  return /*#__PURE__*/React.createElement(Col, {\n    className: cn(classes.root, className)\n  }, /*#__PURE__*/React.createElement(TextareaAutosize, _extends({\n    value: value,\n    onChange: onChange,\n    name: name,\n    placeholder: placeholder,\n    disabled: disabled,\n    maxRows: maxRows,\n    minRows: minRows,\n    maxLength: maxLength,\n    className: cn(classes.textArea, _defineProperty({}, classes.error, error)),\n    ref: ref\n  }, props)), maxLength && /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.charCount\n  }, \"\".concat(charCount, \"/\").concat(maxLength)));\n});\nTextArea.defaultProps = {\n  value: '',\n  name: '',\n  onChange: noop,\n  placeholder: '',\n  disabled: false,\n  minRows: 1,\n  maxRows: 5,\n  maxLength: undefined\n};\nTextArea.propTypes = {\n  /** text area value */\n  value: PropTypes.string,\n\n  /** text area name */\n  name: PropTypes.string,\n\n  /** On change trigger function to update on text change */\n  onChange: PropTypes.func,\n\n  /** The max length for the text area input */\n  maxLength: PropTypes.number,\n\n  /** TextArea Placeholder */\n  placeholder: PropTypes.string,\n\n  /** Indicator for disabled status */\n  disabled: PropTypes.bool,\n\n  /** Minimum height according by units of rows */\n  minRows: PropTypes.number,\n\n  /** Maximum height according by units of rows */\n  maxRows: PropTypes.number,\n\n  /** jss override object to customize the jss classes */\n  jss: PropTypes.oneOfType([PropTypes.shape(), PropTypes.func])\n};\nTextArea.displayName = 'TextArea';\nexport default TextArea;"]},"metadata":{},"sourceType":"module"}