"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.useStyles = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _createStyles = _interopRequireDefault(require("../createStyles"));

var useStyles = (0, _createStyles["default"])({
  root: {
    minWidth: function minWidth(props) {
      return props.width;
    },
    minHeight: function minHeight(props) {
      return props.height;
    }
  },
  fillInherit: {
    fill: 'currentColor'
  },
  fill: {
    fill: function fill(_ref) {
      var fillColor = _ref.fillColor;
      return fillColor || 'currentColor';
    }
  },
  stroke: {
    strokeColor: function strokeColor(_ref2) {
      var _strokeColor = _ref2.strokeColor;
      return _strokeColor || 'initial';
    }
  }
}, {
  name: 'Icon'
});
exports.useStyles = useStyles;
var Icon = (0, _react.forwardRef)(function Icon(_ref3, ref) {
  var _cn;

  var width = _ref3.width,
      height = _ref3.height,
      fillColor = _ref3.fillColor,
      strokeColor = _ref3.strokeColor,
      className = _ref3.className,
      svg = _ref3.svg,
      style = _ref3.style,
      jss = _ref3.jss;
  var classes = useStyles({
    width: width,
    height: height,
    fillColor: fillColor,
    strokeColor: strokeColor,
    jss: jss
  });
  var Svg = (0, _react.useMemo)(function () {
    return svg;
  }, [svg]);
  return /*#__PURE__*/_react["default"].createElement(Svg, {
    ref: ref,
    width: width,
    height: height,
    style: style,
    className: (0, _classnames["default"])(classes.root, (_cn = {}, (0, _defineProperty2["default"])(_cn, classes.fillInherit, !fillColor), (0, _defineProperty2["default"])(_cn, classes.fill, fillColor), (0, _defineProperty2["default"])(_cn, classes.stroke, strokeColor), _cn), className)
  });
});
Icon.defaultProps = {
  fillColor: '',
  strokeColor: '',
  width: 20,
  height: 20,
  className: '',
  style: {}
};
Icon.propTypes = {
  /** Icon width in pixels */
  width: _propTypes["default"].number,

  /** Icon height in pixels */
  height: _propTypes["default"].number,

  /** Icon fill color - see style guide colors for options */
  fillColor: _propTypes["default"].string,

  /** Icon stroke color - see style guide colors for options */
  strokeColor: _propTypes["default"].string,

  /** Class to add to the Icon component */
  className: _propTypes["default"].string,

  /** Style to add to Icon component */
  style: _propTypes["default"].shape(),

  /** The svg icon to render */
  svg: _propTypes["default"].oneOfType([_propTypes["default"].shape(), _propTypes["default"].func]).isRequired,

  /** jss override object to customize the jss classes */
  jss: _propTypes["default"].oneOfType([_propTypes["default"].shape(), _propTypes["default"].func])
}; // Hack for withInfo plugin

Icon.displayName = 'Icon';
var _default = Icon;
exports["default"] = _default;