"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _isNumber = _interopRequireDefault(require("lodash/isNumber"));

var _reactTextareaAutosize = _interopRequireDefault(require("react-textarea-autosize"));

var _noop = _interopRequireDefault(require("lodash/noop"));

var _InputLabel = _interopRequireDefault(require("../InputLabel/InputLabel"));

var _enums = require("../../enums/enums");

function _createSuper(Derived) { return function () { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var TextArea = /*#__PURE__*/function (_Component) {
  (0, _inherits2["default"])(TextArea, _Component);

  var _super = _createSuper(TextArea);

  function TextArea(props) {
    var _this;

    (0, _classCallCheck2["default"])(this, TextArea);
    _this = _super.call(this, props);

    _this._isValid = function (inputLength) {
      var maxLength = _this.props.maxLength;
      return !(0, _isNumber["default"])(maxLength) || maxLength - inputLength >= 0;
    };

    _this._calcCharCount = function (input) {
      var maxLength = _this.props.maxLength;

      if ((0, _isNumber["default"])(maxLength)) {
        return maxLength - input.length;
      }

      return undefined;
    };

    _this.handleInputChange = function (event) {
      var value = event.currentTarget.value;
      var _this$props = _this.props,
          id = _this$props.id,
          name = _this$props.name,
          onChange = _this$props.onChange;

      if (_this._isValid(value.length)) {
        _this.setState({
          charCount: _this._calcCharCount(value)
        });

        if (onChange) {
          onChange(value, id || name);
        }
      }
    };

    _this.getTheme = function (theme) {
      switch (theme) {
        case _enums.Theme.Light:
          return 'border-gray-lightest bg-white';

        case _enums.Theme.Dark:
          return 'bg-gray-lightest border-gray-light';

        case _enums.Theme.Yellow:
          return 'bg-yellow-light border-gray-light';

        default:
          return 'border-gray-lightest bg-white';
      }
    };

    _this.state = {
      charCount: props.maxLength
    };
    _this.textAreaRef = _react["default"].createRef();
    return _this;
  }

  (0, _createClass2["default"])(TextArea, [{
    key: "render",
    value: function render() {
      var charCount = this.state.charCount;
      var _this$props2 = this.props,
          value = _this$props2.value,
          maxLength = _this$props2.maxLength,
          containerStyle = _this$props2.containerStyle,
          tooltip = _this$props2.tooltip,
          label = _this$props2.label,
          disabled = _this$props2.disabled,
          className = _this$props2.className,
          rows = _this$props2.rows,
          maxRows = _this$props2.maxRows,
          theme = _this$props2.theme,
          containerClassName = _this$props2.containerClassName,
          autoFocus = _this$props2.autoFocus,
          required = _this$props2.required,
          placeholder = _this$props2.placeholder,
          props = (0, _objectWithoutProperties2["default"])(_this$props2, ["value", "maxLength", "containerStyle", "tooltip", "label", "disabled", "className", "rows", "maxRows", "theme", "containerClassName", "autoFocus", "required", "placeholder"]);
      var textAreaTheme = this.getTheme(theme);
      return /*#__PURE__*/_react["default"].createElement("div", {
        className: "d-flex-fill flex-column input-wrapper",
        "data-qa": "text-area"
      }, label && /*#__PURE__*/_react["default"].createElement(_InputLabel["default"], {
        label: label,
        tooltip: tooltip
      }), /*#__PURE__*/_react["default"].createElement("div", {
        className: (0, _classnames["default"])('d-flex-fill flex-start-center pos-relative border-gray-lighter b-1', containerClassName, textAreaTheme, {
          'bg-gray-lighter': disabled
        }),
        style: containerStyle
      }, /*#__PURE__*/_react["default"].createElement(_reactTextareaAutosize["default"], (0, _extends2["default"])({}, props, {
        placeholder: placeholder,
        autoFocus: autoFocus,
        ref: this.textAreaRef,
        maxRows: maxRows,
        rows: rows,
        value: value,
        disabled: disabled,
        maxLength: maxLength,
        onChange: this.handleInputChange,
        className: (0, _classnames["default"])('w-100 border-0 py-3 px-4 min-height-50 font-size-md text-black', textAreaTheme, className)
      })), (0, _isNumber["default"])(maxLength) && /*#__PURE__*/_react["default"].createElement("span", {
        className: "textarea-charcount font-size-md text-muted pos-absolute mr-2 right-0 bottom-0"
      }, charCount)));
    }
  }]);
  return TextArea;
}(_react.Component);

TextArea.defaultProps = {
  maxLength: null,
  value: undefined,
  onChange: _noop["default"],
  placeholder: '',
  label: null,
  tooltip: '',
  disabled: false,
  rows: 1,
  maxRows: 5,
  theme: _enums.Theme.Dark,
  containerClassName: '',
  autoFocus: false
};
TextArea.propTypes = {
  /** Controlled text area value */
  value: _propTypes["default"].string,

  /** On change trigger function to update on text change */
  onChange: _propTypes["default"].func,

  /** The max length for the text area input */
  maxLength: _propTypes["default"].number,

  /** TextArea Placeholder */
  placeholder: _propTypes["default"].string,

  /** A label to show on top of the input */
  label: _propTypes["default"].string,

  /** Add tooltip help icon and message - tooltip - String help message */
  tooltip: _propTypes["default"].string,

  /** Indicator for disabled status */
  disabled: _propTypes["default"].bool,

  /** Row number to set for the textarea */
  rows: _propTypes["default"].number,

  /** max number of rows for expandable text area */
  maxRows: _propTypes["default"].number,

  /** Define theme for text area - possible values = [Theme.Light, Theme.Dark, Theme.Yellow] */
  theme: _propTypes["default"].oneOf([_enums.Theme.Light, _enums.Theme.Dark, _enums.Theme.Yellow]),

  /** Container level class name */
  containerClassName: _propTypes["default"].string,

  /** Boolean to define if should be auto focused */
  autoFocus: _propTypes["default"].bool
};
var _default = TextArea;
exports["default"] = _default;