{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useRef, useState, useEffect } from 'react';\nimport isObject from 'lodash/isObject';\n\nfunction getDelay(delay, type) {\n  if (!delay) {\n    return;\n  }\n\n  if (isObject(delay)) {\n    return delay[type];\n  }\n\n  return delay;\n}\n/**\n * Use hover hook\n * Options:\n * @param delay = number or object { enter, exit }\n * @return [isHovering, hoverRef]\n */\n\n\nfunction useHover() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      delay = _ref.delay;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      isHovering = _useState2[0],\n      setIsHovering = _useState2[1];\n\n  var hoverRef = useRef(null);\n  var timeout = useRef({});\n\n  var onHoverLeave = function onHoverLeave() {\n    var d = getDelay(delay, 'exit');\n\n    if (d) {\n      clearTimeout(timeout.current.enter);\n      timeout.current.exit = setTimeout(function () {\n        return setIsHovering(false);\n      }, d);\n    } else {\n      setIsHovering(false);\n    }\n  };\n\n  var onHoverEnter = function onHoverEnter() {\n    var d = getDelay(delay, 'enter');\n\n    if (d) {\n      clearTimeout(timeout.current.exit);\n      timeout.current.enter = setTimeout(function () {\n        return setIsHovering(true);\n      }, d);\n    } else {\n      setIsHovering(true);\n    }\n  };\n\n  useEffect(function () {\n    var node = hoverRef.current;\n\n    if (node) {\n      node.addEventListener('mouseover', onHoverEnter);\n      node.addEventListener('mouseleave', onHoverLeave);\n      node.addEventListener('blur', onHoverLeave);\n      return function () {\n        node.removeEventListener('mouseover', onHoverEnter);\n        node.removeEventListener('mouseleave', onHoverLeave);\n        node.removeEventListener('blur', onHoverLeave);\n      };\n    }\n  }, [hoverRef.current]);\n  return [isHovering, hoverRef];\n}\n\nexport default useHover;","map":{"version":3,"sources":["/Users/giladdekel/Workspace/Guesty/onboarding-blog/onboarding-blog-app/onboarding-frontend-main/simple-app-archive/node_modules/@guestyci/foundation/esm/useHover/useHover.js"],"names":["_slicedToArray","useRef","useState","useEffect","isObject","getDelay","delay","type","useHover","_ref","arguments","length","undefined","_useState","_useState2","isHovering","setIsHovering","hoverRef","timeout","onHoverLeave","d","clearTimeout","current","enter","exit","setTimeout","onHoverEnter","node","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useRef, useState, useEffect } from 'react';\nimport isObject from 'lodash/isObject';\n\nfunction getDelay(delay, type) {\n  if (!delay) {\n    return;\n  }\n\n  if (isObject(delay)) {\n    return delay[type];\n  }\n\n  return delay;\n}\n/**\n * Use hover hook\n * Options:\n * @param delay = number or object { enter, exit }\n * @return [isHovering, hoverRef]\n */\n\n\nfunction useHover() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      delay = _ref.delay;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      isHovering = _useState2[0],\n      setIsHovering = _useState2[1];\n\n  var hoverRef = useRef(null);\n  var timeout = useRef({});\n\n  var onHoverLeave = function onHoverLeave() {\n    var d = getDelay(delay, 'exit');\n\n    if (d) {\n      clearTimeout(timeout.current.enter);\n      timeout.current.exit = setTimeout(function () {\n        return setIsHovering(false);\n      }, d);\n    } else {\n      setIsHovering(false);\n    }\n  };\n\n  var onHoverEnter = function onHoverEnter() {\n    var d = getDelay(delay, 'enter');\n\n    if (d) {\n      clearTimeout(timeout.current.exit);\n      timeout.current.enter = setTimeout(function () {\n        return setIsHovering(true);\n      }, d);\n    } else {\n      setIsHovering(true);\n    }\n  };\n\n  useEffect(function () {\n    var node = hoverRef.current;\n\n    if (node) {\n      node.addEventListener('mouseover', onHoverEnter);\n      node.addEventListener('mouseleave', onHoverLeave);\n      node.addEventListener('blur', onHoverLeave);\n      return function () {\n        node.removeEventListener('mouseover', onHoverEnter);\n        node.removeEventListener('mouseleave', onHoverLeave);\n        node.removeEventListener('blur', onHoverLeave);\n      };\n    }\n  }, [hoverRef.current]);\n  return [isHovering, hoverRef];\n}\n\nexport default useHover;"]},"metadata":{},"sourceType":"module"}