import _extends from "@babel/runtime/helpers/esm/extends";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import React, { useEffect, useRef } from 'react';
import PropTypes from 'prop-types';
import cn from 'classnames';
import CSSTransition from "../CSSTransition";
import createStyles from "../createStyles";
export var useStyles = createStyles(function (theme) {
  return {
    appear: {
      visibility: 'hidden'
    },
    fadeEnter: {
      opacity: 0
    },
    fadeEnterActive: {
      opacity: 1,
      transition: function transition(_ref) {
        var duration = _ref.duration;
        return theme.transition.create('opacity', {
          duration: duration
        });
      }
    },
    fadeEnterDone: {
      opacity: 1
    },
    fadeExit: {
      opacity: 1
    },
    fadeExitActive: {
      opacity: 0,
      transition: function transition(_ref2) {
        var duration = _ref2.duration;
        return theme.transition.create('opacity', {
          duration: duration
        });
      }
    },
    fadeExitDone: {
      opacity: 0
    }
  };
}, {
  name: 'Fade'
});
var Fade = React.forwardRef(function Fade(_ref3, ref) {
  var className = _ref3.className,
      timeout = _ref3.timeout,
      children = _ref3.children,
      Tag = _ref3.tag,
      show = _ref3.show,
      duration = _ref3.duration,
      jss = _ref3.jss,
      rest = _objectWithoutProperties(_ref3, ["className", "timeout", "children", "tag", "show", "duration", "jss"]);

  var classes = useStyles({
    duration: duration,
    jss: jss
  });
  var appearCache = useRef(false);
  useEffect(function () {
    if (show) {
      appearCache.current = true;
    }
  }, [show]);
  return /*#__PURE__*/React.createElement(CSSTransition, _extends({
    ref: ref,
    show: !!show,
    animation: {
      enter: classes.fadeEnter,
      enterActive: classes.fadeEnterActive,
      enterDone: classes.fadeEnterDone,
      exit: classes.fadeExit,
      exitDone: classes.fadeExitDone,
      exitActive: classes.fadeExitActive
    },
    className: cn(className, _defineProperty({}, classes.appear, !show && !appearCache.current)),
    timeout: timeout
  }, rest), /*#__PURE__*/React.createElement(Tag, null, children));
});
Fade.defaultProps = {
  className: '',
  tag: 'span',
  children: null
};
Fade.propTypes = {
  /** Bool whether or not to show (fade in) children */
  show: PropTypes.bool,

  /** Additional class for root level */
  className: PropTypes.string,

  /** children to render for the fade component */
  children: PropTypes.oneOfType([PropTypes.node, PropTypes.arrayOf(PropTypes.node)]),

  /** Timeout for fade animation */
  timeout: PropTypes.oneOfType([PropTypes.shape({
    enter: PropTypes.number.isRequired,
    exit: PropTypes.number.isRequired
  }), PropTypes.number]),

  /** Tag to render for fade */
  tag: PropTypes.string,

  /** customize the transition duration */
  duration: PropTypes.number,

  /** jss override object to customize the jss classes */
  jss: PropTypes.oneOfType([PropTypes.shape(), PropTypes.func])
};
Fade.displayName = 'Fade';
export default Fade;