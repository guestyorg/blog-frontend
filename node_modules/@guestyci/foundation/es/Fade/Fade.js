import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
import React, { useEffect, useRef } from 'react';
import PropTypes from 'prop-types';
import cn from 'classnames';
import CSSTransition from "../CSSTransition";
import createStyles from "../createStyles";
export const useStyles = createStyles(theme => ({
  appear: {
    visibility: 'hidden'
  },
  fadeEnter: {
    opacity: 0
  },
  fadeEnterActive: {
    opacity: 1,
    transition: ({
      duration
    }) => theme.transition.create('opacity', {
      duration
    })
  },
  fadeEnterDone: {
    opacity: 1
  },
  fadeExit: {
    opacity: 1
  },
  fadeExitActive: {
    opacity: 0,
    transition: ({
      duration
    }) => theme.transition.create('opacity', {
      duration
    })
  },
  fadeExitDone: {
    opacity: 0
  }
}), {
  name: 'Fade'
});
const Fade = React.forwardRef(function Fade(_ref, ref) {
  let {
    className,
    timeout,
    children,
    tag: Tag,
    show,
    duration,
    jss
  } = _ref,
      rest = _objectWithoutPropertiesLoose(_ref, ["className", "timeout", "children", "tag", "show", "duration", "jss"]);

  const classes = useStyles({
    duration,
    jss
  });
  const appearCache = useRef(false);
  useEffect(() => {
    if (show) {
      appearCache.current = true;
    }
  }, [show]);
  return /*#__PURE__*/React.createElement(CSSTransition, _extends({
    ref: ref,
    show: !!show,
    animation: {
      enter: classes.fadeEnter,
      enterActive: classes.fadeEnterActive,
      enterDone: classes.fadeEnterDone,
      exit: classes.fadeExit,
      exitDone: classes.fadeExitDone,
      exitActive: classes.fadeExitActive
    },
    className: cn(className, {
      [classes.appear]: !show && !appearCache.current
    }),
    timeout: timeout
  }, rest), /*#__PURE__*/React.createElement(Tag, null, children));
});
Fade.defaultProps = {
  className: '',
  tag: 'span',
  children: null
};
Fade.propTypes = {
  /** Bool whether or not to show (fade in) children */
  show: PropTypes.bool,

  /** Additional class for root level */
  className: PropTypes.string,

  /** children to render for the fade component */
  children: PropTypes.oneOfType([PropTypes.node, PropTypes.arrayOf(PropTypes.node)]),

  /** Timeout for fade animation */
  timeout: PropTypes.oneOfType([PropTypes.shape({
    enter: PropTypes.number.isRequired,
    exit: PropTypes.number.isRequired
  }), PropTypes.number]),

  /** Tag to render for fade */
  tag: PropTypes.string,

  /** customize the transition duration */
  duration: PropTypes.number,

  /** jss override object to customize the jss classes */
  jss: PropTypes.oneOfType([PropTypes.shape(), PropTypes.func])
};
Fade.displayName = 'Fade';
export default Fade;