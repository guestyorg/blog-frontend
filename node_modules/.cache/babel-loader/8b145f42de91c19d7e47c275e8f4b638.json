{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport { AnchorDirectionType, OriginDirectionType } from \"../../enums\";\nimport Portal from \"../Portal\";\nimport createStyles from \"../../createStyles\";\nimport CSSTransition from \"../../CSSTransition\";\nvar anchorTransformOriginMapper = {\n  start: 'left',\n  end: 'right',\n  center: 'center'\n};\nvar originTransformOriginMapper = {\n  top: 'bottom',\n  bottom: 'top',\n  left: 'right',\n  right: 'left'\n};\nvar useStyles = createStyles(function (theme) {\n  return {\n    backdrop: {\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      zIndex: theme.zIndex.dropdown - 1,\n      position: 'fixed',\n      touchAction: 'none',\n      backgroundColor: 'transparent'\n    },\n    innerContent: {\n      position: 'absolute',\n      zIndex: theme.zIndex.dropdown\n    }\n  };\n}, {\n  name: 'PortalAutoPosition'\n});\nexport var getPortalWidth = function getPortalWidth(isFit, contentOffsetWidth, parentWidth) {\n  if (!isFit) {\n    return;\n  }\n\n  return contentOffsetWidth >= parentWidth ? contentOffsetWidth : parentWidth;\n};\n\nvar isInYViewPort = function isInYViewPort(offsetHeight) {\n  return offsetHeight < window.scrollY + (window.innerHeight || document.documentElement.clientHeight);\n};\n\nvar getWindowWidth = function getWindowWidth() {\n  return window.innerWidth || document.documentElement.clientWidth;\n};\n\nexport var getTransformDirection = function getTransformDirection(direction, anchor) {\n  var isVertical = direction === OriginDirectionType.Left || direction === OriginDirectionType.Right;\n  var transformX = anchorTransformOriginMapper[anchor];\n  var originDirection = originTransformOriginMapper[direction];\n  var anchorDirection = transformX;\n\n  if (isVertical) {\n    switch (anchor) {\n      case AnchorDirectionType.End:\n        anchorDirection = OriginDirectionType.Bottom;\n        break;\n\n      case AnchorDirectionType.Start:\n        anchorDirection = OriginDirectionType.Top;\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  return \"\".concat(originDirection, \" \").concat(anchorDirection);\n};\nexport var getAnchorDirection = function getAnchorDirection(anchorDirection, originDirection, anchorPosition, contentPosition) {\n  var anchorLeft = anchorPosition.left,\n      anchorTop = anchorPosition.top,\n      anchorWidth = anchorPosition.width,\n      anchorOffsetWidth = anchorPosition.offsetWidth,\n      anchorOffsetHeight = anchorPosition.offsetHeight;\n  var contentOffsetHeight = contentPosition.offsetHeight,\n      contentOffsetWidth = contentPosition.offsetWidth;\n  var direction = anchorDirection;\n  var isVertical = originDirection === OriginDirectionType.Left || originDirection === OriginDirectionType.Right;\n  var position = {};\n  var inRightViewPort = anchorLeft + contentOffsetWidth <= getWindowWidth();\n  var inLeftViewPort = anchorLeft - (anchorOffsetWidth + contentOffsetWidth) >= 0;\n\n  if (!inLeftViewPort && inRightViewPort) {\n    direction = AnchorDirectionType.Start;\n  }\n\n  if (inLeftViewPort && !inRightViewPort) {\n    direction = AnchorDirectionType.End;\n  }\n\n  if (!inLeftViewPort && !inRightViewPort) {\n    direction = AnchorDirectionType.Center;\n  }\n\n  switch (direction) {\n    case AnchorDirectionType.Center:\n      position = {\n        left: anchorLeft + anchorOffsetWidth / 2 - contentOffsetWidth / 2\n      };\n\n      if (isVertical) {\n        position = {\n          top: anchorTop + anchorOffsetHeight / 2 + window.scrollY - contentOffsetHeight / 2\n        };\n      }\n\n      break;\n\n    case AnchorDirectionType.End:\n      position = {\n        left: anchorLeft - (contentOffsetWidth - anchorWidth)\n      };\n\n      if (isVertical) {\n        position = {\n          top: anchorTop + anchorOffsetHeight - contentOffsetHeight + window.scrollY\n        };\n      }\n\n      break;\n\n    case AnchorDirectionType.Start:\n      position = {\n        left: anchorLeft\n      };\n\n      if (isVertical) {\n        position = {\n          top: anchorTop + window.scrollY\n        };\n      }\n\n      break;\n\n    default:\n      break;\n  }\n\n  return {\n    anchorDirection: direction,\n    position: position\n  };\n};\nexport var getOriginDirection = function getOriginDirection(originDirection, anchorPosition, contentPosition) {\n  var offset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  var anchorTop = anchorPosition.top,\n      anchorLeft = anchorPosition.left,\n      anchorOffsetHeight = anchorPosition.offsetHeight,\n      anchorOffsetWidth = anchorPosition.offsetWidth;\n  var contentOffsetHeight = contentPosition.offsetHeight,\n      contentOffsetWidth = contentPosition.offsetWidth;\n  var direction = originDirection;\n  var position = {};\n  var inRightViewPort = offset + anchorLeft + anchorOffsetWidth + contentOffsetWidth < getWindowWidth();\n  var inLeftViewPort = anchorLeft - (anchorOffsetWidth + contentOffsetWidth) > offset;\n  var inTopViewPort = anchorTop - contentOffsetHeight > offset;\n  var inBottomViewPort = isInYViewPort(offset + anchorTop + window.scrollY + contentOffsetHeight);\n\n  if (direction === OriginDirectionType.Top && !inTopViewPort) {\n    direction = OriginDirectionType.Bottom;\n  } else if (direction === OriginDirectionType.Bottom && !inBottomViewPort) {\n    direction = OriginDirectionType.Top;\n  }\n\n  if (direction === OriginDirectionType.Left && !inLeftViewPort) {\n    direction = OriginDirectionType.Right;\n  } else if (direction === OriginDirectionType.Right && !inRightViewPort) {\n    direction = OriginDirectionType.Left;\n  }\n\n  switch (direction) {\n    case OriginDirectionType.Left:\n      position = {\n        left: anchorLeft - contentOffsetWidth - offset\n      };\n      break;\n\n    case OriginDirectionType.Right:\n      position = {\n        left: anchorLeft + anchorOffsetWidth + offset\n      };\n      break;\n\n    case OriginDirectionType.Top:\n      position = {\n        top: anchorTop - contentOffsetHeight + window.scrollY - offset\n      };\n      break;\n\n    case OriginDirectionType.Bottom:\n      position = {\n        top: anchorTop + anchorOffsetHeight + window.scrollY + offset\n      };\n      break;\n\n    default:\n      break;\n  }\n\n  return {\n    position: position,\n    originDirection: direction\n  };\n};\nvar Popper = React.forwardRef(function PortalAutoPosition(_ref, ref) {\n  var anchor = _ref.anchor,\n      _ref$anchorDirection = _ref.anchorDirection,\n      anchorDirection = _ref$anchorDirection === void 0 ? AnchorDirectionType.Start : _ref$anchorDirection,\n      backdrop = _ref.backdrop,\n      children = _ref.children,\n      _ref$transition = _ref.transition,\n      transition = _ref$transition === void 0 ? 'no-transition' : _ref$transition,\n      trigger = _ref.trigger,\n      _ref$offset = _ref.offset,\n      offset = _ref$offset === void 0 ? 0 : _ref$offset,\n      _ref$originDirection = _ref.originDirection,\n      originDirection = _ref$originDirection === void 0 ? OriginDirectionType.Top : _ref$originDirection,\n      _ref$width = _ref.width,\n      width = _ref$width === void 0 ? undefined : _ref$width,\n      _ref$fitAnchor = _ref.fitAnchor,\n      fitAnchor = _ref$fitAnchor === void 0 ? false : _ref$fitAnchor,\n      props = _objectWithoutProperties(_ref, [\"anchor\", \"anchorDirection\", \"backdrop\", \"children\", \"transition\", \"trigger\", \"offset\", \"originDirection\", \"width\", \"fitAnchor\"]);\n\n  var classes = useStyles();\n  var contentRef = useRef(null);\n  var controlRef = useRef();\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      position = _useState2[0],\n      setPosition = _useState2[1];\n\n  var getContentPositionStyles = useCallback(function () {\n    var contentEl = contentRef.current;\n    var anchorEl = anchor.current;\n\n    var _ref2 = anchorEl || {},\n        offsetHeight = _ref2.offsetHeight,\n        offsetWidth = _ref2.offsetWidth;\n\n    var _anchorEl$getBounding = anchorEl.getBoundingClientRect(),\n        left = _anchorEl$getBounding.left,\n        anchorWidth = _anchorEl$getBounding.width,\n        top = _anchorEl$getBounding.top;\n\n    var contentWidth = contentEl.width,\n        contentOffsetWidth = contentEl.offsetWidth,\n        contentOffsetHeight = contentEl.offsetHeight;\n\n    var _getOriginDirection = getOriginDirection(originDirection, {\n      top: top,\n      left: left,\n      offsetWidth: offsetWidth,\n      offsetHeight: offsetHeight\n    }, {\n      width: contentWidth,\n      offsetHeight: contentOffsetHeight,\n      offsetWidth: contentOffsetWidth\n    }, offset),\n        originPosition = _getOriginDirection.position,\n        calculatedOriginDirection = _getOriginDirection.originDirection;\n\n    var _getAnchorDirection = getAnchorDirection(anchorDirection, calculatedOriginDirection, {\n      left: left,\n      width: anchorWidth,\n      offsetWidth: offsetWidth,\n      top: top,\n      offsetHeight: offsetHeight\n    }, {\n      width: contentWidth,\n      offsetHeight: contentOffsetHeight,\n      offsetWidth: contentOffsetWidth\n    }),\n        anchorLeftPosition = _getAnchorDirection.position,\n        calculatedAnchorDirection = _getAnchorDirection.anchorDirection;\n\n    var transformOrigin = getTransformDirection(calculatedOriginDirection, calculatedAnchorDirection);\n    controlRef.current = {\n      contentOffsetHeight: contentOffsetHeight,\n      anchorOffsetHeight: offsetHeight\n    };\n    return _extends({}, anchorLeftPosition, {}, originPosition, {\n      transformOrigin: transformOrigin,\n      width: width || getPortalWidth(fitAnchor, contentOffsetWidth, anchorWidth)\n    });\n  }, [contentRef, anchor, anchorDirection, originDirection, offset, fitAnchor]);\n  useEffect(function () {\n    if (!trigger) {\n      return undefined;\n    }\n\n    if ((anchor === null || anchor === void 0 ? void 0 : anchor.current) && (contentRef === null || contentRef === void 0 ? void 0 : contentRef.current)) {\n      setPosition(getContentPositionStyles());\n    }\n  }, [trigger]);\n  useEffect(function () {\n    if (!trigger || !(contentRef === null || contentRef === void 0 ? void 0 : contentRef.current)) {\n      return undefined;\n    }\n\n    var currentContentOffsetHeight = contentRef.current.offsetHeight;\n    var currentAnchorOffsetHeight = anchor.current.offsetHeight;\n    var _controlRef$current = controlRef.current,\n        contentOffsetHeight = _controlRef$current.contentOffsetHeight,\n        anchorOffsetHeight = _controlRef$current.anchorOffsetHeight;\n\n    if (currentContentOffsetHeight !== contentOffsetHeight || currentAnchorOffsetHeight !== anchorOffsetHeight) {\n      setPosition(getContentPositionStyles());\n    }\n  }, [children, anchor]);\n  React.useEffect(function () {\n    var handleResize = debounce(function () {\n      if ((anchor === null || anchor === void 0 ? void 0 : anchor.current) && (contentRef === null || contentRef === void 0 ? void 0 : contentRef.current)) {\n        setPosition(getContentPositionStyles());\n      }\n    }, 250);\n    window.addEventListener('resize', handleResize);\n    return function () {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(Portal, {\n    ref: ref\n  }, trigger && backdrop && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.backdrop\n  }), /*#__PURE__*/React.createElement(CSSTransition, _extends({}, props, {\n    unmountOnExit: true,\n    animation: transition,\n    show: trigger,\n    style: _extends({}, position)\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.innerContent,\n    ref: contentRef\n  }, children)));\n});\nPopper.propTypes = {\n  /** Anchor element to append to */\n  anchor: PropTypes.oneOfType([PropTypes.node, PropTypes.func, PropTypes.shape()]),\n\n  /** Animation for css transition  - defaults to none */\n  transition: PropTypes.oneOfType([PropTypes.shape({\n    appear: PropTypes.string,\n    appearActive: PropTypes.string,\n    enter: PropTypes.string.isRequired,\n    enterActive: PropTypes.string.isRequired,\n    enterDone: PropTypes.string,\n    exitActive: PropTypes.string.isRequired,\n    exit: PropTypes.string.isRequired,\n    exitDone: PropTypes.string\n  }), PropTypes.string]),\n\n  /** Child node for the auto position to reference and wrap */\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.arrayOf(PropTypes.node)]).isRequired,\n\n  /** Indicator when to re calculate the position */\n  trigger: PropTypes.bool,\n\n  /** Additional class to root level */\n  className: PropTypes.string,\n\n  /** Additional style to root level */\n  style: PropTypes.shape(),\n\n  /** Direction to open the content relative to anchor (center, end ,start) */\n  anchorDirection: PropTypes.oneOf([AnchorDirectionType.Center, AnchorDirectionType.Start, AnchorDirectionType.End]),\n\n  /** Direction to open the content relative to origin (Top bottom left right) */\n  originDirection: PropTypes.oneOf([OriginDirectionType.Top, OriginDirectionType.Bottom, OriginDirectionType.Left, OriginDirectionType.Right]),\n\n  /** Allow backdrop when showing portal */\n  backdrop: PropTypes.bool,\n\n  /** offset to locate the content from anchor */\n  offset: PropTypes.number,\n\n  /** Boolean flag to fix content width with anchor width - by default fits content width */\n  fitAnchor: PropTypes.bool,\n\n  /** Set content width manually - by default it will resolve to the larger of the input width or the content width */\n  width: PropTypes.number\n};\nPopper.displayName = 'Popper';\nexport default Popper;","map":{"version":3,"sources":["/Users/giladdekel/Workspace/Guesty/onboarding-blog/onboarding-blog-app/onboarding-frontend-main/simple-app-archive/node_modules/@guestyci/foundation/esm/legacy/Popper/Popper.js"],"names":["_extends","_slicedToArray","_objectWithoutProperties","React","useCallback","useEffect","useRef","useState","PropTypes","debounce","AnchorDirectionType","OriginDirectionType","Portal","createStyles","CSSTransition","anchorTransformOriginMapper","start","end","center","originTransformOriginMapper","top","bottom","left","right","useStyles","theme","backdrop","zIndex","dropdown","position","touchAction","backgroundColor","innerContent","name","getPortalWidth","isFit","contentOffsetWidth","parentWidth","isInYViewPort","offsetHeight","window","scrollY","innerHeight","document","documentElement","clientHeight","getWindowWidth","innerWidth","clientWidth","getTransformDirection","direction","anchor","isVertical","Left","Right","transformX","originDirection","anchorDirection","End","Bottom","Start","Top","concat","getAnchorDirection","anchorPosition","contentPosition","anchorLeft","anchorTop","anchorWidth","width","anchorOffsetWidth","offsetWidth","anchorOffsetHeight","contentOffsetHeight","inRightViewPort","inLeftViewPort","Center","getOriginDirection","offset","arguments","length","undefined","inTopViewPort","inBottomViewPort","Popper","forwardRef","PortalAutoPosition","_ref","ref","_ref$anchorDirection","children","_ref$transition","transition","trigger","_ref$offset","_ref$originDirection","_ref$width","_ref$fitAnchor","fitAnchor","props","classes","contentRef","controlRef","_useState","_useState2","setPosition","getContentPositionStyles","contentEl","current","anchorEl","_ref2","_anchorEl$getBounding","getBoundingClientRect","contentWidth","_getOriginDirection","originPosition","calculatedOriginDirection","_getAnchorDirection","anchorLeftPosition","calculatedAnchorDirection","transformOrigin","currentContentOffsetHeight","currentAnchorOffsetHeight","_controlRef$current","handleResize","addEventListener","removeEventListener","createElement","className","unmountOnExit","animation","show","style","propTypes","oneOfType","node","func","shape","appear","string","appearActive","enter","isRequired","enterActive","enterDone","exitActive","exit","exitDone","arrayOf","bool","oneOf","number","displayName"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport { AnchorDirectionType, OriginDirectionType } from \"../../enums\";\nimport Portal from \"../Portal\";\nimport createStyles from \"../../createStyles\";\nimport CSSTransition from \"../../CSSTransition\";\nvar anchorTransformOriginMapper = {\n  start: 'left',\n  end: 'right',\n  center: 'center'\n};\nvar originTransformOriginMapper = {\n  top: 'bottom',\n  bottom: 'top',\n  left: 'right',\n  right: 'left'\n};\nvar useStyles = createStyles(function (theme) {\n  return {\n    backdrop: {\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      zIndex: theme.zIndex.dropdown - 1,\n      position: 'fixed',\n      touchAction: 'none',\n      backgroundColor: 'transparent'\n    },\n    innerContent: {\n      position: 'absolute',\n      zIndex: theme.zIndex.dropdown\n    }\n  };\n}, {\n  name: 'PortalAutoPosition'\n});\nexport var getPortalWidth = function getPortalWidth(isFit, contentOffsetWidth, parentWidth) {\n  if (!isFit) {\n    return;\n  }\n\n  return contentOffsetWidth >= parentWidth ? contentOffsetWidth : parentWidth;\n};\n\nvar isInYViewPort = function isInYViewPort(offsetHeight) {\n  return offsetHeight < window.scrollY + (window.innerHeight || document.documentElement.clientHeight);\n};\n\nvar getWindowWidth = function getWindowWidth() {\n  return window.innerWidth || document.documentElement.clientWidth;\n};\n\nexport var getTransformDirection = function getTransformDirection(direction, anchor) {\n  var isVertical = direction === OriginDirectionType.Left || direction === OriginDirectionType.Right;\n  var transformX = anchorTransformOriginMapper[anchor];\n  var originDirection = originTransformOriginMapper[direction];\n  var anchorDirection = transformX;\n\n  if (isVertical) {\n    switch (anchor) {\n      case AnchorDirectionType.End:\n        anchorDirection = OriginDirectionType.Bottom;\n        break;\n\n      case AnchorDirectionType.Start:\n        anchorDirection = OriginDirectionType.Top;\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  return \"\".concat(originDirection, \" \").concat(anchorDirection);\n};\nexport var getAnchorDirection = function getAnchorDirection(anchorDirection, originDirection, anchorPosition, contentPosition) {\n  var anchorLeft = anchorPosition.left,\n      anchorTop = anchorPosition.top,\n      anchorWidth = anchorPosition.width,\n      anchorOffsetWidth = anchorPosition.offsetWidth,\n      anchorOffsetHeight = anchorPosition.offsetHeight;\n  var contentOffsetHeight = contentPosition.offsetHeight,\n      contentOffsetWidth = contentPosition.offsetWidth;\n  var direction = anchorDirection;\n  var isVertical = originDirection === OriginDirectionType.Left || originDirection === OriginDirectionType.Right;\n  var position = {};\n  var inRightViewPort = anchorLeft + contentOffsetWidth <= getWindowWidth();\n  var inLeftViewPort = anchorLeft - (anchorOffsetWidth + contentOffsetWidth) >= 0;\n\n  if (!inLeftViewPort && inRightViewPort) {\n    direction = AnchorDirectionType.Start;\n  }\n\n  if (inLeftViewPort && !inRightViewPort) {\n    direction = AnchorDirectionType.End;\n  }\n\n  if (!inLeftViewPort && !inRightViewPort) {\n    direction = AnchorDirectionType.Center;\n  }\n\n  switch (direction) {\n    case AnchorDirectionType.Center:\n      position = {\n        left: anchorLeft + anchorOffsetWidth / 2 - contentOffsetWidth / 2\n      };\n\n      if (isVertical) {\n        position = {\n          top: anchorTop + anchorOffsetHeight / 2 + window.scrollY - contentOffsetHeight / 2\n        };\n      }\n\n      break;\n\n    case AnchorDirectionType.End:\n      position = {\n        left: anchorLeft - (contentOffsetWidth - anchorWidth)\n      };\n\n      if (isVertical) {\n        position = {\n          top: anchorTop + anchorOffsetHeight - contentOffsetHeight + window.scrollY\n        };\n      }\n\n      break;\n\n    case AnchorDirectionType.Start:\n      position = {\n        left: anchorLeft\n      };\n\n      if (isVertical) {\n        position = {\n          top: anchorTop + window.scrollY\n        };\n      }\n\n      break;\n\n    default:\n      break;\n  }\n\n  return {\n    anchorDirection: direction,\n    position: position\n  };\n};\nexport var getOriginDirection = function getOriginDirection(originDirection, anchorPosition, contentPosition) {\n  var offset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  var anchorTop = anchorPosition.top,\n      anchorLeft = anchorPosition.left,\n      anchorOffsetHeight = anchorPosition.offsetHeight,\n      anchorOffsetWidth = anchorPosition.offsetWidth;\n  var contentOffsetHeight = contentPosition.offsetHeight,\n      contentOffsetWidth = contentPosition.offsetWidth;\n  var direction = originDirection;\n  var position = {};\n  var inRightViewPort = offset + anchorLeft + anchorOffsetWidth + contentOffsetWidth < getWindowWidth();\n  var inLeftViewPort = anchorLeft - (anchorOffsetWidth + contentOffsetWidth) > offset;\n  var inTopViewPort = anchorTop - contentOffsetHeight > offset;\n  var inBottomViewPort = isInYViewPort(offset + anchorTop + window.scrollY + contentOffsetHeight);\n\n  if (direction === OriginDirectionType.Top && !inTopViewPort) {\n    direction = OriginDirectionType.Bottom;\n  } else if (direction === OriginDirectionType.Bottom && !inBottomViewPort) {\n    direction = OriginDirectionType.Top;\n  }\n\n  if (direction === OriginDirectionType.Left && !inLeftViewPort) {\n    direction = OriginDirectionType.Right;\n  } else if (direction === OriginDirectionType.Right && !inRightViewPort) {\n    direction = OriginDirectionType.Left;\n  }\n\n  switch (direction) {\n    case OriginDirectionType.Left:\n      position = {\n        left: anchorLeft - contentOffsetWidth - offset\n      };\n      break;\n\n    case OriginDirectionType.Right:\n      position = {\n        left: anchorLeft + anchorOffsetWidth + offset\n      };\n      break;\n\n    case OriginDirectionType.Top:\n      position = {\n        top: anchorTop - contentOffsetHeight + window.scrollY - offset\n      };\n      break;\n\n    case OriginDirectionType.Bottom:\n      position = {\n        top: anchorTop + anchorOffsetHeight + window.scrollY + offset\n      };\n      break;\n\n    default:\n      break;\n  }\n\n  return {\n    position: position,\n    originDirection: direction\n  };\n};\nvar Popper = React.forwardRef(function PortalAutoPosition(_ref, ref) {\n  var anchor = _ref.anchor,\n      _ref$anchorDirection = _ref.anchorDirection,\n      anchorDirection = _ref$anchorDirection === void 0 ? AnchorDirectionType.Start : _ref$anchorDirection,\n      backdrop = _ref.backdrop,\n      children = _ref.children,\n      _ref$transition = _ref.transition,\n      transition = _ref$transition === void 0 ? 'no-transition' : _ref$transition,\n      trigger = _ref.trigger,\n      _ref$offset = _ref.offset,\n      offset = _ref$offset === void 0 ? 0 : _ref$offset,\n      _ref$originDirection = _ref.originDirection,\n      originDirection = _ref$originDirection === void 0 ? OriginDirectionType.Top : _ref$originDirection,\n      _ref$width = _ref.width,\n      width = _ref$width === void 0 ? undefined : _ref$width,\n      _ref$fitAnchor = _ref.fitAnchor,\n      fitAnchor = _ref$fitAnchor === void 0 ? false : _ref$fitAnchor,\n      props = _objectWithoutProperties(_ref, [\"anchor\", \"anchorDirection\", \"backdrop\", \"children\", \"transition\", \"trigger\", \"offset\", \"originDirection\", \"width\", \"fitAnchor\"]);\n\n  var classes = useStyles();\n  var contentRef = useRef(null);\n  var controlRef = useRef();\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      position = _useState2[0],\n      setPosition = _useState2[1];\n\n  var getContentPositionStyles = useCallback(function () {\n    var contentEl = contentRef.current;\n    var anchorEl = anchor.current;\n\n    var _ref2 = anchorEl || {},\n        offsetHeight = _ref2.offsetHeight,\n        offsetWidth = _ref2.offsetWidth;\n\n    var _anchorEl$getBounding = anchorEl.getBoundingClientRect(),\n        left = _anchorEl$getBounding.left,\n        anchorWidth = _anchorEl$getBounding.width,\n        top = _anchorEl$getBounding.top;\n\n    var contentWidth = contentEl.width,\n        contentOffsetWidth = contentEl.offsetWidth,\n        contentOffsetHeight = contentEl.offsetHeight;\n\n    var _getOriginDirection = getOriginDirection(originDirection, {\n      top: top,\n      left: left,\n      offsetWidth: offsetWidth,\n      offsetHeight: offsetHeight\n    }, {\n      width: contentWidth,\n      offsetHeight: contentOffsetHeight,\n      offsetWidth: contentOffsetWidth\n    }, offset),\n        originPosition = _getOriginDirection.position,\n        calculatedOriginDirection = _getOriginDirection.originDirection;\n\n    var _getAnchorDirection = getAnchorDirection(anchorDirection, calculatedOriginDirection, {\n      left: left,\n      width: anchorWidth,\n      offsetWidth: offsetWidth,\n      top: top,\n      offsetHeight: offsetHeight\n    }, {\n      width: contentWidth,\n      offsetHeight: contentOffsetHeight,\n      offsetWidth: contentOffsetWidth\n    }),\n        anchorLeftPosition = _getAnchorDirection.position,\n        calculatedAnchorDirection = _getAnchorDirection.anchorDirection;\n\n    var transformOrigin = getTransformDirection(calculatedOriginDirection, calculatedAnchorDirection);\n    controlRef.current = {\n      contentOffsetHeight: contentOffsetHeight,\n      anchorOffsetHeight: offsetHeight\n    };\n    return _extends({}, anchorLeftPosition, {}, originPosition, {\n      transformOrigin: transformOrigin,\n      width: width || getPortalWidth(fitAnchor, contentOffsetWidth, anchorWidth)\n    });\n  }, [contentRef, anchor, anchorDirection, originDirection, offset, fitAnchor]);\n  useEffect(function () {\n    if (!trigger) {\n      return undefined;\n    }\n\n    if ((anchor === null || anchor === void 0 ? void 0 : anchor.current) && (contentRef === null || contentRef === void 0 ? void 0 : contentRef.current)) {\n      setPosition(getContentPositionStyles());\n    }\n  }, [trigger]);\n  useEffect(function () {\n    if (!trigger || !(contentRef === null || contentRef === void 0 ? void 0 : contentRef.current)) {\n      return undefined;\n    }\n\n    var currentContentOffsetHeight = contentRef.current.offsetHeight;\n    var currentAnchorOffsetHeight = anchor.current.offsetHeight;\n    var _controlRef$current = controlRef.current,\n        contentOffsetHeight = _controlRef$current.contentOffsetHeight,\n        anchorOffsetHeight = _controlRef$current.anchorOffsetHeight;\n\n    if (currentContentOffsetHeight !== contentOffsetHeight || currentAnchorOffsetHeight !== anchorOffsetHeight) {\n      setPosition(getContentPositionStyles());\n    }\n  }, [children, anchor]);\n  React.useEffect(function () {\n    var handleResize = debounce(function () {\n      if ((anchor === null || anchor === void 0 ? void 0 : anchor.current) && (contentRef === null || contentRef === void 0 ? void 0 : contentRef.current)) {\n        setPosition(getContentPositionStyles());\n      }\n    }, 250);\n    window.addEventListener('resize', handleResize);\n    return function () {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(Portal, {\n    ref: ref\n  }, trigger && backdrop && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.backdrop\n  }), /*#__PURE__*/React.createElement(CSSTransition, _extends({}, props, {\n    unmountOnExit: true,\n    animation: transition,\n    show: trigger,\n    style: _extends({}, position)\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.innerContent,\n    ref: contentRef\n  }, children)));\n});\nPopper.propTypes = {\n  /** Anchor element to append to */\n  anchor: PropTypes.oneOfType([PropTypes.node, PropTypes.func, PropTypes.shape()]),\n\n  /** Animation for css transition  - defaults to none */\n  transition: PropTypes.oneOfType([PropTypes.shape({\n    appear: PropTypes.string,\n    appearActive: PropTypes.string,\n    enter: PropTypes.string.isRequired,\n    enterActive: PropTypes.string.isRequired,\n    enterDone: PropTypes.string,\n    exitActive: PropTypes.string.isRequired,\n    exit: PropTypes.string.isRequired,\n    exitDone: PropTypes.string\n  }), PropTypes.string]),\n\n  /** Child node for the auto position to reference and wrap */\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.arrayOf(PropTypes.node)]).isRequired,\n\n  /** Indicator when to re calculate the position */\n  trigger: PropTypes.bool,\n\n  /** Additional class to root level */\n  className: PropTypes.string,\n\n  /** Additional style to root level */\n  style: PropTypes.shape(),\n\n  /** Direction to open the content relative to anchor (center, end ,start) */\n  anchorDirection: PropTypes.oneOf([AnchorDirectionType.Center, AnchorDirectionType.Start, AnchorDirectionType.End]),\n\n  /** Direction to open the content relative to origin (Top bottom left right) */\n  originDirection: PropTypes.oneOf([OriginDirectionType.Top, OriginDirectionType.Bottom, OriginDirectionType.Left, OriginDirectionType.Right]),\n\n  /** Allow backdrop when showing portal */\n  backdrop: PropTypes.bool,\n\n  /** offset to locate the content from anchor */\n  offset: PropTypes.number,\n\n  /** Boolean flag to fix content width with anchor width - by default fits content width */\n  fitAnchor: PropTypes.bool,\n\n  /** Set content width manually - by default it will resolve to the larger of the input width or the content width */\n  width: PropTypes.number\n};\nPopper.displayName = 'Popper';\nexport default Popper;"]},"metadata":{},"sourceType":"module"}