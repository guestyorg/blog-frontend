import React from 'react';
import PropTypes from 'prop-types';
import cn from 'classnames';
import noop from 'lodash/noop';
import Menu from "../Menu/Menu";
import MenuAutoPosition from "../Menu/MenuAutoPosition";
import InfiniteScroll from "../InfiniteScroll/InfiniteScroll";
import { AnchorDirectionType } from "../../enums/enums";
import ClickOutsideListener from "../../ClickOutsideListener";
import TextField from "../TextField/TextField";

const DropdownMenu = ({
  topBar,
  isCollapsed,
  className,
  isEmptyState,
  children,
  onDismiss,
  onLoadMore,
  isFetching,
  pageCount,
  menuClassName,
  scrollHeight,
  currentPage,
  anchorDirection,
  emptyStateComponent
}) => /*#__PURE__*/React.createElement(MenuAutoPosition, {
  className: cn('nowrap', className),
  trigger: !isCollapsed,
  anchorDirection: anchorDirection,
  "data-qa": "dropdown-menu"
}, /*#__PURE__*/React.createElement(ClickOutsideListener, {
  onClickOutside: onDismiss
}, /*#__PURE__*/React.createElement(Menu, {
  className: "bg-white overflow-y-hidden",
  dense: true,
  collapse: isCollapsed
}, topBar, /*#__PURE__*/React.createElement(Menu, {
  dense: true,
  maxHeight: scrollHeight,
  className: menuClassName
}, /*#__PURE__*/React.createElement(InfiniteScroll, {
  className: "p-4",
  onLoadMore: onLoadMore,
  pageCount: pageCount,
  height: scrollHeight,
  offset: 0,
  initialPage: currentPage,
  isFetching: isFetching
}, children, isEmptyState && /*#__PURE__*/React.createElement(TextField, {
  className: "options-empty"
}, emptyStateComponent))))));

DropdownMenu.defaultProps = {
  topBar: null,
  isCollapsed: true,
  className: '',
  isEmptyState: false,
  onLoadMore: noop,
  isFetching: false,
  pageCount: 0,
  currentPage: 0,
  scrollHeight: 210,
  anchorDirection: AnchorDirectionType.Start
};
DropdownMenu.propTypes = {
  topBar: PropTypes.node,
  isEmptyState: PropTypes.bool,
  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,
  isCollapsed: PropTypes.bool,
  className: PropTypes.string,
  onLoadMore: PropTypes.func,
  onDismiss: PropTypes.func.isRequired,
  pageCount: PropTypes.number,
  isFetching: PropTypes.bool,
  currentPage: PropTypes.number,
  menuClassName: PropTypes.string,
  scrollHeight: PropTypes.oneOf([PropTypes.number, PropTypes.string]),
  anchorDirection: PropTypes.oneOf([AnchorDirectionType.Center, AnchorDirectionType.Left, AnchorDirectionType.Right, AnchorDirectionType.StartCenter, AnchorDirectionType.EndCenter, AnchorDirectionType.Start, AnchorDirectionType.End])
};
export default DropdownMenu;