import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";

function _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

import React, { PureComponent } from 'react';
import cn from 'classnames';
import PropTypes from 'prop-types';
import moment from 'moment';
import IconButton from "../IconButton/IconButton";

var BtnRight = function BtnRight(props) {
  return /*#__PURE__*/React.createElement("svg", props, /*#__PURE__*/React.createElement("path", {
    d: "M.849.146L5.854 5.15a.497.497 0 0 1 0 .703L.85 10.86a.497.497 0 1 1-.703-.703l4.653-4.654L.146.849A.497.497 0 1 1 .849.146z"
  }));
};

BtnRight.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 6 11.0054388"
};

var BtnLeft = function BtnLeft(props) {
  return /*#__PURE__*/React.createElement("svg", props, /*#__PURE__*/React.createElement("path", {
    d: "M5.854.146a.497.497 0 0 1 0 .703L1.201 5.503l4.653 4.654a.497.497 0 1 1-.703.703L.146 5.854a.497.497 0 0 1 0-.703L5.15.146a.497.497 0 0 1 .703 0z"
  }));
};

BtnLeft.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 6 11.0054388"
};

var CalendarNavBar = /*#__PURE__*/function (_PureComponent) {
  _inherits(CalendarNavBar, _PureComponent);

  var _super = _createSuper(CalendarNavBar);

  function CalendarNavBar() {
    var _this;

    _classCallCheck(this, CalendarNavBar);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _this.handlePrevClick = function () {
      var onPreviousClick = _this.props.onPreviousClick;

      if (onPreviousClick) {
        onPreviousClick();
      }
    };

    _this.handleNextClick = function () {
      var onNextClick = _this.props.onNextClick;

      if (onNextClick) {
        onNextClick();
      }
    };

    return _this;
  }

  _createClass(CalendarNavBar, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          className = _this$props.className,
          style = _this$props.style,
          previousMonth = _this$props.previousMonth;
      return /*#__PURE__*/React.createElement("div", {
        className: cn('flex-center d-flex-fill', className),
        style: style,
        "data-qa": "calendar-nav-bar"
      }, /*#__PURE__*/React.createElement(IconButton, {
        onClick: this.handlePrevClick,
        className: "p-2",
        svg: BtnLeft,
        iconWidth: 6,
        iconHeight: 11
      }), /*#__PURE__*/React.createElement("div", {
        className: "font-size-lg mt-1 text-center min-width-115 text-muted mx-2"
      }, moment(previousMonth).add(1, 'M').format('MMMM YYYY')), /*#__PURE__*/React.createElement(IconButton, {
        onClick: this.handleNextClick,
        className: "p-2",
        svg: BtnRight,
        iconWidth: 6,
        iconHeight: 11
      }));
    }
  }]);

  return CalendarNavBar;
}(PureComponent);

CalendarNavBar.defaultProps = {
  className: '',
  style: {},
  onPreviousClick: null,
  previousMonth: undefined,
  onNextClick: null
};
CalendarNavBar.propTypes = {
  onPreviousClick: PropTypes.func,
  onNextClick: PropTypes.func,
  className: PropTypes.string,
  style: PropTypes.shape(),
  previousMonth: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date), PropTypes.number])
};
export default CalendarNavBar;