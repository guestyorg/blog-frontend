import _extends from "@babel/runtime/helpers/esm/extends";
import React, { PureComponent } from 'react';
import cn from 'classnames';
import PropTypes from 'prop-types';
import Step from "./Step";
import SvgIcon from "../SvgIcon/SvgIcon";

var IcoApproved = function IcoApproved(props) {
  return /*#__PURE__*/React.createElement("svg", props, /*#__PURE__*/React.createElement("path", {
    d: "M10.5 0C4.701 0 0 4.701 0 10.5S4.701 21 10.5 21 21 16.299 21 10.5 16.299 0 10.5 0zm4.633 6.752l-5.537 8.202c-.018.026-.044.04-.065.063-.012.014-.018.032-.032.045-.01.01-.024.013-.035.021a.597.597 0 0 1-.123.075.595.595 0 0 1-.096.04.608.608 0 0 1-.121.018.617.617 0 0 1-.12 0 .602.602 0 0 1-.103-.025.596.596 0 0 1-.13-.054c-.013-.007-.027-.008-.04-.016-.016-.01-.024-.028-.04-.04-.023-.019-.051-.03-.072-.052l-2.693-2.931c-.233-.252-.218-.648.034-.88s.647-.219.88.033l2.163 2.354 5.098-7.55a.625.625 0 0 1 .864-.168c.284.192.36.581.168.865z"
  }));
};

IcoApproved.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 21 21"
};
import StepDivider from "./StepDivider";

class Steps extends PureComponent {
  constructor(_props) {
    super(_props);

    this.getInitialStepArray = props => [...new Array(props.stepsCount)].map((v, i) => i + 1);

    this.state = {
      steps: this.getInitialStepArray(_props)
    };
  }

  componentDidUpdate(prevProps) {
    const {
      stepsCount
    } = this.props;

    if (prevProps.stepsCount !== stepsCount) {
      this.setStepArray(this.props);
    }
  }

  setStepArray(props) {
    this.setState({
      steps: this.getInitialStepArray(props)
    });
  }

  render() {
    const {
      className,
      style,
      current,
      color
    } = this.props;
    const {
      steps
    } = this.state;
    return /*#__PURE__*/React.createElement("div", {
      className: cn('flex-center', className),
      style: _extends({}, style),
      "data-qa": "steps"
    }, steps.map((item, index, array) => array.length - 1 !== index ? [index + 1 < current ? /*#__PURE__*/React.createElement(SvgIcon, {
      key: `ic-${index + 1}`,
      svg: IcoApproved,
      height: 21,
      width: 21,
      color: color
    }) : /*#__PURE__*/React.createElement(Step, {
      color: color,
      active: current >= index + 1,
      key: `s-${index + 1}`
    }, item), /*#__PURE__*/React.createElement(StepDivider, {
      color: color,
      key: `sd-${index + 1}`
    })] : /*#__PURE__*/React.createElement(Step, {
      color: color,
      active: current >= index + 1,
      key: `s-${index + 1}`
    }, item)));
  }

}

Steps.defaultProps = {
  current: 1,
  color: 'blue'
};
Steps.propTypes = {
  /** Array of steps as a property */
  stepsCount: PropTypes.number.isRequired,

  /** color for step */
  color: PropTypes.oneOf(['blue', 'gray', 'green']),

  /** Current shows current selected step */
  current: PropTypes.number
};
export default Steps;