{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useEffect, useRef, useState } from 'react';\n\nfunction useOverflowBoundaries() {\n  var overflowRef = useRef();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOverflowed = _useState2[0],\n      setOverflowed = _useState2[1];\n\n  useEffect(function () {\n    var _overflowRef$current = overflowRef.current,\n        current = _overflowRef$current === void 0 ? {} : _overflowRef$current;\n    var clientWidth = current.clientWidth,\n        scrollWidth = current.scrollWidth;\n    setOverflowed(scrollWidth > clientWidth);\n  }, [overflowRef.current]);\n  return [isOverflowed, overflowRef];\n}\n\nexport default useOverflowBoundaries;","map":{"version":3,"sources":["/Users/giladdekel/Workspace/Guesty/simple-app-archive/node_modules/@guestyci/foundation/esm/useOverflowBoundaries/useOverflowBoundaries.js"],"names":["_slicedToArray","useEffect","useRef","useState","useOverflowBoundaries","overflowRef","_useState","_useState2","isOverflowed","setOverflowed","_overflowRef$current","current","clientWidth","scrollWidth"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,0CAA3B;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;;AAEA,SAASC,qBAAT,GAAiC;AAC/B,MAAIC,WAAW,GAAGH,MAAM,EAAxB;;AAEA,MAAII,SAAS,GAAGH,QAAQ,EAAxB;AAAA,MACII,UAAU,GAAGP,cAAc,CAACM,SAAD,EAAY,CAAZ,CAD/B;AAAA,MAEIE,YAAY,GAAGD,UAAU,CAAC,CAAD,CAF7B;AAAA,MAGIE,aAAa,GAAGF,UAAU,CAAC,CAAD,CAH9B;;AAKAN,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAIS,oBAAoB,GAAGL,WAAW,CAACM,OAAvC;AAAA,QACIA,OAAO,GAAGD,oBAAoB,KAAK,KAAK,CAA9B,GAAkC,EAAlC,GAAuCA,oBADrD;AAEA,QAAIE,WAAW,GAAGD,OAAO,CAACC,WAA1B;AAAA,QACIC,WAAW,GAAGF,OAAO,CAACE,WAD1B;AAEAJ,IAAAA,aAAa,CAACI,WAAW,GAAGD,WAAf,CAAb;AACD,GANQ,EAMN,CAACP,WAAW,CAACM,OAAb,CANM,CAAT;AAOA,SAAO,CAACH,YAAD,EAAeH,WAAf,CAAP;AACD;;AAED,eAAeD,qBAAf","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useEffect, useRef, useState } from 'react';\n\nfunction useOverflowBoundaries() {\n  var overflowRef = useRef();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOverflowed = _useState2[0],\n      setOverflowed = _useState2[1];\n\n  useEffect(function () {\n    var _overflowRef$current = overflowRef.current,\n        current = _overflowRef$current === void 0 ? {} : _overflowRef$current;\n    var clientWidth = current.clientWidth,\n        scrollWidth = current.scrollWidth;\n    setOverflowed(scrollWidth > clientWidth);\n  }, [overflowRef.current]);\n  return [isOverflowed, overflowRef];\n}\n\nexport default useOverflowBoundaries;"]},"metadata":{},"sourceType":"module"}