"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _noop = _interopRequireDefault(require("lodash/noop"));

var _IconButton = _interopRequireDefault(require("../IconButton/IconButton"));

var _RaisedButton = _interopRequireDefault(require("../RaisedButton/RaisedButton"));

var _FlatButton = _interopRequireDefault(require("../FlatButton/FlatButton"));

var _Link = _interopRequireDefault(require("../Link/Link"));

var _SvgIcon = _interopRequireDefault(require("../SvgIcon/SvgIcon"));

var _createStyles = _interopRequireDefault(require("../../createStyles"));

var BtnGoTo = function BtnGoTo(props) {
  return /*#__PURE__*/_react["default"].createElement("svg", props, /*#__PURE__*/_react["default"].createElement("path", {
    d: "M15.059 9.47v5.118c0 .26-.21.47-.47.47H1.411a.47.47 0 0 1-.47-.47V1.412c0-.26.21-.47.47-.47h5.117a.47.47 0 0 0 0-.942H1.412C.632 0 0 .632 0 1.412v13.176C0 15.368.632 16 1.412 16h13.176c.78 0 1.412-.632 1.412-1.412V9.471a.47.47 0 0 0-.941 0z"
  }), /*#__PURE__*/_react["default"].createElement("path", {
    d: "M15.99.382c-.002-.014-.007-.026-.01-.039l-.016-.05c-.006-.015-.015-.028-.022-.041-.007-.014-.013-.028-.022-.041a.482.482 0 0 0-.048-.06c-.015-.016-.019-.018-.023-.022a.465.465 0 0 0-.06-.049c-.013-.009-.027-.015-.04-.022-.014-.007-.028-.016-.042-.022-.017-.007-.034-.01-.05-.015l-.039-.012A.47.47 0 0 0 15.525 0h-4.73a.475.475 0 0 0 0 .95h3.585L8.61 6.72a.474.474 0 0 0 .67.67l5.77-5.77v3.584a.475.475 0 0 0 .95 0V.474a.528.528 0 0 0-.01-.092z"
  }));
};

BtnGoTo.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 16 16"
};

var BtnEdit = function BtnEdit(props) {
  return /*#__PURE__*/_react["default"].createElement("svg", props, /*#__PURE__*/_react["default"].createElement("path", {
    d: "M15 3.044c.002-.59-.391-1.336-1.05-1.996C13.08.182 11.864-.36 11.221.28L1.589 9.917c-.296.294-.763 1.73-1.388 4.27L0 15l.814-.202c2.539-.629 3.976-1.096 4.271-1.388l9.633-9.638c.128-.127.282-.357.282-.728zm-3.093-2.027c.127-.043.69.111 1.328.747.634.635.791 1.194.77 1.291l-.285.284-2.066-2.067.253-.255zm-.966.972l2.063 2.065-7.58 7.585L3.36 9.574l7.58-7.585zM1.39 13.607c.358-1.37.762-2.725.929-2.99l.326-.326 2.065 2.066-.311.312c-.236.16-1.617.572-3.009.938z"
  }));
};

BtnEdit.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 15 15"
};
var useStyles = (0, _createStyles["default"])(function (theme) {
  return {
    title: (0, _extends2["default"])({}, theme.typography.h3, {
      color: theme.palette.title,
      '&::first-letter': {
        textTransform: 'uppercase'
      }
    }),
    innerWrapper: {
      '&::before': {
        content: '""',
        width: '100%',
        height: '100%',
        display: 'block',
        background: 'white',
        position: 'absolute',
        opacity: 0.7
      }
    }
  };
}, {
  name: 'Card'
});

var Card = function Card(_ref) {
  var children = _ref.children,
      editComponent = _ref.editComponent,
      className = _ref.className,
      title = _ref.title,
      noPadding = _ref.noPadding,
      editable = _ref.editable,
      disableEdit = _ref.disableEdit,
      link = _ref.link,
      headerRightComponent = _ref.headerRightComponent,
      status = _ref.status,
      disableSave = _ref.disableSave,
      saveBtnText = _ref.saveBtnText,
      onSave = _ref.onSave,
      onStatusChange = _ref.onStatusChange,
      onCancel = _ref.onCancel;
  var classes = useStyles();
  var handleOnSave = (0, _react.useCallback)(function () {
    onSave();
    onStatusChange('loading');
  });
  var toggleEdit = (0, _react.useCallback)(function () {
    var currentMode = status === 'edit' || status === 'loading' ? 'view' : 'edit';
    onStatusChange(currentMode);
  });
  var handleOnCancel = (0, _react.useCallback)(function () {
    onCancel();
    toggleEdit();
  });
  var editMode = status === 'edit' || status === 'loading';
  var isLoading = status === 'loading';
  return /*#__PURE__*/_react["default"].createElement("div", {
    className: "card-component bg-white pb-6",
    "data-qa": "card"
  }, /*#__PURE__*/_react["default"].createElement("div", {
    className: "px-9"
  }, /*#__PURE__*/_react["default"].createElement("div", {
    className: (0, _classnames["default"])('bb d-flex align-items-center justify-content-between height-75', {
      'mb-6': !noPadding
    })
  }, /*#__PURE__*/_react["default"].createElement("div", {
    className: classes.title
  }, title), /*#__PURE__*/_react["default"].createElement("div", {
    className: "d-flex align-items-center"
  }, editable && !editMode && /*#__PURE__*/_react["default"].createElement(_IconButton["default"], {
    svg: BtnEdit,
    onClick: toggleEdit,
    disabled: disableEdit,
    color: "gray-dark",
    width: 16,
    iconWidth: 16,
    height: 16,
    iconHeight: 16
  }), link && !editMode && /*#__PURE__*/_react["default"].createElement(_Link["default"], {
    href: link,
    className: "ml-2",
    width: 16,
    height: 16,
    color: "gray-dark"
  }, /*#__PURE__*/_react["default"].createElement(_SvgIcon["default"], {
    svg: BtnGoTo,
    noFill: true,
    width: 16,
    height: 16
  })), editable && editMode && /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, /*#__PURE__*/_react["default"].createElement(_FlatButton["default"], {
    className: "mr-2",
    onClick: handleOnCancel
  }, "Cancel"), /*#__PURE__*/_react["default"].createElement(_RaisedButton["default"], {
    onClick: handleOnSave,
    isLoading: isLoading,
    disabled: disableSave
  }, saveBtnText)), headerRightComponent && headerRightComponent))), /*#__PURE__*/_react["default"].createElement("div", {
    className: (0, _classnames["default"])('bg-white card-wrapper', {
      'px-9': !noPadding
    }, className)
  }, /*#__PURE__*/_react["default"].createElement("div", {
    className: (0, _classnames["default"])('w-100 h-100 pos-relative', (0, _defineProperty2["default"])({}, "".concat(classes.innerWrapper), isLoading))
  }, !editMode ? children : editComponent)));
};

Card.defaultProps = {
  editable: false,
  noPadding: false,
  disableEdit: false,
  disableSave: false,
  children: null,
  editComponent: null,
  className: null,
  title: '',
  link: null,
  headerRightComponent: null,
  onSave: _noop["default"],
  onStatusChange: _noop["default"],
  onCancel: _noop["default"],
  status: 'view',
  saveBtnText: 'Save'
};
Card.propTypes = {
  /** editable card, will display edit button & edit children */
  editable: _propTypes["default"].bool,

  /** no left, right and bottom padding - add in className */
  noPadding: _propTypes["default"].bool,

  /** disable edit button on view mode */
  disableEdit: _propTypes["default"].bool,

  /** disable edit button on edit mode (when values are invalid) */
  disableSave: _propTypes["default"].bool,

  /** children will be displayed in view mode */
  children: _propTypes["default"].node,

  /** children will be displayed in edit mode */
  editComponent: _propTypes["default"].node,

  /** Additional class to add to the card wrapper */
  className: _propTypes["default"].string,

  /** Card title */
  title: _propTypes["default"].string,

  /** Card link */
  link: _propTypes["default"].string,

  /** Save button text */
  saveBtnText: _propTypes["default"].string,

  /** On Save function */
  onSave: _propTypes["default"].func,

  /** On Save function */
  onCancel: _propTypes["default"].func,

  /** Will update the parent component with the card mode
   * (will be called onSave and when cancel is clicked) */
  onStatusChange: _propTypes["default"].func,

  /** Add custom buttons to title */
  headerRightComponent: _propTypes["default"].node,

  /** Card mode  */
  status: _propTypes["default"].oneOf(['edit', 'view', 'loading'])
};
var _default = Card;
exports["default"] = _default;