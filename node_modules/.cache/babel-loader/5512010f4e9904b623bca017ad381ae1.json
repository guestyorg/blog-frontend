{"ast":null,"code":"export var NGNIX_BASE = '/apps';\nexport function serializeUrl(_ref) {\n  var _ref$baseUrl = _ref.baseUrl,\n      baseUrl = _ref$baseUrl === void 0 ? '' : _ref$baseUrl,\n      alias = _ref.alias,\n      _ref$locationPath = _ref.locationPath,\n      locationPath = _ref$locationPath === void 0 ? '' : _ref$locationPath;\n  var appUrlPath = \"\".concat(alias || baseUrl).concat(locationPath);\n  return appUrlPath.replace(NGNIX_BASE, '');\n}\nexport function postInnerAppRouteChange(location, search) {\n  window.parent.postMessage({\n    action: 'INNER_APP_ROUTE_CHANGE',\n    payload: {\n      location: location,\n      search: search\n    }\n  }, '*');\n}\nexport function pushError(errorMessage) {\n  window.parent.postMessage({\n    action: 'INNER_APP_ERROR',\n    payload: errorMessage\n  }, '*');\n}\nexport function postRouteChangeOutOfApp(location, search) {\n  window.parent.postMessage({\n    action: 'ROUTE_CHANGE_OUT_OF_APP',\n    payload: {\n      location: location,\n      search: search\n    }\n  }, '*');\n}\nexport function shouldPostBaseUrl(baseUrl, alias) {\n  try {\n    if (!baseUrl) {\n      return false;\n    }\n\n    var serializedBaseUrl = serializeUrl({\n      baseUrl: baseUrl,\n      alias: alias\n    });\n    var location = window.parent.location.pathname;\n    return !location.includes(serializedBaseUrl);\n  } catch (error) {\n    console.error('No window found!');\n    return false;\n  }\n}\nexport function init(pathname) {\n  var search = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var location = serializeUrl({\n    locationPath: pathname\n  });\n  postInnerAppRouteChange(location, search);\n}\nexport var listener = function listener(history) {\n  var baseUrl = history.baseUrl,\n      alias = history.alias,\n      isFragment = history.isFragment;\n\n  if (shouldPostBaseUrl(baseUrl, alias) && isFragment) {\n    init(baseUrl);\n  }\n\n  return history.listen(function (location, action) {\n    if (action === 'PUSH' || action === 'REPLACE') {\n      var locationPath = location.pathname,\n          search = location.search;\n      var path = serializeUrl({\n        baseUrl: baseUrl,\n        alias: alias,\n        locationPath: locationPath\n      });\n\n      if (history.isFragment) {\n        postInnerAppRouteChange(path, search);\n      }\n    }\n  });\n};","map":{"version":3,"sources":["/Users/giladdekel/Workspace/Guesty/onboarding-blog/onboarding-blog-app/onboarding-frontend-main/simple-app-archive/node_modules/@guestyci/history/esm/routerListener/routeListener.js"],"names":["NGNIX_BASE","serializeUrl","_ref","_ref$baseUrl","baseUrl","alias","_ref$locationPath","locationPath","appUrlPath","concat","replace","postInnerAppRouteChange","location","search","window","parent","postMessage","action","payload","pushError","errorMessage","postRouteChangeOutOfApp","shouldPostBaseUrl","serializedBaseUrl","pathname","includes","error","console","init","arguments","length","undefined","listener","history","isFragment","listen","path"],"mappings":"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","sourcesContent":["export var NGNIX_BASE = '/apps';\nexport function serializeUrl(_ref) {\n  var _ref$baseUrl = _ref.baseUrl,\n      baseUrl = _ref$baseUrl === void 0 ? '' : _ref$baseUrl,\n      alias = _ref.alias,\n      _ref$locationPath = _ref.locationPath,\n      locationPath = _ref$locationPath === void 0 ? '' : _ref$locationPath;\n  var appUrlPath = \"\".concat(alias || baseUrl).concat(locationPath);\n  return appUrlPath.replace(NGNIX_BASE, '');\n}\nexport function postInnerAppRouteChange(location, search) {\n  window.parent.postMessage({\n    action: 'INNER_APP_ROUTE_CHANGE',\n    payload: {\n      location: location,\n      search: search\n    }\n  }, '*');\n}\nexport function pushError(errorMessage) {\n  window.parent.postMessage({\n    action: 'INNER_APP_ERROR',\n    payload: errorMessage\n  }, '*');\n}\nexport function postRouteChangeOutOfApp(location, search) {\n  window.parent.postMessage({\n    action: 'ROUTE_CHANGE_OUT_OF_APP',\n    payload: {\n      location: location,\n      search: search\n    }\n  }, '*');\n}\nexport function shouldPostBaseUrl(baseUrl, alias) {\n  try {\n    if (!baseUrl) {\n      return false;\n    }\n\n    var serializedBaseUrl = serializeUrl({\n      baseUrl: baseUrl,\n      alias: alias\n    });\n    var location = window.parent.location.pathname;\n    return !location.includes(serializedBaseUrl);\n  } catch (error) {\n    console.error('No window found!');\n    return false;\n  }\n}\nexport function init(pathname) {\n  var search = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var location = serializeUrl({\n    locationPath: pathname\n  });\n  postInnerAppRouteChange(location, search);\n}\nexport var listener = function listener(history) {\n  var baseUrl = history.baseUrl,\n      alias = history.alias,\n      isFragment = history.isFragment;\n\n  if (shouldPostBaseUrl(baseUrl, alias) && isFragment) {\n    init(baseUrl);\n  }\n\n  return history.listen(function (location, action) {\n    if (action === 'PUSH' || action === 'REPLACE') {\n      var locationPath = location.pathname,\n          search = location.search;\n      var path = serializeUrl({\n        baseUrl: baseUrl,\n        alias: alias,\n        locationPath: locationPath\n      });\n\n      if (history.isFragment) {\n        postInnerAppRouteChange(path, search);\n      }\n    }\n  });\n};"]},"metadata":{},"sourceType":"module"}