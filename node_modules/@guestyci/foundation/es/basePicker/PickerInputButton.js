import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
import React from 'react';
import cn from 'classnames';
import PropTypes from 'prop-types';
import createStyles from "../createStyles";
import Icon from "../Icon";
import Button from "../Button";
export const useStyles = createStyles(theme => ({
  root: {
    height: '100%',
    width: 46,
    minWidth: 46,
    borderRadius: 0,
    transition: theme.transition.create(),
    fill: theme.palette.secondary.default
  },
  rightAligned: {
    borderLeft: `solid 1px ${theme.palette.border}`
  },
  leftAligned: {
    borderRight: `solid 1px ${theme.palette.border}`
  },
  active: {
    fill: theme.palette.primary.default
  }
}));
const PickerInputButton = React.forwardRef(function PickerInputButton(_ref, ref) {
  let {
    disabled,
    onClick,
    active,
    className,
    jss,
    svg,
    position = 'prefix'
  } = _ref,
      props = _objectWithoutPropertiesLoose(_ref, ["disabled", "onClick", "active", "className", "jss", "svg", "position"]);

  const classes = useStyles({
    jss
  });
  return /*#__PURE__*/React.createElement(Button, _extends({}, props, {
    component: "span",
    ref: ref,
    enableRipple: false,
    className: cn(classes.root, {
      [classes.rightAligned]: position === 'suffix',
      [classes.leftAligned]: position === 'prefix'
    }, className),
    disabled: disabled,
    size: "xs",
    onClick: onClick
  }), /*#__PURE__*/React.createElement(Icon, {
    svg: svg,
    className: cn({
      [classes.active]: active
    }, 'picker-button'),
    width: 19,
    height: 19
  }));
});
PickerInputButton.propTypes = {
  onClick: PropTypes.func,
  disabled: PropTypes.bool,
  className: PropTypes.string,
  active: PropTypes.bool,
  position: PropTypes.oneOf(['prefix', 'suffix']),
  jss: PropTypes.oneOfType([PropTypes.shape(), PropTypes.func])
};
PickerInputButton.displayName = 'PickerInputButton';
export default PickerInputButton;