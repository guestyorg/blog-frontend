import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
import React, { forwardRef } from 'react';
import PropTypes from 'prop-types';
import SvgIcon from "../SvgIcon/SvgIcon";
import S3Icon from "./S3Icon";
const Icon = forwardRef(function Icon(_ref, ref) {
  let {
    icon,
    svg
  } = _ref,
      props = _objectWithoutPropertiesLoose(_ref, ["icon", "svg"]);

  if (svg) {
    return /*#__PURE__*/React.createElement(SvgIcon, _extends({
      svg: svg
    }, props, {
      ref: ref
    }));
  }

  if (icon) {
    return /*#__PURE__*/React.createElement(S3Icon, _extends({
      icon: icon
    }, props));
  }

  return null;
});
Icon.defaultProps = {
  width: 20,
  height: 20,
  color: '',
  fillColor: '',
  strokeColor: '',
  className: '',
  style: {},
  noFill: false
};

const svgOrIconPropsCheck = props => {
  if (!props.icon && !props.svg) {
    return new Error(`One of 'icon' or 'svg' is required by 'Icon' component.`);
  }

  if (props.icon && typeof props.icon !== 'string') {
    return new Error(`Icon expects a string.`);
  }

  if (props.svg && typeof props.svg !== 'function' && typeof props.svg !== 'object') {
    return new Error(`Svg expects a function or an object.`);
  }
};

Icon.propTypes = {
  /** Icon width in pixels */
  width: PropTypes.number,

  /** Icon height in pixels */
  height: PropTypes.number,

  /** Icon fill color - see style guide colors for options - Deprecated use fillColor */
  color: PropTypes.string,

  /** Icon fill color - see style guide colors for options */
  fillColor: PropTypes.string,

  /** Icon stroke color - see style guide colors for options */
  strokeColor: PropTypes.string,

  /** Class to add to the Icon component */
  className: PropTypes.string,

  /** Style to add to Icon component */
  style: PropTypes.shape(),

  /** The string name of the Icon to use. Also possible to pass without the icon prop */
  icon: svgOrIconPropsCheck,

  /** The svg icon to render */
  svg: svgOrIconPropsCheck,

  /** boolean - decide whether to disable default fill color */
  noFill: PropTypes.bool
}; // Hack for withInfo plugin

Icon.displayName = 'Icon';
export default Icon;