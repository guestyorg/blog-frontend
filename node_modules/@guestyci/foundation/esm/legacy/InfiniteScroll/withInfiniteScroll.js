import _extends from "@babel/runtime/helpers/esm/extends";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";

function _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

import React, { Component } from 'react';
/**
 * Create a wrapper compose to support infinite scroll functionality
 * @param ComposedComponent
 * @returns {{Component}}
 */

function withInfiniteScroll(ComposedComponent) {
  var InfiniteScrollWrapper = /*#__PURE__*/function (_Component) {
    _inherits(InfiniteScrollWrapper, _Component);

    var _super = _createSuper(InfiniteScrollWrapper);

    function InfiniteScrollWrapper(props) {
      var _this;

      _classCallCheck(this, InfiniteScrollWrapper);

      _this = _super.call(this, props);

      _this.setCurrentPage = function (page) {
        _this.setState({
          page: page
        });
      };

      _this.incrementCurrentPage = function () {
        _this.setState(function (prevState) {
          return {
            page: prevState.page + 1
          };
        });
      };

      _this.initCurrentPage = function () {
        var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

        _this.setState({
          page: page
        });
      };

      _this.state = {
        page: props.initialPage || 0
      };
      return _this;
    }

    _createClass(InfiniteScrollWrapper, [{
      key: "render",
      value: function render() {
        var page = this.state.page;
        return /*#__PURE__*/React.createElement(ComposedComponent, _extends({}, this.props, {
          infiniteScrollCurrentPage: page,
          setInfiniteScrollCurrentPage: this.setCurrentPage,
          initInfiniteScrollCurrentPage: this.initCurrentPage,
          incrementInfiniteScrollCurrentPage: this.incrementCurrentPage,
          "data-qa": "infinite-scroll-wrapper"
        }));
      }
    }]);

    return InfiniteScrollWrapper;
  }(Component);

  return InfiniteScrollWrapper;
}

export default withInfiniteScroll;