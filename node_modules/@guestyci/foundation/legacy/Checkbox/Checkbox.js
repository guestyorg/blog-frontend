"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _noop = _interopRequireDefault(require("lodash/noop"));

var _reactJss = require("react-jss");

var _Row = _interopRequireDefault(require("../Row/Row"));

var _SvgIcon = _interopRequireDefault(require("../SvgIcon/SvgIcon"));

var BtnCheckboxIndeterminate = function BtnCheckboxIndeterminate(props) {
  return /*#__PURE__*/_react["default"].createElement("svg", props, /*#__PURE__*/_react["default"].createElement("g", {
    fillRule: "evenodd"
  }, /*#__PURE__*/_react["default"].createElement("rect", {
    width: "15",
    height: "15",
    rx: "2"
  }), /*#__PURE__*/_react["default"].createElement("rect", {
    width: "9",
    height: "1.5",
    x: "3",
    y: "6.75",
    fill: "#FFF",
    rx: ".75"
  })));
};

BtnCheckboxIndeterminate.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  width: "15",
  height: "15",
  viewBox: "0 0 15 15"
};

var BtnCheckboxOn = function BtnCheckboxOn(props) {
  return /*#__PURE__*/_react["default"].createElement("svg", props, /*#__PURE__*/_react["default"].createElement("g", {
    fillRule: "evenodd"
  }, /*#__PURE__*/_react["default"].createElement("rect", {
    width: "16",
    height: "16",
    rx: "2"
  }), /*#__PURE__*/_react["default"].createElement("path", {
    d: "M10.71 4.803L6.757 9.879 5.281 8.474a1.045 1.045 0 0 0-1.462.005 1.057 1.057 0 0 0 0 1.513l2.26 2.216c.193.189.46.292.735.292.248 0 .485-.082.671-.237l.072-.075 4.668-5.935c.381-.37.381-1.049-.043-1.465a1.086 1.086 0 0 0-1.392-.068l-.08.083z",
    fill: "#fff",
    fillRule: "nonzero"
  })));
};

BtnCheckboxOn.defaultProps = {
  viewBox: "0 0 16 16",
  xmlns: "http://www.w3.org/2000/svg"
};

var BtnCheckboxOff = function BtnCheckboxOff(props) {
  return /*#__PURE__*/_react["default"].createElement("svg", props, /*#__PURE__*/_react["default"].createElement("path", {
    d: "M12.5 15h-10A2.503 2.503 0 0 1 0 12.5v-10C0 1.122 1.122 0 2.5 0h10C13.879 0 15 1.122 15 2.5v10c0 1.379-1.121 2.5-2.5 2.5zM2.5 1C1.673 1 1 1.673 1 2.5v10c0 .827.673 1.5 1.5 1.5h10c.827 0 1.5-.673 1.5-1.5v-10c0-.827-.673-1.5-1.5-1.5h-10z"
  }));
};

BtnCheckboxOff.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 15 15"
};
var useStyles = (0, _reactJss.createUseStyles)({
  checkboxChildren: {
    marginTop: 2
  }
});

var Checkbox = function Checkbox(_ref) {
  var id = _ref.id,
      checked = _ref.checked,
      indeterminate = _ref.indeterminate,
      onChange = _ref.onChange,
      disabled = _ref.disabled,
      value = _ref.value,
      name = _ref.name,
      style = _ref.style,
      className = _ref.className,
      inputClassName = _ref.inputClassName,
      children = _ref.children,
      checkedIcon = _ref.checkedIcon,
      icon = _ref.icon,
      inputStyle = _ref.inputStyle;
  var classes = useStyles();
  var svgIcon = (0, _react.useMemo)(function () {
    if (indeterminate) return BtnCheckboxIndeterminate;
    return checked ? BtnCheckboxOn : BtnCheckboxOff;
  }, [checked, indeterminate]);
  var handleCheckboxClick = (0, _react.useCallback)(function (e) {
    e.stopPropagation();

    if (onChange && !disabled) {
      onChange(value, name || id);
    }
  }, [onChange, disabled, name, id, value]);
  return /*#__PURE__*/_react["default"].createElement(_Row["default"], {
    align: "center",
    spacing: "sm",
    className: (0, _classnames["default"])('fill-muted text-muted', 'transition-all', disabled ? 'disabled' : 'clickable', {
      'fill-hover-blue text-hover-blue': !disabled
    }, {
      'fill-blue text-blue': !disabled && checked
    }, className),
    style: style,
    onClick: handleCheckboxClick,
    "data-qa": "checkbox"
  }, /*#__PURE__*/_react["default"].createElement("input", {
    id: id,
    type: "checkbox",
    disabled: disabled,
    checked: checked,
    onChange: _noop["default"],
    className: (0, _classnames["default"])('d-none', 'pointer-events-none', inputClassName),
    style: inputStyle,
    name: name,
    value: value
  }), icon && checked ? checkedIcon : icon, !icon && /*#__PURE__*/_react["default"].createElement(_SvgIcon["default"], {
    svg: svgIcon,
    noFill: true,
    height: 15,
    width: 15
  }), children && /*#__PURE__*/_react["default"].createElement("div", {
    className: (0, _classnames["default"])('checkbox-children', classes.checkboxChildren)
  }, children));
};

Checkbox.defaultProps = {
  children: null,
  disabled: false,
  icon: null,
  checkedIcon: null,
  value: '',
  name: '',
  className: '',
  style: {},
  inputClassName: '',
  inputStyle: {},
  id: undefined,
  onChange: null,
  checked: false,
  indeterminate: false
};
Checkbox.propTypes = {
  /** Boolean flag used to set the checkbox as checked or not */
  checked: _propTypes["default"].bool,

  /** Boolean flag used to set the checkbox as indeterminate or not */
  indeterminate: _propTypes["default"].bool,

  /** Function to toggle the checkbox */
  onChange: _propTypes["default"].func,

  /** The children for the checkbox (string or html element) */
  children: _propTypes["default"].node,

  /** Boolean indicator to toggle disabled for the checkbox */
  disabled: _propTypes["default"].bool,

  /** React icon element for the custom icon */
  icon: _propTypes["default"].node,

  /** React icon element for the custom checked icon */
  checkedIcon: _propTypes["default"].node,

  /** The value to pass on checkbox click */
  value: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].number, _propTypes["default"].shape()]),

  /** Checkbox name */
  name: _propTypes["default"].string,

  /** Additional class to add to the checkbox */
  className: _propTypes["default"].string,

  /** Additional style to add to the checkbox */
  style: _propTypes["default"].shape(),

  /** Additional class to add to the checkbox input level */
  inputClassName: _propTypes["default"].string,

  /** Additional style to add to the checkbox input level */
  inputStyle: _propTypes["default"].shape(),

  /** The uuid for the checkbox */
  id: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].number])
};
var _default = Checkbox;
exports["default"] = _default;