"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.useStyles = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _createStyles = _interopRequireDefault(require("../createStyles"));

var _Button = _interopRequireDefault(require("../Button"));

var _colors = require("../theme/colors");

var useStyles = (0, _createStyles["default"])(function (theme) {
  return {
    root: {
      display: 'flex',
      justifyContent: 'flex-start',
      alignItems: 'center',
      width: '100%',
      padding: "0px ".concat(theme.spacer(4), "px"),
      transition: theme.transition.create('background-color'),
      '&:last-child': {
        marginBottom: '0 !important'
      }
    },
    focus: {
      '&:not([disabled])': {
        '&:focus': {
          backgroundColor: theme.palette.primary.background
        },
        '&.active': {
          backgroundColor: theme.palette.primary.background
        }
      }
    },
    hover: {
      '&:not([disabled]):hover': {
        borderRadius: 0,
        backgroundColor: theme.palette.primary.background
      }
    },
    height: {
      minHeight: 40
    },
    selected: {}
  };
}, {
  name: 'MenuItem'
});
exports.useStyles = useStyles;

var MenuItem = _react["default"].forwardRef(function MenuItem(_ref, ref) {
  var className = _ref.className,
      style = _ref.style,
      children = _ref.children,
      onClick = _ref.onClick,
      selected = _ref.selected,
      disabled = _ref.disabled,
      rippleColor = _ref.rippleColor,
      selectedClassName = _ref.selectedClassName,
      value = _ref.value,
      jss = _ref.jss,
      props = (0, _objectWithoutProperties2["default"])(_ref, ["className", "style", "children", "onClick", "selected", "disabled", "rippleColor", "selectedClassName", "value", "jss"]);
  var classes = useStyles({
    jss: jss
  });
  var handleMenuItemClick = (0, _react.useCallback)(function (e) {
    if (onClick) {
      onClick(e, value);
    }
  }, [value, onClick]);
  return /*#__PURE__*/_react["default"].createElement(_Button["default"], (0, _extends2["default"])({}, props, {
    ref: ref,
    disabled: disabled,
    rippleColor: rippleColor,
    value: value,
    className: (0, _classnames["default"])(classes.root, classes.height, classes.hover, classes.focus, (0, _defineProperty2["default"])({}, classes.selected, selected), className),
    onClick: handleMenuItemClick,
    style: style
  }), children);
});

MenuItem.defaultProps = {
  className: '',
  style: {},
  value: undefined,
  onClick: null,
  selected: false,
  rippleColor: _colors.white
};
MenuItem.propTypes = {
  /** The list item inner component to render */
  children: _propTypes["default"].node.isRequired,

  /** Additional class to add to the list item component */
  className: _propTypes["default"].string,

  /** Additional style to add to the list item component */
  style: _propTypes["default"].shape(),

  /** Value to pass on list click (only relevant for clickable list items) */
  value: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].number, _propTypes["default"].shape()]),

  /** CB for handling list item click event */
  onClick: _propTypes["default"].func,

  /** Indicator whether or not the list item is selected */
  selected: _propTypes["default"].bool,

  /** Set the click ripple color */
  rippleColor: _propTypes["default"].string,

  /** jss override object to customize the jss classes */
  jss: _propTypes["default"].oneOfType([_propTypes["default"].shape(), _propTypes["default"].func])
};
MenuItem.displayName = 'MenuItem';
var _default = MenuItem;
exports["default"] = _default;