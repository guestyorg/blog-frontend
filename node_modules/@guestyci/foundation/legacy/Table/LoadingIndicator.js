"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _CellRow = _interopRequireDefault(require("./CellRow/CellRow"));

var LoadingIndicator = function LoadingIndicator(_ref) {
  var show = _ref.show,
      isTableEmpty = _ref.isTableEmpty,
      pageSize = _ref.pageSize,
      multiSelect = _ref.multiSelect,
      checked = _ref.checked,
      className = _ref.className,
      cellComponents = _ref.cellComponents;
  var rowPlaceholdersArray = (0, _react.useMemo)(function () {
    var count = isTableEmpty ? pageSize : 4;
    return (0, _toConsumableArray2["default"])(Array(count).keys());
  }, [isTableEmpty, pageSize]);
  return show ? rowPlaceholdersArray.map(function (key) {
    return /*#__PURE__*/_react["default"].createElement(_CellRow["default"], {
      key: "placeholder-".concat(key),
      rowId: "placeholder-".concat(key),
      multiSelect: multiSelect,
      className: className,
      data: {},
      checked: checked,
      isLoading: true
    }, cellComponents);
  }) : null;
};

LoadingIndicator.defaultProps = {
  isTableEmpty: true,
  pageSize: 25,
  multiSelect: false,
  checked: false,
  className: undefined,
  cellComponents: undefined
};
LoadingIndicator.propTypes = {
  /** Defines whether to show the indicator */
  show: _propTypes["default"].bool,

  /** Defines whether the table is currently empty */
  isTableEmpty: _propTypes["default"].bool,

  /** Numner of items per page */
  pageSize: _propTypes["default"].number,

  /** Boolean indicator for allowing bulk actions */
  multiSelect: _propTypes["default"].bool,

  /** Boolean indicator the rows to be checked */
  checked: _propTypes["default"].bool,

  /** Optional class name to the cell row */
  className: _propTypes["default"].string,

  /** cell components to be shown in each row  */
  cellComponents: _propTypes["default"].node.isRequired
};
var _default = LoadingIndicator;
exports["default"] = _default;