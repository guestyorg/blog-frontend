{"ast":null,"code":"import Axios from \"axios\";\nimport { BLOG_DETAILS_FAIL, BLOG_DETAILS_REQUEST, BLOG_DETAILS_SUCCESS, BLOG_REGISTER_FAIL, BLOG_REGISTER_REQUEST, BLOG_REGISTER_SUCCESS, BLOG_SIGNIN_FAIL, BLOG_SIGNIN_REQUEST, BLOG_SIGNIN_SUCCESS, BLOG_SIGNOUT, BLOG_UPDATE_PROFILE_FAIL, BLOG_UPDATE_PROFILE_REQUEST, BLOG_UPDATE_PROFILE_SUCCESS, BLOG_LIST_REQUEST, BLOG_LIST_SUCCESS, BLOG_LIST_FAIL, BLOG_DELETE_REQUEST, BLOG_DELETE_SUCCESS, BLOG_DELETE_FAIL, BLOG_UPDATE_SUCCESS, BLOG_UPDATE_FAIL } from \"../constants/blogConstants\";\nexport const register = (name, email, password, image) => async dispatch => {\n  dispatch({\n    type: BLOG_REGISTER_REQUEST,\n    payload: {\n      name,\n      email,\n      password,\n      image\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"http://localhost:3000/api/blogs/register\", {\n      name,\n      email,\n      password,\n      image\n    });\n    dispatch({\n      type: BLOG_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: BLOG_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"blogInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: BLOG_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signin = (email, password) => async dispatch => {\n  dispatch({\n    type: BLOG_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"http://localhost:3000/api/blogs/signin\", {\n      email,\n      password\n    });\n    dispatch({\n      type: BLOG_SIGNIN_SUCCESS,\n      payload: data\n    }); // dispatch(emailBlog(email));\n\n    localStorage.setItem(\"blogInfo\", JSON.stringify(data));\n  } catch (error) {\n    // console.log(\"error :\", error);\n    dispatch({\n      type: BLOG_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signout = () => dispatch => {\n  localStorage.removeItem(\"blogInfo\");\n  dispatch({\n    type: BLOG_SIGNOUT\n  });\n  document.location.href = \"/signin\";\n};\nexport const listBlogs = () => async (dispatch, getState) => {\n  dispatch({\n    type: BLOG_LIST_REQUEST\n  });\n\n  try {\n    const {\n      blogSignin: {\n        blogInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.get(\"http://localhost:3000/api/blogs\", {\n      headers: {\n        Authorization: `Bearer ${blogInfo.token}`\n      }\n    });\n    dispatch({\n      type: BLOG_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: BLOG_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deleteBlog = blogId => async (dispatch, getState) => {\n  dispatch({\n    type: BLOG_DELETE_REQUEST,\n    payload: blogId\n  });\n  const {\n    blogSignin: {\n      blogInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.delete(`http://localhost:3000/api/blogs/${blogId}`, {\n      headers: {\n        Authorization: `Bearer ${blogInfo.token}`\n      }\n    });\n    dispatch({\n      type: BLOG_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: BLOG_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const detailsBlog = blogId => async (dispatch, getState) => {\n  dispatch({\n    type: BLOG_DETAILS_REQUEST,\n    payload: blogId\n  });\n  const {\n    blogSignin: {\n      blogInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get(`http://localhost:3000/api/blogs/${blogId}`, {\n      headers: {\n        Authorization: `Bearer ${blogInfo === null || blogInfo === void 0 ? void 0 : blogInfo.token}`\n      }\n    });\n    dispatch({\n      type: BLOG_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: BLOG_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateBlog = blog => async (dispatch, getState) => {\n  console.log(\"blog:\", blog);\n  dispatch({\n    type: BLOG_UPDATE_PROFILE_REQUEST,\n    payload: blog\n  });\n  const {\n    blogSignin: {\n      blogInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.patch(`http://localhost:3000/api/blogs/${blog._id}`, blog, {\n      headers: {\n        Authorization: `Bearer ${blogInfo.token}`\n      }\n    });\n    dispatch({\n      type: BLOG_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: BLOG_UPDATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/actions/blogActions.js"],"names":["Axios","BLOG_DETAILS_FAIL","BLOG_DETAILS_REQUEST","BLOG_DETAILS_SUCCESS","BLOG_REGISTER_FAIL","BLOG_REGISTER_REQUEST","BLOG_REGISTER_SUCCESS","BLOG_SIGNIN_FAIL","BLOG_SIGNIN_REQUEST","BLOG_SIGNIN_SUCCESS","BLOG_SIGNOUT","BLOG_UPDATE_PROFILE_FAIL","BLOG_UPDATE_PROFILE_REQUEST","BLOG_UPDATE_PROFILE_SUCCESS","BLOG_LIST_REQUEST","BLOG_LIST_SUCCESS","BLOG_LIST_FAIL","BLOG_DELETE_REQUEST","BLOG_DELETE_SUCCESS","BLOG_DELETE_FAIL","BLOG_UPDATE_SUCCESS","BLOG_UPDATE_FAIL","register","name","email","password","image","dispatch","type","payload","data","post","localStorage","setItem","JSON","stringify","error","response","message","signin","signout","removeItem","document","location","href","listBlogs","getState","blogSignin","blogInfo","get","headers","Authorization","token","deleteBlog","blogId","delete","detailsBlog","updateBlog","blog","console","log","patch","_id"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\nimport {\n  BLOG_DETAILS_FAIL,\n  BLOG_DETAILS_REQUEST,\n  BLOG_DETAILS_SUCCESS,\n  BLOG_REGISTER_FAIL,\n  BLOG_REGISTER_REQUEST,\n  BLOG_REGISTER_SUCCESS,\n  BLOG_SIGNIN_FAIL,\n  BLOG_SIGNIN_REQUEST,\n  BLOG_SIGNIN_SUCCESS,\n  BLOG_SIGNOUT,\n  BLOG_UPDATE_PROFILE_FAIL,\n  BLOG_UPDATE_PROFILE_REQUEST,\n  BLOG_UPDATE_PROFILE_SUCCESS,\n  BLOG_LIST_REQUEST,\n  BLOG_LIST_SUCCESS,\n  BLOG_LIST_FAIL,\n  BLOG_DELETE_REQUEST,\n  BLOG_DELETE_SUCCESS,\n  BLOG_DELETE_FAIL,\n  BLOG_UPDATE_SUCCESS,\n  BLOG_UPDATE_FAIL,\n} from \"../constants/blogConstants\";\n\nexport const register = (name, email, password, image) => async (dispatch) => {\n  dispatch({\n    type: BLOG_REGISTER_REQUEST,\n    payload: { name, email, password, image },\n  });\n  try {\n    const { data } = await Axios.post(\n      \"http://localhost:3000/api/blogs/register\",\n      {\n        name,\n        email,\n        password,\n        image,\n      }\n    );\n\n    dispatch({ type: BLOG_REGISTER_SUCCESS, payload: data });\n\n    dispatch({ type: BLOG_SIGNIN_SUCCESS, payload: data });\n    localStorage.setItem(\"blogInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: BLOG_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const signin = (email, password) => async (dispatch) => {\n  dispatch({ type: BLOG_SIGNIN_REQUEST, payload: { email, password } });\n  try {\n    const { data } = await Axios.post(\n      \"http://localhost:3000/api/blogs/signin\",\n      { email, password }\n    );\n    dispatch({ type: BLOG_SIGNIN_SUCCESS, payload: data });\n    // dispatch(emailBlog(email));\n\n    localStorage.setItem(\"blogInfo\", JSON.stringify(data));\n  } catch (error) {\n    // console.log(\"error :\", error);\n    dispatch({\n      type: BLOG_SIGNIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const signout = () => (dispatch) => {\n  localStorage.removeItem(\"blogInfo\");\n\n  dispatch({ type: BLOG_SIGNOUT });\n  document.location.href = \"/signin\";\n};\n\nexport const listBlogs = () => async (dispatch, getState) => {\n  dispatch({ type: BLOG_LIST_REQUEST });\n  try {\n    const {\n      blogSignin: { blogInfo },\n    } = getState();\n    const { data } = await Axios.get(\"http://localhost:3000/api/blogs\", {\n      headers: {\n        Authorization: `Bearer ${blogInfo.token}`,\n      },\n    });\n\n    dispatch({ type: BLOG_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: BLOG_LIST_FAIL, payload: message });\n  }\n};\n\nexport const deleteBlog = (blogId) => async (dispatch, getState) => {\n  dispatch({ type: BLOG_DELETE_REQUEST, payload: blogId });\n  const {\n    blogSignin: { blogInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.delete(\n      `http://localhost:3000/api/blogs/${blogId}`,\n      {\n        headers: { Authorization: `Bearer ${blogInfo.token}` },\n      }\n    );\n    dispatch({ type: BLOG_DELETE_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: BLOG_DELETE_FAIL, payload: message });\n  }\n};\n\nexport const detailsBlog = (blogId) => async (dispatch, getState) => {\n  dispatch({ type: BLOG_DETAILS_REQUEST, payload: blogId });\n  const {\n    blogSignin: { blogInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.get(\n      `http://localhost:3000/api/blogs/${blogId}`,\n      {\n        headers: { Authorization: `Bearer ${blogInfo?.token}` },\n      }\n    );\n    dispatch({ type: BLOG_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: BLOG_DETAILS_FAIL, payload: message });\n  }\n};\n\nexport const updateBlog = (blog) => async (dispatch, getState) => {\n  console.log(\"blog:\", blog);\n  dispatch({ type: BLOG_UPDATE_PROFILE_REQUEST, payload: blog });\n  const {\n    blogSignin: { blogInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.patch(\n      `http://localhost:3000/api/blogs/${blog._id}`,\n      blog,\n      {\n        headers: { Authorization: `Bearer ${blogInfo.token}` },\n      }\n    );\n    dispatch({ type: BLOG_UPDATE_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: BLOG_UPDATE_FAIL, payload: message });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}