{"ast":null,"code":"var _jsxFileName = \"/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/components/PostListPreprod.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"; // import { deletePost, listPosts } from \"../../../actions/postActions\";\n// import { POST_DETAILS_RESET } from \"../../../constants/postConstants\";\n\nimport Section from \"@guestyci/foundation/legacy/Section\";\nimport AddButton from \"@guestyci/foundation/AddButton\";\nimport Table, { Column } from \"@guestyci/foundation/legacy/Table\";\nimport { getEmptySelection, getSelectionOnAction } from \"@guestyci/foundation/legacy/Table/tableUtility\";\nimport Cell from \"@guestyci/foundation/legacy/Table/Cell\";\nimport HeaderCell from \"@guestyci/foundation/legacy/Table/HeaderCell\";\nimport FlatButton from \"@guestyci/foundation/legacy/FlatButton\";\nimport { sleep } from \"@guestyci/foundation/utils/commonUtility\";\nimport orderBy from \"lodash/orderBy\";\nimport DateCell from \"@guestyci/foundation/legacy/Table/DateCell\";\nimport DateTimeCell from \"@guestyci/foundation/legacy/Table/DateTimeCell\"; // import data from '../../../__mocks__/tableData';\n\nimport Resource from \"@guestyci/agni\";\nimport TextField from \"@guestyci/foundation/TextField\";\nimport { Row } from \"@guestyci/foundation/Layout\";\nimport { ReactComponent as BtnTrash } from \"@svgr/webpack?-svgo,+titleProp,+ref!@guestyci/foundation/icons/BtnTrash.svg\";\nimport Icon from \"@guestyci/foundation/Icon\";\nimport Spinner from \"@guestyci/foundation/Spinner\";\nimport StatusIndication from \"@guestyci/foundation/StatusIndication\";\nimport { NavLink } from \"react-router-dom\";\nimport { deletePost } from \"../actions/blogActions\";\nimport { POST_DELETE_RESET } from \"../constants/blogConstants\";\nimport { useToast } from \"@guestyci/foundation/Toast\";\nimport { makeDataForTable } from \"../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PostList(props) {\n  _s();\n\n  console.log(\"PostListprops:\", props);\n  const {\n    addToast\n  } = useToast();\n  const {\n    blogData,\n    blogAdmin\n  } = props; // console.log('blogAdmin:', blogAdmin)\n  // console.log(\"blogId:\", blogId);\n  // console.log(\"blogData:\", blogData);\n\n  let data;\n\n  if (blogData) {\n    let posts = blogData.posts;\n    data = makeDataForTable(posts); // console.log(\"dataaaaaaaa===========================:\", data);\n  }\n\n  const [rawData, setRawData] = useState(); // const [data, setData] = useState();\n  // let data = arr;\n\n  const [postDeleted, setPostDeleted] = useState(false);\n  const [rowSelection, setRowSelection] = useState(getEmptySelection());\n  const {\n    allSelected,\n    items,\n    exceptItems\n  } = rowSelection;\n  const width = 200; // const pageSize = 25;\n  // const scrollOffset = data ? data.length : 100;\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [skip, setSkip] = useState(0);\n  // const postList = useSelector((state) => state.postList);\n  // const { loading, error, posts } = postList;\n  // // console.log(\"posts:\", posts);\n  // data = posts;\n  // const postDelete = useSelector((state) => state.postDelete);\n  // const {\n  //   loading: loadingDelete,\n  //   error: errorDelete,\n  //   success: successDelete,\n  // } = postDelete;\n\n  const userData = useSelector(state => state.userData);\n  const {\n    userInfoData,\n    loadingAccount,\n    errorAccount\n  } = userData;\n  const dispatch = useDispatch();\n  const selectionSize = allSelected && data.length > 0 ? data.length - exceptItems.size : items.size;\n\n  const handleRowCheckChange = action => {\n    console.log(\"handleRowCheckChange\"); // console.log('action:', action);\n\n    const selection = getSelectionOnAction({\n      rowSelection,\n      action,\n      data\n    });\n    console.log(\"rowSelection:\", rowSelection);\n    console.log(\"action:\", action);\n    console.log(\"data:\", data); // console.log('selection:', selection);\n\n    setRowSelection(selection);\n  };\n\n  const deletePostHandler = async postId => {\n    console.log(\"deletePostHandler\");\n\n    try {\n      // const response = await api.delete(`/posts/${postId}`); // will go to `${config.MAILER_URL}/posts`\n      // console.log('response:', response);\n      // const data = response.data;\n      // addToast.success('post was delete')\n      // props.history.push('/');\n      dispatch(deletePost(postId, blogData._id));\n      setPostDeleted(true);\n      handleClearSelection();\n    } catch (error) {\n      console.log(\"error:\", error); // addToast.danger(\"error deleting the post\")\n    }\n  };\n\n  const handleDelete = () => {\n    console.log(\"rowSelection.items: \", rowSelection.items);\n\n    if (window.confirm(\"Are you sure?\")) {\n      rowSelection.items.forEach(item => deletePostHandler(item));\n    }\n  };\n\n  const handleClearSelection = () => {\n    console.log(\"handleClearSelection\");\n    setRowSelection(getEmptySelection());\n  };\n\n  const handleRowClick = (...args) => {\n    console.log(\"handleRowClick\", ...args);\n    const rowData = { ...args\n    };\n    console.log(\"rowData:\", rowData);\n    console.log(\"rowData:\", rowData[0].id.children);\n    const postId = rowData[0].id.children; // console.log('args:', args.id)\n    // props.history.push(\"www.google.com\");\n\n    props.history.push(`/${blogData._id}/post/${postId}/view`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data && /*#__PURE__*/_jsxDEV(Section, {\n      col: true,\n      className: \"bg-white\",\n      style: {\n        width: \"900px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"posts:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this), userInfoData ? /*#__PURE__*/_jsxDEV(Section, {\n        gutter: 2,\n        children: [blogData && console.log(\"blogData._id: \", blogData._id), /*#__PURE__*/_jsxDEV(AddButton, {\n          onClick: () => props.history.push(`${blogData._id}/post/add`),\n          text: \"Add Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/user/signin\" // activeStyle={activeStyle}\n        ,\n        style: {\n          marginLeft: \"20px\"\n        },\n        exact: true,\n        children: \"sign in to create a new post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }, this), blogAdmin ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [selectionSize > 0 && /*#__PURE__*/_jsxDEV(Row, {\n          spacing: 4,\n          children: [/*#__PURE__*/_jsxDEV(FlatButton, {\n            onClick: handleClearSelection,\n            disabled: !selectionSize,\n            children: `Unselect ${selectionSize || \"\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 19\n          }, this), selectionSize > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(FlatButton, {\n              type: \"error\",\n              onClick: handleDelete,\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                align: \"center\",\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  svg: BtnTrash\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  children: \" Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 23\n            }, this)\n          }, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          multiselect: true,\n          height: 500,\n          data: data // isLoading={isLoading}\n          // pageSize={pageSize}\n          ,\n          rowSelection: rowSelection,\n          onCheckedRowsChange: handleRowCheckChange,\n          onRowClick: handleRowClick // infiniteScrollOptions={{\n          //   skip,\n          //   scrollOffset,\n          //   onLoadMore: handleLoadMore,\n          //   totalCount: semiInfiniteData.length,\n          // }}\n          // sortBy={sortBy}\n          // onSort={handleSort}\n          ,\n          children: [/*#__PURE__*/_jsxDEV(Column, {\n            dataKey: \"title\",\n            width: width,\n            children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n              id: \"title\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataKey: \"content\",\n            width: width,\n            children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n              id: \"content\",\n              children: \" Content Preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataKey: \"admin\",\n            width: width,\n            children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n              id: \"admin\",\n              children: \" Author\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataKey: \"email\",\n            width: width,\n            children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n              id: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataKey: \"account\",\n            width: width,\n            children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n              id: \"account\",\n              children: \"Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataKey: \"createdAt\",\n            width: width,\n            children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n              id: \"createdAt\",\n              children: \"created At\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataKey: \"updatedAt\",\n            width: width,\n            children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n              id: \"updatedAt\",\n              children: \"updated At\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(Table, {\n          height: 500,\n          data: data // isLoading={isLoading}\n          // pageSize={pageSize}\n          ,\n          onRowClick: handleRowClick // infiniteScrollOptions={{\n          //   skip,\n          //   scrollOffset,\n          //   onLoadMore: handleLoadMore,\n          //   totalCount: semiInfiniteData.length,\n          // }}\n          // sortBy={sortBy}\n          // onSort={handleSort}\n          ,\n          children: [/*#__PURE__*/_jsxDEV(Column, {\n            dataKey: \"title\",\n            width: width,\n            children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n              id: \"title\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataKey: \"content\",\n            width: width,\n            children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n              id: \"content\",\n              children: \" Content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataKey: \"admin\",\n            width: width,\n            children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n              id: \"admin\",\n              children: \" Author\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataKey: \"email\",\n            width: width,\n            children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n              id: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataKey: \"account\",\n            width: width,\n            children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n              id: \"account\",\n              children: \"Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataKey: \"createdAt\",\n            width: width,\n            children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n              id: \"createdAt\",\n              children: \"created At\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataKey: \"updatedAt\",\n            width: width,\n            children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n              id: \"updatedAt\",\n              children: \"updated At\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(PostList, \"cmFiywauiwJEfCmk5igYyNW1FwE=\", false, function () {\n  return [useToast, useSelector, useDispatch];\n});\n\n_c = PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"sources":["/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/components/PostListPreprod.js"],"names":["React","useState","useEffect","useCallback","useDispatch","useSelector","Section","AddButton","Table","Column","getEmptySelection","getSelectionOnAction","Cell","HeaderCell","FlatButton","sleep","orderBy","DateCell","DateTimeCell","Resource","TextField","Row","Icon","Spinner","StatusIndication","NavLink","deletePost","POST_DELETE_RESET","useToast","makeDataForTable","PostList","props","console","log","addToast","blogData","blogAdmin","data","posts","rawData","setRawData","postDeleted","setPostDeleted","rowSelection","setRowSelection","allSelected","items","exceptItems","width","userData","state","userInfoData","loadingAccount","errorAccount","dispatch","selectionSize","length","size","handleRowCheckChange","action","selection","deletePostHandler","postId","_id","handleClearSelection","error","handleDelete","window","confirm","forEach","item","handleRowClick","args","rowData","id","children","history","push","marginLeft","BtnTrash"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n// import { deletePost, listPosts } from \"../../../actions/postActions\";\n// import { POST_DETAILS_RESET } from \"../../../constants/postConstants\";\n\nimport Section from \"@guestyci/foundation/legacy/Section\";\nimport AddButton from \"@guestyci/foundation/AddButton\";\n\nimport Table, { Column } from \"@guestyci/foundation/legacy/Table\";\nimport {\n  getEmptySelection,\n  getSelectionOnAction,\n} from \"@guestyci/foundation/legacy/Table/tableUtility\";\nimport Cell from \"@guestyci/foundation/legacy/Table/Cell\";\nimport HeaderCell from \"@guestyci/foundation/legacy/Table/HeaderCell\";\nimport FlatButton from \"@guestyci/foundation/legacy/FlatButton\";\n\nimport { sleep } from \"@guestyci/foundation/utils/commonUtility\";\n\nimport orderBy from \"lodash/orderBy\";\n\nimport DateCell from \"@guestyci/foundation/legacy/Table/DateCell\";\nimport DateTimeCell from \"@guestyci/foundation/legacy/Table/DateTimeCell\";\n\n// import data from '../../../__mocks__/tableData';\n\nimport Resource from \"@guestyci/agni\";\n\nimport TextField from \"@guestyci/foundation/TextField\";\nimport { Row } from \"@guestyci/foundation/Layout\";\nimport { ReactComponent as BtnTrash } from \"@guestyci/foundation/icons/BtnTrash.svg\";\nimport Icon from \"@guestyci/foundation/Icon\";\n\nimport Spinner from \"@guestyci/foundation/Spinner\";\nimport StatusIndication from \"@guestyci/foundation/StatusIndication\";\nimport { NavLink } from \"react-router-dom\";\nimport { deletePost } from \"../actions/blogActions\";\nimport { POST_DELETE_RESET } from \"../constants/blogConstants\";\n\nimport { useToast } from \"@guestyci/foundation/Toast\";\nimport { makeDataForTable } from \"../utils\";\n\nexport default function PostList(props) {\n  console.log(\"PostListprops:\", props);\n  const { addToast } = useToast();\n\n  const { blogData, blogAdmin } = props;\n  // console.log('blogAdmin:', blogAdmin)\n  // console.log(\"blogId:\", blogId);\n\n  // console.log(\"blogData:\", blogData);\n\n  let data;\n\n  if (blogData) {\n    let posts = blogData.posts;\n\n    data = makeDataForTable(posts);\n    // console.log(\"dataaaaaaaa===========================:\", data);\n  }\n  const [rawData, setRawData] = useState();\n  // const [data, setData] = useState();\n\n  // let data = arr;\n\n  const [postDeleted, setPostDeleted] = useState(false);\n\n  const [rowSelection, setRowSelection] = useState(getEmptySelection());\n  const { allSelected, items, exceptItems } = rowSelection;\n\n  const width = 200;\n  // const pageSize = 25;\n  // const scrollOffset = data ? data.length : 100;\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [skip, setSkip] = useState(0);\n  // const postList = useSelector((state) => state.postList);\n  // const { loading, error, posts } = postList;\n  // // console.log(\"posts:\", posts);\n  // data = posts;\n  // const postDelete = useSelector((state) => state.postDelete);\n  // const {\n  //   loading: loadingDelete,\n  //   error: errorDelete,\n  //   success: successDelete,\n  // } = postDelete;\n\n  const userData= useSelector((state) => state.userData);\n  const { userInfoData, loadingAccount, errorAccount } = userData;\n\n  const dispatch = useDispatch();\n\n\n  const selectionSize =\n    allSelected && data.length > 0\n      ? data.length - exceptItems.size\n      : items.size;\n\n  const handleRowCheckChange = (action) => {\n    console.log(\"handleRowCheckChange\");\n    // console.log('action:', action);\n\n    const selection = getSelectionOnAction({ rowSelection, action, data });\n    console.log(\"rowSelection:\", rowSelection);\n    console.log(\"action:\", action);\n    console.log(\"data:\", data);\n    // console.log('selection:', selection);\n    setRowSelection(selection);\n  };\n\n  const deletePostHandler = async (postId) => {\n    console.log(\"deletePostHandler\");\n    try {\n      // const response = await api.delete(`/posts/${postId}`); // will go to `${config.MAILER_URL}/posts`\n      // console.log('response:', response);\n      // const data = response.data;\n      // addToast.success('post was delete')\n      // props.history.push('/');\n\n      dispatch(deletePost(postId, blogData._id));\n\n      setPostDeleted(true);\n\n      handleClearSelection();\n    } catch (error) {\n      console.log(\"error:\", error);\n      // addToast.danger(\"error deleting the post\")\n    }\n  };\n\n  const handleDelete = () => {\n    console.log(\"rowSelection.items: \", rowSelection.items);\n\n    if (window.confirm(\"Are you sure?\")) {\n      rowSelection.items.forEach((item) => deletePostHandler(item));\n    }\n  };\n\n  const handleClearSelection = () => {\n    console.log(\"handleClearSelection\");\n    setRowSelection(getEmptySelection());\n  };\n\n  const handleRowClick = (...args) => {\n    console.log(\"handleRowClick\", ...args);\n\n    const rowData = { ...args };\n    console.log(\"rowData:\", rowData);\n    console.log(\"rowData:\", rowData[0].id.children);\n\n    const postId = rowData[0].id.children;\n    // console.log('args:', args.id)\n\n    // props.history.push(\"www.google.com\");\n\n    props.history.push(`/${blogData._id}/post/${postId}/view`);\n  };\n\n  return (\n    <>\n      {/* {console.log(\"data:\", data)}\n      {loading && <Spinner size={80} strokeWidth={6} />}\n      {error && (\n        <StatusIndication variant=\"danger\" text=\"error getting the data \" />\n      )} */}\n\n      {data && (\n        <Section col className=\"bg-white\" style={{width:\"900px\"}}>\n          <h1>posts:</h1>\n\n          {userInfoData ? (\n            <Section gutter={2}  >\n              {blogData && console.log(\"blogData._id: \", blogData._id)}\n              <AddButton\n                onClick={() => props.history.push(`${blogData._id}/post/add`)}\n                text=\"Add Post\"\n              />\n            </Section>\n          ) : (\n            <NavLink\n              to=\"/user/signin\"\n              // activeStyle={activeStyle}\n              style={{ marginLeft: \"20px\" }}\n              exact\n            >\n              sign in to create a new post\n            </NavLink>\n          )}\n\n          {/* {console.log(\"rowSelection: \", rowSelection)} */}\n\n          {blogAdmin ? (\n            <>\n              {selectionSize > 0 && (\n                <Row spacing={4}>\n                  <FlatButton\n                    onClick={handleClearSelection}\n                    disabled={!selectionSize}\n                  >\n                    {`Unselect ${selectionSize || \"\"}`}\n                  </FlatButton>\n\n                  {selectionSize > 0 && (\n                    <>\n                      <FlatButton type=\"error\" onClick={handleDelete}>\n                        <Row align=\"center\" spacing={2}>\n                          <Icon svg={BtnTrash} />\n                          <TextField> Delete</TextField>\n                        </Row>\n                      </FlatButton>\n                    </>\n                  )}\n                </Row>\n              )}\n              <Table\n                multiselect\n                height={500}\n                data={data}\n                // isLoading={isLoading}\n                // pageSize={pageSize}\n                rowSelection={rowSelection}\n                onCheckedRowsChange={handleRowCheckChange}\n                onRowClick={handleRowClick}\n                // infiniteScrollOptions={{\n                //   skip,\n                //   scrollOffset,\n                //   onLoadMore: handleLoadMore,\n                //   totalCount: semiInfiniteData.length,\n                // }}\n                // sortBy={sortBy}\n                // onSort={handleSort}\n              >\n                {/* <Column align=\"left\" dataKey=\"id\" width={width} sortable>\n                  <HeaderCell id=\"id\">Id</HeaderCell>\n                  <Cell />\n                </Column> */}\n                <Column dataKey=\"title\" width={width}>\n                  <HeaderCell id=\"title\">Title</HeaderCell>\n                  <Cell />\n                </Column>\n                <Column dataKey=\"content\" width={width}>\n                  <HeaderCell id=\"content\"> Content Preview</HeaderCell>\n                  <Cell />\n                </Column>\n                <Column dataKey=\"admin\" width={width}>\n                  <HeaderCell id=\"admin\"> Author</HeaderCell>\n                  <Cell />\n                </Column>\n                <Column dataKey=\"email\" width={width}>\n                  <HeaderCell id=\"email\">Email</HeaderCell>\n                  <Cell />\n                </Column>\n                <Column dataKey=\"account\" width={width}>\n                  <HeaderCell id=\"account\">Account</HeaderCell>\n                  <Cell />\n                </Column>\n                <Column dataKey=\"createdAt\" width={width}>\n                  <HeaderCell id=\"createdAt\">created At</HeaderCell>\n                  <Cell />\n                </Column>\n\n                <Column dataKey=\"updatedAt\" width={width}>\n                  <HeaderCell id=\"updatedAt\">updated At</HeaderCell>\n                  <Cell />\n                </Column>\n\n                {/* <Column dataKey=\"periodStartDate\" width={width} sortable>\n              <HeaderCell id=\"startdate\">Date Cell</HeaderCell>\n              <DateCell />\n            </Column>\n            <Column dataKey=\"periodEndDate\" width={width} sortable>\n              <HeaderCell id=\"enddate\">DateTime Cell</HeaderCell>\n              <DateTimeCell />\n            </Column> */}\n              </Table>\n            </>\n          ) : (\n            <>\n              {\" \"}\n              <Table\n                height={500}\n                data={data}\n                // isLoading={isLoading}\n                // pageSize={pageSize}\n\n                onRowClick={handleRowClick}\n                // infiniteScrollOptions={{\n                //   skip,\n                //   scrollOffset,\n                //   onLoadMore: handleLoadMore,\n                //   totalCount: semiInfiniteData.length,\n                // }}\n                // sortBy={sortBy}\n                // onSort={handleSort}\n              >\n                {/* <Column align=\"left\" dataKey=\"id\" width={width} sortable>\n                  <HeaderCell id=\"id\">Id</HeaderCell>\n                  <Cell />\n                </Column> */}\n                <Column dataKey=\"title\" width={width}>\n                  <HeaderCell id=\"title\">Title</HeaderCell>\n                  <Cell />\n                </Column>\n                <Column dataKey=\"content\" width={width}>\n                  <HeaderCell id=\"content\"> Content</HeaderCell>\n                  <Cell />\n                </Column>\n                <Column dataKey=\"admin\" width={width}>\n                  <HeaderCell id=\"admin\"> Author</HeaderCell>\n                  <Cell />\n                </Column>\n                <Column dataKey=\"email\" width={width}>\n                  <HeaderCell id=\"email\">Email</HeaderCell>\n                  <Cell />\n                </Column>\n                <Column dataKey=\"account\" width={width}>\n                  <HeaderCell id=\"account\">Account</HeaderCell>\n                  <Cell />\n                </Column>\n                <Column dataKey=\"createdAt\" width={width}>\n                  <HeaderCell id=\"createdAt\">created At</HeaderCell>\n                  <Cell />\n                </Column>\n\n                <Column dataKey=\"updatedAt\" width={width}>\n                  <HeaderCell id=\"updatedAt\">updated At</HeaderCell>\n                  <Cell />\n                </Column>\n\n                {/* <Column dataKey=\"periodStartDate\" width={width} sortable>\n              <HeaderCell id=\"startdate\">Date Cell</HeaderCell>\n              <DateCell />\n            </Column>\n            <Column dataKey=\"periodEndDate\" width={width} sortable>\n              <HeaderCell id=\"enddate\">DateTime Cell</HeaderCell>\n              <DateTimeCell />\n            </Column> */}\n              </Table>\n            </>\n          )}\n        </Section>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}