import React from 'react';
import PropTypes from 'prop-types';
import cn from 'classnames';
import { DropdownButtonColors } from "../../enums/enums";
import OutlineButton from "../OutlineButton/OutlineButton";
import SvgIcon from "../SvgIcon/SvgIcon";

var BtnArrowDown = function BtnArrowDown(props) {
  return /*#__PURE__*/React.createElement("svg", props, /*#__PURE__*/React.createElement("path", {
    d: "M4.533 4.997c.13.006.26-.039.357-.136L8.925.826a.488.488 0 0 0-.69-.69L4.532 3.843.826.137a.488.488 0 0 0-.69.69L4.172 4.86c.097.097.23.143.362.136z"
  }));
};

BtnArrowDown.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 9.0618038 4.9977479"
};

const DropdownButtonField = ({
  toggleCollapse,
  isCollapsed,
  className,
  type,
  title,
  disabled,
  inDialog
}) => /*#__PURE__*/React.createElement(OutlineButton, {
  onClick: toggleCollapse,
  color: type,
  disabled: disabled,
  className: cn(className, 'width-125 height-25'),
  childrenClassName: inDialog ? '' : 'w-fill',
  "data-qa": "dropdown-button-field"
}, /*#__PURE__*/React.createElement("div", {
  className: "d-flex-fill flex-space-between-center"
}, title, !disabled && /*#__PURE__*/React.createElement(SvgIcon, {
  svg: BtnArrowDown,
  height: 9,
  width: 9,
  color: DropdownButtonColors[type],
  className: cn('transition-transform ml-2', {
    'transform-180': !isCollapsed
  })
})));

DropdownButtonField.defaultProps = {
  className: '',
  isCollapsed: true,
  onClick: null,
  type: 'plain',
  disabled: false
};
DropdownButtonField.propTypes = {
  /** Button click callback function */
  onClick: PropTypes.func,

  /** Button additional classes */
  className: PropTypes.string,

  /** boolean indicates whether the dropdown menu is open or not */
  isCollapsed: PropTypes.bool,

  /** button type (sets the color) */
  type: PropTypes.oneOf(Object.keys(DropdownButtonColors)),

  /** button title */
  title: PropTypes.string.isRequired,

  /** button disable indicator */
  disabled: PropTypes.bool
};
export default DropdownButtonField;