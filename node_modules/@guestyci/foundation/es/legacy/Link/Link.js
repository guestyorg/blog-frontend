import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import cn from 'classnames';

class Link extends PureComponent {
  constructor(...args) {
    super(...args);

    this.handleClick = () => {
      const {
        href
      } = this.props;

      if (href) {
        window.open(href, '_blank');
      }
    };
  }

  render() {
    const _this$props = this.props,
          {
      className,
      style,
      children,
      color
    } = _this$props,
          props = _objectWithoutPropertiesLoose(_this$props, ["className", "style", "children", "color"]);

    return /*#__PURE__*/React.createElement("div", _extends({
      role: "presentation",
      className: cn('text-hover-blue', 'd-flex', 'align-items-center', 'fill-hover-blue', 'transition-all', 'clickable', {
        [`text-${color} fill-${color}`]: color
      }, className),
      onClick: this.handleClick,
      style: style
    }, props, {
      "data-qa": "link"
    }), children);
  }

}

Link.defaultProps = {
  className: '',
  style: {},
  href: '',
  color: 'white'
};
Link.propTypes = {
  /** Additional class to add to the link component */
  className: PropTypes.string,

  /** Additional styles to add to the link component  */
  style: PropTypes.shape(),

  /** Url to redirect on click */
  href: PropTypes.string,

  /** The item to render inside the link */
  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,

  /** Color for link text */
  color: PropTypes.string
};
export default Link;