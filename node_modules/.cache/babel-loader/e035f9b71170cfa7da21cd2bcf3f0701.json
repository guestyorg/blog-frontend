{"ast":null,"code":"import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction isInRect(ref, event) {\n  var _ref$getBoundingClien = ref.getBoundingClientRect(),\n      top = _ref$getBoundingClien.top,\n      bottom = _ref$getBoundingClien.bottom,\n      left = _ref$getBoundingClien.left,\n      right = _ref$getBoundingClien.right;\n\n  var clientX = event.clientX,\n      clientY = event.clientY;\n  return clientX >= left && clientX <= right && clientY >= top && clientY <= bottom;\n}\n/**\n * Create a wrapper compose to support click outside functionality functionality\n * @param ComposedComponent\n * @returns {{Component}}\n */\n\n\nvar ClickOutsideListener = function ClickOutsideListener(_ref) {\n  var _ref$onClickOutside = _ref.onClickOutside,\n      onClickOutside = _ref$onClickOutside === void 0 ? null : _ref$onClickOutside,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? '' : _ref$className,\n      children = _ref.children,\n      _ref$style = _ref.style,\n      style = _ref$style === void 0 ? {} : _ref$style;\n  var clickOutsideRef = useRef(null);\n  useEffect(function () {\n    if (onClickOutside) {\n      var handleClickOutside = function handleClickOutside(event) {\n        var isCurrentTarget = clickOutsideRef.current.contains(event.target);\n\n        if (clickOutsideRef && !isCurrentTarget && !isInRect(clickOutsideRef.current, event)) {\n          onClickOutside();\n        }\n      };\n\n      document.addEventListener('mousedown', handleClickOutside);\n      return function () {\n        return document.removeEventListener('mousedown', handleClickOutside);\n      };\n    }\n  }, [onClickOutside]);\n  return onClickOutside ? /*#__PURE__*/React.createElement(\"span\", {\n    ref: clickOutsideRef,\n    className: className,\n    style: style\n  }, children) : children;\n};\n\nClickOutsideListener.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClickOutside: PropTypes.func,\n  className: PropTypes.string,\n  style: PropTypes.shape()\n};\nexport default ClickOutsideListener;","map":{"version":3,"sources":["/Users/giladdekel/Workspace/Guesty/onboarding-blog/onboarding-blog-app/onboarding-frontend-main/simple-app-archive/node_modules/@guestyci/foundation/esm/ClickOutsideListener/ClickOutsideListener.js"],"names":["React","useEffect","useRef","PropTypes","isInRect","ref","event","_ref$getBoundingClien","getBoundingClientRect","top","bottom","left","right","clientX","clientY","ClickOutsideListener","_ref","_ref$onClickOutside","onClickOutside","_ref$className","className","children","_ref$style","style","clickOutsideRef","handleClickOutside","isCurrentTarget","current","contains","target","document","addEventListener","removeEventListener","createElement","propTypes","node","isRequired","func","string","shape"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,SAASC,QAAT,CAAkBC,GAAlB,EAAuBC,KAAvB,EAA8B;AAC5B,MAAIC,qBAAqB,GAAGF,GAAG,CAACG,qBAAJ,EAA5B;AAAA,MACIC,GAAG,GAAGF,qBAAqB,CAACE,GADhC;AAAA,MAEIC,MAAM,GAAGH,qBAAqB,CAACG,MAFnC;AAAA,MAGIC,IAAI,GAAGJ,qBAAqB,CAACI,IAHjC;AAAA,MAIIC,KAAK,GAAGL,qBAAqB,CAACK,KAJlC;;AAMA,MAAIC,OAAO,GAAGP,KAAK,CAACO,OAApB;AAAA,MACIC,OAAO,GAAGR,KAAK,CAACQ,OADpB;AAEA,SAAOD,OAAO,IAAIF,IAAX,IAAmBE,OAAO,IAAID,KAA9B,IAAuCE,OAAO,IAAIL,GAAlD,IAAyDK,OAAO,IAAIJ,MAA3E;AACD;AACD;AACA;AACA;AACA;AACA;;;AAGA,IAAIK,oBAAoB,GAAG,SAASA,oBAAT,CAA8BC,IAA9B,EAAoC;AAC7D,MAAIC,mBAAmB,GAAGD,IAAI,CAACE,cAA/B;AAAA,MACIA,cAAc,GAAGD,mBAAmB,KAAK,KAAK,CAA7B,GAAiC,IAAjC,GAAwCA,mBAD7D;AAAA,MAEIE,cAAc,GAAGH,IAAI,CAACI,SAF1B;AAAA,MAGIA,SAAS,GAAGD,cAAc,KAAK,KAAK,CAAxB,GAA4B,EAA5B,GAAiCA,cAHjD;AAAA,MAIIE,QAAQ,GAAGL,IAAI,CAACK,QAJpB;AAAA,MAKIC,UAAU,GAAGN,IAAI,CAACO,KALtB;AAAA,MAMIA,KAAK,GAAGD,UAAU,KAAK,KAAK,CAApB,GAAwB,EAAxB,GAA6BA,UANzC;AAOA,MAAIE,eAAe,GAAGtB,MAAM,CAAC,IAAD,CAA5B;AACAD,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAIiB,cAAJ,EAAoB;AAClB,UAAIO,kBAAkB,GAAG,SAASA,kBAAT,CAA4BnB,KAA5B,EAAmC;AAC1D,YAAIoB,eAAe,GAAGF,eAAe,CAACG,OAAhB,CAAwBC,QAAxB,CAAiCtB,KAAK,CAACuB,MAAvC,CAAtB;;AAEA,YAAIL,eAAe,IAAI,CAACE,eAApB,IAAuC,CAACtB,QAAQ,CAACoB,eAAe,CAACG,OAAjB,EAA0BrB,KAA1B,CAApD,EAAsF;AACpFY,UAAAA,cAAc;AACf;AACF,OAND;;AAQAY,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCN,kBAAvC;AACA,aAAO,YAAY;AACjB,eAAOK,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CP,kBAA1C,CAAP;AACD,OAFD;AAGD;AACF,GAfQ,EAeN,CAACP,cAAD,CAfM,CAAT;AAgBA,SAAOA,cAAc,GAAG,aAAalB,KAAK,CAACiC,aAAN,CAAoB,MAApB,EAA4B;AAC/D5B,IAAAA,GAAG,EAAEmB,eAD0D;AAE/DJ,IAAAA,SAAS,EAAEA,SAFoD;AAG/DG,IAAAA,KAAK,EAAEA;AAHwD,GAA5B,EAIlCF,QAJkC,CAAhB,GAINA,QAJf;AAKD,CA9BD;;AAgCAN,oBAAoB,CAACmB,SAArB,GAAiC;AAC/Bb,EAAAA,QAAQ,EAAElB,SAAS,CAACgC,IAAV,CAAeC,UADM;AAE/BlB,EAAAA,cAAc,EAAEf,SAAS,CAACkC,IAFK;AAG/BjB,EAAAA,SAAS,EAAEjB,SAAS,CAACmC,MAHU;AAI/Bf,EAAAA,KAAK,EAAEpB,SAAS,CAACoC,KAAV;AAJwB,CAAjC;AAMA,eAAexB,oBAAf","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction isInRect(ref, event) {\n  var _ref$getBoundingClien = ref.getBoundingClientRect(),\n      top = _ref$getBoundingClien.top,\n      bottom = _ref$getBoundingClien.bottom,\n      left = _ref$getBoundingClien.left,\n      right = _ref$getBoundingClien.right;\n\n  var clientX = event.clientX,\n      clientY = event.clientY;\n  return clientX >= left && clientX <= right && clientY >= top && clientY <= bottom;\n}\n/**\n * Create a wrapper compose to support click outside functionality functionality\n * @param ComposedComponent\n * @returns {{Component}}\n */\n\n\nvar ClickOutsideListener = function ClickOutsideListener(_ref) {\n  var _ref$onClickOutside = _ref.onClickOutside,\n      onClickOutside = _ref$onClickOutside === void 0 ? null : _ref$onClickOutside,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? '' : _ref$className,\n      children = _ref.children,\n      _ref$style = _ref.style,\n      style = _ref$style === void 0 ? {} : _ref$style;\n  var clickOutsideRef = useRef(null);\n  useEffect(function () {\n    if (onClickOutside) {\n      var handleClickOutside = function handleClickOutside(event) {\n        var isCurrentTarget = clickOutsideRef.current.contains(event.target);\n\n        if (clickOutsideRef && !isCurrentTarget && !isInRect(clickOutsideRef.current, event)) {\n          onClickOutside();\n        }\n      };\n\n      document.addEventListener('mousedown', handleClickOutside);\n      return function () {\n        return document.removeEventListener('mousedown', handleClickOutside);\n      };\n    }\n  }, [onClickOutside]);\n  return onClickOutside ? /*#__PURE__*/React.createElement(\"span\", {\n    ref: clickOutsideRef,\n    className: className,\n    style: style\n  }, children) : children;\n};\n\nClickOutsideListener.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClickOutside: PropTypes.func,\n  className: PropTypes.string,\n  style: PropTypes.shape()\n};\nexport default ClickOutsideListener;"]},"metadata":{},"sourceType":"module"}