"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.phone = exports.rangePickerValidation = exports.googlePhoneNumber = exports.threeDigitsPastDecimalPoint = exports.lessThan = exports.moreThan = exports.max = exports.min = exports.minLength = exports.maxLength = exports.alphaNumeric = exports.phoneNumber = exports.email = exports.required = exports.notZero = void 0;

var _isObject = _interopRequireDefault(require("lodash/isObject"));

var _commonUtility = require("../utils/commonUtility");

var _validationMessages = require("./validationMessages");

/* eslint-disable no-undef */
// import 'react-intl-tel-input/dist/libphonenumber';
var isTelInput = function isTelInput(value) {
  return (0, _isObject["default"])(value) && value.isTelInput;
};

var required = function required(value) {
  return (0, _commonUtility.isEmpty)(value) || isTelInput(value) && (0, _commonUtility.isEmpty)(value.value) ? _validationMessages.REQUIRED : undefined;
};

exports.required = required;

var maxLength = function maxLength(max) {
  return function (value) {
    return value && value.length > max ? (0, _validationMessages.maxLengthMessage)(max) : undefined;
  };
};

exports.maxLength = maxLength;

var minLength = function minLength(min) {
  return function (value) {
    return value && value.length < min ? (0, _validationMessages.minLengthMessage)(min) : undefined;
  };
};

exports.minLength = minLength;

var min = function min(minVal) {
  return function (value) {
    return !(0, _commonUtility.isEmpty)(value) && value < minVal ? (0, _validationMessages.minMessage)(minVal) : undefined;
  };
};

exports.min = min;

var max = function max(maxVal) {
  return function (value) {
    return !(0, _commonUtility.isEmpty)(value) && value > maxVal ? (0, _validationMessages.maxMessage)(maxVal) : undefined;
  };
};

exports.max = max;

var moreThan = function moreThan(moreThanValue) {
  return function (value) {
    return !(0, _commonUtility.isEmpty)(value) && value <= moreThanValue ? (0, _validationMessages.moreThanMessage)(moreThanValue) : undefined;
  };
};

exports.moreThan = moreThan;

var lessThan = function lessThan(lessThanValue) {
  return function (value) {
    return !(0, _commonUtility.isEmpty)(value) && value >= lessThanValue ? (0, _validationMessages.lessThanMessage)(lessThanValue) : undefined;
  };
};

exports.lessThan = lessThan;

var email = function email(value) {
  return value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]{2,}\.[A-Z]{2,}$/i.test(value) ? _validationMessages.INVALID_EMAIL : undefined;
};

exports.email = email;

var alphaNumeric = function alphaNumeric(value) {
  return value && /[^a-zA-Z0-9 ]/i.test(value) ? _validationMessages.ONLY_ALPHA_NUMERIC : undefined;
};

exports.alphaNumeric = alphaNumeric;

var threeDigitsPastDecimalPoint = function threeDigitsPastDecimalPoint(value) {
  return value && !/^-?\d+(\.\d{1,3})?\s*$/i.test(value) ? _validationMessages.MAX_3_DIGITS : undefined;
};

exports.threeDigitsPastDecimalPoint = threeDigitsPastDecimalPoint;

var notZero = function notZero(value) {
  return value && !/^(?!0$).*/i.test(value) ? _validationMessages.NOT_ZERO : undefined;
};

exports.notZero = notZero;

var phoneNumber = function phoneNumber(value) {
  return value && !/^(0|[1-9][0-9]{9})$/i.test(value) ? _validationMessages.INVALID_PHONE_10_DIGITS : undefined;
};

exports.phoneNumber = phoneNumber;

var googlePhoneNumber = function googlePhoneNumber(value) {
  return value && !/^\+[0-9]{1,3}.[0-9,-]{4,14}(?:x.+)?$/.test(value) ? _validationMessages.INVALID_PHONE : undefined;
};

exports.googlePhoneNumber = googlePhoneNumber;

var phone = function phone(value) {
  return value && (0, _isObject["default"])(value) && !value.isValid && !(0, _commonUtility.isEmpty)(value.value) ? _validationMessages.INVALID_PHONE_NUMBER : undefined;
};

exports.phone = phone;

var rangePickerValidation = function rangePickerValidation() {
  var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  if ((0, _commonUtility.isEmpty)(value) || !value.start && !value.end) {
    return _validationMessages.REQUIRED;
  }

  if (!value.start) {
    return _validationMessages.START_DATE_REQUIRED;
  }

  if (!value.end) {
    return _validationMessages.END_DATE_REQUIRED;
  }

  return undefined;
};

exports.rangePickerValidation = rangePickerValidation;