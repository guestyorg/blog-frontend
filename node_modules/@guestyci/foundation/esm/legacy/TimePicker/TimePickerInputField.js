import React from 'react';
import PropTypes from 'prop-types';
import cn from 'classnames';
import noop from 'lodash/noop';
import { createUseStyles } from 'react-jss';
import ActionButton from "../ActionButton";
import IconButton from "../IconButton/IconButton";
import PickerResetWrapper from "../basePicker/PickerResetWrapper";
import Fade from "../Fade";

var BtnTime = function BtnTime(props) {
  return /*#__PURE__*/React.createElement("svg", props, /*#__PURE__*/React.createElement("path", {
    d: "M10.5 0C4.71 0 0 4.71 0 10.5S4.71 21 10.5 21 21 16.29 21 10.5 16.29 0 10.5 0zm0 20C5.262 20 1 15.738 1 10.5S5.262 1 10.5 1 20 5.262 20 10.5 15.738 20 10.5 20z"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M10 5H9v7h7v-1h-6z"
  }));
};

BtnTime.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 21 21"
};

var BtnDelete = function BtnDelete(props) {
  return /*#__PURE__*/React.createElement("svg", props, /*#__PURE__*/React.createElement("path", {
    d: "M8.485.707L7.778 0 4.243 3.536.707 0 0 .707l3.536 3.536L0 7.778l.707.707L4.243 4.95l3.535 3.535.707-.707L4.95 4.243z"
  }));
};

BtnDelete.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 8.4854 8.4854"
};
var useStyles = createUseStyles({
  timeBtn: {
    borderLeftWidth: '0 !important',
    height: 46
  },
  input: {
    height: 46
  }
});

var TimePickerInputField = function TimePickerInputField(_ref) {
  var onReset = _ref.onReset,
      disabled = _ref.disabled,
      resetable = _ref.resetable,
      className = _ref.className,
      style = _ref.style,
      onClick = _ref.onClick,
      id = _ref.id,
      isOpen = _ref.isOpen,
      value = _ref.value,
      placeholder = _ref.placeholder,
      onClear = _ref.onClear,
      defaultValue = _ref.defaultValue,
      name = _ref.name,
      noClear = _ref.noClear;
  var classes = useStyles();
  return /*#__PURE__*/React.createElement(PickerResetWrapper, {
    id: id,
    onReset: onReset,
    disabled: disabled || defaultValue === value,
    resetable: resetable,
    className: cn('flex-end-center', className),
    style: style,
    "data-qa": "time-picker-input-field"
  }, /*#__PURE__*/React.createElement("div", {
    className: cn('d-flex flex-1 b-1 bg-white pl-4 border-gray-light align-items-center', classes.input),
    onClick: disabled ? null : onClick,
    role: "presentation"
  }, /*#__PURE__*/React.createElement("div", {
    className: "flex-1 h-fill flex-start-center font-size-md",
    name: name,
    id: id
  }, value ? /*#__PURE__*/React.createElement("span", {
    className: "time-value"
  }, value) : /*#__PURE__*/React.createElement("span", {
    className: "time-placeholder text-gray-dark"
  }, placeholder)), !noClear && /*#__PURE__*/React.createElement(Fade, {
    show: !!value && !disabled,
    className: "h-fill px-2 flex-center"
  }, /*#__PURE__*/React.createElement(IconButton, {
    key: 1,
    onClick: onClear,
    svg: BtnDelete,
    iconHeight: 10,
    iconWidth: 10
  }))), /*#__PURE__*/React.createElement(ActionButton, {
    iconHeight: 21,
    className: classes.timeBtn,
    iconColor: isOpen ? 'blue' : 'gray-dark',
    iconWidth: 21,
    onClick: onClick,
    disabled: disabled,
    id: id,
    svg: BtnTime,
    tooltip: "Select time"
  }));
};

TimePickerInputField.defaultProps = {
  onReset: noop,
  disabled: false,
  resetable: false,
  className: '',
  style: {},
  value: '',
  placeholder: '',
  defaultValue: '',
  name: '',
  id: '',
  noClear: false,
  isOpen: false
};
TimePickerInputField.propTypes = {
  onReset: PropTypes.func,
  disabled: PropTypes.bool,
  resetable: PropTypes.bool,
  noClear: PropTypes.bool,
  className: PropTypes.string,
  style: PropTypes.shape(),
  onClick: PropTypes.func.isRequired,
  value: PropTypes.string,
  placeholder: PropTypes.string,
  onClear: PropTypes.func.isRequired,
  defaultValue: PropTypes.string,
  name: PropTypes.string,
  id: PropTypes.string,
  isOpen: PropTypes.bool
};
export default TimePickerInputField;