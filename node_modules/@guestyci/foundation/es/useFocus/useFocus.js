import { useState, useRef, useEffect } from 'react';

const useFocus = () => {
  const [isFocused, setFocused] = useState(false);
  const focusRef = useRef(null);

  const onFocus = () => {
    setFocused(true);
  };

  const onBlur = () => {
    setFocused(false);
  };

  useEffect(() => {
    const node = focusRef.current;

    if (node) {
      node.addEventListener('focus', onFocus);
      node.addEventListener('blur', onBlur);
      return () => {
        node.removeEventListener('focus', onFocus);
        node.removeEventListener('blur', onBlur);
      };
    }
  }, []);
  return [isFocused, focusRef];
};

export default useFocus;