import _extends from "@babel/runtime/helpers/esm/extends";
import React from 'react';
import withStyles from 'react-jss';
import PropTypes from 'prop-types';
import size from 'lodash/size';
import cn from 'classnames';
import ThreadAttachment from "./ThreadAttachment";
const threadMessageStyle = {
  automatedMessage: {
    backgroundImage: 'repeating-linear-gradient(-67.5deg, transparent, transparent 7px, rgba(255, 255, 255, 0.4) 7px, rgba(255, 255, 255, 0.4) 10px)'
  }
};

const ThreadMessageBody = ({
  body,
  attachments,
  isAutoMessage,
  byUs,
  errorMessage,
  bgColor,
  onAttachmentClick,
  classes
}) => {
  return /*#__PURE__*/React.createElement("div", {
    className: cn('align-items-center mb-2 px-4 py-3 font-size-md', {
      'by-guest': !byUs
    }, {
      'by-us': byUs
    }, {
      'border border-red': !!errorMessage
    }, `bg-${bgColor}`, isAutoMessage ? `autoMsg ${classes.automatedMessage}` : null),
    "data-qa": "thread-message-body"
  }, /*#__PURE__*/React.createElement("span", {
    dangerouslySetInnerHTML: {
      __html: body ? body.replace(/\n/g, '<br/>') : null
    }
  }), !!size(attachments) && /*#__PURE__*/React.createElement("div", {
    className: "mt-4"
  }, attachments.map(attachment => /*#__PURE__*/React.createElement(ThreadAttachment, _extends({
    key: attachment.url,
    attachment: attachment,
    onAttachmentClick: onAttachmentClick
  }, attachment)))));
};

ThreadMessageBody.defaultProps = {
  isAutoMessage: false,
  byUs: true,
  bgColor: null,
  errorMessage: false
};
ThreadMessageBody.propTypes = {
  body: PropTypes.node.isRequired,
  attachments: PropTypes.arrayOf(PropTypes.shape()).isRequired,
  isAutoMessage: PropTypes.bool,
  byUs: PropTypes.bool,
  bgColor: PropTypes.string,
  onAttachmentClick: PropTypes.func,
  errorMessage: PropTypes.bool
};
export default withStyles(threadMessageStyle)(ThreadMessageBody);