import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import React from 'react';
import PropTypes from 'prop-types';
import cn from 'classnames';

var BtnDelete = function BtnDelete(props) {
  return /*#__PURE__*/React.createElement("svg", props, /*#__PURE__*/React.createElement("path", {
    d: "M8.485.707L7.778 0 4.243 3.536.707 0 0 .707l3.536 3.536L0 7.778l.707.707L4.243 4.95l3.535 3.535.707-.707L4.95 4.243z"
  }));
};

BtnDelete.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 8.4854 8.4854"
};
import IconButton from "../IconButton";
import TextField from "../TextField";
import Row from "../Layout/Row";
import createStyles from "../createStyles";
import { white } from "../theme/colors";
var useStyles = createStyles(function (theme) {
  return {
    root: {
      height: 35,
      marginBottom: theme.spacer(1),
      marginTop: theme.spacer(1),
      padding: "0px ".concat(theme.spacer(3), "px"),
      backgroundColor: theme.palette.secondary["default"],
      borderRadius: 2,
      color: white
    },
    icon: {
      color: white,
      '&:not([disabled]):hover': {
        backgroundColor: 'transparent'
      }
    }
  };
}, {
  name: 'Chip'
});
var Chip = React.forwardRef(function Chip(_ref, ref) {
  var value = _ref.value,
      onClear = _ref.onClear,
      noClear = _ref.noClear,
      jss = _ref.jss,
      className = _ref.className,
      props = _objectWithoutProperties(_ref, ["value", "onClear", "noClear", "jss", "className"]);

  var classes = useStyles({
    jss: jss
  });

  var handleClearClick = function handleClearClick(e) {
    onClear(e, value);
  };

  return /*#__PURE__*/React.createElement(Row, _extends({
    ref: ref,
    spacing: 2,
    className: cn(classes.root, className),
    justify: "between",
    align: "center",
    wrap: false
  }, props), /*#__PURE__*/React.createElement(TextField, null, value), !noClear && /*#__PURE__*/React.createElement(IconButton, {
    value: value,
    position: "suffix",
    component: "span",
    className: classes.icon,
    size: "xs",
    onClick: handleClearClick
  }, /*#__PURE__*/React.createElement(BtnDelete, {
    width: 12,
    height: 12
  })));
});
Chip.propTypes = {
  /** Child component to show in chip */
  value: PropTypes.string.isRequired,

  /** CB for clear click */
  onClear: PropTypes.func,

  /** Jss override to create custom styles */
  jss: PropTypes.oneOfType([PropTypes.shape(), PropTypes.func]),

  /** Boolean indicator whether or not to show clear button */
  noClear: PropTypes.bool,

  /** Additional classname  */
  className: PropTypes.string
};
Chip.displayName = 'Chip';
export default Chip;