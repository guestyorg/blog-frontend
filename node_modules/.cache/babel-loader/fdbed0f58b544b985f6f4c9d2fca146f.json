{"ast":null,"code":"import Axios from \"axios\";\nimport { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL } from \"../constants/userConstants\";\nimport Resource from \"@guestyci/agni\";\nconst {\n  api,\n  env,\n  config\n} = Resource.create();\nexport const register = (firstName, lastName, email, accountId) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      firstName,\n      lastName,\n      email,\n      accountId\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"http://localhost:5000/api/users/register\", {\n      firstName,\n      lastName,\n      email,\n      accountId\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signin = email => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"http://localhost:5000/api/users/signin\", {\n      email\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    }); // dispatch(emailUser(email));\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    // console.log(\"error :\", error);\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signout = () => dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_SIGNOUT\n  });\n  document.location.href = \"/signin\";\n};\nexport const listUsers = () => async dispatch => {\n  dispatch({\n    type: USER_LIST_REQUEST\n  });\n  console.log(\"USER_LIST_REQUEST\");\n\n  try {\n    // const { data } = await Axios.get(\"http://localhost:3000/user\");\n    // const temp = Resource.create('tasks');\n    // temp.api.defaults.baseURL = `http://localhost:9999/tasks`;\n    // export const tasksApi = temp.api;\n    const temp = Resource.create(\"user\");\n    temp.api.defaults.baseURL = `http://localhost:9999/user`;\n    const userApi = temp.api;\n    const data = await userApi.get(\"/user\"); // will go to `${config.MAILER_URL}/users`\n\n    console.log(\"data:\", data);\n    let counter = 1;\n    const arr = [];\n    let users = data;\n\n    for (let i = 0; i < users.length; i++) {\n      // console.log(\"users[i]: \", users[i]);\n      const arrUser = Object.entries(users[i]); // console.log(\"arrUser:\", arrUser);\n      //  firstName: {\n      //   children: 'John',\n      // },\n\n      const bigObj = {};\n\n      for (let j = 0; j < arrUser.length; j++) {\n        const obj = {}; // console.log(\"arrUser[j]: \", arrUser[j]);\n        // console.log(\"arrUser[0]: \",arrUser[j][0]);\n        // console.log(\"arrUser[1]: \",arrUser[j][1]);\n        // console.log(\"obj:\", obj);\n\n        if (arrUser[j][0] === \"_id\") {\n          obj.children = arrUser[j][1];\n          bigObj.id = obj;\n          bigObj._id = arrUser[j][1];\n        } else if (arrUser[j][0] === \"createdAt\" || arrUser[j][0] === \"updatedAt\") {\n          obj.children = new Date(arrUser[j][1]).toLocaleString();\n          bigObj[arrUser[j][0]] = obj;\n        } else if (arrUser[j][0] === \"account\") {\n          // console.log(\"arrUser:\", arrUser);\n          obj.children = arrUser[j][1].name;\n          bigObj[arrUser[j][0]] = obj;\n        } else {\n          obj.children = arrUser[j][1];\n          bigObj[arrUser[j][0]] = obj;\n        }\n\n        console.log(\"bigObj:\", bigObj); // arr.push( `${arrUser[j][0]}: {children: '${arrUser[j][1]}',}`)\n      } // arr.push({gilad:1,...users[i]})\n\n\n      arr.push({ ...bigObj\n      }); // arr.push({ _id: `${counter}`, ...bigObj });\n\n      counter++;\n    }\n\n    console.log(\"arr: \", arr); //  setData(response.data.results)\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: arr\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deleteUser = userId => async dispatch => {\n  dispatch({\n    type: USER_DELETE_REQUEST,\n    payload: userId\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.delete(`http://localhost:5000/api/users/${userId}`);\n    dispatch({\n      type: USER_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const detailsUser = userId => async dispatch => {\n  dispatch({\n    type: USER_DETAILS_REQUEST,\n    payload: userId\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`http://localhost:5000/api/users/${userId}`);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateUser = user => async dispatch => {\n  // console.log(\"user:\", user);\n  dispatch({\n    type: USER_UPDATE_PROFILE_REQUEST,\n    payload: user\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.patch(`http://localhost:5000/api/users/${user._id}`, user);\n    dispatch({\n      type: USER_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/actions/userActions.js"],"names":["Axios","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNOUT","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","Resource","api","env","config","create","register","firstName","lastName","email","accountId","dispatch","type","payload","data","post","localStorage","setItem","JSON","stringify","error","response","message","signin","signout","removeItem","document","location","href","listUsers","console","log","temp","defaults","baseURL","userApi","get","counter","arr","users","i","length","arrUser","Object","entries","bigObj","j","obj","children","id","_id","Date","toLocaleString","name","push","deleteUser","userId","delete","detailsUser","updateUser","user","patch"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\nimport {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_SIGNIN_FAIL,\n  USER_SIGNIN_REQUEST,\n  USER_SIGNIN_SUCCESS,\n  USER_SIGNOUT,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n} from \"../constants/userConstants\";\nimport Resource from \"@guestyci/agni\";\nconst { api, env, config } = Resource.create();\n\nexport const register =\n  (firstName, lastName, email, accountId) => async (dispatch) => {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n      payload: { firstName, lastName, email, accountId },\n    });\n    try {\n      const { data } = await Axios.post(\n        \"http://localhost:5000/api/users/register\",\n        {\n          firstName,\n          lastName,\n          email,\n          accountId,\n        }\n      );\n\n      dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n\n      dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n    } catch (error) {\n      dispatch({\n        type: USER_REGISTER_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\nexport const signin = (email) => async (dispatch) => {\n  dispatch({ type: USER_SIGNIN_REQUEST, payload: { email } });\n  try {\n    const { data } = await Axios.post(\n      \"http://localhost:5000/api/users/signin\",\n      { email }\n    );\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n    // dispatch(emailUser(email));\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    // console.log(\"error :\", error);\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const signout = () => (dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n\n  dispatch({ type: USER_SIGNOUT });\n  document.location.href = \"/signin\";\n};\n\nexport const listUsers = () => async (dispatch) => {\n  dispatch({ type: USER_LIST_REQUEST });\n  console.log(\"USER_LIST_REQUEST\");\n  try {\n    // const { data } = await Axios.get(\"http://localhost:3000/user\");\n\n\n    // const temp = Resource.create('tasks');\n    // temp.api.defaults.baseURL = `http://localhost:9999/tasks`;\n    // export const tasksApi = temp.api;\n\n    const temp = Resource.create(\"user\");\n    temp.api.defaults.baseURL = `http://localhost:9999/user`;\n\n    const userApi = temp.api    \n    \n    const data = await userApi.get(\"/user\"); // will go to `${config.MAILER_URL}/users`\n\n    console.log(\"data:\", data);\n\n    let counter = 1;\n    const arr = [];\n\n    let users = data;\n\n    for (let i = 0; i < users.length; i++) {\n      // console.log(\"users[i]: \", users[i]);\n\n      const arrUser = Object.entries(users[i]);\n      // console.log(\"arrUser:\", arrUser);\n\n      //  firstName: {\n      //   children: 'John',\n      // },\n\n      const bigObj = {};\n\n      for (let j = 0; j < arrUser.length; j++) {\n        const obj = {};\n        // console.log(\"arrUser[j]: \", arrUser[j]);\n        // console.log(\"arrUser[0]: \",arrUser[j][0]);\n        // console.log(\"arrUser[1]: \",arrUser[j][1]);\n\n        // console.log(\"obj:\", obj);\n\n        if (arrUser[j][0] === \"_id\") {\n          obj.children = arrUser[j][1];\n\n          bigObj.id = obj;\n\n          bigObj._id = arrUser[j][1];\n        } else if (\n          arrUser[j][0] === \"createdAt\" ||\n          arrUser[j][0] === \"updatedAt\"\n        ) {\n          obj.children = new Date(arrUser[j][1]).toLocaleString();\n\n          bigObj[arrUser[j][0]] = obj;\n        } else if (arrUser[j][0] === \"account\") {\n          // console.log(\"arrUser:\", arrUser);\n\n          obj.children = arrUser[j][1].name;\n\n          bigObj[arrUser[j][0]] = obj;\n        } else {\n          obj.children = arrUser[j][1];\n\n          bigObj[arrUser[j][0]] = obj;\n        }\n\n        console.log(\"bigObj:\", bigObj);\n\n        // arr.push( `${arrUser[j][0]}: {children: '${arrUser[j][1]}',}`)\n      }\n      // arr.push({gilad:1,...users[i]})\n      arr.push({ ...bigObj });\n      // arr.push({ _id: `${counter}`, ...bigObj });\n\n      counter++;\n    }\n\n    console.log(\"arr: \", arr);\n    //  setData(response.data.results)\n\n    dispatch({ type: USER_LIST_SUCCESS, payload: arr });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: USER_LIST_FAIL, payload: message });\n  }\n};\n\nexport const deleteUser = (userId) => async (dispatch) => {\n  dispatch({ type: USER_DELETE_REQUEST, payload: userId });\n\n  try {\n    const { data } = await Axios.delete(\n      `http://localhost:5000/api/users/${userId}`\n    );\n    dispatch({ type: USER_DELETE_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: USER_DELETE_FAIL, payload: message });\n  }\n};\n\nexport const detailsUser = (userId) => async (dispatch) => {\n  dispatch({ type: USER_DETAILS_REQUEST, payload: userId });\n\n  try {\n    const { data } = await Axios.get(\n      `http://localhost:5000/api/users/${userId}`\n    );\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: USER_DETAILS_FAIL, payload: message });\n  }\n};\n\nexport const updateUser = (user) => async (dispatch) => {\n  // console.log(\"user:\", user);\n  dispatch({ type: USER_UPDATE_PROFILE_REQUEST, payload: user });\n  try {\n    const { data } = await Axios.patch(\n      `http://localhost:5000/api/users/${user._id}`,\n      user\n    );\n    dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: USER_UPDATE_FAIL, payload: message });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}