import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
import _extends from "@babel/runtime/helpers/esm/extends";
import React from 'react';
import PropTypes from 'prop-types';
import cn from 'classnames';
import createStyles from "../../createStyles";
import { firstLetterUppercase as capitalize } from "../../utils";
import styles, { generateMediaSupport, generateSpacing, spacing as spacingArray } from "../styles";
export const useStyles = createStyles(theme => {
  const breakpoints = generateMediaSupport(theme.breakpoints);
  const spacing = generateSpacing(theme.spacer, spacingArray, 'bottom');
  return _extends({
    root: {
      display: 'flex'
    },
    flexDirectionColumn: {
      flexDirection: 'column'
    },
    flexDirectionColumnReverse: {
      flexDirection: 'column-reverse'
    },
    lastChildSpacing: {
      '& > *:last-child': {
        marginBottom: 0
      }
    }
  }, styles, {}, breakpoints, {}, spacing);
}, {
  name: 'Col'
});
const Col = React.forwardRef(function Col(_ref, ref) {
  let {
    className,
    style,
    children,
    wrap,
    breakpoints,
    span,
    reverse,
    align,
    justify,
    fullWidth,
    spacing,
    jss = {}
  } = _ref,
      props = _objectWithoutPropertiesLoose(_ref, ["className", "style", "children", "wrap", "breakpoints", "span", "reverse", "align", "justify", "fullWidth", "spacing", "jss"]);

  const classes = useStyles({
    jss
  });
  const {
    xs,
    sm,
    md,
    lg,
    xl,
    xlg
  } = breakpoints || {};
  const xsSize = span || xs;
  return /*#__PURE__*/React.createElement("div", _extends({}, props, {
    ref: ref,
    className: cn(classes.root, {
      [classes.flexWrap]: wrap,
      [classes[`spacing${spacing}`]]: spacing,
      [classes.lastChildSpacing]: spacing,
      [classes.fullWidth]: fullWidth,
      [classes.flexDirectionColumn]: !reverse,
      [classes.flexDirectionColumnReverse]: reverse,
      [classes[`justify${capitalize(justify)}`]]: justify !== 'start',
      [classes[`alignItems${capitalize(align)}`]]: align !== 'stretch',
      [classes[`col-xs-${xsSize}`]]: xsSize,
      [classes[`col-sm-${sm}`]]: sm,
      [classes[`col-md-${md}`]]: md,
      [classes[`col-lg-${lg}`]]: lg,
      [classes[`col-xl-${xl}`]]: xl,
      [classes[`col-xlg-${xlg}`]]: xlg
    }, 'col-wrapper', className),
    style: style
  }), children);
});
Col.defaultProps = {
  className: '',
  style: {},
  children: null,
  align: 'inherit',
  justify: 'inherit',
  spacing: 0,
  span: 0,
  breakpoints: {},
  fullWidth: false
};
Col.propTypes = {
  /** Additional class for top level */
  className: PropTypes.string,

  /** Indicator whether or not to render flex wrap */
  wrap: PropTypes.bool,

  /** Indicator whether or not to render flex direction reverse */
  reverse: PropTypes.bool,

  /** Additional styling for root level */
  style: PropTypes.shape(),

  /** set spacing between child components - available value - [0,1,2,3,4,5,6,7,8,9,10, 11 ,12] will be determined by the theme spacer (default 5) */
  spacing: PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),

  /** Child components inside a section */
  children: PropTypes.oneOfType([PropTypes.node, PropTypes.arrayOf(PropTypes.node)]),

  /** Set flex alignment - available values = ['start', 'center', 'end', 'stretch', 'baseline']  */
  align: PropTypes.oneOf(['start', 'center', 'end', 'stretch', 'baseline', 'inherit']),

  /** Set flex justify content - available values = ['start','center','end','between','around','evenly'] */
  justify: PropTypes.oneOf(['start', 'center', 'end', 'between', 'around', 'evenly', 'inherit']),

  /** Set the column width to fit parent */
  fullWidth: PropTypes.bool,

  /** Set the column span width - available values = [auto,1,2,3,4,5,6,7,8,9,10,11,12] */
  span: PropTypes.oneOf(['auto', 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),

  /** specify the media query breakpoints for the column - available values = {xs,sm,md,lg,xl,xlg} */
  breakpoints: PropTypes.shape(),

  /** JSS overrides */
  jss: PropTypes.oneOfType([PropTypes.shape(), PropTypes.func])
}; // Hack for withInfo plugin

Col.displayName = 'Col';
export default Col;