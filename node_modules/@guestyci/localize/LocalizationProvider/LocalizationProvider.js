"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _moment = _interopRequireDefault(require("moment"));

var _memoize = _interopRequireDefault(require("@guestyci/memoize"));

var _i18nUtility = require("../utils/i18nUtility");

var _LocalizationContext = _interopRequireDefault(require("./LocalizationContext"));

var lang = window.localStorage.getItem('lang') || 'en-US';

var LocalizationProvider =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2["default"])(LocalizationProvider, _Component);

  function LocalizationProvider(props) {
    var _this;

    (0, _classCallCheck2["default"])(this, LocalizationProvider);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(LocalizationProvider).call(this, props));
    _this.getIsEnglish = (0, _memoize["default"])(function () {
      var language = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
      return language.split('-')[0] === 'en';
    });
    _this.state = {
      isLocalizationReady: false
    };
    return _this;
  }

  (0, _createClass2["default"])(LocalizationProvider, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var language = this.props.language;
      this.loadLocales(language || lang);

      _moment["default"].locale(language || lang);
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      var language = this.props.language;

      if (prevProps.language !== language) {
        this.loadLocales(language || lang);

        _moment["default"].locale(language || lang);
      }
    }
  }, {
    key: "loadLocales",
    value: function loadLocales(language) {
      var _this2 = this;

      this.setState({
        isLocalizationReady: false
      });

      _i18nUtility.intl.init({
        currentLocale: language,
        locales: _i18nUtility.locales,
        warningHandler: _i18nUtility.warningHandler,
        fallbackLocale: 'en-US'
      }).then(function () {
        _this2.setState({
          isLocalizationReady: true
        });
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          children = _this$props.children,
          language = _this$props.language;
      var isLocalizationReady = this.state.isLocalizationReady;
      var isEnglish = this.getIsEnglish(language || lang);
      return _react["default"].createElement(_LocalizationContext["default"].Provider, {
        value: {
          language: language || lang,
          isEnglish: isEnglish
        }
      }, isLocalizationReady && children);
    }
  }]);
  return LocalizationProvider;
}(_react.Component);

LocalizationProvider.defaultProps = {
  language: undefined
};
LocalizationProvider.propTypes = {
  language: _propTypes["default"].string,
  children: _propTypes["default"].oneOfType([_propTypes["default"].node, _propTypes["default"].arrayOf(_propTypes["default"].node)]).isRequired
};
var _default = LocalizationProvider;
exports["default"] = _default;