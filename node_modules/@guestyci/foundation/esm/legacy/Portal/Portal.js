import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import { useEffect, useState } from 'react';
import PropTypes from 'prop-types';
import ReactDOM from 'react-dom';

var getContainerElement = function getContainerElement(container) {
  var domNode = typeof container === 'function' ? container() : container; // eslint-disable-next-line react/no-find-dom-node

  return ReactDOM.findDOMNode(domNode);
};

var Portal = function Portal(_ref) {
  var container = _ref.container,
      children = _ref.children,
      onRender = _ref.onRender;

  var _useState = useState(null),
      _useState2 = _slicedToArray(_useState, 2),
      containerNode = _useState2[0],
      setContainerNode = _useState2[1];

  useEffect(function () {
    setContainerNode(getContainerElement(container) || document.body);
  }, [container]);
  useEffect(function () {
    if (onRender && containerNode) {
      onRender();
    }
  }, [onRender, containerNode]);
  return containerNode ? ReactDOM.createPortal(children, containerNode) : containerNode;
};

Portal.propTypes = {
  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,
  onRender: PropTypes.func,
  container: PropTypes.node
};
export default Portal;