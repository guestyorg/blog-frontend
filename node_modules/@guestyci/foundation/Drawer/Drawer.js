"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.useStyles = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Col = _interopRequireDefault(require("../Layout/Col"));

var _Paper = _interopRequireDefault(require("../Paper"));

var _createStyles = _interopRequireDefault(require("../createStyles"));

var calculateDrawerWrapperHeight = function calculateDrawerWrapperHeight(open, overlay) {
  if (overlay) {
    return '100%';
  }

  return open ? '100%' : 0;
};

var useStyles = (0, _createStyles["default"])(function (theme) {
  return {
    root: {
      transition: 'width 225ms cubic-bezier(0, 0, 0.2, 1) 0ms, height 220ms cubic-bezier(0, 0, 0.2, 1) 0ms !important',
      height: function height(_ref) {
        var open = _ref.open,
            overlay = _ref.overlay;
        return "".concat(calculateDrawerWrapperHeight(open, overlay));
      },
      overflow: 'hidden !important',
      zIndex: 5,
      flexShrink: 0
    },
    drawer: {
      transition: 'transform 225ms cubic-bezier(0, 0, 0.2, 1) 0ms !important',
      transform: function transform(_ref2) {
        var open = _ref2.open;
        return "translateX(".concat(open ? 0 : '-100%', ")");
      },
      width: function width(_ref3) {
        var _width = _ref3.width;
        return _width;
      },
      overflowY: 'auto !important',
      padding: theme.spacer(2)
    },
    open: {
      width: function width(_ref4) {
        var _width2 = _ref4.width;
        return "".concat(_width2, "px !important");
      }
    },
    close: {
      width: '0px !important'
    },
    overlay: {
      position: 'absolute'
    },
    right: {
      right: 0
    },
    fixed: {
      position: 'fixed'
    }
  };
}, {
  name: 'Drawer'
});
exports.useStyles = useStyles;
var Drawer = (0, _react.forwardRef)(function Drawer(_ref5, ref) {
  var _ref5$className = _ref5.className,
      className = _ref5$className === void 0 ? '' : _ref5$className,
      _ref5$overlay = _ref5.overlay,
      overlay = _ref5$overlay === void 0 ? false : _ref5$overlay,
      _ref5$style = _ref5.style,
      style = _ref5$style === void 0 ? {} : _ref5$style,
      open = _ref5.open,
      children = _ref5.children,
      _ref5$width = _ref5.width,
      width = _ref5$width === void 0 ? 250 : _ref5$width,
      _ref5$elevation = _ref5.elevation,
      elevation = _ref5$elevation === void 0 ? 1 : _ref5$elevation,
      _ref5$right = _ref5.right,
      right = _ref5$right === void 0 ? false : _ref5$right,
      _ref5$bgColor = _ref5.bgColor,
      bgColor = _ref5$bgColor === void 0 ? '' : _ref5$bgColor,
      jss = _ref5.jss,
      _ref5$fixed = _ref5.fixed,
      fixed = _ref5$fixed === void 0 ? false : _ref5$fixed,
      onDrawerTransitionEnd = _ref5.onDrawerTransitionEnd;
  var classes = useStyles({
    open: open,
    width: width,
    overlay: overlay,
    jss: jss
  });
  return /*#__PURE__*/_react["default"].createElement(_Paper["default"], {
    elevation: elevation,
    ref: ref,
    bgColor: bgColor,
    className: (0, _classnames["default"])(classes.root, (0, _defineProperty2["default"])({}, classes.open, open), (0, _defineProperty2["default"])({}, classes.close, !open), (0, _defineProperty2["default"])({}, classes.right, overlay && right), (0, _defineProperty2["default"])({}, classes.overlay, overlay), (0, _defineProperty2["default"])({}, classes.fixed, fixed), className),
    style: style,
    onTransitionEnd: onDrawerTransitionEnd
  }, /*#__PURE__*/_react["default"].createElement(_Col["default"], {
    fullWidth: true,
    className: classes.drawer
  }, children));
});
Drawer.propTypes = {
  /** Additional classname  */
  className: _propTypes["default"].string,

  /** Indicator whether or not to show drawer */
  open: _propTypes["default"].bool.isRequired,

  /** Child elements inside drawer */
  children: _propTypes["default"].oneOfType([_propTypes["default"].arrayOf(_propTypes["default"].node), _propTypes["default"].node]).isRequired,

  /** Additional style to root level */
  style: _propTypes["default"].shape(),

  /** drawer width */
  width: _propTypes["default"].number,

  /** indicator whether or not drawer should overlay over content (position absolute) or static
   * *Note - overlay auto toggles parent component with position relative
   * */
  overlay: _propTypes["default"].bool,

  /** Only applicable for overlay = true -
   *  Indicator whether or not we want to open drawer on right - default left
   *  */
  right: _propTypes["default"].bool,

  /** The drawer paper elevation level * */
  elevation: _propTypes["default"].number,

  /** Background color for drawer */
  bgColor: _propTypes["default"].string,

  /** Jss override to create custom styles */
  jss: _propTypes["default"].oneOfType([_propTypes["default"].shape(), _propTypes["default"].func]),

  /** Set drawer as fixed */
  fixed: _propTypes["default"].bool,

  /** Callback hook for the Drawer slide transition end */
  onDrawerTransitionEnd: _propTypes["default"].func
};
Drawer.displayName = 'Drawer';
var _default = Drawer;
exports["default"] = _default;