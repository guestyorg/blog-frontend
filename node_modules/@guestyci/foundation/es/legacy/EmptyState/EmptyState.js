import React from 'react';
import PropTypes from 'prop-types';
import cn from 'classnames';
import noop from 'lodash/noop';
import Icon from "../Icon";
import RaisedButton from "../RaisedButton/RaisedButton";

const EmptyState = ({
  className,
  style,
  iconName,
  svg,
  title,
  description,
  iconWidth,
  iconHeight,
  onClick,
  buttonLabel
}) => /*#__PURE__*/React.createElement("div", {
  className: cn('flex-center flex-column h-fill max-width-450', className),
  style: style,
  "data-qa": "empty-state"
}, /*#__PURE__*/React.createElement(Icon, {
  className: "mb-5",
  icon: iconName,
  svg: svg,
  height: iconHeight,
  width: iconWidth
}), /*#__PURE__*/React.createElement("div", {
  className: cn('text-muted font-size-xl text-align-center overflow-ellipsis mb-2 w-fill max-width-450')
}, title), /*#__PURE__*/React.createElement("div", {
  className: "text-muted font-size-lg text-align-center w-fill"
}, description), buttonLabel ? /*#__PURE__*/React.createElement("div", {
  className: "mt-4"
}, /*#__PURE__*/React.createElement("div", {
  className: "d-flex justify-content-center"
}, /*#__PURE__*/React.createElement(RaisedButton, {
  onClick: onClick
}, buttonLabel))) : null);

EmptyState.defaultProps = {
  iconWidth: 100,
  iconHeight: 100,
  className: '',
  buttonLabel: '',
  style: {},
  onClick: noop
};
EmptyState.propTypes = {
  /** Additional class name for person */
  className: PropTypes.string,

  /** Additional style name to root level */
  style: PropTypes.shape(),

  /** Icon - chooses the appropriate icon by its name */
  iconName: PropTypes.string,

  /** The svg icon to render */
  svg: PropTypes.oneOfType([PropTypes.shape(), PropTypes.func]),

  /** Button click callback function */
  onClick: PropTypes.func,

  /** sets the icon's width */
  iconWidth: PropTypes.number,

  /** sets the icon's height */
  iconHeight: PropTypes.number,

  /** Title - sets the text of the title */
  title: PropTypes.string.isRequired,

  /** buttonLabel - sets the button label of the button */
  buttonLabel: PropTypes.string,

  /** Description - sets the element of the description */
  description: PropTypes.oneOfType([PropTypes.node, PropTypes.element]).isRequired
};
export default EmptyState;