import React from 'react';
import cn from 'classnames';
import PropTypes from 'prop-types';
import noop from 'lodash/noop';
import Row from "../../../Layout/Row";
import TextField from "../../../TextField";
import createStyles from "../../../createStyles";
import { white, red } from "../../../theme/colors";
import CSSTransition from "../../../CSSTransition";
import Button from "../../../Button";
const useStyles = createStyles(theme => ({
  root: {
    backgroundColor: red,
    height: 40,
    transformOrigin: '50% 100%',
    color: white
  },
  scaleEnter: {
    opacity: 0.01,
    transform: 'scaleY(0)'
  },
  scaleEnterDone: {
    opacity: 1,
    transform: 'scaleY(1)'
  },
  scaleExit: {
    opacity: 1,
    transform: 'scaleY(1)'
  },
  scaleExitDone: {
    opacity: 0.01,
    transform: 'scaleY(0)'
  },
  scaleEnterActive: {
    transform: 'scaleY(1)',
    opacity: 1,
    transition: theme.transition.create()
  },
  scaleExitActive: {
    transform: 'scaleY(0)',
    opacity: 0.01,
    transition: theme.transition.create()
  },
  button: {
    color: [white, '!important'],
    textDecoration: 'underline',
    backgroundColor: 'transparent',
    border: 0,
    padding: [0, '!important']
  }
}), {
  name: 'ErrorBanner'
});
const ErrorBanner = React.memo(function ErrorBanner({
  show = false,
  errorMessage = '',
  onClick,
  actionText,
  className
}) {
  const classes = useStyles();
  return /*#__PURE__*/React.createElement(CSSTransition, {
    unmountOnExit: true,
    animation: {
      enter: classes.scaleEnter,
      enterActive: classes.scaleEnterActive,
      exit: classes.scaleExit,
      exitActive: classes.scaleExitActive,
      enterDone: classes.scaleEnterDone,
      exitDone: classes.scaleExitDone
    },
    show: show
  }, /*#__PURE__*/React.createElement(Row, {
    justify: "center",
    align: "center",
    spacing: 2,
    fullWidth: true,
    className: cn(classes.root, className)
  }, /*#__PURE__*/React.createElement(TextField, null, errorMessage), actionText && onClick && /*#__PURE__*/React.createElement(Button, {
    onClick: onClick,
    className: classes.button
  }, actionText)));
});
ErrorBanner.defaultProps = {
  show: false,
  errorMessage: '',
  onClick: noop,
  actionText: undefined,
  className: ''
};
ErrorBanner.propTypes = {
  /** Boolean flag to show the banner */
  show: PropTypes.bool,

  /** String with the error message */
  errorMessage: PropTypes.string,

  /** Action to happen on banner  button click */
  onClick: PropTypes.func,

  /** String with the action text */
  actionText: PropTypes.string,

  /** Additional class prop */
  className: PropTypes.string
};
ErrorBanner.displayName = 'ErrorBanner';
export default ErrorBanner;