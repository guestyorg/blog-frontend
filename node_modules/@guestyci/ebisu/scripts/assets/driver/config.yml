version: 2.1
orbs:
  slack: circleci/slack@2.5.1
  jq: circleci/jq@1.9.0

defaults: &defaults
  working_directory: ~/package
  docker:
    - image: 'circleci/node:8.13.0'

version_filter: &version_filter
  tags:
    only: /^v.*/

branches_ignore: &branches_ignore
  branches:
    ignore: /.*/

commands:
  authenticate_npm:
    description: 'Authenticate with Registry'
    steps:
      - run:
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc

  install_deps:
    description: 'Install all dependencies and use cache'
    steps:
      - authenticate_npm

      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}

      - run:
          name: 'Installing npm Pacakges'
          command: npm ci

      - save_cache:
          name: Save npm package cache
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules

      - persist_to_workspace:
          root: .
          paths: .

jobs:
  publish_npm:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/package

      - run: ls -la
      - authenticate_npm

      - run: |
          regex=".*-alpha\.[0-9]"

          if [[ ${CIRCLE_TAG} =~ $regex ]]
          then
            npm publish --tag alpha
          else
            npm publish
          fi

  publish_github:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/package

      - run: |
          echo "//npm.pkg.github.com/:_authToken=$GITHUB_PACKAGES_TOKEN_RW" > ~/.npmrc
          echo "registry=https://npm.pkg.github.com/guestyorg" >> ~/.npmrc

          regex=".*-alpha\.[0-9]"

          cat package.json | jq '.name='$(cat package.json | jq '.name' | sed 's/\@guestyci/\@guestyorg/')'' > package_tmp.json

          cat package_tmp.json | jq '. + {"publishConfig":{"registry":"https://npm.pkg.github.com/guestyorg"}}' > package_tmp_2.json

          cat package_tmp_2.json | jq ". + {\"repository\":{\"type\":\"git\",\"url\":\"https://github.com/guestyorg/${CIRCLE_PROJECT_REPONAME}.git\"}}" > package.json

          if [[ ${CIRCLE_TAG} =~ $regex ]]
          then
            npm publish --tag alpha
          else
            npm publish
          fi

      #::inject-publish-steps-end.yml

  test:
    working_directory: ~/package
    docker:
      - image: 'circleci/node:8.13.0'
      #::inject-test-containers.yml

    steps:
      - checkout
      - install_deps

      #::inject-test-steps-start.yml

      - run:
          name: Run Tests
          command: npm run test --if-present

      #::inject-test-steps-end.yml

workflows:
  test-and-publish:
    jobs:
      #::inject-workflow-jobs-start.yml

      - test:
          context: org-core-libs
          post-steps:
            - slack/status:
                fail_only: 'true'
                failure_message: 'tests failed for *${CIRCLE_PROJECT_REPONAME}*.'
                webhook: ${SLACK_INFRA_WEBHOOK}
                include_job_number_field: false
                include_project_field: false

          filters:
            <<: *version_filter

      - publish_npm:
          context: org-core-libs
          requires:
            - test

          filters:
            <<: *version_filter
            <<: *branches_ignore

      - publish_github:
          context: org-core-libs
          requires:
            - test

          post-steps:
            - jq/install
            - run: echo "export PACKAGE="$(cat package.json | jq '.name')"" >> $BASH_ENV

            - slack/status:
                success_message: '*${PACKAGE}* ${CIRCLE_TAG} was released.'
                failure_message: '*${PACKAGE}* ${CIRCLE_TAG} failed publish.'
                webhook: ${SLACK_INFRA_WEBHOOK}
                include_job_number_field: false
                include_project_field: false

          filters:
            <<: *version_filter
            <<: *branches_ignore
      #::inject-workflow-jobs-end.yml
