import React from 'react';
import PropTypes from 'prop-types';
import cn from 'classnames';
import withStyle from 'react-jss';
import ImageAvatar from "./ImageAvatar";
import IconAvatar from "./IconAvatar";
import TextAvatar from "./TextAvatar";

var IconAvatarListingSM = function IconAvatarListingSM(props) {
  return /*#__PURE__*/React.createElement("svg", props, /*#__PURE__*/React.createElement("path", {
    d: "M15.578 8.833H8.866a.58.58 0 0 0-.552.39h7.817a.58.58 0 0 0-.553-.39zM8.278 24.253c1.32.475 2.738.747 4.222.747 1.276 0 2.507-.194 3.667-.55V10.223h-7.89v14.031zm5.945-12.309h1v1.112h-1v-1.112zm0 3.056h1v1.111h-1v-1.11zm0 3.333h1v1.111h-1v-1.11zm0 3.056h1V22.5h-1V21.39zm-1.112-9.445h1v1.112h-1v-1.112zm0 3.056h1v1.111h-1v-1.11zm0 3.333h1v1.111h-1v-1.11zm0 3.056h1V22.5h-1V21.39zm-2.917-9.445h1v1.112h-1v-1.112zm0 3.056h1v1.111h-1v-1.11zm0 3.333h1v1.111h-1v-1.11zm0 3.056h1V22.5h-1V21.39zm-1.11-9.445h1v1.112h-1v-1.112zm0 3.056h1v1.111h-1v-1.11zm0 3.333h1v1.111h-1v-1.11zm0 3.056h1V22.5h-1V21.39zM3.833 21.495a12.508 12.508 0 0 0 3.445 2.35V13.834H3.833v7.662zM20.307 12.083h-3.14v.75h3.444v-.464c0-.157-.136-.286-.304-.286zM17.167 23.861h.523a12.495 12.495 0 0 0 2.921-1.86v-8.168h-3.444v10.028zM3.833 12.37v.463h3.445v-.75h-3.14c-.168 0-.305.129-.305.286z"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M25 12.5C25 5.596 19.404 0 12.5 0S0 5.596 0 12.5c0 3.008 1.064 5.766 2.833 7.923V12.37c0-.709.586-1.286 1.305-1.286h3.14v-1.69c0-.86.712-1.56 1.588-1.56h6.712c.876 0 1.589.7 1.589 1.56v1.69h3.14c.72 0 1.304.577 1.304 1.286v8.67A12.443 12.443 0 0 0 25 12.5z"
  }));
};

IconAvatarListingSM.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 25 25"
};

var IconAvatarListingMD = function IconAvatarListingMD(props) {
  return /*#__PURE__*/React.createElement("svg", props, /*#__PURE__*/React.createElement("path", {
    d: "M27.833 38.405a20.017 20.017 0 0 0 6.111-4.083V22.5h-6.111v15.905zM6.5 34.726a19.973 19.973 0 0 0 6.111 3.847V22.5H6.5v12.226zM25.592 14.5H14.853c-.685 0-1.242.536-1.242 1.195v.027h13.222v-.027c0-.659-.557-1.195-1.241-1.195zM13.611 38.94A19.939 19.939 0 0 0 20 40c2.404 0 4.698-.446 6.833-1.223V16.722H13.611V38.94zm10.112-19.162h1v1.778h-1v-1.778zm0 4.89h1v1.776h-1v-1.777zm0 5.332h1v1.777h-1V30zm0 4.889h1v1.778h-1V34.89zm-1.779-15.111h1v1.778h-1v-1.778zm0 4.89h1v1.776h-1v-1.777zm0 5.332h1v1.777h-1V30zm0 4.889h1v1.778h-1V34.89zm-4.833-15.111h1v1.778h-1v-1.778zm0 4.89h1v1.776h-1v-1.777zm0 5.332h1v1.777h-1V30zm0 4.889h1v1.778h-1V34.89zm-1.778-15.111h1v1.778h-1v-1.778zm0 4.89h1v1.776h-1v-1.777zm0 5.332h1v1.777h-1V30zm0 4.889h1v1.778h-1V34.89zM6.5 20.458V21.5h6.111v-1.8H7.288c-.434 0-.788.34-.788.758z"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M40 20C40 8.954 31.046 0 20 0S0 8.954 0 20c0 5.331 2.1 10.163 5.5 13.748v-13.29c0-.97.802-1.758 1.788-1.758h5.323v-3.005c0-1.21 1.006-2.195 2.242-2.195h10.739c1.235 0 2.241.984 2.241 2.195V18.7h5.323c.987 0 1.788.788 1.788 1.758V33.26C38.08 29.728 40 25.094 40 20z"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M33.156 19.7h-5.323v1.8h6.111v-1.042c0-.418-.353-.758-.788-.758z"
  }));
};

IconAvatarListingMD.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 40 40"
};

var IcoAvatarGSC = function IcoAvatarGSC(props) {
  return /*#__PURE__*/React.createElement("svg", props, /*#__PURE__*/React.createElement("path", {
    d: "M20 0C8.954 0 0 8.954 0 20s8.954 20 20 20 20-8.954 20-20S31.046 0 20 0zm10 28.153a.85.85 0 0 1-.849.847.85.85 0 0 1-.848-.847V16.69L20 10.885l-8.303 5.805v10.615h11.917v-8.247L20 16.532l-3.614 2.526v4.302a.85.85 0 0 1-.848.847.85.85 0 0 1-.849-.847v-4.714-.007a.847.847 0 0 1 .361-.715l4.36-3.048a.849.849 0 0 1 .547-.226c.014-.001.028-.004.043-.004.015 0 .029.003.043.004.2.008.396.084.547.225l4.36 3.049a.845.845 0 0 1 .352.785c.003.029.009.057.009.086v9.358a.85.85 0 0 1-.849.847H10.85a.85.85 0 0 1-.849-.847V16.295l.002-.017a.846.846 0 0 1 .359-.722l9.05-6.327a.849.849 0 0 1 .546-.226c.014 0 .028-.003.043-.003.015 0 .029.003.043.003.2.01.396.085.547.226l9.049 6.327c.243.17.368.446.36.722l.001.017v11.858z"
  }));
};

IcoAvatarGSC.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 40 40"
};
const styles = {
  badge: {
    left: '55%',
    top: '55%',
    position: 'absolute'
  }
};

const Avatar = ({
  classes,
  listing,
  isUser,
  bordered,
  disabled,
  text,
  isGSC,
  src,
  size,
  className,
  style,
  badge
}) => /*#__PURE__*/React.createElement("div", {
  className: cn('relative transition-all', {
    disabled
  }, className),
  style: style,
  "data-qa": "avatar"
}, src && /*#__PURE__*/React.createElement(ImageAvatar, {
  src: src,
  bordered: listing && bordered,
  text: text,
  size: size
}), !src && listing && !isGSC && /*#__PURE__*/React.createElement(IconAvatar, {
  icon: size === 'md' ? IconAvatarListingMD : IconAvatarListingSM,
  size: size
}), !src && !listing && isGSC && /*#__PURE__*/React.createElement(IconAvatar, {
  color: "blue-dark",
  icon: IcoAvatarGSC,
  size: size
}), !src && !listing && !isGSC && /*#__PURE__*/React.createElement(TextAvatar, {
  size: size,
  text: text,
  isUser: isUser
}), badge && /*#__PURE__*/React.createElement("div", {
  className: classes.badge
}, badge));

Avatar.defaultProps = {
  listing: false,
  isUser: false,
  src: undefined,
  text: '',
  size: 'md',
  bordered: false,
  disabled: false,
  className: '',
  style: {},
  badge: null,
  isGSC: false
};
Avatar.propTypes = {
  /** Define if avatar is listing avatar */
  listing: PropTypes.bool,

  /** Set whether or not the user avatar is user or not (guest, owner, contact => not users) */
  isUser: PropTypes.bool,

  /** The Image avatar image src */
  src: PropTypes.string,

  /** The text/ alt for text avatar or image avatar - Accepting two letters or nothing */
  text: PropTypes.string,

  /** Avatar size - accepting only sm,md,lg */
  size: PropTypes.oneOf(['sm', 'md', 'lg', 'xl']),

  /** Boolean - show/hide image avatar border */
  bordered: PropTypes.bool,

  /** Boolean - Set whether or not the avatar should be transparent */
  disabled: PropTypes.bool,

  /** Add className to avatar */
  className: PropTypes.string,

  /** Add style to avatar */
  style: PropTypes.shape(),

  /** Add Badge to avatar */
  badge: PropTypes.node,
  isGSC: PropTypes.bool
};
/** Work around to fix storybook HOC propTypes bug  - DO NOT IMPORT THIS */

export const AvatarComponent = Avatar;
export default withStyle(styles)(Avatar);