import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import React from 'react';
import { createUseStyles } from 'react-jss';
import PropTypes from 'prop-types';
import cn from 'classnames';
import { grayLighter, grayLight } from "../../theme/colors";
var useStyles = createUseStyles({
  '@keyframes shimmer': {
    from: {
      backgroundPosition: -1000
    },
    to: {
      backgroundPosition: 1000
    }
  },
  placeholder: {
    backgroundColor: grayLighter,
    display: 'inline-block'
  },
  animate: {
    animation: '$shimmer 2s infinite linear',
    background: "linear-gradient(to right, ".concat(grayLighter, " 8%, ").concat(grayLight, " 18%, ").concat(grayLighter, " 33%);"),
    backgroundSize: 1000
  }
});

var Placeholder = function Placeholder(_ref) {
  var className = _ref.className,
      style = _ref.style,
      animate = _ref.animate;
  var classes = useStyles();
  return /*#__PURE__*/React.createElement("div", {
    className: cn(className, classes.placeholder, _defineProperty({}, classes.animate, animate)),
    style: style,
    "data-qa": "placeholder"
  });
};

Placeholder.defaultProps = {
  className: '',
  style: {},
  animate: true
};
Placeholder.propTypes = {
  /** Additional classes to style your placeholder */
  className: PropTypes.string,

  /** additional styles to pass to placeholder */
  style: PropTypes.shape(),

  /** if placeholder should be animated */
  animate: PropTypes.bool
};
export default Placeholder;