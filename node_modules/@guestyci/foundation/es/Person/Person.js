import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
import React, { useMemo } from 'react';
import PropTypes from 'prop-types';
import cn from 'classnames';
import TextField from "../TextField";
import Row from "../Layout/Row";
import Avatar from "../Avatar";
import createStyles from "../createStyles";
import Col from "../Layout/Col";
import ReturningGuestBadge from "./ReturningGuestBadge";
import { nameToInitials } from "../utils";
export const useStyles = createStyles(theme => ({
  root: {},
  description: {
    color: theme.palette.description
  },
  badge: {
    position: 'absolute',
    bottom: -2,
    right: -6
  },
  initials: {
    backgroundColor: theme.palette.secondary.default
  },
  initialsText: {
    color: 'white',
    textTransform: 'uppercase'
  }
}), {
  name: 'Person'
});
const Person = React.forwardRef(function Person(_ref, ref) {
  let {
    img = '',
    name,
    description = '',
    returningGuest = false,
    className = '',
    style = {},
    jss = {}
  } = _ref,
      props = _objectWithoutPropertiesLoose(_ref, ["img", "name", "description", "returningGuest", "className", "style", "jss"]);

  const classes = useStyles({
    jss
  });
  const initials = useMemo(() => img ? '' : nameToInitials(name), [img]);
  return /*#__PURE__*/React.createElement(Row, _extends({}, props, {
    style: style,
    className: cn(classes.root, className),
    ref: ref,
    spacing: 2,
    fullWidth: true,
    justify: "start",
    align: "center"
  }), /*#__PURE__*/React.createElement(Avatar, {
    src: img,
    className: cn({
      [classes.initials]: initials
    }),
    badge: returningGuest ? /*#__PURE__*/React.createElement(ReturningGuestBadge, {
      className: classes.badge
    }) : null
  }, initials && /*#__PURE__*/React.createElement(TextField, {
    className: classes.initialsText,
    variant: "h3"
  }, initials)), /*#__PURE__*/React.createElement(Col, {
    justify: "center",
    spacing: 1
  }, /*#__PURE__*/React.createElement(TextField, null, name), description && /*#__PURE__*/React.createElement(TextField, {
    variant: "h5",
    className: classes.description
  }, description)));
});
Person.propTypes = {
  /** Image url for person avatar */
  img: PropTypes.string,

  /** Person name */
  name: PropTypes.node.isRequired,

  /** Subtitle for person */
  description: PropTypes.node,

  /** Additional class for person */
  className: PropTypes.string,

  /** Additional style for person */
  style: PropTypes.shape(),

  /** jss override object to customize the jss classes */
  jss: PropTypes.oneOfType([PropTypes.shape(), PropTypes.func]),

  /** Indicator for returning guest badge */
  returningGuest: PropTypes.bool
};
Person.displayName = 'Person';
export default Person;