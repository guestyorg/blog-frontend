{"ast":null,"code":"import Axios from \"axios\";\nimport { ACCOUNT_DETAILS_FAIL, ACCOUNT_DETAILS_REQUEST, ACCOUNT_DETAILS_SUCCESS, ACCOUNT_REGISTER_FAIL, ACCOUNT_REGISTER_REQUEST, ACCOUNT_REGISTER_SUCCESS, ACCOUNT_SIGNIN_FAIL, ACCOUNT_SIGNIN_REQUEST, ACCOUNT_SIGNIN_SUCCESS, ACCOUNT_SIGNOUT, ACCOUNT_UPDATE_PROFILE_FAIL, ACCOUNT_UPDATE_PROFILE_REQUEST, ACCOUNT_UPDATE_PROFILE_SUCCESS, ACCOUNT_LIST_REQUEST, ACCOUNT_LIST_SUCCESS, ACCOUNT_LIST_FAIL, ACCOUNT_DELETE_REQUEST, ACCOUNT_DELETE_SUCCESS, ACCOUNT_DELETE_FAIL, ACCOUNT_UPDATE_SUCCESS, ACCOUNT_UPDATE_FAIL } from \"../constants/accountConstants\";\nexport const register = (name, email) => async dispatch => {\n  dispatch({\n    type: ACCOUNT_REGISTER_REQUEST,\n    payload: {\n      name,\n      email\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"http://localhost:5000/api/accounts/register\", {\n      name,\n      email\n    });\n    dispatch({\n      type: ACCOUNT_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: ACCOUNT_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"accountInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: ACCOUNT_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signin = email => async dispatch => {\n  dispatch({\n    type: ACCOUNT_SIGNIN_REQUEST,\n    payload: {\n      email\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"http://localhost:5000/api/accounts/signin\", {\n      email\n    });\n    dispatch({\n      type: ACCOUNT_SIGNIN_SUCCESS,\n      payload: data\n    }); // dispatch(emailAccount(email));\n\n    localStorage.setItem(\"accountInfo\", JSON.stringify(data));\n  } catch (error) {\n    // console.log(\"error :\", error);\n    dispatch({\n      type: ACCOUNT_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signout = () => dispatch => {\n  localStorage.removeItem(\"accountInfo\");\n  dispatch({\n    type: ACCOUNT_SIGNOUT\n  }); // document.location.href = \"/signin\";\n};\nexport const listAccounts = () => async (dispatch, getState) => {\n  dispatch({\n    type: ACCOUNT_LIST_REQUEST\n  });\n\n  try {\n    const {\n      accountSignin: {\n        accountInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.get(\"http://localhost:5000/api/accounts\", {\n      headers: {\n        Authorization: `Bearer ${accountInfo.token}`\n      }\n    });\n    dispatch({\n      type: ACCOUNT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ACCOUNT_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deleteAccount = accountId => async (dispatch, getState) => {\n  dispatch({\n    type: ACCOUNT_DELETE_REQUEST,\n    payload: accountId\n  });\n  const {\n    accountSignin: {\n      accountInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.delete(`http://localhost:5000/api/accounts/${accountId}`, {\n      headers: {\n        Authorization: `Bearer ${accountInfo.token}`\n      }\n    });\n    dispatch({\n      type: ACCOUNT_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ACCOUNT_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const detailsAccount = accountId => async dispatch => {\n  dispatch({\n    type: ACCOUNT_DETAILS_REQUEST,\n    payload: accountId\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`http://localhost:5000/api/accounts/${accountId}`);\n    dispatch({\n      type: ACCOUNT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ACCOUNT_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateAccount = account => async (dispatch, getState) => {\n  console.log(\"account:\", account);\n  dispatch({\n    type: ACCOUNT_UPDATE_PROFILE_REQUEST,\n    payload: account\n  });\n  const {\n    accountSignin: {\n      accountInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.patch(`http://localhost:5000/api/accounts/${account._id}`, account, {\n      headers: {\n        Authorization: `Bearer ${accountInfo.token}`\n      }\n    });\n    dispatch({\n      type: ACCOUNT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ACCOUNT_UPDATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/actions/accountActions.js"],"names":["Axios","ACCOUNT_DETAILS_FAIL","ACCOUNT_DETAILS_REQUEST","ACCOUNT_DETAILS_SUCCESS","ACCOUNT_REGISTER_FAIL","ACCOUNT_REGISTER_REQUEST","ACCOUNT_REGISTER_SUCCESS","ACCOUNT_SIGNIN_FAIL","ACCOUNT_SIGNIN_REQUEST","ACCOUNT_SIGNIN_SUCCESS","ACCOUNT_SIGNOUT","ACCOUNT_UPDATE_PROFILE_FAIL","ACCOUNT_UPDATE_PROFILE_REQUEST","ACCOUNT_UPDATE_PROFILE_SUCCESS","ACCOUNT_LIST_REQUEST","ACCOUNT_LIST_SUCCESS","ACCOUNT_LIST_FAIL","ACCOUNT_DELETE_REQUEST","ACCOUNT_DELETE_SUCCESS","ACCOUNT_DELETE_FAIL","ACCOUNT_UPDATE_SUCCESS","ACCOUNT_UPDATE_FAIL","register","name","email","dispatch","type","payload","data","post","localStorage","setItem","JSON","stringify","error","response","message","signin","signout","removeItem","listAccounts","getState","accountSignin","accountInfo","get","headers","Authorization","token","deleteAccount","accountId","delete","detailsAccount","updateAccount","account","console","log","patch","_id"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\nimport {\n  ACCOUNT_DETAILS_FAIL,\n  ACCOUNT_DETAILS_REQUEST,\n  ACCOUNT_DETAILS_SUCCESS,\n  ACCOUNT_REGISTER_FAIL,\n  ACCOUNT_REGISTER_REQUEST,\n  ACCOUNT_REGISTER_SUCCESS,\n  ACCOUNT_SIGNIN_FAIL,\n  ACCOUNT_SIGNIN_REQUEST,\n  ACCOUNT_SIGNIN_SUCCESS,\n  ACCOUNT_SIGNOUT,\n  ACCOUNT_UPDATE_PROFILE_FAIL,\n  ACCOUNT_UPDATE_PROFILE_REQUEST,\n  ACCOUNT_UPDATE_PROFILE_SUCCESS,\n  ACCOUNT_LIST_REQUEST,\n  ACCOUNT_LIST_SUCCESS,\n  ACCOUNT_LIST_FAIL,\n  ACCOUNT_DELETE_REQUEST,\n  ACCOUNT_DELETE_SUCCESS,\n  ACCOUNT_DELETE_FAIL,\n  ACCOUNT_UPDATE_SUCCESS,\n  ACCOUNT_UPDATE_FAIL,\n} from \"../constants/accountConstants\";\n\nexport const register = (name, email) => async (dispatch) => {\n  dispatch({\n    type: ACCOUNT_REGISTER_REQUEST,\n    payload: { name, email },\n  });\n  try {\n    const { data } = await Axios.post(\n      \"http://localhost:5000/api/accounts/register\",\n      {\n        name,\n        email,\n      }\n    );\n\n    dispatch({ type: ACCOUNT_REGISTER_SUCCESS, payload: data });\n\n    dispatch({ type: ACCOUNT_SIGNIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"accountInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: ACCOUNT_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const signin = (email) => async (dispatch) => {\n  dispatch({ type: ACCOUNT_SIGNIN_REQUEST, payload: { email } });\n  try {\n    const { data } = await Axios.post(\n      \"http://localhost:5000/api/accounts/signin\",\n      { email }\n    );\n    dispatch({ type: ACCOUNT_SIGNIN_SUCCESS, payload: data });\n    // dispatch(emailAccount(email));\n\n    localStorage.setItem(\"accountInfo\", JSON.stringify(data));\n  } catch (error) {\n    // console.log(\"error :\", error);\n    dispatch({\n      type: ACCOUNT_SIGNIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const signout = () => (dispatch) => {\n  localStorage.removeItem(\"accountInfo\");\n\n  dispatch({ type: ACCOUNT_SIGNOUT });\n  // document.location.href = \"/signin\";\n};\n\nexport const listAccounts = () => async (dispatch, getState) => {\n  dispatch({ type: ACCOUNT_LIST_REQUEST });\n  try {\n    const {\n      accountSignin: { accountInfo },\n    } = getState();\n    const { data } = await Axios.get(\"http://localhost:5000/api/accounts\", {\n      headers: {\n        Authorization: `Bearer ${accountInfo.token}`,\n      },\n    });\n\n    dispatch({ type: ACCOUNT_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ACCOUNT_LIST_FAIL, payload: message });\n  }\n};\n\nexport const deleteAccount = (accountId) => async (dispatch, getState) => {\n  dispatch({ type: ACCOUNT_DELETE_REQUEST, payload: accountId });\n  const {\n    accountSignin: { accountInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.delete(\n      `http://localhost:5000/api/accounts/${accountId}`,\n      {\n        headers: { Authorization: `Bearer ${accountInfo.token}` },\n      }\n    );\n    dispatch({ type: ACCOUNT_DELETE_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ACCOUNT_DELETE_FAIL, payload: message });\n  }\n};\n\nexport const detailsAccount = (accountId) => async (dispatch) => {\n  dispatch({ type: ACCOUNT_DETAILS_REQUEST, payload: accountId });\n  try {\n    const { data } = await Axios.get(\n      `http://localhost:5000/api/accounts/${accountId}`,\n    );\n    dispatch({ type: ACCOUNT_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ACCOUNT_DETAILS_FAIL, payload: message });\n  }\n};\n\nexport const updateAccount = (account) => async (dispatch, getState) => {\n  console.log(\"account:\", account);\n  dispatch({ type: ACCOUNT_UPDATE_PROFILE_REQUEST, payload: account });\n  const {\n    accountSignin: { accountInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.patch(\n      `http://localhost:5000/api/accounts/${account._id}`,\n      account,\n      {\n        headers: { Authorization: `Bearer ${accountInfo.token}` },\n      }\n    );\n    dispatch({ type: ACCOUNT_UPDATE_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ACCOUNT_UPDATE_FAIL, payload: message });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}