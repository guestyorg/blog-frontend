import React, { useMemo } from 'react';
import { createUseStyles } from 'react-jss';
import cn from 'classnames';
import PropTypes from 'prop-types';
import Row from "../Row";
import Paper from "../Paper";
import TextField from "../TextField";
import SvgIcon from "../SvgIcon";
import IconButton from "../IconButton";
import Spinner from "../Spinner";

var Danger = function Danger(props) {
  return /*#__PURE__*/React.createElement("svg", props, /*#__PURE__*/React.createElement("path", {
    d: "M10.5 0C4.701 0 0 4.701 0 10.5S4.701 21 10.5 21 21 16.299 21 10.5 16.299 0 10.5 0zm-.923 5.53h1.885v3.717c0 .4-.024.795-.071 1.187-.048.392-.11.792-.189 1.199H9.837c-.078-.407-.14-.807-.189-1.2a9.873 9.873 0 0 1-.07-1.186V5.53zm1.98 8.888c-.059.137-.14.255-.245.354a1.17 1.17 0 0 1-.812.319c-.165 0-.316-.028-.455-.084a1.088 1.088 0 0 1-.601-.589c-.059-.136-.088-.282-.088-.439a1.076 1.076 0 0 1 .329-.786 1.145 1.145 0 0 1 .815-.325 1.175 1.175 0 0 1 .813.325 1.082 1.082 0 0 1 .331.786c0 .157-.03.303-.087.439z"
  }));
};

Danger.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 21 21"
};

var Success = function Success(props) {
  return /*#__PURE__*/React.createElement("svg", props, /*#__PURE__*/React.createElement("path", {
    d: "M10.5 0C4.701 0 0 4.701 0 10.5S4.701 21 10.5 21 21 16.299 21 10.5 16.299 0 10.5 0zm4.633 6.752l-5.537 8.202c-.018.026-.044.04-.065.063-.012.014-.018.032-.032.045-.01.01-.024.013-.035.021a.597.597 0 0 1-.123.075.595.595 0 0 1-.096.04.608.608 0 0 1-.121.018.617.617 0 0 1-.12 0 .602.602 0 0 1-.103-.025.596.596 0 0 1-.13-.054c-.013-.007-.027-.008-.04-.016-.016-.01-.024-.028-.04-.04-.023-.019-.051-.03-.072-.052l-2.693-2.931c-.233-.252-.218-.648.034-.88s.647-.219.88.033l2.163 2.354 5.098-7.55a.625.625 0 0 1 .864-.168c.284.192.36.581.168.865z"
  }));
};

Success.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 21 21"
};

var BtnDelete = function BtnDelete(props) {
  return /*#__PURE__*/React.createElement("svg", props, /*#__PURE__*/React.createElement("path", {
    d: "M8.485.707L7.778 0 4.243 3.536.707 0 0 .707l3.536 3.536L0 7.778l.707.707L4.243 4.95l3.535 3.535.707-.707L4.95 4.243z"
  }));
};

BtnDelete.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 8.4854 8.4854"
};
import { green, red, yellow, blue } from "../../theme/colors";
export const VARIANTS_NAMES = ['success', 'danger', 'warning', 'loading'];
const [success, danger, warning, loading] = VARIANTS_NAMES;
const variants = {
  [success]: {
    component: /*#__PURE__*/React.createElement(SvgIcon, {
      svg: Success,
      color: "green",
      width: 20,
      height: 20
    }),
    color: green
  },
  [danger]: {
    component: /*#__PURE__*/React.createElement(SvgIcon, {
      svg: Danger,
      color: "red",
      width: 20,
      height: 20
    }),
    color: red
  },
  [warning]: {
    component: /*#__PURE__*/React.createElement(SvgIcon, {
      svg: Danger,
      color: "yellow",
      width: 20,
      height: 20
    }),
    color: yellow
  },
  [loading]: {
    component: /*#__PURE__*/React.createElement(Spinner, {
      size: 20,
      style: {
        height: 20,
        width: 20
      }
    }),
    color: blue,
    noDismiss: true
  }
};
const useStyles = createUseStyles({
  wrapper: {
    width: 350,
    '&:before': {
      content: '""',
      position: 'absolute',
      bottom: 0,
      left: 0,
      top: 0,
      background: ({
        color
      }) => color,
      width: 4
    }
  },
  msg: {
    maxWidth: 300,
    lineHeight: '18px'
  }
});

const Toast = ({
  message,
  variant,
  onDismiss,
  action,
  className
}) => {
  const {
    color,
    component,
    noDismiss
  } = useMemo(() => {
    return variants[variant] || {};
  }, [variant]);
  const {
    wrapper,
    msg
  } = useStyles({
    color
  });
  return /*#__PURE__*/React.createElement(Paper, {
    className: cn('p-3 overflow-hidden relative', wrapper, className),
    elevation: 2,
    borderRadius: 1,
    "data-qa": "toast"
  }, /*#__PURE__*/React.createElement(Row, {
    justify: "between"
  }, /*#__PURE__*/React.createElement(Row, {
    spacing: "sm",
    align: "center"
  }, component, /*#__PURE__*/React.createElement(TextField, {
    size: "lg",
    className: msg
  }, message)), /*#__PURE__*/React.createElement(Row, {
    align: "center"
  }, action, !noDismiss && /*#__PURE__*/React.createElement(IconButton, {
    onClick: onDismiss,
    svg: BtnDelete,
    iconHeight: 10,
    iconWidth: 10
  }))));
};

Toast.propTypes = {
  message: PropTypes.string.isRequired,
  variant: PropTypes.oneOf(VARIANTS_NAMES).isRequired,
  onDismiss: PropTypes.func.isRequired,
  action: PropTypes.node
};
export default Toast;