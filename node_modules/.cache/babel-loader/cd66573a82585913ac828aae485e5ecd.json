{"ast":null,"code":"/* eslint-disable no-undef */\n// import 'react-intl-tel-input/dist/libphonenumber';\nimport isObject from 'lodash/isObject';\nimport { isEmpty } from \"../utils/commonUtility\";\nimport { END_DATE_REQUIRED, INVALID_EMAIL, INVALID_PHONE, INVALID_PHONE_10_DIGITS, INVALID_PHONE_NUMBER, MAX_3_DIGITS, maxLengthMessage, maxMessage, minLengthMessage, minMessage, moreThanMessage, lessThanMessage, NOT_ZERO, ONLY_ALPHA_NUMERIC, REQUIRED, START_DATE_REQUIRED } from \"./validationMessages\";\n\nvar isTelInput = function isTelInput(value) {\n  return isObject(value) && value.isTelInput;\n};\n\nvar required = function required(value) {\n  return isEmpty(value) || isTelInput(value) && isEmpty(value.value) ? REQUIRED : undefined;\n};\n\nvar maxLength = function maxLength(max) {\n  return function (value) {\n    return value && value.length > max ? maxLengthMessage(max) : undefined;\n  };\n};\n\nvar minLength = function minLength(min) {\n  return function (value) {\n    return value && value.length < min ? minLengthMessage(min) : undefined;\n  };\n};\n\nvar min = function min(minVal) {\n  return function (value) {\n    return !isEmpty(value) && value < minVal ? minMessage(minVal) : undefined;\n  };\n};\n\nvar max = function max(maxVal) {\n  return function (value) {\n    return !isEmpty(value) && value > maxVal ? maxMessage(maxVal) : undefined;\n  };\n};\n\nvar moreThan = function moreThan(moreThanValue) {\n  return function (value) {\n    return !isEmpty(value) && value <= moreThanValue ? moreThanMessage(moreThanValue) : undefined;\n  };\n};\n\nvar lessThan = function lessThan(lessThanValue) {\n  return function (value) {\n    return !isEmpty(value) && value >= lessThanValue ? lessThanMessage(lessThanValue) : undefined;\n  };\n};\n\nvar email = function email(value) {\n  return value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]{2,}\\.[A-Z]{2,}$/i.test(value) ? INVALID_EMAIL : undefined;\n};\n\nvar alphaNumeric = function alphaNumeric(value) {\n  return value && /[^a-zA-Z0-9 ]/i.test(value) ? ONLY_ALPHA_NUMERIC : undefined;\n};\n\nvar threeDigitsPastDecimalPoint = function threeDigitsPastDecimalPoint(value) {\n  return value && !/^-?\\d+(\\.\\d{1,3})?\\s*$/i.test(value) ? MAX_3_DIGITS : undefined;\n};\n\nvar notZero = function notZero(value) {\n  return value && !/^(?!0$).*/i.test(value) ? NOT_ZERO : undefined;\n};\n\nvar phoneNumber = function phoneNumber(value) {\n  return value && !/^(0|[1-9][0-9]{9})$/i.test(value) ? INVALID_PHONE_10_DIGITS : undefined;\n};\n\nvar googlePhoneNumber = function googlePhoneNumber(value) {\n  return value && !/^\\+[0-9]{1,3}.[0-9,-]{4,14}(?:x.+)?$/.test(value) ? INVALID_PHONE : undefined;\n};\n\nvar phone = function phone(value) {\n  return value && isObject(value) && !value.isValid && !isEmpty(value.value) ? INVALID_PHONE_NUMBER : undefined;\n};\n\nvar rangePickerValidation = function rangePickerValidation() {\n  var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (isEmpty(value) || !value.start && !value.end) {\n    return REQUIRED;\n  }\n\n  if (!value.start) {\n    return START_DATE_REQUIRED;\n  }\n\n  if (!value.end) {\n    return END_DATE_REQUIRED;\n  }\n\n  return undefined;\n};\n\nexport { notZero, required, email, phoneNumber, alphaNumeric, maxLength, minLength, min, max, moreThan, lessThan, threeDigitsPastDecimalPoint, googlePhoneNumber, rangePickerValidation, phone };","map":{"version":3,"sources":["/Users/giladdekel/Workspace/Guesty/simple-app-archive/node_modules/@guestyci/foundation/esm/validators/index.js"],"names":["isObject","isEmpty","END_DATE_REQUIRED","INVALID_EMAIL","INVALID_PHONE","INVALID_PHONE_10_DIGITS","INVALID_PHONE_NUMBER","MAX_3_DIGITS","maxLengthMessage","maxMessage","minLengthMessage","minMessage","moreThanMessage","lessThanMessage","NOT_ZERO","ONLY_ALPHA_NUMERIC","REQUIRED","START_DATE_REQUIRED","isTelInput","value","required","undefined","maxLength","max","length","minLength","min","minVal","maxVal","moreThan","moreThanValue","lessThan","lessThanValue","email","test","alphaNumeric","threeDigitsPastDecimalPoint","notZero","phoneNumber","googlePhoneNumber","phone","isValid","rangePickerValidation","arguments","start","end"],"mappings":"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","sourcesContent":["/* eslint-disable no-undef */\n// import 'react-intl-tel-input/dist/libphonenumber';\nimport isObject from 'lodash/isObject';\nimport { isEmpty } from \"../utils/commonUtility\";\nimport { END_DATE_REQUIRED, INVALID_EMAIL, INVALID_PHONE, INVALID_PHONE_10_DIGITS, INVALID_PHONE_NUMBER, MAX_3_DIGITS, maxLengthMessage, maxMessage, minLengthMessage, minMessage, moreThanMessage, lessThanMessage, NOT_ZERO, ONLY_ALPHA_NUMERIC, REQUIRED, START_DATE_REQUIRED } from \"./validationMessages\";\n\nvar isTelInput = function isTelInput(value) {\n  return isObject(value) && value.isTelInput;\n};\n\nvar required = function required(value) {\n  return isEmpty(value) || isTelInput(value) && isEmpty(value.value) ? REQUIRED : undefined;\n};\n\nvar maxLength = function maxLength(max) {\n  return function (value) {\n    return value && value.length > max ? maxLengthMessage(max) : undefined;\n  };\n};\n\nvar minLength = function minLength(min) {\n  return function (value) {\n    return value && value.length < min ? minLengthMessage(min) : undefined;\n  };\n};\n\nvar min = function min(minVal) {\n  return function (value) {\n    return !isEmpty(value) && value < minVal ? minMessage(minVal) : undefined;\n  };\n};\n\nvar max = function max(maxVal) {\n  return function (value) {\n    return !isEmpty(value) && value > maxVal ? maxMessage(maxVal) : undefined;\n  };\n};\n\nvar moreThan = function moreThan(moreThanValue) {\n  return function (value) {\n    return !isEmpty(value) && value <= moreThanValue ? moreThanMessage(moreThanValue) : undefined;\n  };\n};\n\nvar lessThan = function lessThan(lessThanValue) {\n  return function (value) {\n    return !isEmpty(value) && value >= lessThanValue ? lessThanMessage(lessThanValue) : undefined;\n  };\n};\n\nvar email = function email(value) {\n  return value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]{2,}\\.[A-Z]{2,}$/i.test(value) ? INVALID_EMAIL : undefined;\n};\n\nvar alphaNumeric = function alphaNumeric(value) {\n  return value && /[^a-zA-Z0-9 ]/i.test(value) ? ONLY_ALPHA_NUMERIC : undefined;\n};\n\nvar threeDigitsPastDecimalPoint = function threeDigitsPastDecimalPoint(value) {\n  return value && !/^-?\\d+(\\.\\d{1,3})?\\s*$/i.test(value) ? MAX_3_DIGITS : undefined;\n};\n\nvar notZero = function notZero(value) {\n  return value && !/^(?!0$).*/i.test(value) ? NOT_ZERO : undefined;\n};\n\nvar phoneNumber = function phoneNumber(value) {\n  return value && !/^(0|[1-9][0-9]{9})$/i.test(value) ? INVALID_PHONE_10_DIGITS : undefined;\n};\n\nvar googlePhoneNumber = function googlePhoneNumber(value) {\n  return value && !/^\\+[0-9]{1,3}.[0-9,-]{4,14}(?:x.+)?$/.test(value) ? INVALID_PHONE : undefined;\n};\n\nvar phone = function phone(value) {\n  return value && isObject(value) && !value.isValid && !isEmpty(value.value) ? INVALID_PHONE_NUMBER : undefined;\n};\n\nvar rangePickerValidation = function rangePickerValidation() {\n  var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (isEmpty(value) || !value.start && !value.end) {\n    return REQUIRED;\n  }\n\n  if (!value.start) {\n    return START_DATE_REQUIRED;\n  }\n\n  if (!value.end) {\n    return END_DATE_REQUIRED;\n  }\n\n  return undefined;\n};\n\nexport { notZero, required, email, phoneNumber, alphaNumeric, maxLength, minLength, min, max, moreThan, lessThan, threeDigitsPastDecimalPoint, googlePhoneNumber, rangePickerValidation, phone };"]},"metadata":{},"sourceType":"module"}