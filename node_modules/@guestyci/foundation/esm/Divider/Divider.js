import _extends from "@babel/runtime/helpers/esm/extends";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import React, { forwardRef } from 'react';
import PropTypes from 'prop-types';
import cn from 'classnames';
import createStyles from "../createStyles";
export var useStyles = createStyles(function (theme) {
  return {
    horizontal: {
      width: '100%',
      borderTop: 'solid'
    },
    vertical: {
      height: '100%',
      borderLeft: 'solid'
    },
    root: {
      borderWidth: function borderWidth(_ref) {
        var thickness = _ref.thickness;
        return thickness || 1;
      },
      borderColor: theme.palette.border
    }
  };
}, {
  name: 'Divider'
});
var Divider = forwardRef(function Divider(_ref2, ref) {
  var _cn;

  var orientation = _ref2.orientation,
      className = _ref2.className,
      style = _ref2.style,
      thickness = _ref2.thickness,
      jss = _ref2.jss,
      props = _objectWithoutProperties(_ref2, ["orientation", "className", "style", "thickness", "jss"]);

  var classes = useStyles({
    thickness: thickness,
    jss: jss
  });
  return /*#__PURE__*/React.createElement("div", _extends({
    ref: ref
  }, props, {
    className: cn(classes.root, (_cn = {}, _defineProperty(_cn, classes.horizontal, orientation === 'horizontal'), _defineProperty(_cn, classes.vertical, orientation === 'vertical'), _cn), className),
    style: style
  }));
});
Divider.defaultProps = {
  orientation: 'horizontal',
  className: '',
  style: {},
  thickness: 1
};
Divider.propTypes = {
  /** Orientation of divider - values = ['horizontal', 'vertical'] - when vertical, provide height for the component */
  orientation: PropTypes.oneOf(['horizontal', 'vertical']),

  /** Set additional class names to divider */
  className: PropTypes.string,

  /** Set style to divider */
  style: PropTypes.shape(),

  /** Border width */
  thickness: PropTypes.number
};
Divider.displayName = 'Divider';
export default Divider;