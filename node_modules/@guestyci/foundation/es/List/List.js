import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
import React from 'react';
import PropTypes from 'prop-types';
import cn from 'classnames';
import createStyles from "../createStyles";
export const useStyles = createStyles(theme => ({
  root: {
    width: '100%',
    overflowX: 'hidden',
    overflowY: 'auto',
    padding: `${theme.spacer(2)}px 0`,
    marginBottom: 0,
    listStyleType: 'none'
  }
}), {
  name: 'List'
});
const List = React.forwardRef(function List(_ref, ref) {
  let {
    children,
    className = '',
    style = {},
    jss = {}
  } = _ref,
      props = _objectWithoutPropertiesLoose(_ref, ["children", "className", "style", "jss"]);

  const classes = useStyles({
    jss
  });
  return /*#__PURE__*/React.createElement("ul", _extends({}, props, {
    ref: ref,
    className: cn(classes.root, className),
    style: style
  }), children);
});
List.propTypes = {
  /** Child items in the menu component */
  children: PropTypes.node.isRequired,

  /** Additional class for root level */
  className: PropTypes.string,

  /** Additional style for root level */
  style: PropTypes.shape(),

  /** JSS overrides */
  jss: PropTypes.oneOfType([PropTypes.shape(), PropTypes.func])
};
List.displayName = 'List';
export default List;