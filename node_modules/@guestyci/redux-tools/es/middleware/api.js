import Resource from '@guestyci/agni';
import { API_REQUEST, apiError, apiSuccess } from "../actions/api"; // eslint-disable-next-line import/prefer-default-export

export const apiMiddleware = ({
  dispatch
}) => next => action => {
  next(action);

  if (action.type.includes(API_REQUEST)) {
    const {
      url,
      method,
      feature
    } = action.meta;
    const {
      payload: body
    } = action;
    const {
      api
    } = Resource.create();

    switch (method) {
      case 'GET':
        api.get(url, body).then(response => response.data).then(response => dispatch(apiSuccess({
          response,
          feature
        }))).catch((error, response) => dispatch(apiError({
          error,
          response,
          feature
        })));
        break;

      case 'DELETE':
        api.delete(url).then(response => response.data).then(response => dispatch(apiSuccess({
          response,
          feature
        }))).catch((error, response) => dispatch(apiError({
          error,
          response,
          feature
        })));
        break;

      case 'POST':
        api.post(url, body).then(response => response.data).then(response => dispatch(apiSuccess({
          response,
          feature
        }))).catch((error, response) => dispatch(apiError({
          error,
          response,
          feature
        })));
        break;

      case 'PUT':
        api.put(url, body).then(response => response.data).then(response => dispatch(apiSuccess({
          response,
          feature
        }))).catch((error, response) => dispatch(apiError({
          error,
          response,
          feature
        })));
        break;

      case 'PATCH':
        api.patch(url, body).then(response => response.data).then(response => dispatch(apiSuccess({
          response,
          feature
        }))).catch((error, response) => dispatch(apiError({
          error,
          response,
          feature
        })));
        break;

      default:
        throw new Error('apiMiddleware - method is mandatory');
    }
  }
};