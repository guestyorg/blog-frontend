import React from 'react';
import cn from 'classnames';
import PropTypes from 'prop-types';

const InfoLoadingState = ({
  byUs
}) => /*#__PURE__*/React.createElement("div", {
  className: cn('d-flex align-items-center bg-gray-lightest text-muted', {
    'justify-content-end': byUs,
    'pr-4': byUs,
    'pl-4': !byUs
  }),
  style: {
    minHeight: '10px',
    width: '40%'
  },
  "data-qa": "info-loading-state"
});

const MessageBodyLoadingState = ({
  byUs
}) => /*#__PURE__*/React.createElement("div", {
  className: cn('align-items-center bg-gray-lightest mb-2 p-4', {
    'by-guest': !byUs
  }, {
    'by-us': byUs
  }),
  "data-qa": "message-body-loading-state"
});

const ThreadMessageIconLoadingState = ({
  byUs
}) => /*#__PURE__*/React.createElement("div", {
  className: cn('bg-gray-lightest', {
    'mr-3': !byUs,
    'ml-3': byUs
  }),
  style: {
    height: '40px',
    width: '40px',
    borderRadius: '50%'
  },
  "data-qa": "thread-message-icon-loading-state"
});

const ThreadMessageLoadingState = ({
  byUs,
  className
}) => /*#__PURE__*/React.createElement("div", {
  className: cn('threadMessageBubble d-flex', {
    'flex-row-reverse by-us': byUs
  }, className),
  "data-qa": "thread-message-loading-state"
}, /*#__PURE__*/React.createElement(ThreadMessageIconLoadingState, {
  byUs: byUs
}), /*#__PURE__*/React.createElement("div", {
  className: "d-flex flex-column flex-1"
}, /*#__PURE__*/React.createElement(MessageBodyLoadingState, {
  byUs: byUs
}), /*#__PURE__*/React.createElement(InfoLoadingState, {
  byUs: byUs
})));

ThreadMessageLoadingState.defaultProps = {
  byUs: false,
  className: 'null'
};
ThreadMessageLoadingState.propTypes = {
  /**
   * Bool, decide the render side of the message,
   */
  byUs: PropTypes.bool,

  /**
   * className. extra classes
   */
  className: PropTypes.string
};
export default ThreadMessageLoadingState;