import React, { Component } from 'react';
import PropTypes from 'prop-types';
import IconDropdown from "../IconDropdown/IconDropdown";
import TileItemsList from "./TileItemsList";
import { uuid } from "../../utils/commonUtility";

class TilesPicker extends Component {
  constructor(props) {
    super(props);
    this.state = {
      selectedItemsMap: new Map()
    };
    this.onAddItem = this.onAddItem.bind(this);
    this.deleteItem = this.deleteItem.bind(this);
  }

  onAddItem(value) {
    const {
      onChange
    } = this.props;
    const {
      selectedItemsMap
    } = this.state;
    const {
      optionsMap
    } = this.props;
    const selectedItem = optionsMap[value];
    selectedItemsMap.set(uuid(), selectedItem);
    this.setState({
      selectedItemsMap
    });
    onChange(selectedItemsMap);
  }

  getAllItemsArray() {
    const {
      maxShownItems
    } = this.props;
    const {
      selectedItemsMap
    } = this.state;
    const emptyArrayLength = maxShownItems - selectedItemsMap.size;
    const emptyItemsArray = emptyArrayLength > 0 ? [...Array(emptyArrayLength)] : [];
    const allItemsArray = Array.from(selectedItemsMap).concat(emptyItemsArray);
    return allItemsArray;
  }

  deleteItem(key) {
    const {
      onChange
    } = this.props;
    const {
      selectedItemsMap
    } = this.state;
    selectedItemsMap.delete(key);
    this.setState({
      selectedItemsMap
    });
    onChange(selectedItemsMap);
  }

  render() {
    const {
      options,
      maxShownItems
    } = this.props;
    const allItemsArray = this.getAllItemsArray();
    return /*#__PURE__*/React.createElement("div", {
      className: "flex-space-between-center flex-row w-fit-content b-1 border-gray-light border-radius-2",
      "data-qa": "tiles-picker"
    }, /*#__PURE__*/React.createElement(TileItemsList, {
      tileItems: allItemsArray,
      onDeleteItem: this.deleteItem,
      maxShownItems: maxShownItems
    }), /*#__PURE__*/React.createElement("div", {
      className: "width-100"
    }, /*#__PURE__*/React.createElement(IconDropdown, {
      width: 21,
      height: 21,
      icon: "BtnAdd",
      onSelect: this.onAddItem,
      options: options,
      className: "flex-center bg-white height-90 width-100 bl-1 border-gray-light",
      menuClassName: "mt-0 left-0"
    })));
  }

}

TilesPicker.defaultProps = {
  maxShownItems: 4
};
TilesPicker.propTypes = {
  // sets the number of tiles what would be rendered
  maxShownItems: PropTypes.number,
  // defines the options to be displayed on the drop menu
  options: PropTypes.arrayOf(PropTypes.shape({
    label: PropTypes.string,
    value: PropTypes.string
  })).isRequired,
  // maps the dropdown values to its tile settings
  optionsMap: PropTypes.objectOf(PropTypes.shape({
    key: PropTypes.shape({
      icon: PropTypes.string,
      width: PropTypes.number,
      height: PropTypes.number,
      text: PropTypes.string
    })
  })).isRequired,
  // callback to be called when a tile is changed
  onChange: PropTypes.func.isRequired
};
export default TilesPicker;