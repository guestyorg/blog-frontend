{"ast":null,"code":"var _jsxFileName = \"/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/BlogPreprod/BlogPreprodEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport Resource from \"@guestyci/agni\";\nimport RaisedButton from \"@guestyci/foundation/RaisedButton\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport Form from \"@guestyci/foundation/Form\";\nimport Input from \"@guestyci/foundation/Input\";\nimport DateRangePicker from \"@guestyci/foundation/DatePicker/DateRangePicker\";\nimport SingleDatePicker from \"@guestyci/foundation/DatePicker/SingleDatePicker\";\nimport NumberPicker from \"@guestyci/foundation/NumberPicker\";\nimport EmailInput from \"@guestyci/foundation/EmailInput\";\nimport Dropdown, { Option } from \"@guestyci/foundation/Dropdown\";\nimport TextField from \"@guestyci/foundation/TextField\";\nimport TextArea from \"@guestyci/foundation/TextArea\";\nimport Col from \"@guestyci/foundation/Layout/Col\";\nimport Section from \"@guestyci/foundation/Layout/Section\";\nimport DurationPicker from \"@guestyci/foundation/DurationPicker\";\nimport TimePicker from \"@guestyci/foundation/TimePicker\";\nimport FormField from \"@guestyci/foundation/FormField\";\nimport FormGroup from \"@guestyci/foundation/FormGroup\";\nimport { FormProvider } from \"@guestyci/foundation/enums\"; // import { email } from \"@guestyci/foundation/validators\";\n\nimport createStyles from \"@guestyci/foundation/createStyles\";\nimport FlatButton from \"@guestyci/foundation/FlatButton\";\nimport { Row } from \"@guestyci/foundation/Layout\";\nimport { ReactComponent as BtnTrash } from \"@svgr/webpack?-svgo,+titleProp,+ref!@guestyci/foundation/icons/BtnTrash.svg\";\nimport Icon from \"@guestyci/foundation/Icon\";\nimport { useToast } from \"@guestyci/foundation/Toast\";\nimport { deleteBlogPreprod, detailsPreprodBlog, updateBlogPreprod } from \"../../actions/blogActions\";\nimport { BLOG_DELETE_RESET, BLOG_DETAILS_RESET, BLOG_UPDATE_RESET, POST_DELETE_RESET } from \"../../constants/blogConstants\";\nimport PostListPreprod from \"../../components/PostListPreprod\";\nimport { userDataReducer } from \"../../reducers/userReducers\"; // posts\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = createStyles(theme => ({\n  app: {\n    backgroundColor: \"white\",\n    marginTop: \"80px\"\n  }\n}));\nexport default function BlogPreprodEditScreen(props) {\n  _s();\n\n  // console.log(\"props:\", props);\n  const classes = useStyles();\n  const {\n    addToast\n  } = useToast(); // const { api, env, config } = Resource.create();\n\n  const {\n    id\n  } = useParams(); // console.log(\"id:\", id);\n\n  const [title, setTitle] = useState();\n  const [error, setError] = useState(false);\n  const [editMode, setEditMode] = useState(false);\n  const errorMessage = \"There was a problem edit the blog.\"; // useSelector\n\n  const blogDetails = useSelector(state => state.blogDetails);\n  const {\n    loading,\n    error: errorBlogDetails,\n    blog\n  } = blogDetails;\n  const blogUpdate = useSelector(state => state.blogUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = blogUpdate;\n  const blogDelete = useSelector(state => state.blogDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete\n  } = blogDelete;\n  const postDelete = useSelector(state => state.postDelete);\n  const {\n    loading: loadingPostDelete,\n    error: errorPostDelete,\n    success: successPostDelete\n  } = postDelete;\n  const userData = useSelector(state => state.userData);\n  const {\n    accountData,\n    userInfoData,\n    loading: loadingUserData,\n    error: errorUserData\n  } = userData; // useDispatch\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (successDelete) {\n      dispatch({\n        type: BLOG_DELETE_RESET\n      });\n      dispatch({\n        type: BLOG_DETAILS_RESET\n      });\n      props.history.push(\"/blog/preprod/list\");\n      addToast.success(`the blog ${title} was delete`);\n    } else if (errorDelete) {\n      addToast.danger(\"error edit the blog\");\n    }\n\n    if (successUpdate) {\n      dispatch({\n        type: BLOG_UPDATE_RESET\n      });\n      dispatch({\n        type: BLOG_DETAILS_RESET\n      }); // props.history.push(\"/blog/list\");\n\n      addToast.success(`the blog ${title} was edit`);\n    } else if (errorUpdate) {\n      addToast.danger(\"error edit the blog\");\n    }\n\n    if (!blog || successPostDelete) {\n      dispatch(detailsPreprodBlog(id));\n    } else {\n      setTitle(blog.title);\n    }\n\n    if (successPostDelete) {\n      dispatch({\n        type: POST_DELETE_RESET\n      }); // props.history.push(\"/blog/list\");\n\n      addToast.success(`the post  was delete`);\n    } else if (errorPostDelete) {\n      addToast.danger(\"error delete the post\");\n    }\n  }, [dispatch, props.history, successUpdate, successDelete, errorPostDelete, successPostDelete, blog, id]);\n  useEffect(() => {\n    dispatch({\n      type: BLOG_DETAILS_RESET\n    });\n  }, []);\n\n  const onSubmit = e => {\n    // e.preventDefault();\n    // dispatch update blog\n    dispatch(updateBlogPreprod({\n      id,\n      title\n    }));\n  };\n\n  const handleDelete = async () => {\n    console.log(\"handleDelete\");\n\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteBlogPreprod(id));\n    }\n  };\n\n  const closeError = () => {\n    setError(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Section, {\n      className: classes.app,\n      justify: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        spacing: 6,\n        span: 6,\n        children: [blog && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Blog Title: \", blog.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [\"Blog Admin: \", blog.admin]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [\" Blog Admin Email: \", blog.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), console.log(\"userInfoData._id:\", userInfoData), blog && blog.userPreprodId === userInfoData.userId && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: editMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\" \", /*#__PURE__*/_jsxDEV(TextField, {\n              onClick: () => setEditMode(prev => !prev),\n              variant: \"h2\",\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FinalForm, {\n              onSubmit: onSubmit,\n              initialValues: {},\n              render: ({\n                handleSubmit\n              }) => /*#__PURE__*/_jsxDEV(Form, {\n                title: \"Edit Blog\",\n                onSubmit: handleSubmit,\n                provider: FormProvider.Final,\n                fieldInstance: Field,\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                    children: /*#__PURE__*/_jsxDEV(FormField, {\n                      label: \"Blog Title\",\n                      name: \"title\" //   info=\"Drama, Action etc.\"\n                      ,\n                      children: /*#__PURE__*/_jsxDEV(Input, {\n                        name: \"title\",\n                        value: title,\n                        placeholder: title,\n                        onChange: e => setTitle(e.target.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 220,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 215,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(RaisedButton, {\n                    type: \"submit\",\n                    children: \"Edit Blog\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(FlatButton, {\n                    type: \"error\",\n                    onClick: handleDelete,\n                    children: /*#__PURE__*/_jsxDEV(Row, {\n                      align: \"center\",\n                      spacing: 2,\n                      children: [/*#__PURE__*/_jsxDEV(Icon, {\n                        svg: BtnTrash\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 233,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                        children: \" Delete Blog\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 234,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 232,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 27\n                  }, this), error && /*#__PURE__*/_jsxDEV(ErrorBanner, {\n                    show: error,\n                    errorMessage: errorMessage,\n                    onClick: closeError,\n                    actionText: \"Try again\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"h2\",\n              onClick: () => setEditMode(prev => !prev),\n              children: [\"Click to Edit the Blog:\", title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 19\n            }, this)\n          }, void 0, false)\n        }, void 0, false), \" \", /*#__PURE__*/_jsxDEV(PostListPreprod, {\n          blogData: blog,\n          history: props.history,\n          blogAdmin: blog && blog.userPreprodId === userInfoData.userId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(BlogPreprodEditScreen, \"34MXRUDp3u7p5s7/xwvuJtynn7M=\", false, function () {\n  return [useStyles, useToast, useParams, useSelector, useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = BlogPreprodEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogPreprodEditScreen\");","map":{"version":3,"sources":["/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/BlogPreprod/BlogPreprodEditScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","useParams","Resource","RaisedButton","Form","FinalForm","Field","Input","DateRangePicker","SingleDatePicker","NumberPicker","EmailInput","Dropdown","Option","TextField","TextArea","Col","Section","DurationPicker","TimePicker","FormField","FormGroup","FormProvider","createStyles","FlatButton","Row","Icon","useToast","deleteBlogPreprod","detailsPreprodBlog","updateBlogPreprod","BLOG_DELETE_RESET","BLOG_DETAILS_RESET","BLOG_UPDATE_RESET","POST_DELETE_RESET","PostListPreprod","userDataReducer","useStyles","theme","app","backgroundColor","marginTop","BlogPreprodEditScreen","props","classes","addToast","id","title","setTitle","error","setError","editMode","setEditMode","errorMessage","blogDetails","state","loading","errorBlogDetails","blog","blogUpdate","loadingUpdate","errorUpdate","success","successUpdate","blogDelete","loadingDelete","errorDelete","successDelete","postDelete","loadingPostDelete","errorPostDelete","successPostDelete","userData","accountData","userInfoData","loadingUserData","errorUserData","dispatch","type","history","push","danger","onSubmit","e","handleDelete","console","log","window","confirm","closeError","admin","email","userPreprodId","userId","prev","handleSubmit","Final","target","value","BtnTrash"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,OAAOC,YAAP,MAAyB,mCAAzB;AAEA,SAASC,IAAI,IAAIC,SAAjB,EAA4BC,KAA5B,QAAyC,kBAAzC;AAEA,OAAOF,IAAP,MAAiB,2BAAjB;AACA,OAAOG,KAAP,MAAkB,4BAAlB;AACA,OAAOC,eAAP,MAA4B,iDAA5B;AACA,OAAOC,gBAAP,MAA6B,kDAA7B;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAOC,QAAP,IAAmBC,MAAnB,QAAiC,+BAAjC;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,GAAP,MAAgB,iCAAhB;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AAEA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,SAASC,YAAT,QAA6B,4BAA7B,C,CACA;;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AAEA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,SAASC,GAAT,QAAoB,6BAApB;;AAEA,OAAOC,IAAP,MAAiB,2BAAjB;AAEA,SAASC,QAAT,QAAyB,4BAAzB;AACA,SACEC,iBADF,EAEEC,kBAFF,EAGEC,iBAHF,QAIO,2BAJP;AAKA,SACEC,iBADF,EAEEC,kBAFF,EAGEC,iBAHF,EAIEC,iBAJF,QAKO,+BALP;AAMA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,SAASC,eAAT,QAAgC,6BAAhC,C,CAEA;;;;AAEA,MAAMC,SAAS,GAAGd,YAAY,CAAEe,KAAD,KAAY;AACzCC,EAAAA,GAAG,EAAE;AACHC,IAAAA,eAAe,EAAE,OADd;AAEHC,IAAAA,SAAS,EAAE;AAFR;AADoC,CAAZ,CAAD,CAA9B;AAOA,eAAe,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC;AAAA;;AACnD;AACA,QAAMC,OAAO,GAAGP,SAAS,EAAzB;AAEA,QAAM;AAAEQ,IAAAA;AAAF,MAAelB,QAAQ,EAA7B,CAJmD,CAMnD;;AAEA,QAAM;AAAEmB,IAAAA;AAAF,MAAS7C,SAAS,EAAxB,CARmD,CASnD;;AAEA,QAAM,CAAC8C,KAAD,EAAQC,QAAR,IAAoBlD,QAAQ,EAAlC;AAEA,QAAM,CAACmD,KAAD,EAAQC,QAAR,IAAoBpD,QAAQ,CAAC,KAAD,CAAlC;AAEA,QAAM,CAACqD,QAAD,EAAWC,WAAX,IAA0BtD,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAMuD,YAAY,GAAG,oCAArB,CAhBmD,CAkBnD;;AACA,QAAMC,WAAW,GAAGtD,WAAW,CAAEuD,KAAD,IAAWA,KAAK,CAACD,WAAlB,CAA/B;AACA,QAAM;AAAEE,IAAAA,OAAF;AAAWP,IAAAA,KAAK,EAAEQ,gBAAlB;AAAoCC,IAAAA;AAApC,MAA6CJ,WAAnD;AAEA,QAAMK,UAAU,GAAG3D,WAAW,CAAEuD,KAAD,IAAWA,KAAK,CAACI,UAAlB,CAA9B;AACA,QAAM;AACJH,IAAAA,OAAO,EAAEI,aADL;AAEJX,IAAAA,KAAK,EAAEY,WAFH;AAGJC,IAAAA,OAAO,EAAEC;AAHL,MAIFJ,UAJJ;AAMA,QAAMK,UAAU,GAAGhE,WAAW,CAAEuD,KAAD,IAAWA,KAAK,CAACS,UAAlB,CAA9B;AACA,QAAM;AACJR,IAAAA,OAAO,EAAES,aADL;AAEJhB,IAAAA,KAAK,EAAEiB,WAFH;AAGJJ,IAAAA,OAAO,EAAEK;AAHL,MAIFH,UAJJ;AAMA,QAAMI,UAAU,GAAGpE,WAAW,CAAEuD,KAAD,IAAWA,KAAK,CAACa,UAAlB,CAA9B;AACA,QAAM;AACJZ,IAAAA,OAAO,EAAEa,iBADL;AAEJpB,IAAAA,KAAK,EAAEqB,eAFH;AAGJR,IAAAA,OAAO,EAAES;AAHL,MAIFH,UAJJ;AAMA,QAAMI,QAAQ,GAAGxE,WAAW,CAAEuD,KAAD,IAAWA,KAAK,CAACiB,QAAlB,CAA5B;AAEA,QAAM;AACJC,IAAAA,WADI;AAEJC,IAAAA,YAFI;AAGJlB,IAAAA,OAAO,EAAEmB,eAHL;AAIJ1B,IAAAA,KAAK,EAAE2B;AAJH,MAKFJ,QALJ,CA7CmD,CAoDnD;;AACA,QAAMK,QAAQ,GAAG9E,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIsE,aAAJ,EAAmB;AACjBU,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE/C;AAAR,OAAD,CAAR;AACA8C,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE9C;AAAR,OAAD,CAAR;AACAW,MAAAA,KAAK,CAACoC,OAAN,CAAcC,IAAd,CAAmB,oBAAnB;AACAnC,MAAAA,QAAQ,CAACiB,OAAT,CAAkB,YAAWf,KAAM,aAAnC;AACD,KALD,MAKO,IAAImB,WAAJ,EAAiB;AACtBrB,MAAAA,QAAQ,CAACoC,MAAT,CAAgB,qBAAhB;AACD;;AACD,QAAIlB,aAAJ,EAAmB;AACjBc,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE7C;AAAR,OAAD,CAAR;AACA4C,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE9C;AAAR,OAAD,CAAR,CAFiB,CAIjB;;AACAa,MAAAA,QAAQ,CAACiB,OAAT,CAAkB,YAAWf,KAAM,WAAnC;AACD,KAND,MAMO,IAAIc,WAAJ,EAAiB;AACtBhB,MAAAA,QAAQ,CAACoC,MAAT,CAAgB,qBAAhB;AACD;;AACD,QAAI,CAACvB,IAAD,IAASa,iBAAb,EAAgC;AAC9BM,MAAAA,QAAQ,CAAChD,kBAAkB,CAACiB,EAAD,CAAnB,CAAR;AACD,KAFD,MAEO;AACLE,MAAAA,QAAQ,CAACU,IAAI,CAACX,KAAN,CAAR;AACD;;AAED,QAAIwB,iBAAJ,EAAuB;AACrBM,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE5C;AAAR,OAAD,CAAR,CADqB,CAErB;;AACAW,MAAAA,QAAQ,CAACiB,OAAT,CAAkB,sBAAlB;AACD,KAJD,MAIO,IAAIQ,eAAJ,EAAqB;AAC1BzB,MAAAA,QAAQ,CAACoC,MAAT,CAAgB,uBAAhB;AACD;AACF,GA/BQ,EA+BN,CACDJ,QADC,EAEDlC,KAAK,CAACoC,OAFL,EAGDhB,aAHC,EAIDI,aAJC,EAKDG,eALC,EAMDC,iBANC,EAODb,IAPC,EAQDZ,EARC,CA/BM,CAAT;AA0CAjD,EAAAA,SAAS,CAAC,MAAM;AACdgF,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE9C;AAAR,KAAD,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMkD,QAAQ,GAAIC,CAAD,IAAO;AACtB;AACA;AACAN,IAAAA,QAAQ,CAAC/C,iBAAiB,CAAC;AAAEgB,MAAAA,EAAF;AAAMC,MAAAA;AAAN,KAAD,CAAlB,CAAR;AACD,GAJD;;AAMA,QAAMqC,YAAY,GAAG,YAAY;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AACA,QAAIC,MAAM,CAACC,OAAP,CAAe,eAAf,CAAJ,EAAqC;AACnCX,MAAAA,QAAQ,CAACjD,iBAAiB,CAACkB,EAAD,CAAlB,CAAR;AACD;AACF,GALD;;AAOA,QAAM2C,UAAU,GAAG,MAAM;AACvBvC,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,GAFD;;AAIA,sBACE;AAAA,2BACE,QAAC,OAAD;AAAS,MAAA,SAAS,EAAEN,OAAO,CAACL,GAA5B;AAAiC,MAAA,OAAO,EAAC,QAAzC;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,OAAO,EAAE,CAAd;AAAiB,QAAA,IAAI,EAAE,CAAvB;AAAA,mBACGmB,IAAI,iBACH;AAAA,kCACE;AAAA,uCAAiBA,IAAI,CAACX,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,uCAAiBW,IAAI,CAACgC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,8CAAwBhC,IAAI,CAACiC,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA,wBAFJ,EAQGN,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCZ,YAAjC,CARH,EASGhB,IAAI,IAAIA,IAAI,CAACkC,aAAL,KAAuBlB,YAAY,CAACmB,MAA5C,iBACC;AAAA,oBACG1C,QAAQ,gBACP;AAAA,uBACG,GADH,eAEE,QAAC,SAAD;AACE,cAAA,OAAO,EAAE,MAAMC,WAAW,CAAE0C,IAAD,IAAU,CAACA,IAAZ,CAD5B;AAEE,cAAA,OAAO,EAAC,IAFV;AAAA,wBAIG/C;AAJH;AAAA;AAAA;AAAA;AAAA,oBAFF,eAQE,QAAC,SAAD;AACE,cAAA,QAAQ,EAAEmC,QADZ;AAEE,cAAA,aAAa,EAAE,EAFjB;AAGE,cAAA,MAAM,EAAE,CAAC;AAAEa,gBAAAA;AAAF,eAAD,kBACN,QAAC,IAAD;AACE,gBAAA,KAAK,EAAC,WADR;AAEE,gBAAA,QAAQ,EAAEA,YAFZ;AAGE,gBAAA,QAAQ,EAAEzE,YAAY,CAAC0E,KAHzB;AAIE,gBAAA,aAAa,EAAE1F,KAJjB;AAAA,uCAME,QAAC,SAAD;AAAA,0CACE,QAAC,SAAD;AAAA,2CACE,QAAC,SAAD;AACE,sBAAA,KAAK,EAAC,YADR;AAEE,sBAAA,IAAI,EAAC,OAFP,CAGE;AAHF;AAAA,6CAKE,QAAC,KAAD;AACE,wBAAA,IAAI,EAAC,OADP;AAEE,wBAAA,KAAK,EAAEyC,KAFT;AAGE,wBAAA,WAAW,EAAEA,KAHf;AAIE,wBAAA,QAAQ,EAAGoC,CAAD,IAAOnC,QAAQ,CAACmC,CAAC,CAACc,MAAF,CAASC,KAAV;AAJ3B;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BADF,eAgBE,QAAC,YAAD;AAAc,oBAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAhBF,eAkBE,QAAC,UAAD;AAAY,oBAAA,IAAI,EAAC,OAAjB;AAAyB,oBAAA,OAAO,EAAEd,YAAlC;AAAA,2CACE,QAAC,GAAD;AAAK,sBAAA,KAAK,EAAC,QAAX;AAAoB,sBAAA,OAAO,EAAE,CAA7B;AAAA,8CACE,QAAC,IAAD;AAAM,wBAAA,GAAG,EAAEe;AAAX;AAAA;AAAA;AAAA;AAAA,8BADF,eAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BAlBF,EAyBGlD,KAAK,iBACJ,QAAC,WAAD;AACE,oBAAA,IAAI,EAAEA,KADR;AAEE,oBAAA,YAAY,EAAEI,YAFhB;AAGE,oBAAA,OAAO,EAAEoC,UAHX;AAIE,oBAAA,UAAU,EAAC;AAJb;AAAA;AAAA;AAAA;AAAA,0BA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA,0BADO,gBA0DP;AAAA,mCACE,QAAC,SAAD;AACE,cAAA,OAAO,EAAC,IADV;AAEE,cAAA,OAAO,EAAE,MAAMrC,WAAW,CAAE0C,IAAD,IAAU,CAACA,IAAZ,CAF5B;AAAA,oDAKG/C,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AA3DJ,yBAVJ,EAgFK,GAhFL,eAiFE,QAAC,eAAD;AACE,UAAA,QAAQ,EAAEW,IADZ;AAEE,UAAA,OAAO,EAAEf,KAAK,CAACoC,OAFjB;AAGE,UAAA,SAAS,EAAErB,IAAI,IAAIA,IAAI,CAACkC,aAAL,KAAuBlB,YAAY,CAACmB;AAHzD;AAAA;AAAA;AAAA;AAAA,gBAjFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA+FD;;GArNuBnD,qB;UAENL,S,EAEKV,Q,EAIN1B,S,EAWKD,W,EAGDA,W,EAOAA,W,EAOAA,W,EAOFA,W,EAUAD,W;;;KArDK2C,qB","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { useParams } from \"react-router-dom\";\n\nimport Resource from \"@guestyci/agni\";\n\nimport RaisedButton from \"@guestyci/foundation/RaisedButton\";\n\nimport { Form as FinalForm, Field } from \"react-final-form\";\n\nimport Form from \"@guestyci/foundation/Form\";\nimport Input from \"@guestyci/foundation/Input\";\nimport DateRangePicker from \"@guestyci/foundation/DatePicker/DateRangePicker\";\nimport SingleDatePicker from \"@guestyci/foundation/DatePicker/SingleDatePicker\";\nimport NumberPicker from \"@guestyci/foundation/NumberPicker\";\nimport EmailInput from \"@guestyci/foundation/EmailInput\";\nimport Dropdown, { Option } from \"@guestyci/foundation/Dropdown\";\nimport TextField from \"@guestyci/foundation/TextField\";\nimport TextArea from \"@guestyci/foundation/TextArea\";\nimport Col from \"@guestyci/foundation/Layout/Col\";\nimport Section from \"@guestyci/foundation/Layout/Section\";\nimport DurationPicker from \"@guestyci/foundation/DurationPicker\";\nimport TimePicker from \"@guestyci/foundation/TimePicker\";\n\nimport FormField from \"@guestyci/foundation/FormField\";\nimport FormGroup from \"@guestyci/foundation/FormGroup\";\nimport { FormProvider } from \"@guestyci/foundation/enums\";\n// import { email } from \"@guestyci/foundation/validators\";\nimport createStyles from \"@guestyci/foundation/createStyles\";\n\nimport FlatButton from \"@guestyci/foundation/FlatButton\";\nimport { Row } from \"@guestyci/foundation/Layout\";\nimport { ReactComponent as BtnTrash } from \"@guestyci/foundation/icons/BtnTrash.svg\";\nimport Icon from \"@guestyci/foundation/Icon\";\n\nimport { useToast } from \"@guestyci/foundation/Toast\";\nimport {\n  deleteBlogPreprod,\n  detailsPreprodBlog,\n  updateBlogPreprod,\n} from \"../../actions/blogActions\";\nimport {\n  BLOG_DELETE_RESET,\n  BLOG_DETAILS_RESET,\n  BLOG_UPDATE_RESET,\n  POST_DELETE_RESET,\n} from \"../../constants/blogConstants\";\nimport PostListPreprod from \"../../components/PostListPreprod\";\nimport { userDataReducer } from \"../../reducers/userReducers\";\n\n// posts\n\nconst useStyles = createStyles((theme) => ({\n  app: {\n    backgroundColor: \"white\",\n    marginTop: \"80px\",\n  },\n}));\n\nexport default function BlogPreprodEditScreen(props) {\n  // console.log(\"props:\", props);\n  const classes = useStyles();\n\n  const { addToast } = useToast();\n\n  // const { api, env, config } = Resource.create();\n\n  const { id } = useParams();\n  // console.log(\"id:\", id);\n\n  const [title, setTitle] = useState();\n\n  const [error, setError] = useState(false);\n\n  const [editMode, setEditMode] = useState(false);\n  const errorMessage = \"There was a problem edit the blog.\";\n\n  // useSelector\n  const blogDetails = useSelector((state) => state.blogDetails);\n  const { loading, error: errorBlogDetails, blog } = blogDetails;\n\n  const blogUpdate = useSelector((state) => state.blogUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = blogUpdate;\n\n  const blogDelete = useSelector((state) => state.blogDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = blogDelete;\n\n  const postDelete = useSelector((state) => state.postDelete);\n  const {\n    loading: loadingPostDelete,\n    error: errorPostDelete,\n    success: successPostDelete,\n  } = postDelete;\n\n  const userData = useSelector((state) => state.userData);\n\n  const {\n    accountData,\n    userInfoData,\n    loading: loadingUserData,\n    error: errorUserData,\n  } = userData;\n\n  // useDispatch\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (successDelete) {\n      dispatch({ type: BLOG_DELETE_RESET });\n      dispatch({ type: BLOG_DETAILS_RESET });\n      props.history.push(\"/blog/preprod/list\");\n      addToast.success(`the blog ${title} was delete`);\n    } else if (errorDelete) {\n      addToast.danger(\"error edit the blog\");\n    }\n    if (successUpdate) {\n      dispatch({ type: BLOG_UPDATE_RESET });\n      dispatch({ type: BLOG_DETAILS_RESET });\n\n      // props.history.push(\"/blog/list\");\n      addToast.success(`the blog ${title} was edit`);\n    } else if (errorUpdate) {\n      addToast.danger(\"error edit the blog\");\n    }\n    if (!blog || successPostDelete) {\n      dispatch(detailsPreprodBlog(id));\n    } else {\n      setTitle(blog.title);\n    }\n\n    if (successPostDelete) {\n      dispatch({ type: POST_DELETE_RESET });\n      // props.history.push(\"/blog/list\");\n      addToast.success(`the post  was delete`);\n    } else if (errorPostDelete) {\n      addToast.danger(\"error delete the post\");\n    }\n  }, [\n    dispatch,\n    props.history,\n    successUpdate,\n    successDelete,\n    errorPostDelete,\n    successPostDelete,\n    blog,\n    id,\n  ]);\n\n  useEffect(() => {\n    dispatch({ type: BLOG_DETAILS_RESET });\n  }, []);\n\n  const onSubmit = (e) => {\n    // e.preventDefault();\n    // dispatch update blog\n    dispatch(updateBlogPreprod({ id, title }));\n  };\n\n  const handleDelete = async () => {\n    console.log(\"handleDelete\");\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteBlogPreprod(id));\n    }\n  };\n\n  const closeError = () => {\n    setError(false);\n  };\n\n  return (\n    <>\n      <Section className={classes.app} justify=\"center\">\n        <Col spacing={6} span={6}>\n          {blog && (\n            <>\n              <h1>Blog Title: {blog.title}</h1>\n              <h6>Blog Admin: {blog.admin}</h6>\n              <h6> Blog Admin Email: {blog.email}</h6>\n            </>\n          )}\n          {console.log(\"userInfoData._id:\", userInfoData)}\n          {blog && blog.userPreprodId === userInfoData.userId && (\n            <>\n              {editMode ? (\n                <>\n                  {\" \"}\n                  <TextField\n                    onClick={() => setEditMode((prev) => !prev)}\n                    variant=\"h2\"\n                  >\n                    {title}\n                  </TextField>\n                  <FinalForm\n                    onSubmit={onSubmit}\n                    initialValues={{}}\n                    render={({ handleSubmit }) => (\n                      <Form\n                        title=\"Edit Blog\"\n                        onSubmit={handleSubmit}\n                        provider={FormProvider.Final}\n                        fieldInstance={Field}\n                      >\n                        <FormGroup>\n                          <FormGroup>\n                            <FormField\n                              label=\"Blog Title\"\n                              name=\"title\"\n                              //   info=\"Drama, Action etc.\"\n                            >\n                              <Input\n                                name=\"title\"\n                                value={title}\n                                placeholder={title}\n                                onChange={(e) => setTitle(e.target.value)}\n                              />\n                            </FormField>\n                          </FormGroup>\n\n                          <RaisedButton type=\"submit\">Edit Blog</RaisedButton>\n\n                          <FlatButton type=\"error\" onClick={handleDelete}>\n                            <Row align=\"center\" spacing={2}>\n                              <Icon svg={BtnTrash} />\n                              <TextField> Delete Blog</TextField>\n                            </Row>\n                          </FlatButton>\n\n                          {error && (\n                            <ErrorBanner\n                              show={error}\n                              errorMessage={errorMessage}\n                              onClick={closeError}\n                              actionText=\"Try again\"\n                            />\n                          )}\n                        </FormGroup>\n                      </Form>\n                    )}\n                  />\n                </>\n              ) : (\n                <>\n                  <TextField\n                    variant=\"h2\"\n                    onClick={() => setEditMode((prev) => !prev)}\n                  >\n                   Click to Edit the Blog:\n                    {title}\n                  </TextField>\n                </>\n              )}\n            </>\n          )}{\" \"}\n          <PostListPreprod\n            blogData={blog}\n            history={props.history}\n            blogAdmin={blog && blog.userPreprodId === userInfoData.userId}\n          />\n        </Col>\n      </Section>\n\n      {/* /////////////////////// posts////////////////// */}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}