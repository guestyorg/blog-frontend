import React, { useRef, useCallback, useEffect } from 'react';
import PropTypes from 'prop-types';
import { createUseStyles } from 'react-jss';
import cn from 'classnames';
import TileItem from "./TileItem";
const tileWidth = 100;
const useStyles = createUseStyles({
  'tile-items-list': props => ({
    'max-width': props.maxShownItems * tileWidth
  }),
  listBottom: {
    float: 'left',
    clear: 'both'
  }
});

const scrollToBottom = listRef => {
  if (listRef) {
    listRef.current.scrollIntoView({
      behavior: 'smooth'
    });
  }
};

const TilesItemsList = ({
  tileItems,
  maxShownItems,
  onDeleteItem
}) => {
  const listRef = useRef(null);
  const classes = useStyles({
    maxShownItems
  });
  useEffect(() => {
    if (tileItems.length > maxShownItems) {
      scrollToBottom(listRef);
    }
  }, [tileItems, maxShownItems]);
  const onDelete = useCallback(itemKey => {
    onDeleteItem(itemKey);
  });
  return /*#__PURE__*/React.createElement("div", {
    className: cn(`${classes['tile-items-list']} flex-space-between-center flex-row overflow-y-scroll`),
    "data-qa": "tiles-items-list"
  }, tileItems.map((item, i) => {
    const itemKey = `tile-item-${i}`;
    const isLast = i === tileItems.length - 1;
    return /*#__PURE__*/React.createElement("div", {
      className: cn('tile-item bg-gray-lightest height-90 min-width-100 border-gray-light', {
        'br-1': !isLast
      }),
      key: itemKey
    }, item && /*#__PURE__*/React.createElement(TileItem, {
      icon: item[1].icon,
      text: item[1].text,
      height: item[1].height,
      width: item[1].width,
      itemKey: item[0],
      onDelete: onDelete
    }));
  }), /*#__PURE__*/React.createElement("div", {
    className: classes.listBottom,
    ref: listRef
  }));
};

TilesItemsList.defaultProps = {
  tileItems: [],
  maxShownItems: 4
};
TilesItemsList.propTypes = {
  // tile items to render
  tileItems: PropTypes.arrayOf(PropTypes.array),
  // sets the number of tiles what would be rendered
  maxShownItems: PropTypes.number
};
export default TilesItemsList;