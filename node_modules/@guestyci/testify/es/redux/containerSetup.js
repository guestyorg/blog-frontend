import _extends from "@babel/runtime/helpers/esm/extends";
import React from 'react';
import configureMockStore from 'redux-mock-store';
import { Provider } from 'react-redux';
import { mount } from 'enzyme';
/**
 * create the setup for container components(connected to store)
 * @param Comp  {JSX.Element} The component to setup
 * @param initalStore {Object} The inital state of the store
 * @returns {WrappedComponent: function(props: {object}): JSX.Element, componentSetup: function(additionalStore: {Object}, props: {Object}, attachTo: {HTMLElement}): WrappedComponent}
 */

export default ((Comp, initalStore = {}) => ({
  WrappedComponent: props => React.createElement(Provider, {
    store: configureMockStore()(initalStore)
  }, React.createElement(Comp, props)),
  componentSetup: (additionalStore = {}, props, attachTo) => {
    const store = configureMockStore()(_extends({}, initalStore, {}, additionalStore));
    const wrappedComponent = React.createElement(Provider, {
      store: store
    }, React.createElement(Comp, props));
    return mount(wrappedComponent, attachTo ? {
      attachTo
    } : undefined);
  }
}));