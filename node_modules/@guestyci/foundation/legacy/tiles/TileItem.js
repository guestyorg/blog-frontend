"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _Icon = _interopRequireDefault(require("../Icon"));

var _IconButton = _interopRequireDefault(require("../IconButton/IconButton"));

function _createSuper(Derived) { return function () { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var TileItem = /*#__PURE__*/function (_Component) {
  (0, _inherits2["default"])(TileItem, _Component);

  var _super = _createSuper(TileItem);

  function TileItem() {
    var _this;

    (0, _classCallCheck2["default"])(this, TileItem);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _this.onDeleteItem = function () {
      var _this$props = _this.props,
          onDelete = _this$props.onDelete,
          itemKey = _this$props.itemKey;
      onDelete(itemKey);
    };

    return _this;
  }

  (0, _createClass2["default"])(TileItem, [{
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          icon = _this$props2.icon,
          text = _this$props2.text,
          width = _this$props2.width,
          height = _this$props2.height;
      return /*#__PURE__*/_react["default"].createElement("div", {
        className: (0, _classnames["default"])('flex-space-between-center flex-column bg-white p-1 h-fill w-fill'),
        "data-qa": "tile-item"
      }, /*#__PURE__*/_react["default"].createElement(_IconButton["default"], {
        className: "d-flex-fill flex-end-center",
        onClick: this.onDeleteItem,
        icon: "BtnDelete",
        iconHeight: 10,
        iconWidth: 10
      }), /*#__PURE__*/_react["default"].createElement(_Icon["default"], {
        icon: icon,
        width: width,
        height: height
      }), /*#__PURE__*/_react["default"].createElement("div", {
        className: "item-text font-size-xs mb-2"
      }, text));
    }
  }]);
  return TileItem;
}(_react.Component);

TileItem.defaultProps = {
  icon: '',
  text: '',
  height: 40,
  width: 40,
  onDelete: function onDelete() {}
};
TileItem.propTypes = {
  // icon name - string
  icon: _propTypes["default"].string,
  // icon text
  text: _propTypes["default"].string,
  // icon height
  height: _propTypes["default"].number,
  // icon width
  width: _propTypes["default"].number,
  // item's key
  itemKey: _propTypes["default"].string.isRequired,
  // callback to be called when a tile is changed
  onDelete: _propTypes["default"].func
};
var _default = TileItem;
exports["default"] = _default;