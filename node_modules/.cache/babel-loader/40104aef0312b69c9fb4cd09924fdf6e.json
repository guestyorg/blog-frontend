{"ast":null,"code":"import React, { useMemo, forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { createUseStyles } from 'react-jss';\nimport cn from 'classnames';\nvar useStyles = createUseStyles({\n  icon: {\n    minWidth: function minWidth(props) {\n      return props.width;\n    },\n    minHeight: function minHeight(props) {\n      return props.height;\n    }\n  }\n});\nvar SvgIcon = forwardRef(function SvgIcon(_ref, ref) {\n  var width = _ref.width,\n      height = _ref.height,\n      color = _ref.color,\n      fillColor = _ref.fillColor,\n      strokeColor = _ref.strokeColor,\n      className = _ref.className,\n      svg = _ref.svg,\n      style = _ref.style,\n      noFill = _ref.noFill;\n  var classes = useStyles({\n    width: width,\n    height: height\n  });\n  var Svg = useMemo(function () {\n    return svg;\n  }, [svg]);\n  var iconFillColor = fillColor || color;\n  return /*#__PURE__*/React.createElement(Svg, {\n    ref: ref,\n    width: width,\n    height: height,\n    className: cn({\n      'transition-all': iconFillColor && !noFill\n    }, className, noFill ? 'fill-inherit' : [\"fill-\".concat(iconFillColor, \" stroke-\").concat(strokeColor)], classes.icon),\n    style: style\n  });\n});\nSvgIcon.defaultProps = {\n  width: 20,\n  height: 20,\n  color: '',\n  fillColor: '',\n  strokeColor: '',\n  className: '',\n  style: {},\n  noFill: false\n};\nSvgIcon.propTypes = {\n  /** Icon width in pixels */\n  width: PropTypes.number,\n\n  /** Icon height in pixels */\n  height: PropTypes.number,\n\n  /** Icon fill color - see style guide colors for options - Deprecated use fillColor */\n  color: PropTypes.string,\n\n  /** Icon fill color - see style guide colors for options */\n  fillColor: PropTypes.string,\n\n  /** Icon stroke color - see style guide colors for options */\n  strokeColor: PropTypes.string,\n\n  /** Class to add to the Icon component */\n  className: PropTypes.string,\n\n  /** Style to add to Icon component */\n  style: PropTypes.shape(),\n\n  /** The svg icon to render */\n  svg: PropTypes.oneOfType([PropTypes.shape(), PropTypes.func]).isRequired,\n\n  /** boolean - decide whether to disable default fill color */\n  noFill: PropTypes.bool\n}; // Hack for withInfo plugin\n\nSvgIcon.displayName = 'SvgIcon';\nexport default SvgIcon;","map":{"version":3,"sources":["/Users/giladdekel/Workspace/Guesty/simple-app-archive/node_modules/@guestyci/foundation/esm/legacy/SvgIcon/SvgIcon.js"],"names":["React","useMemo","forwardRef","PropTypes","createUseStyles","cn","useStyles","icon","minWidth","props","width","minHeight","height","SvgIcon","_ref","ref","color","fillColor","strokeColor","className","svg","style","noFill","classes","Svg","iconFillColor","createElement","concat","defaultProps","propTypes","number","string","shape","oneOfType","func","isRequired","bool","displayName"],"mappings":"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","sourcesContent":["import React, { useMemo, forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { createUseStyles } from 'react-jss';\nimport cn from 'classnames';\nvar useStyles = createUseStyles({\n  icon: {\n    minWidth: function minWidth(props) {\n      return props.width;\n    },\n    minHeight: function minHeight(props) {\n      return props.height;\n    }\n  }\n});\nvar SvgIcon = forwardRef(function SvgIcon(_ref, ref) {\n  var width = _ref.width,\n      height = _ref.height,\n      color = _ref.color,\n      fillColor = _ref.fillColor,\n      strokeColor = _ref.strokeColor,\n      className = _ref.className,\n      svg = _ref.svg,\n      style = _ref.style,\n      noFill = _ref.noFill;\n  var classes = useStyles({\n    width: width,\n    height: height\n  });\n  var Svg = useMemo(function () {\n    return svg;\n  }, [svg]);\n  var iconFillColor = fillColor || color;\n  return /*#__PURE__*/React.createElement(Svg, {\n    ref: ref,\n    width: width,\n    height: height,\n    className: cn({\n      'transition-all': iconFillColor && !noFill\n    }, className, noFill ? 'fill-inherit' : [\"fill-\".concat(iconFillColor, \" stroke-\").concat(strokeColor)], classes.icon),\n    style: style\n  });\n});\nSvgIcon.defaultProps = {\n  width: 20,\n  height: 20,\n  color: '',\n  fillColor: '',\n  strokeColor: '',\n  className: '',\n  style: {},\n  noFill: false\n};\nSvgIcon.propTypes = {\n  /** Icon width in pixels */\n  width: PropTypes.number,\n\n  /** Icon height in pixels */\n  height: PropTypes.number,\n\n  /** Icon fill color - see style guide colors for options - Deprecated use fillColor */\n  color: PropTypes.string,\n\n  /** Icon fill color - see style guide colors for options */\n  fillColor: PropTypes.string,\n\n  /** Icon stroke color - see style guide colors for options */\n  strokeColor: PropTypes.string,\n\n  /** Class to add to the Icon component */\n  className: PropTypes.string,\n\n  /** Style to add to Icon component */\n  style: PropTypes.shape(),\n\n  /** The svg icon to render */\n  svg: PropTypes.oneOfType([PropTypes.shape(), PropTypes.func]).isRequired,\n\n  /** boolean - decide whether to disable default fill color */\n  noFill: PropTypes.bool\n}; // Hack for withInfo plugin\n\nSvgIcon.displayName = 'SvgIcon';\nexport default SvgIcon;"]},"metadata":{},"sourceType":"module"}