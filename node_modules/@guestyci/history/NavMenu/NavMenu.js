"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _List = require("@guestyci/foundation/List");

var _createStyles = _interopRequireDefault(require("@guestyci/foundation/createStyles"));

var _reactRouterDom = require("react-router-dom");

var _NavMenuItem = _interopRequireDefault(require("./NavMenuItem"));

var _NavMenuAccordion = _interopRequireDefault(require("./NavMenuAccordion"));

var _utils = _interopRequireDefault(require("../utils"));

var useStyles = (0, _createStyles["default"])(function () {
  return {
    root: {
      width: '250px',
      height: '100%'
    }
  };
});

var isMatchingPath = function isMatchingPath(path) {
  var pathToMatch = path.startsWith('/') ? path : _utils["default"].getPathName() + path;
  return !!(0, _reactRouterDom.matchPath)(_utils["default"].location().pathname, {
    path: pathToMatch
  });
};

var submenuItemJssOverrides = function submenuItemJssOverrides(theme) {
  return {
    content: {
      paddingLeft: theme.spacer(10)
    }
  };
};

var NavMenu = function NavMenu(_ref) {
  var _ref$routeItems = _ref.routeItems,
      routeItems = _ref$routeItems === void 0 ? [] : _ref$routeItems,
      _ref$jss = _ref.jss,
      jss = _ref$jss === void 0 ? {} : _ref$jss,
      _ref$onSelect = _ref.onSelect,
      onSelect = _ref$onSelect === void 0 ? null : _ref$onSelect,
      _ref$onExpandItem = _ref.onExpandItem,
      onExpandItem = _ref$onExpandItem === void 0 ? null : _ref$onExpandItem;
  var classes = useStyles({
    jss: jss
  });
  var pathToParentIdMap = (0, _react.useMemo)(function () {
    var result = new Map();
    routeItems.forEach(function (routeItem) {
      if (routeItem.subrouteItems instanceof Array && routeItem.subrouteItems.length) {
        return routeItem.subrouteItems.forEach(function (subrouteItem) {
          return result.set(subrouteItem.to, routeItem.id);
        });
      }

      return result.set(routeItem.to);
    });
    return result;
  }, [routeItems]);

  var _useState = (0, _react.useState)(null),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      selectedRoute = _useState2[0],
      setSelectedRoute = _useState2[1];

  var _useState3 = (0, _react.useState)(new Set()),
      _useState4 = (0, _slicedToArray2["default"])(_useState3, 2),
      openedSubmenus = _useState4[0],
      setOpenedSubmenus = _useState4[1];

  (0, _react.useEffect)(function () {
    var flattenRoutes = (0, _toConsumableArray2["default"])(pathToParentIdMap.keys());
    var currentRoute = flattenRoutes.filter(isMatchingPath)[0] || flattenRoutes[0];
    setSelectedRoute(currentRoute);
    setOpenedSubmenus(new Set([pathToParentIdMap.get(currentRoute)]));
  }, [routeItems]);
  var onMenuItemClick = (0, _react.useCallback)(function (item) {
    var to = item.to;
    setSelectedRoute(to);
    if (onSelect) onSelect(item);
  }, [onSelect]);

  var onSubmenuOpen = function onSubmenuOpen(item) {
    var submenuId = item.id;

    if (openedSubmenus.has(submenuId)) {
      openedSubmenus["delete"](submenuId);
    } else {
      openedSubmenus.add(submenuId);

      if (onExpandItem) {
        onExpandItem(item);
      }
    }

    return setOpenedSubmenus(new Set(openedSubmenus));
  };

  var shouldRenderAccordion = function shouldRenderAccordion(routeItem) {
    if (routeItem.subrouteItems instanceof Array && routeItem.subrouteItems.length) return true;
    return false;
  };

  return /*#__PURE__*/_react["default"].createElement(_List.List, {
    className: classes.root
  }, routeItems.map(function (item) {
    if (shouldRenderAccordion(item)) {
      var open = openedSubmenus.has(item.id);
      var isSubmenuItemSelected = pathToParentIdMap.get(selectedRoute) === item.id;
      return /*#__PURE__*/_react["default"].createElement(_NavMenuAccordion["default"], {
        title: item.label,
        icon: item.icon,
        className: open || isSubmenuItemSelected ? 'accordion-opened' : 'accordion-closed',
        onChange: function onChange() {
          return onSubmenuOpen(item);
        },
        open: open,
        key: item.id
      }, item.subrouteItems.map(function (subrouteItem) {
        return /*#__PURE__*/_react["default"].createElement(_NavMenuItem["default"], (0, _extends2["default"])({}, subrouteItem, {
          jss: submenuItemJssOverrides,
          onClick: function onClick() {
            return onMenuItemClick(subrouteItem);
          },
          selected: subrouteItem.to === selectedRoute,
          key: subrouteItem.id
        }), subrouteItem.label);
      }));
    }

    return /*#__PURE__*/_react["default"].createElement(_NavMenuItem["default"], (0, _extends2["default"])({}, item, {
      onClick: function onClick() {
        return onMenuItemClick(item);
      },
      selected: item.to === selectedRoute,
      key: item.id
    }), item.label);
  }));
};

var routeShape = {
  id: _propTypes["default"].string.isRequired,
  to: _propTypes["default"].string,
  label: _propTypes["default"].oneOfType([_propTypes["default"].node, _propTypes["default"].string]),
  icon: _propTypes["default"].oneOfType([_propTypes["default"].shape(), _propTypes["default"].func])
};
NavMenu.propTypes = {
  /** Array of the route objects to serve MenuItem */
  routeItems: _propTypes["default"].arrayOf(_propTypes["default"].shape((0, _extends2["default"])({}, routeShape, {
    subroutes: _propTypes["default"].arrayOf(_propTypes["default"].shape(routeShape))
  }))),

  /** Jss override to create custom styles */
  jss: _propTypes["default"].oneOfType([_propTypes["default"].shape(), _propTypes["default"].func]),

  /** Callback function that is called on MenuItem select, accepts 'to' */
  onSelect: _propTypes["default"].func,

  /** Callback function that is called on MenuItem being expanded */
  onExpandItem: _propTypes["default"].func
};
var _default = NavMenu;
exports["default"] = _default;