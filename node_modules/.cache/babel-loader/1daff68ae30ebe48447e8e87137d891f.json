{"ast":null,"code":"var _jsxFileName = \"/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/screens/AccountAddScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Resource from \"@guestyci/agni\";\nimport RaisedButton from \"@guestyci/foundation/RaisedButton\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport Form from \"@guestyci/foundation/Form\";\nimport Input from \"@guestyci/foundation/Input\";\nimport DateRangePicker from \"@guestyci/foundation/DatePicker/DateRangePicker\";\nimport SingleDatePicker from \"@guestyci/foundation/DatePicker/SingleDatePicker\";\nimport NumberPicker from \"@guestyci/foundation/NumberPicker\";\nimport EmailInput from \"@guestyci/foundation/EmailInput\";\nimport Dropdown, { Option } from \"@guestyci/foundation/Dropdown\";\nimport TextField from \"@guestyci/foundation/TextField\";\nimport TextArea from \"@guestyci/foundation/TextArea\";\nimport Col from \"@guestyci/foundation/Layout/Col\";\nimport Section from \"@guestyci/foundation/Layout/Section\";\nimport DurationPicker from \"@guestyci/foundation/DurationPicker\";\nimport TimePicker from \"@guestyci/foundation/TimePicker\";\nimport FormField from \"@guestyci/foundation/FormField\";\nimport FormGroup from \"@guestyci/foundation/FormGroup\";\nimport { FormProvider } from \"@guestyci/foundation/enums\"; // import { email } from '@guestyci/foundation/validators';\n\nimport createStyles from \"@guestyci/foundation/createStyles\";\nimport ErrorBanner from \"@guestyci/foundation/legacy/Table/ErrorBanner\";\nimport { useToast } from \"@guestyci/foundation/Toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = createStyles(theme => ({\n  app: {\n    backgroundColor: \"white\"\n  }\n}));\nexport default function AccountAddScreen(props) {\n  _s();\n\n  console.log('email');\n  const classes = useStyles();\n  const {\n    addToast\n  } = useToast();\n  const {\n    api,\n    env,\n    config\n  } = Resource.create(); // const { id } = useParams();\n  // console.log(\"id:\", id);\n\n  const [name, setFirstName] = useState();\n  const [email, setEmail] = useState(); // const [password, setPassword] = useState();\n\n  const errorMessage = \"There was a problem add the user.\";\n  const [error, setError] = useState(false);\n\n  const onSubmit = e => {\n    // e.preventDefault();\n    console.log(\"onSubmit\");\n    console.log(name);\n    console.log(email); // console.log(password);\n    // async function createAccount() {\n    //   try {\n    //     const response = await api.post(`/users`, {\n    //       name,\n    //       email,\n    //       // password,\n    //     }); // will go to `${config.MAILER_URL}/users`\n    //     console.log(\"response:\", response);\n    //     // const data = response.data;]\n    //     if (response.status === 200) {\n    //       addToast.success(`user ${name} was add successfully`);\n    //       props.history.push(\"/\");\n    //     } else {\n    //       console.log(\"response.status: \", response.status);\n    //     }\n    //   } catch (error) {\n    //     console.log(\"error:\", error);\n    //     addToast.danger(\"error adding the user\");\n    //     setError(true);\n    //     // setTimeout(() => {\n    //     //   setError(false);\n    //     // }, 3000);\n    //   }\n    // }\n    // createAccount();\n    // props.history.push(\"/\");\n  };\n\n  const closeError = () => {\n    setError(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    \"data-qa\": \"account-add-screen\",\n    children: \"fdsfds\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 1\n  }, this);\n}\n\n_s(AccountAddScreen, \"1nh1NzQy4sXWkJaRlRyMz9eL3Yk=\", false, function () {\n  return [useStyles, useToast];\n});\n\n_c = AccountAddScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountAddScreen\");","map":{"version":3,"sources":["/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/screens/AccountAddScreen.js"],"names":["React","useEffect","useState","useParams","Resource","RaisedButton","Form","FinalForm","Field","Input","DateRangePicker","SingleDatePicker","NumberPicker","EmailInput","Dropdown","Option","TextField","TextArea","Col","Section","DurationPicker","TimePicker","FormField","FormGroup","FormProvider","createStyles","ErrorBanner","useToast","useStyles","theme","app","backgroundColor","AccountAddScreen","props","console","log","classes","addToast","api","env","config","create","name","setFirstName","email","setEmail","errorMessage","error","setError","onSubmit","e","closeError"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,OAAOC,YAAP,MAAyB,mCAAzB;AAEA,SAASC,IAAI,IAAIC,SAAjB,EAA4BC,KAA5B,QAAyC,kBAAzC;AAEA,OAAOF,IAAP,MAAiB,2BAAjB;AACA,OAAOG,KAAP,MAAkB,4BAAlB;AACA,OAAOC,eAAP,MAA4B,iDAA5B;AACA,OAAOC,gBAAP,MAA6B,kDAA7B;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAOC,QAAP,IAAmBC,MAAnB,QAAiC,+BAAjC;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,GAAP,MAAgB,iCAAhB;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AAEA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,SAASC,YAAT,QAA6B,4BAA7B,C,CACA;;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AAEA,OAAOC,WAAP,MAAwB,+CAAxB;AAEA,SAASC,QAAT,QAAyB,4BAAzB;;AAEA,MAAMC,SAAS,GAAGH,YAAY,CAAEI,KAAD,KAAY;AACzCC,EAAAA,GAAG,EAAE;AACHC,IAAAA,eAAe,EAAE;AADd;AADoC,CAAZ,CAAD,CAA9B;AAMA,eAAe,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAE9CC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAEA,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AACA,QAAM;AAAES,IAAAA;AAAF,MAAeV,QAAQ,EAA7B;AAEA,QAAM;AAAEW,IAAAA,GAAF;AAAOC,IAAAA,GAAP;AAAYC,IAAAA;AAAZ,MAAuBpC,QAAQ,CAACqC,MAAT,EAA7B,CAP8C,CAS9C;AACA;;AAEA,QAAM,CAACC,IAAD,EAAOC,YAAP,IAAuBzC,QAAQ,EAArC;AAEA,QAAM,CAAC0C,KAAD,EAAQC,QAAR,IAAoB3C,QAAQ,EAAlC,CAd8C,CAgB9C;;AAEA,QAAM4C,YAAY,GAAG,mCAArB;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB9C,QAAQ,CAAC,KAAD,CAAlC;;AAEA,QAAM+C,QAAQ,GAAIC,CAAD,IAAO;AACtB;AAEAhB,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYO,IAAZ;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ,EALsB,CAMtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACD,GAtCD;;AAwCA,QAAMO,UAAU,GAAG,MAAM;AACvBH,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,GAFD;;AAIA,sBACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADE;AAED;;GApEuBhB,gB;UAINJ,S,EACKD,Q;;;KALCK,gB","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Resource from \"@guestyci/agni\";\n\nimport RaisedButton from \"@guestyci/foundation/RaisedButton\";\n\nimport { Form as FinalForm, Field } from \"react-final-form\";\n\nimport Form from \"@guestyci/foundation/Form\";\nimport Input from \"@guestyci/foundation/Input\";\nimport DateRangePicker from \"@guestyci/foundation/DatePicker/DateRangePicker\";\nimport SingleDatePicker from \"@guestyci/foundation/DatePicker/SingleDatePicker\";\nimport NumberPicker from \"@guestyci/foundation/NumberPicker\";\nimport EmailInput from \"@guestyci/foundation/EmailInput\";\nimport Dropdown, { Option } from \"@guestyci/foundation/Dropdown\";\nimport TextField from \"@guestyci/foundation/TextField\";\nimport TextArea from \"@guestyci/foundation/TextArea\";\nimport Col from \"@guestyci/foundation/Layout/Col\";\nimport Section from \"@guestyci/foundation/Layout/Section\";\nimport DurationPicker from \"@guestyci/foundation/DurationPicker\";\nimport TimePicker from \"@guestyci/foundation/TimePicker\";\n\nimport FormField from \"@guestyci/foundation/FormField\";\nimport FormGroup from \"@guestyci/foundation/FormGroup\";\nimport { FormProvider } from \"@guestyci/foundation/enums\";\n// import { email } from '@guestyci/foundation/validators';\nimport createStyles from \"@guestyci/foundation/createStyles\";\n\nimport ErrorBanner from \"@guestyci/foundation/legacy/Table/ErrorBanner\";\n\nimport { useToast } from \"@guestyci/foundation/Toast\";\n\nconst useStyles = createStyles((theme) => ({\n  app: {\n    backgroundColor: \"white\",\n  },\n}));\n\nexport default function AccountAddScreen(props) {  \n  \n  console.log('email')\n\n  const classes = useStyles();\n  const { addToast } = useToast();\n\n  const { api, env, config } = Resource.create();\n\n  // const { id } = useParams();\n  // console.log(\"id:\", id);\n\n  const [name, setFirstName] = useState();\n\n  const [email, setEmail] = useState();\n\n  // const [password, setPassword] = useState();\n\n  const errorMessage = \"There was a problem add the user.\";\n\n  const [error, setError] = useState(false);\n\n  const onSubmit = (e) => {\n    // e.preventDefault();\n\n    console.log(\"onSubmit\");\n    console.log(name);\n    console.log(email);\n    // console.log(password);\n\n    // async function createAccount() {\n    //   try {\n    //     const response = await api.post(`/users`, {\n    //       name,\n    //       email,\n    //       // password,\n    //     }); // will go to `${config.MAILER_URL}/users`\n    //     console.log(\"response:\", response);\n    //     // const data = response.data;]\n\n    //     if (response.status === 200) {\n    //       addToast.success(`user ${name} was add successfully`);\n    //       props.history.push(\"/\");\n    //     } else {\n    //       console.log(\"response.status: \", response.status);\n    //     }\n    //   } catch (error) {\n    //     console.log(\"error:\", error);\n    //     addToast.danger(\"error adding the user\");\n\n    //     setError(true);\n\n    //     // setTimeout(() => {\n    //     //   setError(false);\n    //     // }, 3000);\n    //   }\n    // }\n    // createAccount();\n\n    // props.history.push(\"/\");\n  };\n\n  const closeError = () => {\n    setError(false);\n  };\n\n  return (\n<h1>fdsfds</h1> );\n}\n"]},"metadata":{},"sourceType":"module"}