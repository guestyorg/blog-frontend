import React, { useMemo } from 'react';
import cn from 'classnames';
import PropTypes from 'prop-types';
import { createUseStyles } from 'react-jss';
import { nameToInitials } from "../../utils";
export var getClass = function getClass(size) {
  switch (size) {
    case 'xl':
      return '80px';

    case 'md':
      return '40px';

    case 'lg':
      return '60px';

    case 'sm':
      return '25px';

    default:
      return '40px';
  }
};
var useStyles = createUseStyles({
  icon: {
    height: function height(_ref) {
      var size = _ref.size;
      return getClass(size);
    },
    width: function width(_ref2) {
      var size = _ref2.size;
      return getClass(size);
    }
  }
});

var convertText = function convertText() {
  var text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  var avatarText = text.replace(/[\W_][ ]+/g, '');
  var words = avatarText.split(' ');

  if (avatarText.length < 2 || avatarText === '') {
    return '- -';
  }

  return words.length > 1 ? nameToInitials(avatarText) : avatarText;
};

var TextAvatar = function TextAvatar(_ref3) {
  var text = _ref3.text,
      isUser = _ref3.isUser,
      _ref3$size = _ref3.size,
      size = _ref3$size === void 0 ? 'md' : _ref3$size,
      disabled = _ref3.disabled;
  var avatarClasses = useStyles({
    size: size
  });
  var avatarText = useMemo(function () {
    return convertText(text);
  }, [text]);
  var textClasses = 'text-avatar text-uppercase text-white d-flex align-items-center justify-content-center';
  var bgColor = isUser ? 'blue-dark' : 'gray-darkest';
  return /*#__PURE__*/React.createElement("div", {
    className: cn(textClasses, 'flex-center', "avatar", "bg-".concat(bgColor), {
      disabled: disabled
    }, avatarClasses.icon, {
      'font-size-3xl': size === 'xl'
    }),
    "data-qa": "text-avatar"
  }, /*#__PURE__*/React.createElement("span", null, avatarText));
};

TextAvatar.propTypes = {
  text: PropTypes.string.isRequired,
  isUser: PropTypes.bool,
  size: PropTypes.oneOf(['sm', 'md', 'lg']),
  disabled: PropTypes.bool
};
export default TextAvatar;