"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.generateMediaSupport = exports.generateSpacing = exports.spacing = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _memoize = _interopRequireDefault(require("@guestyci/memoize"));

var _commonUtility = require("../utils/commonUtility");

var COL_SPANS = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];
var spacing = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];
exports.spacing = spacing;
var generateSpacing = (0, _memoize["default"])(function (spacer) {
  var spacings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : spacing;
  var merging = arguments.length > 2 ? arguments[2] : undefined;
  return spacings.reduce(function (acc, space) {
    var spacingObj = (0, _defineProperty2["default"])({}, "spacing".concat(space), {
      '& > * ': (0, _defineProperty2["default"])({}, "margin".concat((0, _commonUtility.capitalize)(merging)), spacer(space))
    });
    return (0, _extends2["default"])({}, acc, {}, spacingObj);
  }, {});
});
exports.generateSpacing = generateSpacing;
var generateMediaSupport = (0, _memoize["default"])(function () {
  var breakpoints = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
    keys: []
  };
  return breakpoints.keys.reduce(function (acc, breakpoint) {
    var styles = {};
    var control = {};
    COL_SPANS.forEach(function (span) {
      var key = "col-".concat(breakpoint, "-").concat(span); // Keep 7 significant numbers.

      var width = "".concat(Math.round(span / 12 * 10e7) / 10e5, "%");
      styles[key] = {
        flexBasis: width,
        flexGrow: 0,
        maxWidth: width
      };
      control[key] = {
        display: 'flex'
      };
    });

    if (breakpoint === 'xs') {
      styles["col-".concat(breakpoint, "-auto")] = {
        flexGrow: 1
      };
      Object.assign(acc, styles);
    } else {
      acc[breakpoints.create(breakpoint)] = styles;
      Object.assign(acc, control);
    }

    return acc;
  }, {});
});
exports.generateMediaSupport = generateMediaSupport;
var _default = {
  flexWrap: {
    flexWrap: 'wrap'
  },
  // justify styling
  justifyBetween: {
    justifyContent: 'space-between'
  },
  justifyAround: {
    justifyContent: 'space-around'
  },
  justifyEvenly: {
    justifyContent: 'space-evenly'
  },
  justifyCenter: {
    justifyContent: 'center'
  },
  justifyStart: {
    justifyContent: 'flex-start'
  },
  justifyEnd: {
    justifyContent: 'flex-end'
  },
  // align styling
  alignItemsBaseline: {
    alignItems: 'baseline'
  },
  alignItemsCenter: {
    alignItems: 'center'
  },
  alignItemsStart: {
    alignItems: 'flex-start'
  },
  alignItemsEnd: {
    alignItems: 'flex-end'
  },
  // support full width
  fullWidth: {
    width: '100%'
  }
};
exports["default"] = _default;