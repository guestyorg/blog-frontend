import _extends from "@babel/runtime/helpers/esm/extends";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import React from 'react';
import cn from 'classnames';
import PropTypes from 'prop-types';
import createStyles from "../createStyles";
import Icon from "../legacy/Icon";
import Button from "../Button";

var BtnArrowUp = function BtnArrowUp(props) {
  return /*#__PURE__*/React.createElement("svg", props, /*#__PURE__*/React.createElement("path", {
    d: "M4.529 0a.474.474 0 0 0-.357.137L.137 4.172a.488.488 0 0 0 .69.689L4.53 1.156l3.705 3.705a.488.488 0 0 0 .69-.69L4.89.138A.477.477 0 0 0 4.53 0z"
  }));
};

BtnArrowUp.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 9.0618038 4.9977479"
};
export var useStyles = createStyles(function (theme) {
  return {
    root: {
      height: '100%',
      width: 46,
      borderRadius: 0,
      borderLeft: "solid 1px ".concat(theme.palette.border)
    },
    arrow: {
      fill: theme.palette.secondary["default"],
      transition: theme.transition.create()
    },
    active: {
      fill: theme.palette.primary["default"]
    },
    rotate: {
      transform: 'rotate(180deg)'
    }
  };
}, {
  name: 'DropdownArrowButton'
});
var DropdownArrowButton = React.forwardRef(function DropdownArrowButton(_ref, ref) {
  var _cn;

  var disabled = _ref.disabled,
      onClick = _ref.onClick,
      active = _ref.active,
      className = _ref.className,
      jss = _ref.jss,
      props = _objectWithoutProperties(_ref, ["disabled", "onClick", "active", "className", "jss"]);

  var classes = useStyles({
    jss: jss
  });
  return /*#__PURE__*/React.createElement(Button, _extends({}, props, {
    component: "span",
    ref: ref,
    enableRipple: false,
    className: cn(classes.root, classes.arrow, className),
    disabled: disabled,
    size: "xs"
  }), /*#__PURE__*/React.createElement(Icon, {
    svg: BtnArrowUp,
    className: cn(classes.arrow, (_cn = {}, _defineProperty(_cn, classes.rotate, !active), _defineProperty(_cn, classes.active, active), _cn), 'dropdown-arrow-button'),
    width: 10,
    height: 10
  }));
});
DropdownArrowButton.propTypes = {
  onClick: PropTypes.func,
  disabled: PropTypes.bool,
  className: PropTypes.string,
  active: PropTypes.bool,
  jss: PropTypes.oneOfType([PropTypes.shape(), PropTypes.func])
};
DropdownArrowButton.displayName = 'DropdownArrowButton';
export default DropdownArrowButton;