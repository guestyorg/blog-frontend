"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactJss = require("react-jss");

var useStyles = (0, _reactJss.createUseStyles)({
  menuItem: {
    '&:last-child': {
      marginBottom: '0 !important'
    }
  }
});

var MenuItem = function MenuItem(_ref) {
  var className = _ref.className,
      style = _ref.style,
      children = _ref.children,
      dense = _ref.dense,
      onClick = _ref.onClick,
      isSelected = _ref.isSelected,
      selectedClassName = _ref.selectedClassName,
      id = _ref.id,
      name = _ref.name,
      value = _ref.value;
  var classes = useStyles();
  var handleMenuItemClick = (0, _react.useCallback)(function (e) {
    e.stopPropagation();

    if (onClick) {
      onClick(value);
    }
  });
  return /*#__PURE__*/_react["default"].createElement("div", {
    role: "presentation",
    className: (0, _classnames["default"])('text-truncate d-block text-gray-dark fill-hover-blue text-hover-blue transition-bg-color', {
      'mb-3': !dense
    }, classes.menuItem, {
      clickable: onClick
    }, (0, _defineProperty2["default"])({}, selectedClassName, isSelected), className),
    onClick: handleMenuItemClick,
    style: style,
    id: id,
    name: name,
    "data-qa": "menu-item"
  }, children);
};

MenuItem.defaultProps = {
  className: '',
  style: {},
  dense: false,
  value: undefined,
  onClick: null,
  isSelected: false,
  selectedClassName: 'text-blue',
  id: '',
  name: ''
};
MenuItem.propTypes = {
  /** The list item inner component to render */
  children: _propTypes["default"].node.isRequired,

  /** Additional class to add to the list item component */
  className: _propTypes["default"].string,

  /** Additional style to add to the list item component */
  style: _propTypes["default"].shape(),

  /** Indicator whether the list should be dense or not */
  dense: _propTypes["default"].bool,

  /** Value to pass on list click (only relevant for clickable list items) */
  value: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].number, _propTypes["default"].shape()]),

  /** CB for handling list item click event */
  onClick: _propTypes["default"].func,

  /** Indicator whether or not the list item is selected */
  isSelected: _propTypes["default"].bool,

  /** Class for the selected state */
  selectedClassName: _propTypes["default"].string,

  /** id for menu item  */
  id: _propTypes["default"].string,

  /** name for menu item */
  name: _propTypes["default"].string
};
var _default = MenuItem;
exports["default"] = _default;