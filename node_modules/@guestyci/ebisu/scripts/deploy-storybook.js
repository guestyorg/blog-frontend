const { execSync } = require('child_process');
const path = require('path');
const fs = require('fs');

const git = require('../util/git');
const { loadPackageJson } = require('../util/files');

const getProjectName = () => {
  const packageJson = loadPackageJson();
  return packageJson.name.replace('@guestyci/', '');
};

const getTargetBucket = branch => {
  if (!branch) return '';

  if (!branch.includes('sb.')) {
    throw new Error(
      'Invalid feature branch deployment. Deployment to storybook feature branch must be via sb.<branch>'
    );
  }

  const branchName = branch.replace('sb.', '');
  return branchName === 'master' ? '' : `branch/${branchName}`;
};

const shouldUploadToStorybook = (tag, storybookConfigDir) => {
  const isA = tag && git.isAlpha(tag);
  return fs.existsSync(path.resolve(storybookConfigDir)) && !isA;
};

const deployLivebook = (branch, livebookBucket, src) => {
  if (fs.existsSync(path.resolve(src))) {
    const projectName = getProjectName();
    const targetBucket = getTargetBucket(branch);

    const dest = targetBucket ? `${projectName}/${targetBucket}` : projectName;

    execSync(`s3-website deploy ${src} -p ${dest} -d ${livebookBucket}`, {
      stdio: 'inherit',
    });

    return `http://${livebookBucket}/${projectName}/${targetBucket}`;
  } else {
    throw new Error(`Uploading storybook failed. ${src} folder does not exist`);
  }
};

const buildStorybook = src =>
  execSync(`npx build-storybook -o ${src}`, { stdio: 'ignore' });

module.exports = {
  buildStorybook,
  deployLivebook,
  shouldUploadToStorybook,
};
