{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useRef, useEffect } from 'react';\n\nvar useFocus = function useFocus() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isFocused = _useState2[0],\n      setFocused = _useState2[1];\n\n  var focusRef = useRef(null);\n\n  var onFocus = function onFocus() {\n    setFocused(true);\n  };\n\n  var onBlur = function onBlur() {\n    setFocused(false);\n  };\n\n  useEffect(function () {\n    var node = focusRef.current;\n\n    if (node) {\n      node.addEventListener('focus', onFocus);\n      node.addEventListener('blur', onBlur);\n      return function () {\n        node.removeEventListener('focus', onFocus);\n        node.removeEventListener('blur', onBlur);\n      };\n    }\n  }, []);\n  return [isFocused, focusRef];\n};\n\nexport default useFocus;","map":{"version":3,"sources":["/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/node_modules/@guestyci/foundation/esm/useFocus/useFocus.js"],"names":["_slicedToArray","useState","useRef","useEffect","useFocus","_useState","_useState2","isFocused","setFocused","focusRef","onFocus","onBlur","node","current","addEventListener","removeEventListener"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,0CAA3B;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,OAA5C;;AAEA,IAAIC,QAAQ,GAAG,SAASA,QAAT,GAAoB;AACjC,MAAIC,SAAS,GAAGJ,QAAQ,CAAC,KAAD,CAAxB;AAAA,MACIK,UAAU,GAAGN,cAAc,CAACK,SAAD,EAAY,CAAZ,CAD/B;AAAA,MAEIE,SAAS,GAAGD,UAAU,CAAC,CAAD,CAF1B;AAAA,MAGIE,UAAU,GAAGF,UAAU,CAAC,CAAD,CAH3B;;AAKA,MAAIG,QAAQ,GAAGP,MAAM,CAAC,IAAD,CAArB;;AAEA,MAAIQ,OAAO,GAAG,SAASA,OAAT,GAAmB;AAC/BF,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAFD;;AAIA,MAAIG,MAAM,GAAG,SAASA,MAAT,GAAkB;AAC7BH,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAFD;;AAIAL,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAIS,IAAI,GAAGH,QAAQ,CAACI,OAApB;;AAEA,QAAID,IAAJ,EAAU;AACRA,MAAAA,IAAI,CAACE,gBAAL,CAAsB,OAAtB,EAA+BJ,OAA/B;AACAE,MAAAA,IAAI,CAACE,gBAAL,CAAsB,MAAtB,EAA8BH,MAA9B;AACA,aAAO,YAAY;AACjBC,QAAAA,IAAI,CAACG,mBAAL,CAAyB,OAAzB,EAAkCL,OAAlC;AACAE,QAAAA,IAAI,CAACG,mBAAL,CAAyB,MAAzB,EAAiCJ,MAAjC;AACD,OAHD;AAID;AACF,GAXQ,EAWN,EAXM,CAAT;AAYA,SAAO,CAACJ,SAAD,EAAYE,QAAZ,CAAP;AACD,CA7BD;;AA+BA,eAAeL,QAAf","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useRef, useEffect } from 'react';\n\nvar useFocus = function useFocus() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isFocused = _useState2[0],\n      setFocused = _useState2[1];\n\n  var focusRef = useRef(null);\n\n  var onFocus = function onFocus() {\n    setFocused(true);\n  };\n\n  var onBlur = function onBlur() {\n    setFocused(false);\n  };\n\n  useEffect(function () {\n    var node = focusRef.current;\n\n    if (node) {\n      node.addEventListener('focus', onFocus);\n      node.addEventListener('blur', onBlur);\n      return function () {\n        node.removeEventListener('focus', onFocus);\n        node.removeEventListener('blur', onBlur);\n      };\n    }\n  }, []);\n  return [isFocused, focusRef];\n};\n\nexport default useFocus;"]},"metadata":{},"sourceType":"module"}