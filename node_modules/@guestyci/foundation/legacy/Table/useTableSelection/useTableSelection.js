"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = useTableSelection;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = require("react");

var _tableUtility = require("../tableUtility");

/**
 * Hook that provides table selection state
 * @param data {Array} - table data
 * @param rowIdDataKey {String} - key from row data to be used as identifier
 */
function useTableSelection() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      _ref$data = _ref.data,
      data = _ref$data === void 0 ? [] : _ref$data,
      _ref$rowIdDataKey = _ref.rowIdDataKey,
      rowIdDataKey = _ref$rowIdDataKey === void 0 ? '_id' : _ref$rowIdDataKey,
      itemsTotalCount = _ref.itemsTotalCount;

  var _useState = (0, _react.useState)((0, _tableUtility.getEmptySelection)()),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      rowSelection = _useState2[0],
      setSelection = _useState2[1];

  var setTableSelection = function setTableSelection(action) {
    var nextSelection = (0, _tableUtility.getSelectionOnAction)({
      rowSelection: rowSelection,
      action: action,
      data: data,
      rowIdDataKey: rowIdDataKey,
      itemsTotalCount: itemsTotalCount
    });
    setSelection(nextSelection);
  };

  var clearSelection = function clearSelection() {
    setSelection((0, _tableUtility.getEmptySelection)());
  };

  (0, _react.useEffect)(function () {
    var allSelected = rowSelection.allSelected;

    if (allSelected) {
      var nextSelection = (0, _tableUtility.getSelectionOnData)({
        rowSelection: rowSelection,
        data: data,
        rowIdDataKey: rowIdDataKey
      });
      setSelection(nextSelection);
    }
  }, [data, rowIdDataKey]);
  return [rowSelection, setTableSelection, {
    clearSelection: clearSelection
  }];
}