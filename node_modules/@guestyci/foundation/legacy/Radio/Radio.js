"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _reactstrap = require("reactstrap");

var _noop = require("lodash/noop");

function _createSuper(Derived) { return function () { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var Radio = /*#__PURE__*/function (_Component) {
  (0, _inherits2["default"])(Radio, _Component);

  var _super = _createSuper(Radio);

  function Radio() {
    var _this;

    (0, _classCallCheck2["default"])(this, Radio);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _this.onRadioClick = function () {
      var _this$props = _this.props,
          value = _this$props.value,
          name = _this$props.name,
          id = _this$props.id,
          generatedChildId = _this$props.generatedChildId,
          onChange = _this$props.onChange;
      onChange(value, name, id, generatedChildId);
    };

    return _this;
  }

  (0, _createClass2["default"])(Radio, [{
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          className = _this$props2.className,
          disabled = _this$props2.disabled,
          checked = _this$props2.checked,
          children = _this$props2.children,
          id = _this$props2.id;
      return /*#__PURE__*/_react["default"].createElement("div", {
        className: (0, _classnames["default"])(className, 'radio-wrapper', 'radio-item', 'font-size-md', 'height-25', 'text-gray-dark', 'flex-center', 'pr-4'),
        onClick: this.onRadioButtonClick,
        onKeyDown: this.onRadioButtonClick,
        role: "button",
        disabled: disabled,
        "data-qa": "radio"
      }, /*#__PURE__*/_react["default"].createElement(_reactstrap.Label, {
        htmlFor: id,
        className: (0, _classnames["default"])('font-size-md m-0 text-capitalize clickable', {
          'text-blue': checked
        })
      }, /*#__PURE__*/_react["default"].createElement(_reactstrap.Input, {
        type: "radio",
        id: id,
        onChange: this.onRadioClick,
        checked: checked,
        disabled: disabled,
        className: "ml-0"
      }), children));
    }
  }]);
  return Radio;
}(_react.Component);

Radio.defaultProps = {
  children: null,
  disabled: false,
  checked: false,
  name: undefined,
  id: undefined,
  onChange: _noop.noop,
  className: ''
};
Radio.propTypes = {
  /** Set radioButton content to show when active */
  children: _propTypes["default"].node,

  /** Indicator whether or not the radioButton is disabled */
  disabled: _propTypes["default"].bool,

  /** The radioButton value to be passed when clicked */
  value: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].number, _propTypes["default"].shape()]).isRequired,

  /** Set the radioButton as active manually */
  checked: _propTypes["default"].bool,

  /** will triggered when the value is changed */
  onChange: _propTypes["default"].func,

  /** value will be return when click on this item */
  name: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].number]),

  /** identifier will be return when click on this element */
  id: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].number]),

  /** classes to be added to the component */
  className: _propTypes["default"].string
};
var _default = Radio;
exports["default"] = _default;