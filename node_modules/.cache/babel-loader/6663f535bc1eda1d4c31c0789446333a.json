{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport React, { useEffect, useMemo, useState } from 'react';\nimport isEqual from 'lodash/isEqual';\nimport { isEmpty } from \"../utils/commonUtility\";\nimport DropdownSelectedMenuList from \"./DropdownSelectedMenuList\";\n\nvar getValueFromOption = function getValueFromOption(option) {\n  var _option$props;\n\n  return option === null || option === void 0 ? void 0 : (_option$props = option.props) === null || _option$props === void 0 ? void 0 : _option$props.value;\n};\n\nvar doesSetContainsValue = function doesSetContainsValue(set, value) {\n  return Array.from(set).some(function (option) {\n    return isEqual(option, value);\n  });\n};\n\nvar buildSelectedArray = function buildSelectedArray(map, newItem) {\n  var selectedValues = Array.from(map);\n\n  if (selectedValues.some(function (selectedItem) {\n    return isEqual(selectedItem, newItem);\n  })) {\n    return selectedValues.filter(function (selectedItem) {\n      return !isEqual(selectedItem, newItem);\n    });\n  }\n\n  return [].concat(_toConsumableArray(selectedValues), [newItem]);\n};\n\nvar DropdownMenuList = function DropdownMenuList(_ref) {\n  var children = _ref.children,\n      value = _ref.value,\n      onChange = _ref.onChange,\n      disabled = _ref.disabled,\n      variant = _ref.variant;\n\n  var _useState = useState(new Set()),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedOptionSet = _useState2[0],\n      setSelectedOptionSet = _useState2[1];\n\n  var isMultiSelect = variant === 'multiselect';\n  var isChipSelect = variant === 'chip';\n  var isSingleSelect = variant === 'single';\n  useEffect(function () {\n    if (!isEmpty(value)) {\n      var selectedValue = isSingleSelect ? [value] : value;\n      setSelectedOptionSet(new Set(selectedValue));\n    }\n  }, [value]);\n\n  var handleItemClick = function handleItemClick(e, menuItemValue) {\n    e.stopPropagation();\n    var selectedItems = isSingleSelect ? menuItemValue : buildSelectedArray(selectedOptionSet, menuItemValue);\n    onChange(e, selectedItems);\n\n    if (isChipSelect) {\n      setSelectedOptionSet(new Set(selectedItems));\n    }\n  };\n\n  var handleRemoveSelection = function handleRemoveSelection(e, menuItemValue) {\n    e.stopPropagation();\n    var selectedOptions = buildSelectedArray(selectedOptionSet, menuItemValue);\n    setSelectedOptionSet(new Set(selectedOptions));\n    onChange(e, selectedOptions);\n  };\n\n  var selectedOptions = useMemo(function () {\n    if (!isMultiSelect) {\n      return children;\n    }\n\n    return children.filter(function (option) {\n      return doesSetContainsValue(selectedOptionSet, getValueFromOption(option));\n    });\n  }, [selectedOptionSet]);\n  var shouldRenderSelectedMenuList = isMultiSelect && !isEmpty(selectedOptions);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, shouldRenderSelectedMenuList && /*#__PURE__*/React.createElement(DropdownSelectedMenuList, {\n    onChange: handleRemoveSelection\n  }, selectedOptions), React.Children.map(children, function (option) {\n    if (isMultiSelect && doesSetContainsValue(selectedOptionSet, getValueFromOption(option))) {\n      return null;\n    }\n\n    return React.cloneElement(option, {\n      selected: !isMultiSelect ? doesSetContainsValue(selectedOptionSet, getValueFromOption(option)) : false,\n      onClick: handleItemClick,\n      multiselect: !isSingleSelect,\n      disabled: disabled\n    });\n  }));\n};\n\nexport default DropdownMenuList;","map":{"version":3,"sources":["/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/node_modules/@guestyci/foundation/esm/Dropdown/DropdownMenuList.js"],"names":["_slicedToArray","_toConsumableArray","React","useEffect","useMemo","useState","isEqual","isEmpty","DropdownSelectedMenuList","getValueFromOption","option","_option$props","props","value","doesSetContainsValue","set","Array","from","some","buildSelectedArray","map","newItem","selectedValues","selectedItem","filter","concat","DropdownMenuList","_ref","children","onChange","disabled","variant","_useState","Set","_useState2","selectedOptionSet","setSelectedOptionSet","isMultiSelect","isChipSelect","isSingleSelect","selectedValue","handleItemClick","e","menuItemValue","stopPropagation","selectedItems","handleRemoveSelection","selectedOptions","shouldRenderSelectedMenuList","createElement","Fragment","Children","cloneElement","selected","onClick","multiselect"],"mappings":"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","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport React, { useEffect, useMemo, useState } from 'react';\nimport isEqual from 'lodash/isEqual';\nimport { isEmpty } from \"../utils/commonUtility\";\nimport DropdownSelectedMenuList from \"./DropdownSelectedMenuList\";\n\nvar getValueFromOption = function getValueFromOption(option) {\n  var _option$props;\n\n  return option === null || option === void 0 ? void 0 : (_option$props = option.props) === null || _option$props === void 0 ? void 0 : _option$props.value;\n};\n\nvar doesSetContainsValue = function doesSetContainsValue(set, value) {\n  return Array.from(set).some(function (option) {\n    return isEqual(option, value);\n  });\n};\n\nvar buildSelectedArray = function buildSelectedArray(map, newItem) {\n  var selectedValues = Array.from(map);\n\n  if (selectedValues.some(function (selectedItem) {\n    return isEqual(selectedItem, newItem);\n  })) {\n    return selectedValues.filter(function (selectedItem) {\n      return !isEqual(selectedItem, newItem);\n    });\n  }\n\n  return [].concat(_toConsumableArray(selectedValues), [newItem]);\n};\n\nvar DropdownMenuList = function DropdownMenuList(_ref) {\n  var children = _ref.children,\n      value = _ref.value,\n      onChange = _ref.onChange,\n      disabled = _ref.disabled,\n      variant = _ref.variant;\n\n  var _useState = useState(new Set()),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedOptionSet = _useState2[0],\n      setSelectedOptionSet = _useState2[1];\n\n  var isMultiSelect = variant === 'multiselect';\n  var isChipSelect = variant === 'chip';\n  var isSingleSelect = variant === 'single';\n  useEffect(function () {\n    if (!isEmpty(value)) {\n      var selectedValue = isSingleSelect ? [value] : value;\n      setSelectedOptionSet(new Set(selectedValue));\n    }\n  }, [value]);\n\n  var handleItemClick = function handleItemClick(e, menuItemValue) {\n    e.stopPropagation();\n    var selectedItems = isSingleSelect ? menuItemValue : buildSelectedArray(selectedOptionSet, menuItemValue);\n    onChange(e, selectedItems);\n\n    if (isChipSelect) {\n      setSelectedOptionSet(new Set(selectedItems));\n    }\n  };\n\n  var handleRemoveSelection = function handleRemoveSelection(e, menuItemValue) {\n    e.stopPropagation();\n    var selectedOptions = buildSelectedArray(selectedOptionSet, menuItemValue);\n    setSelectedOptionSet(new Set(selectedOptions));\n    onChange(e, selectedOptions);\n  };\n\n  var selectedOptions = useMemo(function () {\n    if (!isMultiSelect) {\n      return children;\n    }\n\n    return children.filter(function (option) {\n      return doesSetContainsValue(selectedOptionSet, getValueFromOption(option));\n    });\n  }, [selectedOptionSet]);\n  var shouldRenderSelectedMenuList = isMultiSelect && !isEmpty(selectedOptions);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, shouldRenderSelectedMenuList && /*#__PURE__*/React.createElement(DropdownSelectedMenuList, {\n    onChange: handleRemoveSelection\n  }, selectedOptions), React.Children.map(children, function (option) {\n    if (isMultiSelect && doesSetContainsValue(selectedOptionSet, getValueFromOption(option))) {\n      return null;\n    }\n\n    return React.cloneElement(option, {\n      selected: !isMultiSelect ? doesSetContainsValue(selectedOptionSet, getValueFromOption(option)) : false,\n      onClick: handleItemClick,\n      multiselect: !isSingleSelect,\n      disabled: disabled\n    });\n  }));\n};\n\nexport default DropdownMenuList;"]},"metadata":{},"sourceType":"module"}