{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { createUseStyles } from 'react-jss';\nimport cn from 'classnames';\nimport { snakeToCamel } from \"../../utils/commonUtility\";\nimport Placeholder from \"../Placeholder\";\nvar useStyles = createUseStyles({\n  icon: {\n    minWidth: function minWidth(props) {\n      return props.width;\n    },\n    minHeight: function minHeight(props) {\n      return props.height;\n    }\n  },\n  placeholder: {\n    borderRadius: '15%'\n  }\n});\n\nvar createSvgFromText = function createSvgFromText(text) {\n  var div = document.createElement('div');\n  div.innerHTML = text.substring(text.indexOf('<svg'));\n  return div.firstChild;\n};\n\nvar Icon = React.memo(function (_ref) {\n  var width = _ref.width,\n      height = _ref.height,\n      color = _ref.color,\n      fillColor = _ref.fillColor,\n      strokeColor = _ref.strokeColor,\n      className = _ref.className,\n      icon = _ref.icon,\n      style = _ref.style,\n      noFill = _ref.noFill;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      svgContent = _useState2[0],\n      setSvgContent = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      attributes = _useState4[0],\n      setAttributes = _useState4[1];\n\n  useEffect(function () {\n    var setSvgAttributes = function setSvgAttributes(svg) {\n      var attrs = Object.values(svg.attributes).reduce(function (acc, attr) {\n        var name = attr.name,\n            value = attr.value;\n\n        if (!name.includes('xml')) {\n          var camelName = snakeToCamel(name);\n          acc[camelName] = value;\n        }\n\n        return acc;\n      }, {});\n      setAttributes(attrs);\n    };\n\n    var fetchSvgIconFromS3 = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var resp, text, svgElement;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return fetch(\"https://d2g7j5hs6q3xyb.cloudfront.net/icons/\".concat(icon, \".svg\"));\n\n              case 3:\n                resp = _context.sent;\n                _context.next = 6;\n                return resp.text();\n\n              case 6:\n                text = _context.sent;\n                svgElement = createSvgFromText(text);\n                setSvgAttributes(svgElement);\n                setSvgContent(svgElement.innerHTML);\n                _context.next = 15;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](0);\n                console.warn(\"\".concat(icon, \" was not found\"));\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 12]]);\n      }));\n\n      return function fetchSvgIconFromS3() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    fetchSvgIconFromS3();\n  }, [icon]);\n  var classes = useStyles({\n    width: width,\n    height: height\n  });\n  var iconFillColor = fillColor || color;\n\n  if (!svgContent) {\n    return /*#__PURE__*/React.createElement(Placeholder, {\n      className: cn(className, classes.placeholder, classes.icon)\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    dangerouslySetInnerHTML: {\n      __html: svgContent\n    }\n  }, attributes, {\n    width: width,\n    height: height,\n    className: cn({\n      'transition-all': iconFillColor && !noFill\n    }, className, noFill ? 'fill-inherit' : [\"fill-\".concat(iconFillColor, \" stroke-\").concat(strokeColor)], classes.icon),\n    style: style\n  }));\n});\nIcon.defaultProps = {\n  width: 20,\n  height: 20,\n  color: '',\n  className: '',\n  style: {},\n  noFill: false\n};\nIcon.propTypes = {\n  /** Icon width in pixels */\n  width: PropTypes.number,\n\n  /** Icon height in pixels */\n  height: PropTypes.number,\n\n  /** Icon fill color - see style guide colors for options */\n  color: PropTypes.string,\n\n  /** Class to add to the Icon component */\n  className: PropTypes.string,\n\n  /** Style to add to Icon component */\n  style: PropTypes.shape(),\n\n  /** The string name of the Icon to use. Also possible to pass without the icon prop */\n  icon: PropTypes.string.isRequired,\n\n  /** boolean - decide whether to disable default fill color */\n  noFill: PropTypes.bool\n};\nexport default Icon;","map":{"version":3,"sources":["/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/node_modules/@guestyci/foundation/esm/legacy/Icon/S3Icon.js"],"names":["_extends","_regeneratorRuntime","_asyncToGenerator","_slicedToArray","React","useEffect","useState","PropTypes","createUseStyles","cn","snakeToCamel","Placeholder","useStyles","icon","minWidth","props","width","minHeight","height","placeholder","borderRadius","createSvgFromText","text","div","document","createElement","innerHTML","substring","indexOf","firstChild","Icon","memo","_ref","color","fillColor","strokeColor","className","style","noFill","_useState","_useState2","svgContent","setSvgContent","_useState3","_useState4","attributes","setAttributes","setSvgAttributes","svg","attrs","Object","values","reduce","acc","attr","name","value","includes","camelName","fetchSvgIconFromS3","_ref2","mark","_callee","resp","svgElement","wrap","_callee$","_context","prev","next","fetch","concat","sent","t0","console","warn","stop","apply","arguments","classes","iconFillColor","dangerouslySetInnerHTML","__html","defaultProps","propTypes","number","string","shape","isRequired","bool"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { createUseStyles } from 'react-jss';\nimport cn from 'classnames';\nimport { snakeToCamel } from \"../../utils/commonUtility\";\nimport Placeholder from \"../Placeholder\";\nvar useStyles = createUseStyles({\n  icon: {\n    minWidth: function minWidth(props) {\n      return props.width;\n    },\n    minHeight: function minHeight(props) {\n      return props.height;\n    }\n  },\n  placeholder: {\n    borderRadius: '15%'\n  }\n});\n\nvar createSvgFromText = function createSvgFromText(text) {\n  var div = document.createElement('div');\n  div.innerHTML = text.substring(text.indexOf('<svg'));\n  return div.firstChild;\n};\n\nvar Icon = React.memo(function (_ref) {\n  var width = _ref.width,\n      height = _ref.height,\n      color = _ref.color,\n      fillColor = _ref.fillColor,\n      strokeColor = _ref.strokeColor,\n      className = _ref.className,\n      icon = _ref.icon,\n      style = _ref.style,\n      noFill = _ref.noFill;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      svgContent = _useState2[0],\n      setSvgContent = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      attributes = _useState4[0],\n      setAttributes = _useState4[1];\n\n  useEffect(function () {\n    var setSvgAttributes = function setSvgAttributes(svg) {\n      var attrs = Object.values(svg.attributes).reduce(function (acc, attr) {\n        var name = attr.name,\n            value = attr.value;\n\n        if (!name.includes('xml')) {\n          var camelName = snakeToCamel(name);\n          acc[camelName] = value;\n        }\n\n        return acc;\n      }, {});\n      setAttributes(attrs);\n    };\n\n    var fetchSvgIconFromS3 = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var resp, text, svgElement;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return fetch(\"https://d2g7j5hs6q3xyb.cloudfront.net/icons/\".concat(icon, \".svg\"));\n\n              case 3:\n                resp = _context.sent;\n                _context.next = 6;\n                return resp.text();\n\n              case 6:\n                text = _context.sent;\n                svgElement = createSvgFromText(text);\n                setSvgAttributes(svgElement);\n                setSvgContent(svgElement.innerHTML);\n                _context.next = 15;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](0);\n                console.warn(\"\".concat(icon, \" was not found\"));\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 12]]);\n      }));\n\n      return function fetchSvgIconFromS3() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    fetchSvgIconFromS3();\n  }, [icon]);\n  var classes = useStyles({\n    width: width,\n    height: height\n  });\n  var iconFillColor = fillColor || color;\n\n  if (!svgContent) {\n    return /*#__PURE__*/React.createElement(Placeholder, {\n      className: cn(className, classes.placeholder, classes.icon)\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    dangerouslySetInnerHTML: {\n      __html: svgContent\n    }\n  }, attributes, {\n    width: width,\n    height: height,\n    className: cn({\n      'transition-all': iconFillColor && !noFill\n    }, className, noFill ? 'fill-inherit' : [\"fill-\".concat(iconFillColor, \" stroke-\").concat(strokeColor)], classes.icon),\n    style: style\n  }));\n});\nIcon.defaultProps = {\n  width: 20,\n  height: 20,\n  color: '',\n  className: '',\n  style: {},\n  noFill: false\n};\nIcon.propTypes = {\n  /** Icon width in pixels */\n  width: PropTypes.number,\n\n  /** Icon height in pixels */\n  height: PropTypes.number,\n\n  /** Icon fill color - see style guide colors for options */\n  color: PropTypes.string,\n\n  /** Class to add to the Icon component */\n  className: PropTypes.string,\n\n  /** Style to add to Icon component */\n  style: PropTypes.shape(),\n\n  /** The string name of the Icon to use. Also possible to pass without the icon prop */\n  icon: PropTypes.string.isRequired,\n\n  /** boolean - decide whether to disable default fill color */\n  noFill: PropTypes.bool\n};\nexport default Icon;"]},"metadata":{},"sourceType":"module"}