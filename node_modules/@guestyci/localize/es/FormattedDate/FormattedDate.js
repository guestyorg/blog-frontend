import React, { Fragment } from 'react';
import PropTypes from 'prop-types';
import moment from 'moment/moment';
import LocalizationContext from "../LocalizationProvider/LocalizationContext";
import { MomentFormatTypes } from "../utils";
import getDateFormat from "./getDateFormat";

const FormattedDate = ({
  format,
  date,
  variant
}) => {
  const Tag = variant || Fragment;
  const momentDate = moment(date);
  return momentDate.isValid() ? React.createElement(LocalizationContext.Consumer, null, ({
    isEnglish
  }) => React.createElement(Tag, null, momentDate.format(getDateFormat(format, isEnglish)))) : React.createElement(Fragment, null, "Invalid date");
};

FormattedDate.defaultProps = {
  format: MomentFormatTypes.Date,
  variant: undefined
};
FormattedDate.propTypes = {
  /** date value is required */
  date: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.string, PropTypes.number]).isRequired,

  /** Date format to custom show moment (shortDate, date, fullDate, mmmm yyyyy, mmm yyyyy) */
  format: PropTypes.oneOf([MomentFormatTypes.ShortDate, MomentFormatTypes.Date, MomentFormatTypes.FullDate, MomentFormatTypes.MMMM_YYYY, MomentFormatTypes.MMM_YYYY]),

  /** set the moment component to be variant ('div','string'...) in stead of fragment */
  variant: PropTypes.string
};
export default FormattedDate;