import { useEffect, useState } from 'react';

function useKeyPress(targetKey) {
  const [keyPressed, setKeyPressed] = useState(false);
  const [pressedEvent, setPressedEvent] = useState({});

  function downHandler(e) {
    e.preventDefault();
    const {
      key
    } = e;

    if (key === targetKey) {
      setKeyPressed(true);
      setPressedEvent(e);
    }
  }

  const upHandler = e => {
    e.preventDefault();
    const {
      key
    } = e;

    if (key === targetKey) {
      setKeyPressed(false);
      setPressedEvent({});
    }
  };

  useEffect(() => {
    window.addEventListener('keydown', downHandler);
    window.addEventListener('keyup', upHandler);
    return () => {
      window.removeEventListener('keydown', downHandler);
      window.removeEventListener('keyup', upHandler);
    };
  }, []);
  return [keyPressed, pressedEvent];
}

export default useKeyPress;