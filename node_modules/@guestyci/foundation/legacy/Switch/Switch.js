"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _commonUtility = require("../../utils/commonUtility");

var _Row = _interopRequireDefault(require("../Row/Row"));

var _TextField = _interopRequireDefault(require("../TextField/TextField"));

function _createSuper(Derived) { return function () { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var Switch = /*#__PURE__*/function (_Component) {
  (0, _inherits2["default"])(Switch, _Component);

  var _super = _createSuper(Switch);

  function Switch(props) {
    var _this;

    (0, _classCallCheck2["default"])(this, Switch);
    _this = _super.call(this, props);

    _this.toggle = function (_ref) {
      var target = _ref.target;
      var _this$props = _this.props,
          onChange = _this$props.onChange,
          id = _this$props.id,
          name = _this$props.name;
      onChange(target.checked, id || name);
    };

    _this.state = {
      id: props.id || (0, _commonUtility.uuid)()
    };
    return _this;
  }

  (0, _createClass2["default"])(Switch, [{
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          label = _this$props2.label,
          textClassName = _this$props2.textClassName,
          on = _this$props2.on,
          isDisabled = _this$props2.isDisabled,
          className = _this$props2.className,
          disabled = _this$props2.disabled;
      var id = this.state.id;
      return /*#__PURE__*/_react["default"].createElement(_Row["default"], {
        spacing: "sm",
        className: (0, _classnames["default"])('switch w-inherit', className),
        "data-qa": "switch"
      }, /*#__PURE__*/_react["default"].createElement("label", {
        htmlFor: id,
        className: (0, _classnames["default"])('switch', {
          disabled: disabled || isDisabled
        })
      }, /*#__PURE__*/_react["default"].createElement("input", {
        id: id,
        type: "checkbox",
        disabled: disabled || isDisabled,
        onChange: this.toggle,
        checked: on
      }), /*#__PURE__*/_react["default"].createElement("span", {
        className: "slider"
      })), label && /*#__PURE__*/_react["default"].createElement(_TextField["default"], {
        color: on ? 'blue' : 'muted',
        className: (0, _classnames["default"])('switch-label', textClassName)
      }, label));
    }
  }]);
  return Switch;
}(_react.Component);

Switch.propTypes = {
  label: _propTypes["default"].string,

  /** Switch status if it's on or off */
  on: _propTypes["default"].bool.isRequired,

  /** classes to provide for the component */
  className: _propTypes["default"].string,

  /** callback function to call when switch state change */
  onChange: _propTypes["default"].func.isRequired,

  /** String, class for the text */
  textClassName: _propTypes["default"].string,

  /** name for component */
  name: _propTypes["default"].string,

  /** id for component */
  id: _propTypes["default"].string,

  /** Indicator whether or not is disabled */
  disabled: _propTypes["default"].bool,

  /** Indicator whether or not switch is disabled - Deprecated - use disabled */
  isDisabled: _propTypes["default"].bool
};
Switch.defaultProps = {
  className: '',
  label: null,
  textClassName: '',
  name: '',
  id: undefined,
  disabled: false,
  isDisabled: false
};
var _default = Switch;
exports["default"] = _default;