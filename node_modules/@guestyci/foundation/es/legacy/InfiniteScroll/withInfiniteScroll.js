import _extends from "@babel/runtime/helpers/esm/extends";
import React, { Component } from 'react';
/**
 * Create a wrapper compose to support infinite scroll functionality
 * @param ComposedComponent
 * @returns {{Component}}
 */

function withInfiniteScroll(ComposedComponent) {
  class InfiniteScrollWrapper extends Component {
    constructor(props) {
      super(props);

      this.setCurrentPage = page => {
        this.setState({
          page
        });
      };

      this.incrementCurrentPage = () => {
        this.setState(prevState => ({
          page: prevState.page + 1
        }));
      };

      this.initCurrentPage = (page = 0) => {
        this.setState({
          page
        });
      };

      this.state = {
        page: props.initialPage || 0
      };
    }

    render() {
      const {
        page
      } = this.state;
      return /*#__PURE__*/React.createElement(ComposedComponent, _extends({}, this.props, {
        infiniteScrollCurrentPage: page,
        setInfiniteScrollCurrentPage: this.setCurrentPage,
        initInfiniteScrollCurrentPage: this.initCurrentPage,
        incrementInfiniteScrollCurrentPage: this.incrementCurrentPage,
        "data-qa": "infinite-scroll-wrapper"
      }));
    }

  }

  return InfiniteScrollWrapper;
}

export default withInfiniteScroll;