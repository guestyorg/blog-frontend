import React, { useCallback } from 'react';
import PropTypes from 'prop-types';
import Icon from "../Icon";
import Spinner from "../Spinner/Spinner";
import FlatButton from "../FlatButton/FlatButton";

const ThreadAttachment = ({
  contentName,
  url,
  icon,
  name,
  isLoading,
  onAttachmentClick
}) => {
  const handleAttachment = useCallback(() => {
    if (onAttachmentClick) {
      onAttachmentClick({
        contentName,
        url
      });
    }
  }, [onAttachmentClick, contentName, url]);
  return /*#__PURE__*/React.createElement("div", {
    className: "attachment d-flex align-items-center mb-2",
    "data-qa": "thread-attachment"
  }, /*#__PURE__*/React.createElement(FlatButton, {
    onClick: handleAttachment
  }, /*#__PURE__*/React.createElement(Icon, {
    icon: icon,
    height: 30,
    width: 26,
    noFill: true,
    className: "mr-2",
    color: "gray-dark"
  }), name), isLoading && /*#__PURE__*/React.createElement("div", {
    "data-testid": "loader",
    className: "ml-2"
  }, /*#__PURE__*/React.createElement(Spinner, {
    size: 20
  })));
};

ThreadAttachment.propTypes = {
  /** url of the attachment */
  url: PropTypes.string.isRequired,

  /** icon name of the attachment */
  icon: PropTypes.string.isRequired,

  /** name of the file */
  name: PropTypes.string.isRequired,

  /** Indicates if we should show a spinner to the side of the attachment */
  isLoading: PropTypes.bool
};
export default ThreadAttachment;