"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactJss = require("react-jss");

var _classnames = _interopRequireDefault(require("classnames"));

var _TileItem = _interopRequireDefault(require("./TileItem"));

var tileWidth = 100;
var useStyles = (0, _reactJss.createUseStyles)({
  'tile-items-list': function tileItemsList(props) {
    return {
      'max-width': props.maxShownItems * tileWidth
    };
  },
  listBottom: {
    "float": 'left',
    clear: 'both'
  }
});

var scrollToBottom = function scrollToBottom(listRef) {
  if (listRef) {
    listRef.current.scrollIntoView({
      behavior: 'smooth'
    });
  }
};

var TilesItemsList = function TilesItemsList(_ref) {
  var tileItems = _ref.tileItems,
      maxShownItems = _ref.maxShownItems,
      onDeleteItem = _ref.onDeleteItem;
  var listRef = (0, _react.useRef)(null);
  var classes = useStyles({
    maxShownItems: maxShownItems
  });
  (0, _react.useEffect)(function () {
    if (tileItems.length > maxShownItems) {
      scrollToBottom(listRef);
    }
  }, [tileItems, maxShownItems]);
  var onDelete = (0, _react.useCallback)(function (itemKey) {
    onDeleteItem(itemKey);
  });
  return /*#__PURE__*/_react["default"].createElement("div", {
    className: (0, _classnames["default"])("".concat(classes['tile-items-list'], " flex-space-between-center flex-row overflow-y-scroll")),
    "data-qa": "tiles-items-list"
  }, tileItems.map(function (item, i) {
    var itemKey = "tile-item-".concat(i);
    var isLast = i === tileItems.length - 1;
    return /*#__PURE__*/_react["default"].createElement("div", {
      className: (0, _classnames["default"])('tile-item bg-gray-lightest height-90 min-width-100 border-gray-light', {
        'br-1': !isLast
      }),
      key: itemKey
    }, item && /*#__PURE__*/_react["default"].createElement(_TileItem["default"], {
      icon: item[1].icon,
      text: item[1].text,
      height: item[1].height,
      width: item[1].width,
      itemKey: item[0],
      onDelete: onDelete
    }));
  }), /*#__PURE__*/_react["default"].createElement("div", {
    className: classes.listBottom,
    ref: listRef
  }));
};

TilesItemsList.defaultProps = {
  tileItems: [],
  maxShownItems: 4
};
TilesItemsList.propTypes = {
  // tile items to render
  tileItems: _propTypes["default"].arrayOf(_propTypes["default"].array),
  // sets the number of tiles what would be rendered
  maxShownItems: _propTypes["default"].number
};
var _default = TilesItemsList;
exports["default"] = _default;