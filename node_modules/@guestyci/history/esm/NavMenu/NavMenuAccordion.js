import React from 'react';
import PropTypes from 'prop-types';
import Accordion from '@guestyci/foundation/Accordion';
import { gray400, gray800 } from '@guestyci/foundation/theme/colors';

var accordionJssOverrides = function accordionJssOverrides(theme) {
  return {
    header: {
      paddingLeft: theme.spacer(4),
      paddingRight: theme.spacer(4),
      height: '45px',
      '.accordion-opened &': {
        color: theme.palette.title,
        fontWeight: theme.typography.fontWeight.bold
      },
      '.accordion-closed &': {
        color: gray800,
        fontWeight: theme.typography.fontWeight.regular
      },
      '&:hover $title': {
        color: theme.palette.link,
        fontWeight: theme.typography.fontWeight.bold,
        letterSpacing: '0.1px !important'
      }
    },
    icon: {
      fill: gray400
    },
    content: {
      padding: 0,
      backgroundColor: theme.palette.action.selected
    },
    title: {
      color: 'inherit',
      fontWeight: 'inherit',
      letterSpacing: '0.4px',
      '.accordion-opened &': {
        letterSpacing: '0.1px !important'
      }
    },
    iconContainer: {
      minWidth: '24px',
      height: '24px',
      width: '24px'
    },
    root: {
      padding: 0,
      display: 'flex',
      flexDirection: 'column'
    }
  };
};

var NavMenuAccordion = function NavMenuAccordion(_ref) {
  var children = _ref.children,
      title = _ref.title,
      icon = _ref.icon,
      onChange = _ref.onChange,
      open = _ref.open,
      className = _ref.className;
  return /*#__PURE__*/React.createElement(Accordion, {
    title: title,
    icon: icon,
    open: open,
    onChange: onChange,
    jss: accordionJssOverrides,
    className: className
  }, children);
};

NavMenuAccordion.propTypes = {
  /** children passed to the Accordion - string or Node */
  children: PropTypes.oneOfType([PropTypes.node, PropTypes.string]).isRequired,

  /** title passed to the Accordion - string or Node */
  title: PropTypes.oneOfType([PropTypes.node, PropTypes.string]).isRequired,

  /** Icon to be passed to Accordion */
  icon: PropTypes.oneOfType([PropTypes.shape(), PropTypes.func]),

  /** Function to be called when clicked */
  onChange: PropTypes.func,

  /** Flag that marks if the Accordion should be open */
  open: PropTypes.bool,

  /* Additional class name to be added to the NavMenuAccordion */
  className: PropTypes.string
};
export default NavMenuAccordion;