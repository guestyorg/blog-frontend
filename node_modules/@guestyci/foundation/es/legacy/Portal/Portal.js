import { useEffect, useState } from 'react';
import PropTypes from 'prop-types';
import ReactDOM from 'react-dom';

const getContainerElement = container => {
  const domNode = typeof container === 'function' ? container() : container; // eslint-disable-next-line react/no-find-dom-node

  return ReactDOM.findDOMNode(domNode);
};

const Portal = ({
  container,
  children,
  onRender
}) => {
  const [containerNode, setContainerNode] = useState(null);
  useEffect(() => {
    setContainerNode(getContainerElement(container) || document.body);
  }, [container]);
  useEffect(() => {
    if (onRender && containerNode) {
      onRender();
    }
  }, [onRender, containerNode]);
  return containerNode ? ReactDOM.createPortal(children, containerNode) : containerNode;
};

Portal.propTypes = {
  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,
  onRender: PropTypes.func,
  container: PropTypes.node
};
export default Portal;