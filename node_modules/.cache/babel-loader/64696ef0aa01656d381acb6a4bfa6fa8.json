{"ast":null,"code":"var _jsxFileName = \"/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/components/PostList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"; // import { deletePost, listPosts } from \"../../../actions/postActions\";\n// import { POST_DETAILS_RESET } from \"../../../constants/postConstants\";\n\nimport Section from \"@guestyci/foundation/legacy/Section\";\nimport AddButton from \"@guestyci/foundation/AddButton\";\nimport Table, { Column } from \"@guestyci/foundation/legacy/Table\";\nimport { getEmptySelection, getSelectionOnAction } from \"@guestyci/foundation/legacy/Table/tableUtility\";\nimport Cell from \"@guestyci/foundation/legacy/Table/Cell\";\nimport HeaderCell from \"@guestyci/foundation/legacy/Table/HeaderCell\";\nimport FlatButton from \"@guestyci/foundation/legacy/FlatButton\";\nimport { sleep } from \"@guestyci/foundation/utils/commonUtility\";\nimport orderBy from \"lodash/orderBy\";\nimport DateCell from \"@guestyci/foundation/legacy/Table/DateCell\";\nimport DateTimeCell from \"@guestyci/foundation/legacy/Table/DateTimeCell\"; // import data from '../../../__mocks__/tableData';\n\nimport Resource from \"@guestyci/agni\";\nimport TextField from \"@guestyci/foundation/TextField\";\nimport { Row } from \"@guestyci/foundation/Layout\";\nimport { ReactComponent as BtnTrash } from \"@svgr/webpack?-svgo,+titleProp,+ref!@guestyci/foundation/icons/BtnTrash.svg\";\nimport Icon from \"@guestyci/foundation/Icon\";\nimport Spinner from \"@guestyci/foundation/Spinner\";\nimport StatusIndication from \"@guestyci/foundation/StatusIndication\";\nimport { NavLink } from \"react-router-dom\";\nimport { deletePost } from \"../actions/blogActions\";\nimport { POST_DELETE_RESET } from \"../constants/blogConstants\";\nimport { useToast } from \"@guestyci/foundation/Toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PostList(props) {\n  _s();\n\n  console.log(\"PostListprops:\", props);\n  const {\n    addToast\n  } = useToast();\n  const {\n    blogData,\n    blogAdmin\n  } = props; // console.log(\"blogId:\", blogId);\n  // console.log(\"blogData:\", blogData);\n\n  const arr = [];\n  let data;\n\n  if (blogData) {\n    let posts = blogData.posts;\n\n    function makeDataForTable(posts) {\n      for (let i = 0; i < posts.length; i++) {\n        // console.log(\"posts[i]: \", posts[i]);\n        const arrPost = Object.entries(posts[i]);\n        console.log(\"arrPost:\", arrPost); // 0: (2) ['_id', '6141c0d7874998b51b3febd5']\n        // 1: (2) ['userId', '6141bd2a874998b51b3febd4']\n        // 2: (2) ['title', 'cool post']\n        // 3: (2) ['content', 'this is a very good post! ']\n        // 4: (2) ['createdAt', '2021-09-15T09:45:59.885Z']\n        // 5: (2) ['updatedAt', '2021-09-15T09:45:59.885Z']\n        //  title: {\n        //   children: 'John',\n        // },\n\n        const bigObj = {};\n\n        for (let j = 0; j < arrPost.length; j++) {\n          const obj = {}; // console.log(\"arrPost[j]: \", arrPost[j]);\n          // console.log(\"arrPost[0]: \",arrPost[j][0]);\n          // console.log(\"arrPost[1]: \",arrPost[j][1]);\n          // console.log(\"obj:\", obj);\n\n          if (arrPost[j][0] === \"_id\") {\n            obj.children = arrPost[j][1]; //         obj= {children: '613e616d7ab4e566768e79d5'}\n\n            bigObj.id = obj; //    bigObj= {id: {children: '613e616d7ab4e566768e79d5'}}\n\n            bigObj._id = arrPost[j][1]; //   bigObj= {_id: '613e616d7ab4e566768e79d5'}\n          } else if (arrPost[j][0] === \"createdAt\" || arrPost[j][0] === \"updatedAt\") {\n            // ['createdAt', '2021-09-13T08:46:49.849Z']\n            obj.children = new Date(arrPost[j][1]).toLocaleString(); // {children: '9/13/2021, 11:46:49 AM'}\n\n            bigObj[arrPost[j][0]] = obj; // {createdAt: {children: '9/13/2021, 11:46:49 AM'}}\n          } else if (arrPost[j][0] === \"userId\") {\n            // console.log(\"arrPost:\", arrPost);\n            // ['userId',  {_id: '613e1486e5218626969838f0', name: 'Karamba'}]\n            obj.children = `${arrPost[j][1].firstName} ${arrPost[j][1].lastName}`; // {children: 'Karamba'}\n\n            let emailObj = {};\n            emailObj.children = arrPost[j][1].email;\n            bigObj[\"admin\"] = obj;\n            bigObj[\"email\"] = emailObj;\n            let accountObj = {};\n            accountObj.children = arrPost[j][1].accountId.name;\n            bigObj[\"account\"] = accountObj; //{ accountId: {children: 'Karamba'}}\n          } else if (arrPost[j][0] === \"content\") {\n            // ['firstName', 'miki']\n            obj.children = `${arrPost[j][1].slice(0, 50)}...`; // {children: 'miki'}\n\n            bigObj[arrPost[j][0]] = obj; // firstName: {children: 'miki'}\n          } else {\n            // ['firstName', 'miki']\n            obj.children = arrPost[j][1]; // {children: 'miki'}\n\n            bigObj[arrPost[j][0]] = obj; // firstName: {children: 'miki'}\n          } // console.log(\"bigObj:\", bigObj);\n          // arr.push( `${arrPost[j][0]}: {children: '${arrPost[j][1]}',}`)\n\n        } // arr.push({gilad:1,...posts[i]})\n\n\n        arr.push({ ...bigObj\n        }); // arr.push({ _id: `${counter}`, ...bigObj });\n        // counter++;\n      }\n\n      console.log(\"arr: \", arr);\n      return arr;\n    }\n\n    data = makeDataForTable(posts);\n    console.log('dataaaaaaaa===========================:', data);\n  }\n\n  const [rawData, setRawData] = useState(); // const [data, setData] = useState();\n  // let data = arr;\n\n  const [postDeleted, setPostDeleted] = useState(false);\n  const [rowSelection, setRowSelection] = useState(getEmptySelection());\n  const {\n    allSelected,\n    items,\n    exceptItems\n  } = rowSelection;\n  const width = 200; // const pageSize = 25;\n  // const scrollOffset = data ? data.length : 100;\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [skip, setSkip] = useState(0);\n  // const postList = useSelector((state) => state.postList);\n  // const { loading, error, posts } = postList;\n  // // console.log(\"posts:\", posts);\n  // data = posts;\n  // const postDelete = useSelector((state) => state.postDelete);\n  // const {\n  //   loading: loadingDelete,\n  //   error: errorDelete,\n  //   success: successDelete,\n  // } = postDelete;\n\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo,\n    loadingAccount,\n    errorAccount\n  } = userSignin;\n  const dispatch = useDispatch(); // useEffect(() => {\n  //   dispatch(listPosts());\n  //   // dispatch({\n  //   //   type: POST_DETAILS_RESET,\n  //   // });\n  // }, [dispatch, successDelete]);\n  // useEffect(() => {\n  //   if (successDelete) {\n  //     dispatch({ type: POST_DELETE_RESET });\n  //     // props.history.push(\"/blog/list\");\n  //     addToast.success(`the blog  was delete`);\n  //   } else if (errorDelete) {\n  //     addToast.danger(\"error edit the blog\");\n  //   } else if (errorDelete) {\n  //     addToast.danger(\"error delete the post\");\n  //   }\n  // }, [dispatch, successDelete, errorDelete]);\n  // useEffect(() => {\n  //   dispatch({ type: BLOG_DETAILS_RESET });\n  // }, []);\n\n  const selectionSize = allSelected && data.length > 0 ? data.length - exceptItems.size : items.size;\n\n  const handleRowCheckChange = action => {\n    console.log(\"handleRowCheckChange\"); // console.log('action:', action);\n\n    const selection = getSelectionOnAction({\n      rowSelection,\n      action,\n      data\n    });\n    console.log(\"rowSelection:\", rowSelection);\n    console.log(\"action:\", action);\n    console.log(\"data:\", data); // console.log('selection:', selection);\n\n    setRowSelection(selection);\n  };\n\n  const deletePostHandler = async postId => {\n    console.log(\"deletePostHandler\");\n\n    try {\n      // const response = await api.delete(`/posts/${postId}`); // will go to `${config.MAILER_URL}/posts`\n      // console.log('response:', response);\n      // const data = response.data;\n      // addToast.success('post was delete')\n      // props.history.push('/');\n      dispatch(deletePost(postId, blogData._id));\n      setPostDeleted(true);\n      handleClearSelection();\n    } catch (error) {\n      console.log(\"error:\", error); // addToast.danger(\"error deleting the post\")\n    }\n  };\n\n  const handleDelete = () => {\n    console.log(\"rowSelection.items: \", rowSelection.items);\n\n    if (window.confirm(\"Are you sure?\")) {\n      rowSelection.items.forEach(item => deletePostHandler(item));\n    }\n  };\n\n  const handleClearSelection = () => {\n    console.log(\"handleClearSelection\");\n    setRowSelection(getEmptySelection());\n  };\n\n  const handleRowClick = (...args) => {\n    console.log(\"handleRowClick\", ...args);\n    const rowData = { ...args\n    };\n    console.log(\"rowData:\", rowData);\n    console.log(\"rowData:\", rowData[0].id.children);\n    const postId = rowData[0].id.children; // console.log('args:', args.id)\n    // props.history.push(\"www.google.com\");\n\n    props.history.push(`/${blogData._id}/post/${postId}/view`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data && /*#__PURE__*/_jsxDEV(Section, {\n      col: true,\n      className: \"bg-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"posts:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 11\n      }, this), true ? /*#__PURE__*/_jsxDEV(Section, {\n        gutter: 2,\n        children: [blogData && console.log(\"blogData._id: \", blogData._id), /*#__PURE__*/_jsxDEV(AddButton, {\n          onClick: () => props.history.push(`${blogData._id}/post/add`),\n          text: \"Add Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/user/signin\" // activeStyle={activeStyle}\n        ,\n        style: {\n          marginLeft: \"20px\"\n        },\n        exact: true,\n        children: \"sign in to create a new post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 13\n      }, this), selectionSize > 0 && blogAdmin ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(Row, {\n          spacing: 4,\n          children: [/*#__PURE__*/_jsxDEV(FlatButton, {\n            onClick: handleClearSelection,\n            disabled: !selectionSize,\n            children: `Unselect ${selectionSize || \"\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 17\n          }, this), selectionSize > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(FlatButton, {\n              type: \"error\",\n              onClick: handleDelete,\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                align: \"center\",\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  svg: BtnTrash\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  children: \" Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 21\n            }, this)\n          }, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 15\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Table, {\n          multiselect: true,\n          height: 500,\n          data: data // isLoading={isLoading}\n          // pageSize={pageSize}\n          ,\n          rowSelection: rowSelection,\n          onCheckedRowsChange: handleRowCheckChange,\n          onRowClick: handleRowClick // infiniteScrollOptions={{\n          //   skip,\n          //   scrollOffset,\n          //   onLoadMore: handleLoadMore,\n          //   totalCount: semiInfiniteData.length,\n          // }}\n          // sortBy={sortBy}\n          // onSort={handleSort}\n          ,\n          children: [/*#__PURE__*/_jsxDEV(Column, {\n            dataKey: \"title\",\n            width: width,\n            children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n              id: \"title\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataKey: \"content\",\n            width: width,\n            children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n              id: \"content\",\n              children: \" Content Preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataKey: \"admin\",\n            width: width,\n            children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n              id: \"admin\",\n              children: \" Author\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataKey: \"email\",\n            width: width,\n            children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n              id: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataKey: \"account\",\n            width: width,\n            children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n              id: \"account\",\n              children: \"Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataKey: \"createdAt\",\n            width: width,\n            children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n              id: \"createdAt\",\n              children: \"created At\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataKey: \"updatedAt\",\n            width: width,\n            children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n              id: \"updatedAt\",\n              children: \"updated At\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(Table, {\n          height: 500,\n          data: data // isLoading={isLoading}\n          // pageSize={pageSize}\n          // onRowClick={handleRowClick}\n          // infiniteScrollOptions={{\n          //   skip,\n          //   scrollOffset,\n          //   onLoadMore: handleLoadMore,\n          //   totalCount: semiInfiniteData.length,\n          // }}\n          // sortBy={sortBy}\n          // onSort={handleSort}\n          ,\n          children: [/*#__PURE__*/_jsxDEV(Column, {\n            dataKey: \"title\",\n            width: width,\n            children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n              id: \"title\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataKey: \"content\",\n            width: width,\n            children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n              id: \"content\",\n              children: \" Content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataKey: \"admin\",\n            width: width,\n            children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n              id: \"admin\",\n              children: \" Author\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataKey: \"email\",\n            width: width,\n            children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n              id: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataKey: \"account\",\n            width: width,\n            children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n              id: \"account\",\n              children: \"Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataKey: \"createdAt\",\n            width: width,\n            children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n              id: \"createdAt\",\n              children: \"created At\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataKey: \"updatedAt\",\n            width: width,\n            children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n              id: \"updatedAt\",\n              children: \"updated At\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(PostList, \"bstbiS1XbWsaD6H7j7Rdp6BEquw=\", false, function () {\n  return [useToast, useSelector, useDispatch];\n});\n\n_c = PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"sources":["/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/components/PostList.js"],"names":["React","useState","useEffect","useCallback","useDispatch","useSelector","Section","AddButton","Table","Column","getEmptySelection","getSelectionOnAction","Cell","HeaderCell","FlatButton","sleep","orderBy","DateCell","DateTimeCell","Resource","TextField","Row","Icon","Spinner","StatusIndication","NavLink","deletePost","POST_DELETE_RESET","useToast","PostList","props","console","log","addToast","blogData","blogAdmin","arr","data","posts","makeDataForTable","i","length","arrPost","Object","entries","bigObj","j","obj","children","id","_id","Date","toLocaleString","firstName","lastName","emailObj","email","accountObj","accountId","name","slice","push","rawData","setRawData","postDeleted","setPostDeleted","rowSelection","setRowSelection","allSelected","items","exceptItems","width","userSignin","state","userInfo","loadingAccount","errorAccount","dispatch","selectionSize","size","handleRowCheckChange","action","selection","deletePostHandler","postId","handleClearSelection","error","handleDelete","window","confirm","forEach","item","handleRowClick","args","rowData","history","marginLeft","BtnTrash"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n// import { deletePost, listPosts } from \"../../../actions/postActions\";\n// import { POST_DETAILS_RESET } from \"../../../constants/postConstants\";\n\nimport Section from \"@guestyci/foundation/legacy/Section\";\nimport AddButton from \"@guestyci/foundation/AddButton\";\n\nimport Table, { Column } from \"@guestyci/foundation/legacy/Table\";\nimport {\n  getEmptySelection,\n  getSelectionOnAction,\n} from \"@guestyci/foundation/legacy/Table/tableUtility\";\nimport Cell from \"@guestyci/foundation/legacy/Table/Cell\";\nimport HeaderCell from \"@guestyci/foundation/legacy/Table/HeaderCell\";\nimport FlatButton from \"@guestyci/foundation/legacy/FlatButton\";\n\nimport { sleep } from \"@guestyci/foundation/utils/commonUtility\";\n\nimport orderBy from \"lodash/orderBy\";\n\nimport DateCell from \"@guestyci/foundation/legacy/Table/DateCell\";\nimport DateTimeCell from \"@guestyci/foundation/legacy/Table/DateTimeCell\";\n\n// import data from '../../../__mocks__/tableData';\n\nimport Resource from \"@guestyci/agni\";\n\nimport TextField from \"@guestyci/foundation/TextField\";\nimport { Row } from \"@guestyci/foundation/Layout\";\nimport { ReactComponent as BtnTrash } from \"@guestyci/foundation/icons/BtnTrash.svg\";\nimport Icon from \"@guestyci/foundation/Icon\";\n\nimport Spinner from \"@guestyci/foundation/Spinner\";\nimport StatusIndication from \"@guestyci/foundation/StatusIndication\";\nimport { NavLink } from \"react-router-dom\";\nimport { deletePost } from \"../actions/blogActions\";\nimport { POST_DELETE_RESET } from \"../constants/blogConstants\";\n\nimport { useToast } from \"@guestyci/foundation/Toast\";\n\nexport default function PostList(props) {\n  console.log(\"PostListprops:\", props);\n  const { addToast } = useToast();\n\n  const { blogData, blogAdmin } = props;\n  // console.log(\"blogId:\", blogId);\n\n  // console.log(\"blogData:\", blogData);\n\n  const arr = [];\n\n  let data;\n\n  if (blogData) {\n    let posts = blogData.posts;\n\n    function makeDataForTable(posts) {\n      for (let i = 0; i < posts.length; i++) {\n        // console.log(\"posts[i]: \", posts[i]);\n\n        const arrPost = Object.entries(posts[i]);\n        console.log(\"arrPost:\", arrPost);\n\n        // 0: (2) ['_id', '6141c0d7874998b51b3febd5']\n        // 1: (2) ['userId', '6141bd2a874998b51b3febd4']\n        // 2: (2) ['title', 'cool post']\n        // 3: (2) ['content', 'this is a very good post! ']\n        // 4: (2) ['createdAt', '2021-09-15T09:45:59.885Z']\n        // 5: (2) ['updatedAt', '2021-09-15T09:45:59.885Z']\n\n        //  title: {\n        //   children: 'John',\n        // },\n\n        const bigObj = {};\n\n        for (let j = 0; j < arrPost.length; j++) {\n          const obj = {};\n          // console.log(\"arrPost[j]: \", arrPost[j]);\n          // console.log(\"arrPost[0]: \",arrPost[j][0]);\n          // console.log(\"arrPost[1]: \",arrPost[j][1]);\n\n          // console.log(\"obj:\", obj);\n\n          if (arrPost[j][0] === \"_id\") {\n            obj.children = arrPost[j][1];\n            //         obj= {children: '613e616d7ab4e566768e79d5'}\n\n            bigObj.id = obj;\n            //    bigObj= {id: {children: '613e616d7ab4e566768e79d5'}}\n\n            bigObj._id = arrPost[j][1];\n\n            //   bigObj= {_id: '613e616d7ab4e566768e79d5'}\n          } else if (\n            arrPost[j][0] === \"createdAt\" ||\n            arrPost[j][0] === \"updatedAt\"\n          ) {\n            // ['createdAt', '2021-09-13T08:46:49.849Z']\n\n            obj.children = new Date(arrPost[j][1]).toLocaleString();\n            // {children: '9/13/2021, 11:46:49 AM'}\n\n            bigObj[arrPost[j][0]] = obj;\n\n            // {createdAt: {children: '9/13/2021, 11:46:49 AM'}}\n          } else if (arrPost[j][0] === \"userId\") {\n            // console.log(\"arrPost:\", arrPost);\n\n            // ['userId',  {_id: '613e1486e5218626969838f0', name: 'Karamba'}]\n            obj.children = `${arrPost[j][1].firstName} ${arrPost[j][1].lastName}`;\n\n            // {children: 'Karamba'}\n\n            let emailObj = {};\n\n            emailObj.children = arrPost[j][1].email;\n\n            bigObj[\"admin\"] = obj;\n\n            bigObj[\"email\"] = emailObj;\n\n            let accountObj = {};\n\n            accountObj.children = arrPost[j][1].accountId.name;\n\n            bigObj[\"account\"] = accountObj;\n\n            //{ accountId: {children: 'Karamba'}}\n          } else if (arrPost[j][0] === \"content\") {\n            // ['firstName', 'miki']\n\n            obj.children = `${arrPost[j][1].slice(0, 50)}...`;\n\n            // {children: 'miki'}\n\n            bigObj[arrPost[j][0]] = obj;\n\n            // firstName: {children: 'miki'}\n          } else {\n            // ['firstName', 'miki']\n\n            obj.children = arrPost[j][1];\n\n            // {children: 'miki'}\n\n            bigObj[arrPost[j][0]] = obj;\n\n            // firstName: {children: 'miki'}\n          }\n\n          // console.log(\"bigObj:\", bigObj);\n\n          // arr.push( `${arrPost[j][0]}: {children: '${arrPost[j][1]}',}`)\n        }\n        // arr.push({gilad:1,...posts[i]})\n        arr.push({ ...bigObj });\n        // arr.push({ _id: `${counter}`, ...bigObj });\n\n        // counter++;\n      }\n\n      console.log(\"arr: \", arr);\n\n      return arr;\n    }\n\n    data = makeDataForTable(posts);\n    console.log('dataaaaaaaa===========================:', data)\n  }\n  const [rawData, setRawData] = useState();\n  // const [data, setData] = useState();\n\n  // let data = arr;\n\n  const [postDeleted, setPostDeleted] = useState(false);\n\n  const [rowSelection, setRowSelection] = useState(getEmptySelection());\n  const { allSelected, items, exceptItems } = rowSelection;\n\n  const width = 200;\n  // const pageSize = 25;\n  // const scrollOffset = data ? data.length : 100;\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [skip, setSkip] = useState(0);\n  // const postList = useSelector((state) => state.postList);\n  // const { loading, error, posts } = postList;\n  // // console.log(\"posts:\", posts);\n  // data = posts;\n  // const postDelete = useSelector((state) => state.postDelete);\n  // const {\n  //   loading: loadingDelete,\n  //   error: errorDelete,\n  //   success: successDelete,\n  // } = postDelete;\n\n  const userSignin = useSelector((state) => state.userSignin);\n  const { userInfo, loadingAccount, errorAccount } = userSignin;\n\n  const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //   dispatch(listPosts());\n  //   // dispatch({\n  //   //   type: POST_DETAILS_RESET,\n  //   // });\n  // }, [dispatch, successDelete]);\n\n  // useEffect(() => {\n  //   if (successDelete) {\n  //     dispatch({ type: POST_DELETE_RESET });\n  //     // props.history.push(\"/blog/list\");\n  //     addToast.success(`the blog  was delete`);\n  //   } else if (errorDelete) {\n  //     addToast.danger(\"error edit the blog\");\n  //   } else if (errorDelete) {\n  //     addToast.danger(\"error delete the post\");\n  //   }\n  // }, [dispatch, successDelete, errorDelete]);\n\n  // useEffect(() => {\n  //   dispatch({ type: BLOG_DETAILS_RESET });\n  // }, []);\n\n  const selectionSize =\n    allSelected && data.length > 0\n      ? data.length - exceptItems.size\n      : items.size;\n\n  const handleRowCheckChange = (action) => {\n    console.log(\"handleRowCheckChange\");\n    // console.log('action:', action);\n\n    const selection = getSelectionOnAction({ rowSelection, action, data });\n    console.log(\"rowSelection:\", rowSelection);\n    console.log(\"action:\", action);\n    console.log(\"data:\", data);\n    // console.log('selection:', selection);\n    setRowSelection(selection);\n  };\n\n  const deletePostHandler = async (postId) => {\n    console.log(\"deletePostHandler\");\n    try {\n      // const response = await api.delete(`/posts/${postId}`); // will go to `${config.MAILER_URL}/posts`\n      // console.log('response:', response);\n      // const data = response.data;\n      // addToast.success('post was delete')\n      // props.history.push('/');\n\n      dispatch(deletePost(postId, blogData._id));\n\n      setPostDeleted(true);\n\n      handleClearSelection();\n    } catch (error) {\n      console.log(\"error:\", error);\n      // addToast.danger(\"error deleting the post\")\n    }\n  };\n\n  const handleDelete = () => {\n    console.log(\"rowSelection.items: \", rowSelection.items);\n\n    if (window.confirm(\"Are you sure?\")) {\n      rowSelection.items.forEach((item) => deletePostHandler(item));\n    }\n  };\n\n  const handleClearSelection = () => {\n    console.log(\"handleClearSelection\");\n    setRowSelection(getEmptySelection());\n  };\n\n  const handleRowClick = (...args) => {\n    console.log(\"handleRowClick\", ...args);\n\n    const rowData = { ...args };\n    console.log(\"rowData:\", rowData);\n    console.log(\"rowData:\", rowData[0].id.children);\n\n    const postId = rowData[0].id.children;\n    // console.log('args:', args.id)\n\n    // props.history.push(\"www.google.com\");\n\n    props.history.push(`/${blogData._id}/post/${postId}/view`);\n  };\n\n  return (\n    <>\n      {/* {console.log(\"data:\", data)}\n      {loading && <Spinner size={80} strokeWidth={6} />}\n      {error && (\n        <StatusIndication variant=\"danger\" text=\"error getting the data \" />\n      )} */}\n\n      {data && (\n        <Section col className=\"bg-white\">\n          <h1>posts:</h1>\n\n          {true ? (\n            <Section gutter={2}>\n              {blogData && console.log(\"blogData._id: \", blogData._id)}\n              <AddButton\n                onClick={() => props.history.push(`${blogData._id}/post/add`)}\n                text=\"Add Post\"\n              />\n            </Section>\n          ) : (\n            <NavLink\n              to=\"/user/signin\"\n              // activeStyle={activeStyle}\n              style={{ marginLeft: \"20px\" }}\n              exact\n            >\n              sign in to create a new post\n            </NavLink>\n          )}\n\n          {/* {console.log(\"rowSelection: \", rowSelection)} */}\n\n          {selectionSize > 0 && blogAdmin ? (\n            <>\n              {\" \"}\n              <Row spacing={4}>\n                <FlatButton\n                  onClick={handleClearSelection}\n                  disabled={!selectionSize}\n                >\n                  {`Unselect ${selectionSize || \"\"}`}\n                </FlatButton>\n\n                {selectionSize > 0 && (\n                  <>\n                    <FlatButton type=\"error\" onClick={handleDelete}>\n                      <Row align=\"center\" spacing={2}>\n                        <Icon svg={BtnTrash} />\n                        <TextField> Delete</TextField>\n                      </Row>\n                    </FlatButton>\n                  </>\n                )}\n              </Row>{\" \"}\n              <Table\n                multiselect\n                height={500}\n                data={data}\n                // isLoading={isLoading}\n                // pageSize={pageSize}\n                rowSelection={rowSelection}\n                onCheckedRowsChange={handleRowCheckChange}\n                onRowClick={handleRowClick}\n                // infiniteScrollOptions={{\n                //   skip,\n                //   scrollOffset,\n                //   onLoadMore: handleLoadMore,\n                //   totalCount: semiInfiniteData.length,\n                // }}\n                // sortBy={sortBy}\n                // onSort={handleSort}\n              >\n                {/* <Column align=\"left\" dataKey=\"id\" width={width} sortable>\n                  <HeaderCell id=\"id\">Id</HeaderCell>\n                  <Cell />\n                </Column> */}\n                <Column dataKey=\"title\" width={width}>\n                  <HeaderCell id=\"title\">Title</HeaderCell>\n                  <Cell />\n                </Column>\n                <Column dataKey=\"content\" width={width}>\n                  <HeaderCell id=\"content\"> Content Preview</HeaderCell>\n                  <Cell />\n                </Column>\n                <Column dataKey=\"admin\" width={width}>\n                  <HeaderCell id=\"admin\"> Author</HeaderCell>\n                  <Cell />\n                </Column>\n                <Column dataKey=\"email\" width={width}>\n                  <HeaderCell id=\"email\">Email</HeaderCell>\n                  <Cell />\n                </Column>\n                <Column dataKey=\"account\" width={width}>\n                  <HeaderCell id=\"account\">Account</HeaderCell>\n                  <Cell />\n                </Column>\n                <Column dataKey=\"createdAt\" width={width}>\n                  <HeaderCell id=\"createdAt\">created At</HeaderCell>\n                  <Cell />\n                </Column>\n\n                <Column dataKey=\"updatedAt\" width={width}>\n                  <HeaderCell id=\"updatedAt\">updated At</HeaderCell>\n                  <Cell />\n                </Column>\n\n                {/* <Column dataKey=\"periodStartDate\" width={width} sortable>\n              <HeaderCell id=\"startdate\">Date Cell</HeaderCell>\n              <DateCell />\n            </Column>\n            <Column dataKey=\"periodEndDate\" width={width} sortable>\n              <HeaderCell id=\"enddate\">DateTime Cell</HeaderCell>\n              <DateTimeCell />\n            </Column> */}\n              </Table>\n            </>\n          ) : (\n            <>\n              {\" \"}\n              <Table\n                height={500}\n                data={data}\n                // isLoading={isLoading}\n                // pageSize={pageSize}\n\n                // onRowClick={handleRowClick}\n                // infiniteScrollOptions={{\n                //   skip,\n                //   scrollOffset,\n                //   onLoadMore: handleLoadMore,\n                //   totalCount: semiInfiniteData.length,\n                // }}\n                // sortBy={sortBy}\n                // onSort={handleSort}\n              >\n                {/* <Column align=\"left\" dataKey=\"id\" width={width} sortable>\n                  <HeaderCell id=\"id\">Id</HeaderCell>\n                  <Cell />\n                </Column> */}\n                <Column dataKey=\"title\" width={width}>\n                  <HeaderCell id=\"title\">Title</HeaderCell>\n                  <Cell />\n                </Column>\n                <Column dataKey=\"content\" width={width}>\n                  <HeaderCell id=\"content\"> Content</HeaderCell>\n                  <Cell />\n                </Column>\n                <Column dataKey=\"admin\" width={width}>\n                  <HeaderCell id=\"admin\"> Author</HeaderCell>\n                  <Cell />\n                </Column>\n                <Column dataKey=\"email\" width={width}>\n                  <HeaderCell id=\"email\">Email</HeaderCell>\n                  <Cell />\n                </Column>\n                <Column dataKey=\"account\" width={width}>\n                  <HeaderCell id=\"account\">Account</HeaderCell>\n                  <Cell />\n                </Column>\n                <Column dataKey=\"createdAt\" width={width}>\n                  <HeaderCell id=\"createdAt\">created At</HeaderCell>\n                  <Cell />\n                </Column>\n\n                <Column dataKey=\"updatedAt\" width={width}>\n                  <HeaderCell id=\"updatedAt\">updated At</HeaderCell>\n                  <Cell />\n                </Column>\n\n                {/* <Column dataKey=\"periodStartDate\" width={width} sortable>\n              <HeaderCell id=\"startdate\">Date Cell</HeaderCell>\n              <DateCell />\n            </Column>\n            <Column dataKey=\"periodEndDate\" width={width} sortable>\n              <HeaderCell id=\"enddate\">DateTime Cell</HeaderCell>\n              <DateTimeCell />\n            </Column> */}\n              </Table>\n            </>\n          )}\n        </Section>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}