import React, { forwardRef, useMemo } from 'react';
import PropTypes from 'prop-types';
import { StayStatus } from "../enums/enums";
import Tooltip from "../Tooltip";
import BaseStayIndicator from "./BaseStayIndicator";
const tooltips = {
  [StayStatus.Reserved]: 'Reserved',
  [StayStatus.Planned]: 'Upcoming stay',
  [StayStatus.Staying]: 'Currently staying',
  [StayStatus.Complete]: 'Checked out'
};

const getWrapperStyles = ({
  vertical,
  fullWidth
}) => {
  const fullLengthStyles = vertical ? {
    height: '100%'
  } : {
    width: '100%'
  };
  return fullWidth ? fullLengthStyles : null;
};

const StayIndicator = forwardRef(({
  status = StayStatus.Planned,
  className,
  jss,
  dark,
  id,
  fullWidth,
  vertical
}, ref) => {
  const wrapperStyles = useMemo(() => {
    return getWrapperStyles({
      vertical,
      fullWidth
    });
  }, [vertical, fullWidth]);
  return /*#__PURE__*/React.createElement("span", {
    style: wrapperStyles
  }, /*#__PURE__*/React.createElement(Tooltip, {
    body: tooltips[status],
    placement: "top start",
    id: id
  }, /*#__PURE__*/React.createElement(BaseStayIndicator, {
    dark: dark,
    status: status,
    className: className,
    fullWidth: fullWidth,
    vertical: vertical,
    ref: ref,
    jss: jss
  })));
});
StayIndicator.displayName = 'StayIndicator';
StayIndicator.propTypes = {
  /** Id for the tooltip body container */
  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),

  /** Stay status - Enum (StayStatus- [Reserved, Planned, Staying, Complete,]) */
  status: PropTypes.oneOf([StayStatus.Planned, StayStatus.Staying, StayStatus.Complete, StayStatus.Reserved]),

  /** Additional class to add to StayIndicator */
  className: PropTypes.string,

  /** jss override object to customize the jss classes */
  jss: PropTypes.oneOfType([PropTypes.shape(), PropTypes.func]),

  /** Set orientation as vertical(default is horizontal) */
  vertical: PropTypes.bool,

  /** Set theme to dark */
  dark: PropTypes.bool,

  /** Set the stay indicator to fill space */
  fullWidth: PropTypes.bool,

  /** reference that will be applied to Row container */
  ref: PropTypes.shape()
};
export default StayIndicator;