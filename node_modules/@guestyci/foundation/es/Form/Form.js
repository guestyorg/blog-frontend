import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
import React from 'react';
import PropTypes from 'prop-types';
import { FormProvider } from "../enums";
import FormContext from "./FormContext";
export const scrollToFirstError = offset => {
  const el = document.querySelector('.form-field-validation-error');

  if (!el) {
    return;
  }

  const {
    top
  } = el.getBoundingClientRect();
  const {
    scrollTop
  } = document.documentElement;
  el.focus({
    preventScroll: true
  });
  window.scrollTo({
    top: top + scrollTop - offset,
    behavior: 'smooth'
  });
};
const Form = React.forwardRef(function Form(_ref, ref) {
  let {
    onSubmit,
    children,
    className,
    style,
    provider,
    fieldInstance
  } = _ref,
      props = _objectWithoutPropertiesLoose(_ref, ["onSubmit", "children", "className", "style", "provider", "fieldInstance"]);

  const handleSubmit = e => {
    scrollToFirstError(300);
    onSubmit(e);
  };

  return /*#__PURE__*/React.createElement("form", _extends({
    className: className,
    style: style,
    ref: ref,
    noValidate: true,
    onSubmit: handleSubmit
  }, props), /*#__PURE__*/React.createElement(FormContext.Provider, {
    value: {
      provider,
      fieldInstance
    }
  }, children));
});
Form.defaultProps = {
  provider: FormProvider.Final,
  fieldInstance: null
};
Form.propTypes = {
  /** Callback function to handle form submit */
  onSubmit: PropTypes.func.isRequired,

  /** Form child element to render */
  children: PropTypes.node.isRequired,

  /** Form field instance to pass */
  fieldInstance: PropTypes.oneOfType([PropTypes.shape(), PropTypes.func]),

  /** String - the form provider to render * */
  provider: PropTypes.oneOf(['redux', 'final']),

  /** Form root level additional class */
  className: PropTypes.string,

  /** Form root level additional style */
  style: PropTypes.shape()
};
Form.displayName = 'Form';
export default Form;