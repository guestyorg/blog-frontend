import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import { useEffect, useRef, useState } from 'react';

function useOverflowBoundaries() {
  var overflowRef = useRef();

  var _useState = useState(),
      _useState2 = _slicedToArray(_useState, 2),
      isOverflowed = _useState2[0],
      setOverflowed = _useState2[1];

  useEffect(function () {
    var _overflowRef$current = overflowRef.current,
        current = _overflowRef$current === void 0 ? {} : _overflowRef$current;
    var clientWidth = current.clientWidth,
        scrollWidth = current.scrollWidth;
    setOverflowed(scrollWidth > clientWidth);
  }, [overflowRef.current]);
  return [isOverflowed, overflowRef];
}

export default useOverflowBoundaries;