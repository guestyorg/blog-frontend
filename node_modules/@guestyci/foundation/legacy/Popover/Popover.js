"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _noop = _interopRequireDefault(require("lodash/noop"));

var _Popover = _interopRequireDefault(require("reactstrap/lib/Popover"));

var _commonUtility = require("../../utils/commonUtility");

var _enums = require("../../enums/enums");

var Popover = function Popover(_ref) {
  var children = _ref.children,
      className = _ref.className,
      body = _ref.body,
      style = _ref.style,
      theme = _ref.theme,
      containerClassName = _ref.containerClassName,
      innerClassName = _ref.innerClassName,
      placement = _ref.placement,
      offset = _ref.offset,
      isOpen = _ref.isOpen,
      onClose = _ref.onClose,
      fullWidth = _ref.fullWidth,
      id = _ref.id,
      rest = (0, _objectWithoutProperties2["default"])(_ref, ["children", "className", "body", "style", "theme", "containerClassName", "innerClassName", "placement", "offset", "isOpen", "onClose", "fullWidth", "id"]);
  var popoverId = (0, _react.useMemo)(function () {
    return id || (0, _commonUtility.uuid)();
  }, [id]);
  return /*#__PURE__*/_react["default"].createElement("div", {
    className: containerClassName,
    "data-qa": "popover"
  }, /*#__PURE__*/_react["default"].createElement("span", {
    id: "Popover-".concat(popoverId),
    className: containerClassName
  }, children), /*#__PURE__*/_react["default"].createElement(_Popover["default"], (0, _extends2["default"])({
    target: "Popover-".concat(popoverId),
    isOpen: isOpen && !!body,
    toggle: onClose,
    className: (0, _classnames["default"])('popover-container', {
      'mw-100': fullWidth
    }, {
      'dark-theme': theme === _enums.Theme.Dark
    }, {
      'light-theme': theme === _enums.Theme.Light
    }, {
      'error-theme': theme === _enums.Theme.Error
    }, className),
    popperClassName: (0, _classnames["default"])('zindex-1500', {
      'max-width-fill': fullWidth
    }),
    innerClassName: (0, _classnames["default"])('border-radius-2', 'font-size-md', 'p-2', innerClassName),
    boundariesElement: "window",
    style: style,
    placement: placement,
    offset: offset
  }, rest), body));
};

Popover.defaultProps = {
  className: '',
  innerClassName: '',
  id: undefined,
  theme: 'dark',
  placement: 'top',
  offset: undefined,
  containerClassName: '',
  body: null,
  onClose: _noop["default"],
  fullWidth: false
};
Popover.propTypes = {
  /** Bool - Boolean defining whether or not to toggle the popover */
  isOpen: _propTypes["default"].bool.isRequired,

  /** Node - the component wrapped by the tooltip */
  children: _propTypes["default"].node.isRequired,

  /** String || React Element - The tooltip body */
  body: _propTypes["default"].node,

  /** onClose  - Function to support the popover toggle */
  onClose: _propTypes["default"].func,

  /** String - Set the tooltip trigger id */
  id: _propTypes["default"].string,

  /** String - Additional tooltip component class */
  className: _propTypes["default"].string,

  /** Set the theme for the tooltip */
  theme: _propTypes["default"].oneOf(['dark', 'light', 'error']),

  /** Popover placement supporting (top, bottom, left, right ) => <pos>-start, <pos>-end */
  placement: _propTypes["default"].string,

  /** set custom offset to tooltip arrow */
  offset: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].number]),

  /** Add class to popover root level */
  containerClassName: _propTypes["default"].string,

  /** Set the popover content to fit to its children full width - by default 280 */
  fullWidth: _propTypes["default"].bool,

  /** Inner class name for popover */
  innerClassName: _propTypes["default"].string
};
var _default = Popover;
exports["default"] = _default;