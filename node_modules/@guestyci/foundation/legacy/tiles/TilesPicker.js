"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _IconDropdown = _interopRequireDefault(require("../IconDropdown/IconDropdown"));

var _TileItemsList = _interopRequireDefault(require("./TileItemsList"));

var _commonUtility = require("../../utils/commonUtility");

function _createSuper(Derived) { return function () { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var TilesPicker = /*#__PURE__*/function (_Component) {
  (0, _inherits2["default"])(TilesPicker, _Component);

  var _super = _createSuper(TilesPicker);

  function TilesPicker(props) {
    var _this;

    (0, _classCallCheck2["default"])(this, TilesPicker);
    _this = _super.call(this, props);
    _this.state = {
      selectedItemsMap: new Map()
    };
    _this.onAddItem = _this.onAddItem.bind((0, _assertThisInitialized2["default"])(_this));
    _this.deleteItem = _this.deleteItem.bind((0, _assertThisInitialized2["default"])(_this));
    return _this;
  }

  (0, _createClass2["default"])(TilesPicker, [{
    key: "onAddItem",
    value: function onAddItem(value) {
      var onChange = this.props.onChange;
      var selectedItemsMap = this.state.selectedItemsMap;
      var optionsMap = this.props.optionsMap;
      var selectedItem = optionsMap[value];
      selectedItemsMap.set((0, _commonUtility.uuid)(), selectedItem);
      this.setState({
        selectedItemsMap: selectedItemsMap
      });
      onChange(selectedItemsMap);
    }
  }, {
    key: "getAllItemsArray",
    value: function getAllItemsArray() {
      var maxShownItems = this.props.maxShownItems;
      var selectedItemsMap = this.state.selectedItemsMap;
      var emptyArrayLength = maxShownItems - selectedItemsMap.size;
      var emptyItemsArray = emptyArrayLength > 0 ? (0, _toConsumableArray2["default"])(Array(emptyArrayLength)) : [];
      var allItemsArray = Array.from(selectedItemsMap).concat(emptyItemsArray);
      return allItemsArray;
    }
  }, {
    key: "deleteItem",
    value: function deleteItem(key) {
      var onChange = this.props.onChange;
      var selectedItemsMap = this.state.selectedItemsMap;
      selectedItemsMap["delete"](key);
      this.setState({
        selectedItemsMap: selectedItemsMap
      });
      onChange(selectedItemsMap);
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          options = _this$props.options,
          maxShownItems = _this$props.maxShownItems;
      var allItemsArray = this.getAllItemsArray();
      return /*#__PURE__*/_react["default"].createElement("div", {
        className: "flex-space-between-center flex-row w-fit-content b-1 border-gray-light border-radius-2",
        "data-qa": "tiles-picker"
      }, /*#__PURE__*/_react["default"].createElement(_TileItemsList["default"], {
        tileItems: allItemsArray,
        onDeleteItem: this.deleteItem,
        maxShownItems: maxShownItems
      }), /*#__PURE__*/_react["default"].createElement("div", {
        className: "width-100"
      }, /*#__PURE__*/_react["default"].createElement(_IconDropdown["default"], {
        width: 21,
        height: 21,
        icon: "BtnAdd",
        onSelect: this.onAddItem,
        options: options,
        className: "flex-center bg-white height-90 width-100 bl-1 border-gray-light",
        menuClassName: "mt-0 left-0"
      })));
    }
  }]);
  return TilesPicker;
}(_react.Component);

TilesPicker.defaultProps = {
  maxShownItems: 4
};
TilesPicker.propTypes = {
  // sets the number of tiles what would be rendered
  maxShownItems: _propTypes["default"].number,
  // defines the options to be displayed on the drop menu
  options: _propTypes["default"].arrayOf(_propTypes["default"].shape({
    label: _propTypes["default"].string,
    value: _propTypes["default"].string
  })).isRequired,
  // maps the dropdown values to its tile settings
  optionsMap: _propTypes["default"].objectOf(_propTypes["default"].shape({
    key: _propTypes["default"].shape({
      icon: _propTypes["default"].string,
      width: _propTypes["default"].number,
      height: _propTypes["default"].number,
      text: _propTypes["default"].string
    })
  })).isRequired,
  // callback to be called when a tile is changed
  onChange: _propTypes["default"].func.isRequired
};
var _default = TilesPicker;
exports["default"] = _default;