"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _react = _interopRequireWildcard(require("react"));

var _constants = require("../constants/constants");

var _fileUploadUtility = require("../utils/fileUploadUtility");

function _createSuper(Derived) { return function () { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var getScript = function getScript(src) {
  var scripts = document.querySelectorAll("script[src=\"".concat(src, "\"]"));

  if (scripts) {
    return scripts[0];
  }

  return null;
};
/**
 * Create a wrapper compose to support upload functionality
 * @param ComposedComponent
 * @returns {{Component}}
 */


function withFileUpload(ComposedComponent) {
  var script = getScript(_constants.CLOUDINARY_URL);

  var FileUploadWrapper = /*#__PURE__*/function (_Component) {
    (0, _inherits2["default"])(FileUploadWrapper, _Component);

    var _super = _createSuper(FileUploadWrapper);

    function FileUploadWrapper(props) {
      var _this;

      (0, _classCallCheck2["default"])(this, FileUploadWrapper);
      _this = _super.call(this, props);

      _this.onScriptLoad = function () {
        _this.setState({
          loaded: true
        });
      };

      _this.loadScript = function () {
        console.log(script);

        if (!script) {
          script = document.createElement('script');
          script.src = _constants.CLOUDINARY_URL;
          script.async = true;
          script.addEventListener('load', _this.onScriptLoad);
          document.body.appendChild(script);
        }
      };

      _this.open = function (_ref) {
        var onSuccess = _ref.onSuccess,
            onFailure = _ref.onFailure,
            rest = (0, _objectWithoutProperties2["default"])(_ref, ["onSuccess", "onFailure"]);
        var loaded = _this.state.loaded;

        if (loaded && window.cloudinary) {
          (0, _fileUploadUtility.openUploadWidget)({
            onSuccess: onSuccess,
            onFailure: onFailure,
            rest: rest
          });
        }
      };

      _this.state = {
        loaded: false
      };
      return _this;
    }

    (0, _createClass2["default"])(FileUploadWrapper, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.loadScript();
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        script.removeEventListener('load', this.onScriptLoad);
      }
    }, {
      key: "render",
      value: function render() {
        return /*#__PURE__*/_react["default"].createElement(ComposedComponent, (0, _extends2["default"])({}, this.props, {
          open: this.open,
          "data-qa": "file-upload-wrapper"
        }));
      }
    }]);
    return FileUploadWrapper;
  }(_react.Component);

  return FileUploadWrapper;
}

var _default = withFileUpload;
exports["default"] = _default;