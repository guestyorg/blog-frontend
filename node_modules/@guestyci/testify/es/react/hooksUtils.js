import React from 'react';
import { shallow } from "../utils";
/**
 * Mock a react hook from the react api
 * @param hook
 * @return {*}
 */

export const mockHook = (hook, cb) => jest.spyOn(React, hook).mockImplementation(f => cb() || f());
/**
 *  Custom hook
 * @param hook
 * @param cb
 * @return {*}
 */

export const mockCustomHook = (hook, cb) => jest.spyOn(hook).mockImplementation(() => cb());

function HookWrapper({
  hook
}) {
  const hookInstance = hook ? hook() : undefined;
  return React.createElement("div", {
    hook: hookInstance
  });
}
/**
 * Render a custom hook to the DOM
 * @param hook  {Function} Hook to render
 * @param args  {*} Initial values to hook
 * @return {function(): *}
 */


export const renderHook = (hook, ...args) => {
  const wrapper = shallow(React.createElement(HookWrapper, {
    hook: () => hook(...args)
  }));
  return () => wrapper.prop('hook');
};