{"ast":null,"code":"import Axios from \"axios\";\nimport { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL } from \"../constants/userConstants\";\nexport const register = (name, email, password, image) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      name,\n      email,\n      password,\n      image\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"http://localhost:5000/api/users/register\", {\n      name,\n      email,\n      password,\n      image\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"http://localhost:5000/api/users/signin\", {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    }); // dispatch(emailUser(email));\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    // console.log(\"error :\", error);\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signout = () => dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_SIGNOUT\n  });\n  document.location.href = \"/signin\";\n};\nexport const listUsers = () => async dispatch => {\n  dispatch({\n    type: USER_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(\"http://localhost:5000/api/users\");\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deleteUser = userId => async (dispatch, getState) => {\n  dispatch({\n    type: USER_DELETE_REQUEST,\n    payload: userId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.delete(`http://localhost:5000/api/users/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const detailsUser = userId => async (dispatch, getState) => {\n  dispatch({\n    type: USER_DETAILS_REQUEST,\n    payload: userId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get(`http://localhost:5000/api/users/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo === null || userInfo === void 0 ? void 0 : userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateUser = user => async (dispatch, getState) => {\n  console.log('user:', user);\n  dispatch({\n    type: USER_UPDATE_PROFILE_REQUEST,\n    payload: user\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.patch(`http://localhost:5000/api/users/${user._id}`, user, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/actions/userActions.js"],"names":["Axios","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNOUT","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","register","name","email","password","image","dispatch","type","payload","data","post","localStorage","setItem","JSON","stringify","error","response","message","signin","signout","removeItem","document","location","href","listUsers","get","deleteUser","userId","getState","userSignin","userInfo","delete","headers","Authorization","token","detailsUser","updateUser","user","console","log","patch","_id"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\nimport {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_SIGNIN_FAIL,\n  USER_SIGNIN_REQUEST,\n  USER_SIGNIN_SUCCESS,\n  USER_SIGNOUT,\n\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n\n} from \"../constants/userConstants\";\n\n\n\n\nexport const register = (name, email, password, image) => async (dispatch) => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: { name, email, password, image },\n  });\n  try {\n    const { data } = await Axios.post(\"http://localhost:5000/api/users/register\", {\n      name,\n      email,\n      password,\n      image,\n    });\n\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n\n\n\n\n\n\nexport const signin = (email, password) => async (dispatch) => {\n  dispatch({ type: USER_SIGNIN_REQUEST, payload: { email, password } });\n  try {\n    const { data } = await Axios.post(\"http://localhost:5000/api/users/signin\", { email, password });\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n    // dispatch(emailUser(email));\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    // console.log(\"error :\", error);\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n\n\n\n\nexport const signout = () => (dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n\n\n  dispatch({ type: USER_SIGNOUT });\n  document.location.href = \"/signin\";\n};\n\n\n\nexport const listUsers = () => async (dispatch) => {\n  dispatch({ type: USER_LIST_REQUEST });\n  try {\n    \n    const { data } = await Axios.get(\"http://localhost:5000/api/users\");\n\n    dispatch({ type: USER_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: USER_LIST_FAIL, payload: message });\n  }\n};\n\n\n\n\nexport const deleteUser = (userId) => async (dispatch, getState) => {\n  dispatch({ type: USER_DELETE_REQUEST, payload: userId });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.delete(`http://localhost:5000/api/users/${userId}`, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: USER_DELETE_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: USER_DELETE_FAIL, payload: message });\n  }\n};\n\n\n\n\n\nexport const detailsUser = (userId) => async (dispatch, getState) => {\n  dispatch({ type: USER_DETAILS_REQUEST, payload: userId });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.get(`http://localhost:5000/api/users/${userId}`, {\n      headers: { Authorization: `Bearer ${userInfo?.token}` },\n    });\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: USER_DETAILS_FAIL, payload: message });\n  }\n};\n\n\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  console.log('user:', user)\n  dispatch({ type: USER_UPDATE_PROFILE_REQUEST, payload: user });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.patch(`http://localhost:5000/api/users/${user._id}`, user, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: USER_UPDATE_FAIL, payload: message });\n  }\n};\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}