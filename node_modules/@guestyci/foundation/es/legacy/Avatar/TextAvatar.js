import React, { useMemo } from 'react';
import cn from 'classnames';
import PropTypes from 'prop-types';
import { createUseStyles } from 'react-jss';
import { nameToInitials } from "../../utils";
export const getClass = size => {
  switch (size) {
    case 'xl':
      return '80px';

    case 'md':
      return '40px';

    case 'lg':
      return '60px';

    case 'sm':
      return '25px';

    default:
      return '40px';
  }
};
const useStyles = createUseStyles({
  icon: {
    height: ({
      size
    }) => getClass(size),
    width: ({
      size
    }) => getClass(size)
  }
});

const convertText = (text = '') => {
  const avatarText = text.replace(/[\W_][ ]+/g, '');
  const words = avatarText.split(' ');

  if (avatarText.length < 2 || avatarText === '') {
    return '- -';
  }

  return words.length > 1 ? nameToInitials(avatarText) : avatarText;
};

const TextAvatar = ({
  text,
  isUser,
  size = 'md',
  disabled
}) => {
  const avatarClasses = useStyles({
    size
  });
  const avatarText = useMemo(() => convertText(text), [text]);
  const textClasses = 'text-avatar text-uppercase text-white d-flex align-items-center justify-content-center';
  const bgColor = isUser ? 'blue-dark' : 'gray-darkest';
  return /*#__PURE__*/React.createElement("div", {
    className: cn(textClasses, 'flex-center', `avatar`, `bg-${bgColor}`, {
      disabled
    }, avatarClasses.icon, {
      'font-size-3xl': size === 'xl'
    }),
    "data-qa": "text-avatar"
  }, /*#__PURE__*/React.createElement("span", null, avatarText));
};

TextAvatar.propTypes = {
  text: PropTypes.string.isRequired,
  isUser: PropTypes.bool,
  size: PropTypes.oneOf(['sm', 'md', 'lg']),
  disabled: PropTypes.bool
};
export default TextAvatar;