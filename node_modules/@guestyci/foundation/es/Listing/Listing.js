import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
import React from 'react';
import PropTypes from 'prop-types';
import cn from 'classnames';
import TextField from "../TextField";
import Row from "../Layout/Row";
import Avatar from "../Avatar";
import createStyles from "../createStyles";
import Col from "../Layout/Col";
import ConfirmedBadge from "./ConfirmedBadge";

var IcoComplex = function IcoComplex(props) {
  return /*#__PURE__*/React.createElement("svg", props, /*#__PURE__*/React.createElement("g", {
    fill: "#FFF",
    fillRule: "nonzero"
  }, /*#__PURE__*/React.createElement("path", {
    d: "M24.5 19a.75.75 0 0 1-.75-.75 3.5 3.5 0 0 0-3.5-3.5h-.5a3.5 3.5 0 0 0-3.5 3.5.75.75 0 0 1-.75.75H9.512a.5.5 0 0 0-.5.5V31a1 1 0 0 0 1 1H18a.5.5 0 0 0 .5-.5v-3a1.5 1.5 0 0 1 3 0v3a.5.5 0 0 0 .5.5h8.011a1 1 0 0 0 1-1V19.5a.5.5 0 0 0-.5-.5H24.5zm-13 3a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-2zm4.012 7.5a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-2a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v2zM21.5 22a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1-.5-.5v-3a1.5 1.5 0 0 1 3 0v3zm6.988 7.5a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-2a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v2zM28.5 24a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-2a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v2z"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M31 17.5a.999.999 0 0 0 .912-1.409l-.012-.023-3.823-7.477A.999.999 0 0 0 27.166 8H12.834a.989.989 0 0 0-.9.567l-3.846 7.524A.999.999 0 0 0 9 17.5h5.394a.5.5 0 0 0 .486-.386 5.01 5.01 0 0 1 4.87-3.864h.5a5.01 5.01 0 0 1 4.87 3.864.5.5 0 0 0 .486.386H31z"
  })));
};

IcoComplex.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  width: "40",
  height: "40",
  viewBox: "0 0 40 40"
};
export const useStyles = createStyles(theme => ({
  root: {},
  description: {
    color: theme.palette.description
  },
  badge: {
    position: 'absolute',
    bottom: -2,
    right: -6
  },
  complex: {
    backgroundColor: theme.palette.secondary.default
  },
  multiUnit: {
    position: 'relative',
    border: `2px solid ${theme.palette.secondary.default}`,
    '&:before': {
      borderRadius: '50%',
      content: '""',
      display: 'block',
      position: 'absolute',
      top: 1,
      bottom: 1,
      left: 1,
      right: 1,
      border: '2px solid white'
    }
  }
}), {
  name: 'Listing'
});
const Listing = React.forwardRef(function Person(_ref, ref) {
  let {
    img = '',
    name,
    description = '',
    multiUnit = false,
    complex = false,
    confirmed = false,
    className = '',
    style = {},
    jss = {}
  } = _ref,
      props = _objectWithoutPropertiesLoose(_ref, ["img", "name", "description", "multiUnit", "complex", "confirmed", "className", "style", "jss"]);

  const classes = useStyles({
    jss
  });
  return /*#__PURE__*/React.createElement(Row, _extends({}, props, {
    style: style,
    className: cn(classes.root, className),
    ref: ref,
    spacing: 2,
    fullWidth: true,
    justify: "start",
    align: "center"
  }), /*#__PURE__*/React.createElement(Avatar, {
    src: img,
    className: cn({
      [classes.complex]: complex,
      [classes.multiUnit]: !complex && multiUnit
    }),
    badge: confirmed ? /*#__PURE__*/React.createElement(ConfirmedBadge, {
      className: classes.badge
    }) : null
  }, !img && complex && /*#__PURE__*/React.createElement(IcoComplex, null)), /*#__PURE__*/React.createElement(Col, {
    justify: "center",
    spacing: 1
  }, /*#__PURE__*/React.createElement(TextField, null, name), description && /*#__PURE__*/React.createElement(TextField, {
    variant: "h5",
    className: classes.description
  }, description)));
});
Listing.propTypes = {
  /** Image url for listing */
  img: PropTypes.string,

  /** Listing name or nickname */
  name: PropTypes.node,

  /** Subtitle for listing ( address etc..) */
  description: PropTypes.node,

  /** Additional class for listing */
  className: PropTypes.string,

  /** Additional style for listing */
  style: PropTypes.shape(),

  /** jss override object to customize the jss classes */
  jss: PropTypes.oneOfType([PropTypes.shape(), PropTypes.func]),

  /** Indicator for listing complex */
  complex: PropTypes.bool,

  /** Indicator for confirmed listing */
  confirmed: PropTypes.bool,

  /** Indicator for multi unit listing */
  multiUnit: PropTypes.bool
};
Listing.displayName = 'Listing';
export default Listing;