import _extends from "@babel/runtime/helpers/esm/extends";
import React, { Component } from 'react';
/**
 * Create a wrapper compose to support active functionality
 * @param ComposedComponent
 * @returns {{Component}}
 */

function withActive(ComposedComponent) {
  class ActiveWrapper extends Component {
    constructor(props) {
      super(props);

      this.activeOn = () => {
        this.setState({
          isActive: true
        });
      };

      this.activeOff = () => {
        this.setState({
          isActive: false
        });
      };

      this.toggleActive = () => {
        this.setState(prevState => ({
          isActive: !prevState.isActive
        }));
      };

      this.state = {
        isActive: false
      };
    }

    render() {
      const {
        isActive
      } = this.state;
      return /*#__PURE__*/React.createElement(ComposedComponent, _extends({}, this.props, {
        isActive: isActive,
        toggleActive: this.toggleActive,
        activeOn: this.activeOn,
        activeOff: this.activeOff,
        "data-qa": "active-wrapper"
      }));
    }

  }

  return ActiveWrapper;
}

export default withActive;