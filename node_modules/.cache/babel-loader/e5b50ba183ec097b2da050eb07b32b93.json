{"ast":null,"code":"var _jsxFileName = \"/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/screens/Blog/BlogEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport Resource from \"@guestyci/agni\";\nimport RaisedButton from \"@guestyci/foundation/RaisedButton\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport Form from \"@guestyci/foundation/Form\";\nimport Input from \"@guestyci/foundation/Input\";\nimport DateRangePicker from \"@guestyci/foundation/DatePicker/DateRangePicker\";\nimport SingleDatePicker from \"@guestyci/foundation/DatePicker/SingleDatePicker\";\nimport NumberPicker from \"@guestyci/foundation/NumberPicker\";\nimport EmailInput from \"@guestyci/foundation/EmailInput\";\nimport Dropdown, { Option } from \"@guestyci/foundation/Dropdown\";\nimport TextField from \"@guestyci/foundation/TextField\";\nimport TextArea from \"@guestyci/foundation/TextArea\";\nimport Col from \"@guestyci/foundation/Layout/Col\";\nimport Section from \"@guestyci/foundation/Layout/Section\";\nimport DurationPicker from \"@guestyci/foundation/DurationPicker\";\nimport TimePicker from \"@guestyci/foundation/TimePicker\";\nimport FormField from \"@guestyci/foundation/FormField\";\nimport FormGroup from \"@guestyci/foundation/FormGroup\";\nimport { FormProvider } from \"@guestyci/foundation/enums\"; // import { email } from \"@guestyci/foundation/validators\";\n\nimport createStyles from \"@guestyci/foundation/createStyles\";\nimport FlatButton from \"@guestyci/foundation/FlatButton\";\nimport { Row } from \"@guestyci/foundation/Layout\";\nimport { ReactComponent as BtnTrash } from \"@svgr/webpack?-svgo,+titleProp,+ref!@guestyci/foundation/icons/BtnTrash.svg\";\nimport Icon from \"@guestyci/foundation/Icon\";\nimport { useToast } from \"@guestyci/foundation/Toast\";\nimport { deleteBlog, detailsBlog, updateBlog } from \"../../actions/blogActions\";\nimport { BLOG_DELETE_RESET, BLOG_DETAILS_RESET, BLOG_UPDATE_RESET } from \"../../constants/blogConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = createStyles(theme => ({\n  app: {\n    backgroundColor: \"white\"\n  }\n}));\nexport default function BlogEditScreen(props) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    addToast\n  } = useToast();\n  const {\n    api,\n    env,\n    config\n  } = Resource.create();\n  const {\n    id\n  } = useParams(); // console.log(\"id:\", id);\n\n  const [firstName, setFirstName] = useState();\n  const [lastName, setLastName] = useState();\n  const [email, setEmail] = useState();\n  const [error, setError] = useState(false);\n  const errorMessage = \"There was a problem edit the blog.\"; // useSelector\n\n  const blogDetails = useSelector(state => state.blogDetails);\n  const {\n    loading,\n    error: errorBlogDetails,\n    blog\n  } = blogDetails;\n  const blogUpdate = useSelector(state => state.blogUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = blogUpdate;\n  const blogDelete = useSelector(state => state.blogDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete\n  } = blogDelete; // useDispatch\n\n  const dispatch = useDispatch(); // useEffect(() => {\n  //   console.log(\"useEffect\");\n  //   // async function getGuests() {\n  //   //   const response = await api.get(`/blogs/${id}`); // will go to `${config.MAILER_URL}/blogs`\n  //   //   console.log('response:', response.data);\n  //   //   const {data} = response;\n  //   //   setFirstName(data.firstName);\n  //   //   setLastName(data.lastName);\n  //   //   setEmailAdd(data.email);\n  //   // }\n  //   // getGuests();\n  // }, []);\n  //   const handleChange=(e)=>{\n  //       console.log(e.target.value)\n  //       setFirstName(e.target.value)\n  //   }\n\n  useEffect(() => {\n    if (successDelete) {\n      dispatch({\n        type: BLOG_DELETE_RESET\n      });\n      dispatch({\n        type: BLOG_DETAILS_RESET\n      });\n      props.history.push(\"/blog/list\");\n      addToast.success(`the blog ${firstName} was delete`);\n    } else if (errorDelete) {\n      addToast.danger(\"error edit the blog\");\n    }\n\n    if (successUpdate) {\n      dispatch({\n        type: BLOG_UPDATE_RESET\n      });\n      dispatch({\n        type: BLOG_DETAILS_RESET\n      });\n      props.history.push(\"/blog/list\");\n      addToast.success(`the blog ${firstName} was edit`);\n    } else if (errorUpdate) {\n      addToast.danger(\"error edit the blog\");\n    }\n\n    if (!blog) {\n      dispatch(detailsBlog(id));\n    } else {\n      setFirstName(blog.firstName);\n      setLastName(blog.lastName);\n      setEmail(blog.email);\n    }\n  }, [dispatch, props.history, successUpdate, successDelete, blog, id]);\n\n  const onSubmit = e => {\n    // e.preventDefault();\n    // dispatch update blog\n    dispatch(updateBlog({\n      id,\n      firstName,\n      lastName,\n      email\n    }));\n  }; // const onSubmit = (e) => {\n  //   // e.preventDefault();\n  //   console.log(\"onSubmit\");\n  //   console.log(firstName);\n  //   console.log(lastName);\n  //   console.log(emailAdd);\n  //   async function updateBlog() {\n  //     try {\n  //       const response = await api.put(`/blogs/${id}`, {\n  //         firstName,\n  //         lastName,\n  //         emailAdd,\n  //       }); // will go to `${config.MAILER_URL}/blogs`\n  //       {\n  //         firstName && addToast.success(`the blog ${firstName} was edit`);\n  //       }\n  //       console.log(\"response:\", response.data);\n  //       // const data = response.data;\n  //       props.history.push(\"/\");\n  //     } catch (error) {\n  //       console.log(\"error:\", error);\n  //       addToast.danger(\"error edit the blog\");\n  //     }\n  //   }\n  //   updateBlog();\n  //   // props.history.push(\"/\");\n  // };\n\n\n  const handleDelete = async () => {\n    console.log(\"handleDelete\");\n\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteBlog(blog._id));\n    }\n  };\n\n  const closeError = () => {\n    setError(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    className: classes.app,\n    justify: \"center\",\n    \"data-qa\": \"blog-edit-screen\",\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      spacing: 6,\n      span: 6,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"h2\",\n        children: [\"Edit the Blog:\", firstName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FinalForm, {\n        onSubmit: onSubmit,\n        initialValues: {},\n        render: ({\n          handleSubmit\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          title: \"Edit Blog\",\n          onSubmit: handleSubmit,\n          provider: FormProvider.Final,\n          fieldInstance: Field,\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(FormField, {\n                label: \"First Name\",\n                name: \"firstName\" //   info=\"Drama, Action etc.\"\n                ,\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  name: \"firstName\",\n                  value: firstName,\n                  placeholder: firstName,\n                  onChange: e => setFirstName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormField, {\n                label: \"Last Name\",\n                name: \"lastName\",\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  name: \"lastName\",\n                  value: lastName,\n                  placeholder: lastName,\n                  onChange: e => setLastName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormField, {\n                label: \"Email\",\n                name: \"email\",\n                children: /*#__PURE__*/_jsxDEV(EmailInput, {\n                  name: \"email\",\n                  value: email,\n                  placeholder: email // validate={[email]}\n                  ,\n                  onChange: e => setEmail(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(RaisedButton, {\n              type: \"submit\",\n              children: \"Edit Blog\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FlatButton, {\n              type: \"error\",\n              onClick: handleDelete,\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                align: \"center\",\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  svg: BtnTrash\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  children: \" Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 17\n            }, this), error && /*#__PURE__*/_jsxDEV(ErrorBanner, {\n              show: error,\n              errorMessage: errorMessage,\n              onClick: closeError,\n              actionText: \"Try again\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BlogEditScreen, \"s+JFK5vp5iqzTbdCaDJbOcw64D8=\", false, function () {\n  return [useStyles, useToast, useParams, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = BlogEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogEditScreen\");","map":{"version":3,"sources":["/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/screens/Blog/BlogEditScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","useParams","Resource","RaisedButton","Form","FinalForm","Field","Input","DateRangePicker","SingleDatePicker","NumberPicker","EmailInput","Dropdown","Option","TextField","TextArea","Col","Section","DurationPicker","TimePicker","FormField","FormGroup","FormProvider","createStyles","FlatButton","Row","Icon","useToast","deleteBlog","detailsBlog","updateBlog","BLOG_DELETE_RESET","BLOG_DETAILS_RESET","BLOG_UPDATE_RESET","useStyles","theme","app","backgroundColor","BlogEditScreen","props","classes","addToast","api","env","config","create","id","firstName","setFirstName","lastName","setLastName","email","setEmail","error","setError","errorMessage","blogDetails","state","loading","errorBlogDetails","blog","blogUpdate","loadingUpdate","errorUpdate","success","successUpdate","blogDelete","loadingDelete","errorDelete","successDelete","dispatch","type","history","push","danger","onSubmit","e","handleDelete","console","log","window","confirm","_id","closeError","handleSubmit","Final","target","value","BtnTrash"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { useParams } from \"react-router-dom\";\n\nimport Resource from \"@guestyci/agni\";\n\nimport RaisedButton from \"@guestyci/foundation/RaisedButton\";\n\nimport { Form as FinalForm, Field } from \"react-final-form\";\n\nimport Form from \"@guestyci/foundation/Form\";\nimport Input from \"@guestyci/foundation/Input\";\nimport DateRangePicker from \"@guestyci/foundation/DatePicker/DateRangePicker\";\nimport SingleDatePicker from \"@guestyci/foundation/DatePicker/SingleDatePicker\";\nimport NumberPicker from \"@guestyci/foundation/NumberPicker\";\nimport EmailInput from \"@guestyci/foundation/EmailInput\";\nimport Dropdown, { Option } from \"@guestyci/foundation/Dropdown\";\nimport TextField from \"@guestyci/foundation/TextField\";\nimport TextArea from \"@guestyci/foundation/TextArea\";\nimport Col from \"@guestyci/foundation/Layout/Col\";\nimport Section from \"@guestyci/foundation/Layout/Section\";\nimport DurationPicker from \"@guestyci/foundation/DurationPicker\";\nimport TimePicker from \"@guestyci/foundation/TimePicker\";\n\nimport FormField from \"@guestyci/foundation/FormField\";\nimport FormGroup from \"@guestyci/foundation/FormGroup\";\nimport { FormProvider } from \"@guestyci/foundation/enums\";\n// import { email } from \"@guestyci/foundation/validators\";\nimport createStyles from \"@guestyci/foundation/createStyles\";\n\nimport FlatButton from \"@guestyci/foundation/FlatButton\";\nimport { Row } from \"@guestyci/foundation/Layout\";\nimport { ReactComponent as BtnTrash } from \"@guestyci/foundation/icons/BtnTrash.svg\";\nimport Icon from \"@guestyci/foundation/Icon\";\n\nimport { useToast } from \"@guestyci/foundation/Toast\";\nimport { deleteBlog, detailsBlog, updateBlog } from \"../../actions/blogActions\";\nimport { BLOG_DELETE_RESET, BLOG_DETAILS_RESET, BLOG_UPDATE_RESET } from \"../../constants/blogConstants\";\n\nconst useStyles = createStyles((theme) => ({\n  app: {\n    backgroundColor: \"white\",\n  },\n}));\n\nexport default function BlogEditScreen(props) {\n  const classes = useStyles();\n\n  const { addToast } = useToast();\n\n  const { api, env, config } = Resource.create();\n\n  const { id } = useParams();\n  // console.log(\"id:\", id);\n\n  const [firstName, setFirstName] = useState();\n\n  const [lastName, setLastName] = useState();\n\n  const [email, setEmail] = useState();\n\n  const [error, setError] = useState(false);\n\n  const errorMessage = \"There was a problem edit the blog.\";\n\n  // useSelector\n  const blogDetails = useSelector((state) => state.blogDetails);\n  const { loading, error: errorBlogDetails, blog } = blogDetails;\n\n  const blogUpdate = useSelector((state) => state.blogUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = blogUpdate;\n\n\n  const blogDelete = useSelector((state) => state.blogDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = blogDelete;\n\n\n  // useDispatch\n  const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //   console.log(\"useEffect\");\n\n  //   // async function getGuests() {\n  //   //   const response = await api.get(`/blogs/${id}`); // will go to `${config.MAILER_URL}/blogs`\n  //   //   console.log('response:', response.data);\n  //   //   const {data} = response;\n\n  //   //   setFirstName(data.firstName);\n  //   //   setLastName(data.lastName);\n  //   //   setEmailAdd(data.email);\n  //   // }\n  //   // getGuests();\n  // }, []);\n\n  //   const handleChange=(e)=>{\n  //       console.log(e.target.value)\n\n  //       setFirstName(e.target.value)\n  //   }\n\n  useEffect(() => {\n\n    if (successDelete) {\n      dispatch({ type: BLOG_DELETE_RESET });\n      dispatch({ type: BLOG_DETAILS_RESET });\n\n      props.history.push(\"/blog/list\");\n      addToast.success(`the blog ${firstName} was delete`);\n    } else if (errorDelete) {\n      addToast.danger(\"error edit the blog\");\n    }\n    if (successUpdate) {\n      dispatch({ type: BLOG_UPDATE_RESET });\n      dispatch({ type: BLOG_DETAILS_RESET });\n\n      props.history.push(\"/blog/list\");\n      addToast.success(`the blog ${firstName} was edit`);\n    } else if (errorUpdate) {\n      addToast.danger(\"error edit the blog\");\n    }\n    if (!blog) {\n      dispatch(detailsBlog(id));\n    } else {\n      setFirstName(blog.firstName);\n      setLastName(blog.lastName);\n      setEmail(blog.email);\n    }\n  }, [dispatch, props.history, successUpdate,successDelete, blog, id]);\n\n  const onSubmit = (e) => {\n    // e.preventDefault();\n    // dispatch update blog\n    dispatch(updateBlog({  id, firstName, lastName, email }));\n  };\n\n  // const onSubmit = (e) => {\n  //   // e.preventDefault();\n\n  //   console.log(\"onSubmit\");\n  //   console.log(firstName);\n  //   console.log(lastName);\n  //   console.log(emailAdd);\n\n  //   async function updateBlog() {\n  //     try {\n  //       const response = await api.put(`/blogs/${id}`, {\n  //         firstName,\n  //         lastName,\n  //         emailAdd,\n  //       }); // will go to `${config.MAILER_URL}/blogs`\n  //       {\n  //         firstName && addToast.success(`the blog ${firstName} was edit`);\n  //       }\n\n  //       console.log(\"response:\", response.data);\n  //       // const data = response.data;\n\n  //       props.history.push(\"/\");\n  //     } catch (error) {\n  //       console.log(\"error:\", error);\n  //       addToast.danger(\"error edit the blog\");\n  //     }\n  //   }\n  //   updateBlog();\n\n  //   // props.history.push(\"/\");\n  // };\n\n  const handleDelete = async () => {\n    console.log(\"handleDelete\");\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteBlog(blog._id));\n    }\n  };\n\n  const closeError = () => {\n    setError(false);\n  };\n\n  return (\n    <Section className={classes.app} justify=\"center\">\n      <Col spacing={6} span={6}>\n        <TextField variant=\"h2\">\n          Edit the Blog:\n          {firstName}\n        </TextField>\n        <FinalForm\n          onSubmit={onSubmit}\n          initialValues={{}}\n          render={({ handleSubmit }) => (\n            <Form\n              title=\"Edit Blog\"\n              onSubmit={handleSubmit}\n              provider={FormProvider.Final}\n              fieldInstance={Field}\n            >\n              <FormGroup>\n                <FormGroup>\n                  <FormField\n                    label=\"First Name\"\n                    name=\"firstName\"\n                    //   info=\"Drama, Action etc.\"\n                  >\n                    <Input\n                      name=\"firstName\"\n                      value={firstName}\n                      placeholder={firstName}\n                      onChange={(e) => setFirstName(e.target.value)}\n                    />\n                  </FormField>\n                  <FormField label=\"Last Name\" name=\"lastName\">\n                    <Input\n                      name=\"lastName\"\n                      value={lastName}\n                      placeholder={lastName}\n                      onChange={(e) => setLastName(e.target.value)}\n                    />\n                  </FormField>\n\n                  <FormField label=\"Email\" name=\"email\">\n                    <EmailInput\n                      name=\"email\"\n                      value={email}\n                      placeholder={email}\n                      // validate={[email]}\n                      onChange={(e) => setEmail(e.target.value)}\n                    />\n                  </FormField>\n                </FormGroup>\n\n                {/* <FormField label=\"Country\" info=\"e.g (US)\" name=\"country\">\n                    <Input />\n                  </FormField>\n                  <FormField label=\"Runtime\" name=\"runtime\">\n                    <Input />\n                  </FormField>\n                  <FormField label=\"Contact\" name=\"contact\">\n                    <Input />\n                  </FormField>\n                  <FormField label=\"Biography\" name=\"bigraphy\" required>\n                    <TextArea />\n                  </FormField>\n                  <FormField label=\"Age\" name=\"age\" required>\n                    <NumberPicker />\n                  </FormField> */}\n                {/* <FormField\n                  label=\"Email\"\n                  name=\"email\"\n                  validate={[email]}\n                  required\n                >\n                  <EmailInput\n                    name=\"email\"\n                    value={email}\n                    placeholder={email}\n                  />\n                </FormField> */}\n                {/* <FormField label=\"Gender\" name=\"gender\" required>\n                    <Dropdown>\n                      {['Male', 'Female'].map((gender) => (\n                        <Option value={gender} key={gender}>\n                          {gender}\n                        </Option>\n                      ))}\n                    </Dropdown>\n                  </FormField>\n                  <FormField\n                    label=\"Single Date Picker\"\n                    name=\"singleDatePicker\"\n                    required\n                  >\n                    <SingleDatePicker />\n                  </FormField>\n                  <FormField\n                    label=\"Date Range Picker\"\n                    name=\"dateRangePicker\"\n                    required\n                  >\n                    <DateRangePicker />\n                  </FormField>\n                  <FormField label=\"Time picker\" name=\"time\" required>\n                    <TimePicker />\n                  </FormField>\n                  <FormField label=\"Duration picker\" name=\"duration\" required>\n                    <DurationPicker />\n                  </FormField> */}\n                <RaisedButton type=\"submit\">Edit Blog</RaisedButton>\n\n                <FlatButton type=\"error\" onClick={handleDelete}>\n                  <Row align=\"center\" spacing={2}>\n                    <Icon svg={BtnTrash} />\n                    <TextField> Delete</TextField>\n                  </Row>\n                </FlatButton>\n\n                {error && (\n                  <ErrorBanner\n                    show={error}\n                    errorMessage={errorMessage}\n                    onClick={closeError}\n                    actionText=\"Try again\"\n                  />\n                )}\n              </FormGroup>\n            </Form>\n          )}\n        />\n      </Col>\n    </Section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}