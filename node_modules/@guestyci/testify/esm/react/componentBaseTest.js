import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import React from 'react';
import { shallow, mount, configure } from 'enzyme';
import { shallowToJson } from 'enzyme-to-json';
import isEmpty from 'lodash/isEmpty';
import Adapter from 'enzyme-adapter-react-16';
configure({
  adapter: new Adapter()
});

var setup = function setup(component) {
  var isMount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  return isMount ? mount(component) : shallow(component);
};
/**
 * Base test for all component unit testing
 * @param component {Component} The component to test
 * @param props {Object}  The props supported by the component
 * @param snapShot  {{}} The component snapshot
 */


export default (function (component) {
  var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var snapShot = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  describe('Base test for all component testing', function () {
    test('Should render component', function () {
      expect(component).toBeDefined();
    });
    test('Should render and equal snapshot', function () {
      var children = props.children,
          otherProps = _objectWithoutProperties(props, ["children"]);

      var snapComponent = React.createElement(component, otherProps, children);
      var wrapper = setup(!isEmpty(snapShot) ? snapShot : snapComponent);
      expect(shallowToJson(wrapper)).toMatchSnapshot();
    });
    test('Should have expected props', function () {
      var wrapper = setup(React.createElement("component", props));
      Object.keys(props).forEach(function (prop) {
        return expect(wrapper.prop(prop)).toEqual(props[prop]);
      });
    });
  });
});