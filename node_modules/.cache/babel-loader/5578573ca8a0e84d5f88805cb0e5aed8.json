{"ast":null,"code":"import Axios from \"axios\";\nimport { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_ADD_FAIL, USER_ADD_REQUEST, USER_ADD_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL } from \"../constants/userConstants\";\nimport Resource from \"@guestyci/agni\"; // const { api, env, config } = Resource.create();\n\nconst temp = Resource.create(\"user\");\ntemp.api.defaults.baseURL = `http://localhost:9999/api/users`; //http://localhost:9999/blog-hydra/api/users\n\nconst userApi = temp.api;\nexport const listUsers = auth => async dispatch => {\n  console.log('auth:', auth);\n  dispatch({\n    type: USER_LIST_REQUEST\n  });\n  console.log(\"USER_LIST_REQUEST\");\n\n  try {\n    // const temp = Resource.create('tasks');\n    // temp.api.defaults.baseURL = `http://localhost:9999/tasks`;\n    // export const tasksApi = temp.api;\n    // const { data } = await userApi.get(\"http://localhost:9999/api/users\");\n    const {\n      data\n    } = await userApi.get(\"/\", {\n      auth\n    }); // will go to `${config.MAILER_URL}/users`\n\n    console.log(\"data:\", data);\n    let counter = 1;\n    const arr = [];\n    let users = data;\n\n    for (let i = 0; i < users.length; i++) {\n      // console.log(\"users[i]: \", users[i]);\n      const arrUser = Object.entries(users[i]);\n      console.log(\"arrUser:\", arrUser); //  firstName: {\n      //   children: 'John',\n      // },\n\n      const bigObj = {};\n\n      for (let j = 0; j < arrUser.length; j++) {\n        const obj = {}; // console.log(\"arrUser[j]: \", arrUser[j]);\n        // console.log(\"arrUser[0]: \",arrUser[j][0]);\n        // console.log(\"arrUser[1]: \",arrUser[j][1]);\n        // console.log(\"obj:\", obj);\n\n        if (arrUser[j][0] === \"_id\") {\n          obj.children = arrUser[j][1]; //         obj= {children: '613e616d7ab4e566768e79d5'}\n\n          bigObj.id = obj; //    bigObj= {id: {children: '613e616d7ab4e566768e79d5'}}\n\n          bigObj._id = arrUser[j][1]; //   bigObj= {_id: '613e616d7ab4e566768e79d5'}\n        } else if (arrUser[j][0] === \"createdAt\" || arrUser[j][0] === \"updatedAt\") {\n          // ['createdAt', '2021-09-13T08:46:49.849Z']\n          obj.children = new Date(arrUser[j][1]).toLocaleString(); // {children: '9/13/2021, 11:46:49 AM'}\n\n          bigObj[arrUser[j][0]] = obj; // {createdAt: {children: '9/13/2021, 11:46:49 AM'}}\n        } else if (arrUser[j][0] === \"accountId\") {\n          // console.log(\"arrUser:\", arrUser);\n          // ['accountId',  {_id: '613e1486e5218626969838f0', name: 'Karamba'}]\n          obj.children = arrUser[j][1].name; // {children: 'Karamba'}\n\n          bigObj[arrUser[j][0]] = obj; //{ accountId: {children: 'Karamba'}}\n        } else {\n          // ['firstName', 'miki']\n          obj.children = arrUser[j][1]; // {children: 'miki'}\n\n          bigObj[arrUser[j][0]] = obj; // firstName: {children: 'miki'}\n        } // console.log(\"bigObj:\", bigObj);\n        // arr.push( `${arrUser[j][0]}: {children: '${arrUser[j][1]}',}`)\n\n      } // arr.push({gilad:1,...users[i]})\n\n\n      arr.push({ ...bigObj\n      }); // arr.push({ _id: `${counter}`, ...bigObj });\n\n      counter++;\n    }\n\n    console.log(\"arr: \", arr); //  setData(response.data.results)\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: arr\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const add = (firstName, lastName, email, accountId) => async dispatch => {\n  dispatch({\n    type: USER_ADD_REQUEST,\n    payload: {\n      firstName,\n      lastName,\n      email,\n      accountId\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await userApi.post(\"/register\", {\n      firstName,\n      lastName,\n      email,\n      accountId\n    });\n    dispatch({\n      type: USER_ADD_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_ADD_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const register = (firstName, lastName, email, accountId) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      firstName,\n      lastName,\n      email,\n      accountId\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await userApi.post(\"/register\", {\n      firstName,\n      lastName,\n      email,\n      accountId\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signin = email => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await userApi.post(\"/signin\", {\n      email\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    }); // dispatch(emailUser(email));\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    // console.log(\"error :\", error);\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signoutUser = () => dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_SIGNOUT\n  }); // document.location.href = \"/signin\";\n};\nexport const deleteUser = userId => async dispatch => {\n  console.log(\"userId:\", userId);\n  console.log(\"deleteUser\");\n  dispatch({\n    type: USER_DELETE_REQUEST,\n    payload: userId\n  });\n\n  try {\n    const {\n      data\n    } = await userApi.delete(`/${userId}`);\n    console.log(\"data:\", data);\n    dispatch({\n      type: USER_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(\"error\");\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const detailsUser = userId => async dispatch => {\n  dispatch({\n    type: USER_DETAILS_REQUEST,\n    payload: userId\n  });\n\n  try {\n    const {\n      data\n    } = await userApi.get(`/${userId}`);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateUser = user => async dispatch => {\n  // console.log(\"user:\", user.id);\n  dispatch({\n    type: USER_UPDATE_PROFILE_REQUEST,\n    payload: user\n  });\n\n  try {\n    const {\n      data\n    } = await userApi.patch(`/${user.id}`, user);\n    dispatch({\n      type: USER_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/actions/userActions.js"],"names":["Axios","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_ADD_FAIL","USER_ADD_REQUEST","USER_ADD_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNOUT","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","Resource","temp","create","api","defaults","baseURL","userApi","listUsers","auth","dispatch","console","log","type","data","get","counter","arr","users","i","length","arrUser","Object","entries","bigObj","j","obj","children","id","_id","Date","toLocaleString","name","push","payload","error","message","response","add","firstName","lastName","email","accountId","post","register","localStorage","setItem","JSON","stringify","signin","signoutUser","removeItem","deleteUser","userId","delete","detailsUser","updateUser","user","patch"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\nimport {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_ADD_FAIL,\n  USER_ADD_REQUEST,\n  USER_ADD_SUCCESS,\n  USER_SIGNIN_FAIL,\n  USER_SIGNIN_REQUEST,\n  USER_SIGNIN_SUCCESS,\n  USER_SIGNOUT,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n} from \"../constants/userConstants\";\nimport Resource from \"@guestyci/agni\";\n// const { api, env, config } = Resource.create();\nconst temp = Resource.create(\"user\");\ntemp.api.defaults.baseURL = `http://localhost:9999/api/users`;\n\n//http://localhost:9999/blog-hydra/api/users\n\nconst userApi = temp.api;\n\nexport const listUsers = (auth) => async (dispatch) => {\n  console.log('auth:', auth)\n  dispatch({ type: USER_LIST_REQUEST });\n  console.log(\"USER_LIST_REQUEST\");\n  try {\n    // const temp = Resource.create('tasks');\n    // temp.api.defaults.baseURL = `http://localhost:9999/tasks`;\n    // export const tasksApi = temp.api;\n\n    // const { data } = await userApi.get(\"http://localhost:9999/api/users\");\n\n    const { data } = await userApi.get(\"/\",{auth}); // will go to `${config.MAILER_URL}/users`\n\n    console.log(\"data:\", data);\n\n    let counter = 1;\n    const arr = [];\n\n    let users = data;\n\n    for (let i = 0; i < users.length; i++) {\n      // console.log(\"users[i]: \", users[i]);\n\n      const arrUser = Object.entries(users[i]);\n      console.log(\"arrUser:\", arrUser);\n\n      //  firstName: {\n      //   children: 'John',\n      // },\n\n      const bigObj = {};\n\n      for (let j = 0; j < arrUser.length; j++) {\n        const obj = {};\n        // console.log(\"arrUser[j]: \", arrUser[j]);\n        // console.log(\"arrUser[0]: \",arrUser[j][0]);\n        // console.log(\"arrUser[1]: \",arrUser[j][1]);\n\n        // console.log(\"obj:\", obj);\n\n        if (arrUser[j][0] === \"_id\") {\n          obj.children = arrUser[j][1];\n          //         obj= {children: '613e616d7ab4e566768e79d5'}\n\n          bigObj.id = obj;\n          //    bigObj= {id: {children: '613e616d7ab4e566768e79d5'}}\n\n          bigObj._id = arrUser[j][1];\n\n          //   bigObj= {_id: '613e616d7ab4e566768e79d5'}\n        } else if (\n          arrUser[j][0] === \"createdAt\" ||\n          arrUser[j][0] === \"updatedAt\"\n        ) {\n          // ['createdAt', '2021-09-13T08:46:49.849Z']\n\n          obj.children = new Date(arrUser[j][1]).toLocaleString();\n          // {children: '9/13/2021, 11:46:49 AM'}\n\n          bigObj[arrUser[j][0]] = obj;\n\n          // {createdAt: {children: '9/13/2021, 11:46:49 AM'}}\n        } else if (arrUser[j][0] === \"accountId\") {\n          // console.log(\"arrUser:\", arrUser);\n\n          // ['accountId',  {_id: '613e1486e5218626969838f0', name: 'Karamba'}]\n          obj.children = arrUser[j][1].name;\n\n          // {children: 'Karamba'}\n\n          bigObj[arrUser[j][0]] = obj;\n          //{ accountId: {children: 'Karamba'}}\n        } else {\n          // ['firstName', 'miki']\n\n          obj.children = arrUser[j][1];\n\n          // {children: 'miki'}\n\n          bigObj[arrUser[j][0]] = obj;\n\n          // firstName: {children: 'miki'}\n        }\n\n        // console.log(\"bigObj:\", bigObj);\n\n        // arr.push( `${arrUser[j][0]}: {children: '${arrUser[j][1]}',}`)\n      }\n      // arr.push({gilad:1,...users[i]})\n      arr.push({ ...bigObj });\n      // arr.push({ _id: `${counter}`, ...bigObj });\n\n      counter++;\n    }\n\n    console.log(\"arr: \", arr);\n    //  setData(response.data.results)\n\n    dispatch({ type: USER_LIST_SUCCESS, payload: arr });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: USER_LIST_FAIL, payload: message });\n  }\n};\n\nexport const add =\n  (firstName, lastName, email, accountId) => async (dispatch) => {\n    dispatch({\n      type: USER_ADD_REQUEST,\n      payload: { firstName, lastName, email, accountId },\n    });\n    try {\n      const { data } = await userApi.post(\n        \"/register\",\n        {\n          firstName,\n          lastName,\n          email,\n          accountId,\n        }\n      );\n\n      dispatch({ type: USER_ADD_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({\n        type: USER_ADD_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\nexport const register =\n  (firstName, lastName, email, accountId) => async (dispatch) => {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n      payload: { firstName, lastName, email, accountId },\n    });\n    try {\n      const { data } = await userApi.post(\n        \"/register\",\n        {\n          firstName,\n          lastName,\n          email,\n          accountId,\n        }\n      );\n\n      dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n\n      dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n    } catch (error) {\n      dispatch({\n        type: USER_REGISTER_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\nexport const signin = (email) => async (dispatch) => {\n  dispatch({ type: USER_SIGNIN_REQUEST, payload: { email } });\n  try {\n    const { data } = await userApi.post(\n      \"/signin\",\n      { email }\n    );\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n    // dispatch(emailUser(email));\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    // console.log(\"error :\", error);\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const signoutUser = () => (dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n\n  dispatch({ type: USER_SIGNOUT });\n  // document.location.href = \"/signin\";\n};\n\nexport const deleteUser = (userId) => async (dispatch) => {\n  console.log(\"userId:\", userId);\n  console.log(\"deleteUser\");\n  dispatch({ type: USER_DELETE_REQUEST, payload: userId });\n\n  try {\n    const { data } = await userApi.delete(\n      `/${userId}`\n    );\n    console.log(\"data:\", data);\n    dispatch({ type: USER_DELETE_SUCCESS, payload: data });\n  } catch (error) {\n    console.log(\"error\");\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: USER_DELETE_FAIL, payload: message });\n  }\n};\n\nexport const detailsUser = (userId) => async (dispatch) => {\n  dispatch({ type: USER_DETAILS_REQUEST, payload: userId });\n\n  try {\n    const { data } = await userApi.get(\n      `/${userId}`\n    );\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: USER_DETAILS_FAIL, payload: message });\n  }\n};\n\nexport const updateUser = (user) => async (dispatch) => {\n  // console.log(\"user:\", user.id);\n  dispatch({ type: USER_UPDATE_PROFILE_REQUEST, payload: user });\n  try {\n    const { data } = await userApi.patch(\n      `/${user.id}`,\n      user\n    );\n    dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: USER_UPDATE_FAIL, payload: message });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}