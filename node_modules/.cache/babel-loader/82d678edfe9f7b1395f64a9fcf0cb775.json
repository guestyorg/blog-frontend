{"ast":null,"code":"var _jsxFileName = \"/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/UserTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport Section from \"@guestyci/foundation/legacy/Section\";\nimport AddButton from \"@guestyci/foundation/AddButton\";\nimport Table, { Column } from \"@guestyci/foundation/legacy/Table\";\nimport { getEmptySelection, getSelectionOnAction } from \"@guestyci/foundation/legacy/Table/tableUtility\";\nimport Cell from \"@guestyci/foundation/legacy/Table/Cell\";\nimport HeaderCell from \"@guestyci/foundation/legacy/Table/HeaderCell\";\nimport FlatButton from \"@guestyci/foundation/legacy/FlatButton\";\nimport { sleep } from \"@guestyci/foundation/utils/commonUtility\";\nimport orderBy from \"lodash/orderBy\";\nimport DateCell from \"@guestyci/foundation/legacy/Table/DateCell\";\nimport DateTimeCell from \"@guestyci/foundation/legacy/Table/DateTimeCell\"; // import data from '../../../__mocks__/tableData';\n\nimport Resource from \"@guestyci/agni\";\nimport TextField from \"@guestyci/foundation/TextField\";\nimport { Row } from \"@guestyci/foundation/Layout\";\nimport { ReactComponent as BtnTrash } from \"@svgr/webpack?-svgo,+titleProp,+ref!@guestyci/foundation/icons/BtnTrash.svg\";\nimport Icon from \"@guestyci/foundation/Icon\";\nimport axios from \"axios\";\nimport { after } from \"lodash\";\nimport { makeDataForTable } from \"../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserTable = props => {\n  _s();\n\n  // console.log('props:', props)\n  const {\n    api,\n    env,\n    config\n  } = Resource.create();\n  const [rawData, setRawData] = useState();\n  const [data, setData] = useState();\n  let counter = 1;\n  const arr = [];\n  let res1;\n  let users; // infint-scroll-table\n\n  const width = 200;\n  const pageSize = 25;\n  const scrollOffset = data ? data.length : 100;\n  const [isLoading, setIsLoading] = useState(false);\n  const [skip, setSkip] = useState(0);\n  const handleLoadMore = useCallback(async (newSkip, newPageSize) => {\n    console.log(\"handleLoadMore\");\n    const addition = semiInfiniteData.slice(newSkip, newSkip + newPageSize); // console.log('newPageSize:', newPageSize)\n    // console.log('newSkip:', newSkip)\n    // console.log('addition:', addition)\n\n    console.log(\"data: \", data);\n    setIsLoading(true);\n    await sleep(400);\n    setSkip(newSkip);\n    setData(prev => [...(prev || []), ...addition]);\n    setIsLoading(false);\n  }, []); // sortable table\n\n  const [sortBy, setSortBy] = useState();\n  const [userDeleted, setUserDeleted] = useState(false);\n  const handleSort = useCallback(newSortBy => {\n    console.log(\"handleSort\");\n    setSortBy(newSortBy);\n    const minusPrefix = newSortBy === null || newSortBy === void 0 ? void 0 : newSortBy.startsWith(\"-\");\n    console.log(\"minusPrefix:\", minusPrefix);\n    const direction = minusPrefix ? \"desc\" : \"asc\";\n    console.log(\"direction:\", direction);\n    const id = minusPrefix ? newSortBy.substring(1) : sortBy;\n    console.log(\"id:\", id);\n    setData(orderBy(rawData, `${id}.date`, direction));\n    console.log(\"data:\", data);\n  }, []);\n  useEffect(() => {\n    console.log(\"useEffect\");\n\n    async function getUsers() {\n      try {\n        // const response1 = await api.get(\"/accounts/me\"); // will go to `${config.MAILER_URL}/users`\n        // console.log(\"response1:\", response1);\n        const response = await api.get(\"/users\"); // will go to `${config.MAILER_URL}/users`\n\n        console.log(\"response:\", response);\n        users = response.data.results; //  console.log('users:', users)\n        // staging/production/staging5/preprod\n        //  r.forEach(\n        //    user=> {\n        //    console.log('user:', user)\n        //    arr.push({gilad:1,...user})\n        //    }\n        //  )\n        /////////////////////////////////////////////////////////////////////////////////////////////\n        // for (let i = 0; i < users.length; i++) {\n        //   //  console.log(\"users[i]: \", users[i] );\n        //   const arrUser = Object.entries(users[i]);\n        //   //  console.log('arrUser:', arrUser)\n        //   //  firstName: {\n        //   //   children: 'John',\n        //   // },\n        //   const bigObj = {};\n        //   for (let j = 0; j < arrUser.length; j++) {\n        //     const obj = {};\n        //     // console.log(\"arrUser[j]: \",arrUser[j]);\n        //     // console.log(\"arrUser[0]: \",arrUser[j][0]);\n        //     // console.log(\"arrUser[1]: \",arrUser[j][1]);\n        //     obj.children = arrUser[j][1];\n        //     // console.log('obj:', obj)\n        //     if (arrUser[j][0] === \"_id\") {\n        //       bigObj.id = obj;\n        //       bigObj._id = arrUser[j][1];\n        //     } else {\n        //       bigObj[arrUser[j][0]] = obj;\n        //     }\n        //     // console.log('bigObj:', bigObj)\n        //     // arr.push( `${arrUser[j][0]}: {children: '${arrUser[j][1]}',}`)\n        //   }\n        //   // arr.push({gilad:1,...users[i]})\n        //   arr.push({ ...bigObj });\n        //   // arr.push({ _id: `${counter}`, ...bigObj });\n        //   counter++;\n        // }\n        ///////////////////////////////////////////////////////////////////////////////////////////////////////\n        //  setData(response.data.results)\n\n        let arr = makeDataForTable(users);\n        console.log(\"arr: \", arr);\n        setData(arr); // const response1= await axios.get(\"https://api.guesty.com/api/v2/guests\",  {\n        //   auth: {\n        //     username: \"88ed11eb4b951e3e239bdfb11b4d6a0a\",\n        //     password: \"f1f74044be21d90c5d0880162994e236yy\"\n        //   }\n        // }\n        // );\n        //  res1= response1.data.results\n        //  console.log('res1:', res1)\n        // handleLoadMore(0, pageSize);\n      } catch (error) {\n        console.log(\"error:\", error);\n      }\n    }\n\n    getUsers();\n  }, [userDeleted]);\n  const semiInfiniteData = [...Array(300)].reduce(acc => acc.concat(data), []).map((e, index) => ({ ...e,\n    id: {\n      children: index + 1\n    },\n    _id: index + 1\n  }));\n  console.log(\"semiInfiniteData:\", semiInfiniteData); // useEffect(() => {\n  //   console.log('handleLoadMore')\n  //   handleLoadMore(0, pageSize);\n  // }, []);\n  // multi-select-table\n\n  const [rowSelection, setRowSelection] = useState(getEmptySelection());\n  const {\n    allSelected,\n    items,\n    exceptItems\n  } = rowSelection; // console.log('exceptItems:', exceptItems);\n  // console.log('items:', items);\n  // console.log('allSelected:', allSelected);\n\n  const selectionSize = allSelected && arr.length > 0 ? arr.length - exceptItems.size : items.size;\n\n  const handleRowCheckChange = action => {\n    console.log(\"handleRowCheckChange\"); // console.log('action:', action);\n\n    const selection = getSelectionOnAction({\n      rowSelection,\n      action,\n      data\n    }); // console.log('selection:', selection);\n\n    setRowSelection(selection);\n  };\n\n  const deleteUser = async userId => {\n    console.log(\"deleteUser\");\n\n    try {\n      const response = await api.delete(`/users/${userId}`); // will go to `${config.MAILER_URL}/users`\n\n      console.log(\"response:\", response); // const data = response.data;\n      // addToast.success('user was delete')\n\n      setUserDeleted(true); // props.history.push('/');\n\n      handleClearSelection();\n    } catch (error) {\n      console.log(\"error:\", error); // addToast.danger(\"error deleting the user\")\n    }\n  };\n\n  const handleDelete = () => {\n    console.log(\"rowSelection.items: \", rowSelection.items);\n\n    if (window.confirm(\"Are you sure?\")) {\n      rowSelection.items.forEach(item => deleteUser(item));\n    }\n  };\n\n  const handleClearSelection = () => {\n    console.log(\"handleClearSelection\");\n    setRowSelection(getEmptySelection());\n  };\n\n  const handleRowClick = (...args) => {\n    console.log(\"handleRowClick\", ...args);\n    const rowData = { ...args\n    }; // console.log(\"rowData:\", rowData);\n\n    console.log(\"rowData:\", rowData[0].id.children);\n    const userId = rowData[0].id.children; // console.log('args:', args.id)\n    // props.history.push(\"www.google.com\")\n\n    props.history.push(`/user/edit/${userId}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data && /*#__PURE__*/_jsxDEV(Section, {\n      col: true,\n      className: \"bg-white\",\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        gutter: 2,\n        children: /*#__PURE__*/_jsxDEV(AddButton, {\n          onClick: () => props.history.push(`/user/add/preprod`),\n          text: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        spacing: 4,\n        children: selectionSize > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\" \", /*#__PURE__*/_jsxDEV(FlatButton, {\n            onClick: handleClearSelection,\n            disabled: !selectionSize,\n            children: `Unselect ${selectionSize || \"\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FlatButton, {\n            type: \"error\",\n            onClick: handleDelete,\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              align: \"center\",\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Icon, {\n                svg: BtnTrash\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                children: \" Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this), console.log(\"rowSelection: \", rowSelection), /*#__PURE__*/_jsxDEV(Table, {\n        multiselect: true,\n        height: 500,\n        data: data,\n        isLoading: isLoading,\n        pageSize: pageSize,\n        rowSelection: rowSelection,\n        onCheckedRowsChange: handleRowCheckChange,\n        onRowClick: handleRowClick,\n        infiniteScrollOptions: {\n          skip,\n          scrollOffset,\n          onLoadMore: handleLoadMore,\n          totalCount: semiInfiniteData.length\n        },\n        sortBy: sortBy,\n        onSort: handleSort,\n        children: [/*#__PURE__*/_jsxDEV(Column, {\n          dataKey: \"firstName\",\n          width: width,\n          children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n            id: \"firstname\",\n            children: \"First name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataKey: \"lastName\",\n          width: width,\n          children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n            id: \"lastname\",\n            children: \"Last name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataKey: \"email\",\n          width: width,\n          children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n            id: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(UserTable, \"3DlhbejMlP06oWuNx/cVU2gMFe8=\");\n\n_c = UserTable;\nexport default UserTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserTable\");","map":{"version":3,"sources":["/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/UserTable.js"],"names":["React","useState","useEffect","useCallback","Section","AddButton","Table","Column","getEmptySelection","getSelectionOnAction","Cell","HeaderCell","FlatButton","sleep","orderBy","DateCell","DateTimeCell","Resource","TextField","Row","Icon","axios","after","makeDataForTable","UserTable","props","api","env","config","create","rawData","setRawData","data","setData","counter","arr","res1","users","width","pageSize","scrollOffset","length","isLoading","setIsLoading","skip","setSkip","handleLoadMore","newSkip","newPageSize","console","log","addition","semiInfiniteData","slice","prev","sortBy","setSortBy","userDeleted","setUserDeleted","handleSort","newSortBy","minusPrefix","startsWith","direction","id","substring","getUsers","response","get","results","error","Array","reduce","acc","concat","map","e","index","children","_id","rowSelection","setRowSelection","allSelected","items","exceptItems","selectionSize","size","handleRowCheckChange","action","selection","deleteUser","userId","delete","handleClearSelection","handleDelete","window","confirm","forEach","item","handleRowClick","args","rowData","history","push","BtnTrash","onLoadMore","totalCount"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AAEA,OAAOC,KAAP,IAAgBC,MAAhB,QAA8B,mCAA9B;AACA,SACEC,iBADF,EAEEC,oBAFF,QAGO,gDAHP;AAIA,OAAOC,IAAP,MAAiB,wCAAjB;AACA,OAAOC,UAAP,MAAuB,8CAAvB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AAEA,SAASC,KAAT,QAAsB,0CAAtB;AAEA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,OAAOC,QAAP,MAAqB,4CAArB;AACA,OAAOC,YAAP,MAAyB,gDAAzB,C,CAEA;;AAEA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,SAASC,GAAT,QAAoB,6BAApB;;AAEA,OAAOC,IAAP,MAAiB,2BAAjB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,QAAtB;AACA,SAASC,gBAAT,QAAiC,UAAjC;;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B;AACA,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,GAAP;AAAYC,IAAAA;AAAZ,MAAuBX,QAAQ,CAACY,MAAT,EAA7B;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB9B,QAAQ,EAAtC;AACA,QAAM,CAAC+B,IAAD,EAAOC,OAAP,IAAkBhC,QAAQ,EAAhC;AAEA,MAAIiC,OAAO,GAAG,CAAd;AACA,QAAMC,GAAG,GAAG,EAAZ;AACA,MAAIC,IAAJ;AACA,MAAIC,KAAJ,CAT2B,CAW3B;;AACA,QAAMC,KAAK,GAAG,GAAd;AACA,QAAMC,QAAQ,GAAG,EAAjB;AACA,QAAMC,YAAY,GAAGR,IAAI,GAAGA,IAAI,CAACS,MAAR,GAAiB,GAA1C;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4B1C,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAAC2C,IAAD,EAAOC,OAAP,IAAkB5C,QAAQ,CAAC,CAAD,CAAhC;AAEA,QAAM6C,cAAc,GAAG3C,WAAW,CAAC,OAAO4C,OAAP,EAAgBC,WAAhB,KAAgC;AACjEC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAEA,UAAMC,QAAQ,GAAGC,gBAAgB,CAACC,KAAjB,CAAuBN,OAAvB,EAAgCA,OAAO,GAAGC,WAA1C,CAAjB,CAHiE,CAIjE;AACA;AACA;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBlB,IAAtB;AACAW,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAM9B,KAAK,CAAC,GAAD,CAAX;AACAgC,IAAAA,OAAO,CAACE,OAAD,CAAP;AACAd,IAAAA,OAAO,CAAEqB,IAAD,IAAU,CAAC,IAAIA,IAAI,IAAI,EAAZ,CAAD,EAAkB,GAAGH,QAArB,CAAX,CAAP;AACAR,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAbiC,EAa/B,EAb+B,CAAlC,CAlB2B,CAiC3B;;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBvD,QAAQ,EAApC;AAEA,QAAM,CAACwD,WAAD,EAAcC,cAAd,IAAgCzD,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM0D,UAAU,GAAGxD,WAAW,CAAEyD,SAAD,IAAe;AAC5CX,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAM,IAAAA,SAAS,CAACI,SAAD,CAAT;AAEA,UAAMC,WAAW,GAAGD,SAAH,aAAGA,SAAH,uBAAGA,SAAS,CAAEE,UAAX,CAAsB,GAAtB,CAApB;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BW,WAA5B;AACA,UAAME,SAAS,GAAGF,WAAW,GAAG,MAAH,GAAY,KAAzC;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0Ba,SAA1B;AACA,UAAMC,EAAE,GAAGH,WAAW,GAAGD,SAAS,CAACK,SAAV,CAAoB,CAApB,CAAH,GAA4BV,MAAlD;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBc,EAAnB;AAEA/B,IAAAA,OAAO,CAACnB,OAAO,CAACgB,OAAD,EAAW,GAAEkC,EAAG,OAAhB,EAAwBD,SAAxB,CAAR,CAAP;AAEAd,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBlB,IAArB;AACD,GAd6B,EAc3B,EAd2B,CAA9B;AAgBA9B,EAAAA,SAAS,CAAC,MAAM;AACd+C,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;;AAEA,mBAAegB,QAAf,GAA0B;AACxB,UAAI;AACF;AACA;AAEA,cAAMC,QAAQ,GAAG,MAAMzC,GAAG,CAAC0C,GAAJ,CAAQ,QAAR,CAAvB,CAJE,CAIwC;;AAC1CnB,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBiB,QAAzB;AACA9B,QAAAA,KAAK,GAAG8B,QAAQ,CAACnC,IAAT,CAAcqC,OAAtB,CANE,CAOF;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACR;AACQ;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;;AACA,YAAIlC,GAAG,GAAGZ,gBAAgB,CAACc,KAAD,CAA1B;AACAY,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBf,GAArB;AAEAF,QAAAA,OAAO,CAACE,GAAD,CAAP,CAlEE,CAoEF;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACD,OAjFD,CAiFE,OAAOmC,KAAP,EAAc;AACdrB,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBoB,KAAtB;AACD;AACF;;AACDJ,IAAAA,QAAQ;AACT,GA1FQ,EA0FN,CAACT,WAAD,CA1FM,CAAT;AA4FA,QAAML,gBAAgB,GAAG,CAAC,GAAGmB,KAAK,CAAC,GAAD,CAAT,EACtBC,MADsB,CACdC,GAAD,IAASA,GAAG,CAACC,MAAJ,CAAW1C,IAAX,CADM,EACY,EADZ,EAEtB2C,GAFsB,CAElB,CAACC,CAAD,EAAIC,KAAJ,MAAe,EAClB,GAAGD,CADe;AAElBZ,IAAAA,EAAE,EAAE;AAAEc,MAAAA,QAAQ,EAAED,KAAK,GAAG;AAApB,KAFc;AAGlBE,IAAAA,GAAG,EAAEF,KAAK,GAAG;AAHK,GAAf,CAFkB,CAAzB;AAQA5B,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCE,gBAAjC,EAzJ2B,CA2J3B;AACA;AACA;AACA;AAEA;;AACA,QAAM,CAAC4B,YAAD,EAAeC,eAAf,IAAkChF,QAAQ,CAACO,iBAAiB,EAAlB,CAAhD;AACA,QAAM;AAAE0E,IAAAA,WAAF;AAAeC,IAAAA,KAAf;AAAsBC,IAAAA;AAAtB,MAAsCJ,YAA5C,CAlK2B,CAmK3B;AACA;AACA;;AAEA,QAAMK,aAAa,GACjBH,WAAW,IAAI/C,GAAG,CAACM,MAAJ,GAAa,CAA5B,GAAgCN,GAAG,CAACM,MAAJ,GAAa2C,WAAW,CAACE,IAAzD,GAAgEH,KAAK,CAACG,IADxE;;AAGA,QAAMC,oBAAoB,GAAIC,MAAD,IAAY;AACvCvC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EADuC,CAEvC;;AAEA,UAAMuC,SAAS,GAAGhF,oBAAoB,CAAC;AAAEuE,MAAAA,YAAF;AAAgBQ,MAAAA,MAAhB;AAAwBxD,MAAAA;AAAxB,KAAD,CAAtC,CAJuC,CAKvC;;AACAiD,IAAAA,eAAe,CAACQ,SAAD,CAAf;AACD,GAPD;;AASA,QAAMC,UAAU,GAAG,MAAOC,MAAP,IAAkB;AACnC1C,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;;AACA,QAAI;AACF,YAAMiB,QAAQ,GAAG,MAAMzC,GAAG,CAACkE,MAAJ,CAAY,UAASD,MAAO,EAA5B,CAAvB,CADE,CACqD;;AACvD1C,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBiB,QAAzB,EAFE,CAGF;AACA;;AACAT,MAAAA,cAAc,CAAC,IAAD,CAAd,CALE,CAMF;;AAEAmC,MAAAA,oBAAoB;AACrB,KATD,CASE,OAAOvB,KAAP,EAAc;AACdrB,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBoB,KAAtB,EADc,CAEd;AACD;AACF,GAfD;;AAiBA,QAAMwB,YAAY,GAAG,MAAM;AACzB7C,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAmC8B,YAAY,CAACG,KAAhD;;AAEA,QAAIY,MAAM,CAACC,OAAP,CAAe,eAAf,CAAJ,EAAqC;AACnChB,MAAAA,YAAY,CAACG,KAAb,CAAmBc,OAAnB,CAA4BC,IAAD,IAAUR,UAAU,CAACQ,IAAD,CAA/C;AACD;AACF,GAND;;AAQA,QAAML,oBAAoB,GAAG,MAAM;AACjC5C,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA+B,IAAAA,eAAe,CAACzE,iBAAiB,EAAlB,CAAf;AACD,GAHD;;AAKA,QAAM2F,cAAc,GAAG,CAAC,GAAGC,IAAJ,KAAa;AAClCnD,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,GAAGkD,IAAjC;AAEA,UAAMC,OAAO,GAAG,EAAE,GAAGD;AAAL,KAAhB,CAHkC,CAIlC;;AACAnD,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBmD,OAAO,CAAC,CAAD,CAAP,CAAWrC,EAAX,CAAcc,QAAtC;AAEA,UAAMa,MAAM,GAAGU,OAAO,CAAC,CAAD,CAAP,CAAWrC,EAAX,CAAcc,QAA7B,CAPkC,CAQlC;AAEA;;AAEArD,IAAAA,KAAK,CAAC6E,OAAN,CAAcC,IAAd,CAAoB,cAAaZ,MAAO,EAAxC;AACD,GAbD;;AAeA,sBACE;AAAA,cACG3D,IAAI,iBACH,QAAC,OAAD;AAAS,MAAA,GAAG,MAAZ;AAAa,MAAA,SAAS,EAAC,UAAvB;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,MAAM,EAAE,CAAjB;AAAA,+BACE,QAAC,SAAD;AACE,UAAA,OAAO,EAAE,MAAMP,KAAK,CAAC6E,OAAN,CAAcC,IAAd,CAAoB,mBAApB,CADjB;AAEE,UAAA,IAAI,EAAC;AAFP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,GAAD;AAAK,QAAA,OAAO,EAAE,CAAd;AAAA,kBACGlB,aAAa,GAAG,CAAhB,iBACC;AAAA,qBACG,GADH,eAEE,QAAC,UAAD;AACE,YAAA,OAAO,EAAEQ,oBADX;AAEE,YAAA,QAAQ,EAAE,CAACR,aAFb;AAAA,sBAII,YAAWA,aAAa,IAAI,EAAG;AAJnC;AAAA;AAAA;AAAA;AAAA,kBAFF,eAQE,QAAC,UAAD;AAAY,YAAA,IAAI,EAAC,OAAjB;AAAyB,YAAA,OAAO,EAAES,YAAlC;AAAA,mCACE,QAAC,GAAD;AAAK,cAAA,KAAK,EAAC,QAAX;AAAoB,cAAA,OAAO,EAAE,CAA7B;AAAA,sCACE,QAAC,IAAD;AAAM,gBAAA,GAAG,EAAEU;AAAX;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cARF,EA4BGvD,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B8B,YAA9B,CA5BH,eA6BE,QAAC,KAAD;AACE,QAAA,WAAW,MADb;AAEE,QAAA,MAAM,EAAE,GAFV;AAGE,QAAA,IAAI,EAAEhD,IAHR;AAIE,QAAA,SAAS,EAAEU,SAJb;AAKE,QAAA,QAAQ,EAAEH,QALZ;AAME,QAAA,YAAY,EAAEyC,YANhB;AAOE,QAAA,mBAAmB,EAAEO,oBAPvB;AAQE,QAAA,UAAU,EAAEY,cARd;AASE,QAAA,qBAAqB,EAAE;AACrBvD,UAAAA,IADqB;AAErBJ,UAAAA,YAFqB;AAGrBiE,UAAAA,UAAU,EAAE3D,cAHS;AAIrB4D,UAAAA,UAAU,EAAEtD,gBAAgB,CAACX;AAJR,SATzB;AAeE,QAAA,MAAM,EAAEc,MAfV;AAgBE,QAAA,MAAM,EAAEI,UAhBV;AAAA,gCAsBE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,KAAK,EAAErB,KAAnC;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,EAAE,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBF,eA0BE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,UAAhB;AAA2B,UAAA,KAAK,EAAEA,KAAlC;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,EAAE,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1BF,eA8BE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,OAAhB;AAAwB,UAAA,KAAK,EAAEA,KAA/B;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,EAAE,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9BF;AAAA;AAAA;AAAA;AAAA;AAAA,cA7BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ,mBADF;AA+ED,CA/SD;;GAAMd,S;;KAAAA,S;AAgTN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport Section from \"@guestyci/foundation/legacy/Section\";\nimport AddButton from \"@guestyci/foundation/AddButton\";\n\nimport Table, { Column } from \"@guestyci/foundation/legacy/Table\";\nimport {\n  getEmptySelection,\n  getSelectionOnAction,\n} from \"@guestyci/foundation/legacy/Table/tableUtility\";\nimport Cell from \"@guestyci/foundation/legacy/Table/Cell\";\nimport HeaderCell from \"@guestyci/foundation/legacy/Table/HeaderCell\";\nimport FlatButton from \"@guestyci/foundation/legacy/FlatButton\";\n\nimport { sleep } from \"@guestyci/foundation/utils/commonUtility\";\n\nimport orderBy from \"lodash/orderBy\";\n\nimport DateCell from \"@guestyci/foundation/legacy/Table/DateCell\";\nimport DateTimeCell from \"@guestyci/foundation/legacy/Table/DateTimeCell\";\n\n// import data from '../../../__mocks__/tableData';\n\nimport Resource from \"@guestyci/agni\";\n\nimport TextField from \"@guestyci/foundation/TextField\";\nimport { Row } from \"@guestyci/foundation/Layout\";\nimport { ReactComponent as BtnTrash } from \"@guestyci/foundation/icons/BtnTrash.svg\";\nimport Icon from \"@guestyci/foundation/Icon\";\n\nimport axios from \"axios\";\nimport { after } from \"lodash\";\nimport { makeDataForTable } from \"../utils\";\n\nconst UserTable = (props) => {\n  // console.log('props:', props)\n  const { api, env, config } = Resource.create();\n  const [rawData, setRawData] = useState();\n  const [data, setData] = useState();\n\n  let counter = 1;\n  const arr = [];\n  let res1;\n  let users;\n\n  // infint-scroll-table\n  const width = 200;\n  const pageSize = 25;\n  const scrollOffset = data ? data.length : 100;\n  const [isLoading, setIsLoading] = useState(false);\n  const [skip, setSkip] = useState(0);\n\n  const handleLoadMore = useCallback(async (newSkip, newPageSize) => {\n    console.log(\"handleLoadMore\");\n\n    const addition = semiInfiniteData.slice(newSkip, newSkip + newPageSize);\n    // console.log('newPageSize:', newPageSize)\n    // console.log('newSkip:', newSkip)\n    // console.log('addition:', addition)\n    console.log(\"data: \", data);\n    setIsLoading(true);\n    await sleep(400);\n    setSkip(newSkip);\n    setData((prev) => [...(prev || []), ...addition]);\n    setIsLoading(false);\n  }, []);\n\n  // sortable table\n  const [sortBy, setSortBy] = useState();\n\n  const [userDeleted, setUserDeleted] = useState(false);\n  const handleSort = useCallback((newSortBy) => {\n    console.log(\"handleSort\");\n    setSortBy(newSortBy);\n\n    const minusPrefix = newSortBy?.startsWith(\"-\");\n    console.log(\"minusPrefix:\", minusPrefix);\n    const direction = minusPrefix ? \"desc\" : \"asc\";\n    console.log(\"direction:\", direction);\n    const id = minusPrefix ? newSortBy.substring(1) : sortBy;\n    console.log(\"id:\", id);\n\n    setData(orderBy(rawData, `${id}.date`, direction));\n\n    console.log(\"data:\", data);\n  }, []);\n\n  useEffect(() => {\n    console.log(\"useEffect\");\n\n    async function getUsers() {\n      try {\n        // const response1 = await api.get(\"/accounts/me\"); // will go to `${config.MAILER_URL}/users`\n        // console.log(\"response1:\", response1);\n\n        const response = await api.get(\"/users\"); // will go to `${config.MAILER_URL}/users`\n        console.log(\"response:\", response);\n        users = response.data.results;\n        //  console.log('users:', users)\n        // staging/production/staging5/preprod\n\n        //  r.forEach(\n        //    user=> {\n        //    console.log('user:', user)\n\n        //    arr.push({gilad:1,...user})\n        //    }\n\n        //  )\n/////////////////////////////////////////////////////////////////////////////////////////////\n        // for (let i = 0; i < users.length; i++) {\n        //   //  console.log(\"users[i]: \", users[i] );\n\n        //   const arrUser = Object.entries(users[i]);\n        //   //  console.log('arrUser:', arrUser)\n\n        //   //  firstName: {\n        //   //   children: 'John',\n        //   // },\n\n        //   const bigObj = {};\n\n        //   for (let j = 0; j < arrUser.length; j++) {\n        //     const obj = {};\n        //     // console.log(\"arrUser[j]: \",arrUser[j]);\n        //     // console.log(\"arrUser[0]: \",arrUser[j][0]);\n        //     // console.log(\"arrUser[1]: \",arrUser[j][1]);\n\n        //     obj.children = arrUser[j][1];\n        //     // console.log('obj:', obj)\n\n        //     if (arrUser[j][0] === \"_id\") {\n        //       bigObj.id = obj;\n\n        //       bigObj._id = arrUser[j][1];\n        //     } else {\n        //       bigObj[arrUser[j][0]] = obj;\n        //     }\n\n        //     // console.log('bigObj:', bigObj)\n\n        //     // arr.push( `${arrUser[j][0]}: {children: '${arrUser[j][1]}',}`)\n        //   }\n        //   // arr.push({gilad:1,...users[i]})\n        //   arr.push({ ...bigObj });\n        //   // arr.push({ _id: `${counter}`, ...bigObj });\n\n        //   counter++;\n        // }\n\n\n\n        ///////////////////////////////////////////////////////////////////////////////////////////////////////\n        //  setData(response.data.results)\n        let arr = makeDataForTable(users);\n        console.log(\"arr: \", arr);\n\n        setData(arr);\n\n        // const response1= await axios.get(\"https://api.guesty.com/api/v2/guests\",  {\n        //   auth: {\n        //     username: \"88ed11eb4b951e3e239bdfb11b4d6a0a\",\n        //     password: \"f1f74044be21d90c5d0880162994e236yy\"\n        //   }\n        // }\n\n        // );\n\n        //  res1= response1.data.results\n        //  console.log('res1:', res1)\n\n        // handleLoadMore(0, pageSize);\n      } catch (error) {\n        console.log(\"error:\", error);\n      }\n    }\n    getUsers();\n  }, [userDeleted]);\n\n  const semiInfiniteData = [...Array(300)]\n    .reduce((acc) => acc.concat(data), [])\n    .map((e, index) => ({\n      ...e,\n      id: { children: index + 1 },\n      _id: index + 1,\n    }));\n\n  console.log(\"semiInfiniteData:\", semiInfiniteData);\n\n  // useEffect(() => {\n  //   console.log('handleLoadMore')\n  //   handleLoadMore(0, pageSize);\n  // }, []);\n\n  // multi-select-table\n  const [rowSelection, setRowSelection] = useState(getEmptySelection());\n  const { allSelected, items, exceptItems } = rowSelection;\n  // console.log('exceptItems:', exceptItems);\n  // console.log('items:', items);\n  // console.log('allSelected:', allSelected);\n\n  const selectionSize =\n    allSelected && arr.length > 0 ? arr.length - exceptItems.size : items.size;\n\n  const handleRowCheckChange = (action) => {\n    console.log(\"handleRowCheckChange\");\n    // console.log('action:', action);\n\n    const selection = getSelectionOnAction({ rowSelection, action, data });\n    // console.log('selection:', selection);\n    setRowSelection(selection);\n  };\n\n  const deleteUser = async (userId) => {\n    console.log(\"deleteUser\");\n    try {\n      const response = await api.delete(`/users/${userId}`); // will go to `${config.MAILER_URL}/users`\n      console.log(\"response:\", response);\n      // const data = response.data;\n      // addToast.success('user was delete')\n      setUserDeleted(true);\n      // props.history.push('/');\n\n      handleClearSelection();\n    } catch (error) {\n      console.log(\"error:\", error);\n      // addToast.danger(\"error deleting the user\")\n    }\n  };\n\n  const handleDelete = () => {\n    console.log(\"rowSelection.items: \",rowSelection.items);\n\n    if (window.confirm(\"Are you sure?\")) {\n      rowSelection.items.forEach((item) => deleteUser(item));\n    }\n  };\n\n  const handleClearSelection = () => {\n    console.log(\"handleClearSelection\");\n    setRowSelection(getEmptySelection());\n  };\n\n  const handleRowClick = (...args) => {\n    console.log(\"handleRowClick\", ...args);\n\n    const rowData = { ...args };\n    // console.log(\"rowData:\", rowData);\n    console.log(\"rowData:\", rowData[0].id.children);\n\n    const userId = rowData[0].id.children;\n    // console.log('args:', args.id)\n\n    // props.history.push(\"www.google.com\")\n\n    props.history.push(`/user/edit/${userId}`);\n  };\n\n  return (\n    <>\n      {data && (\n        <Section col className=\"bg-white\">\n          <Section gutter={2}>\n            <AddButton\n              onClick={() => props.history.push(`/user/add/preprod`)}\n              text=\"Add User\"\n            />\n          </Section>\n\n          <Row spacing={4}>\n            {selectionSize > 0 && (\n              <>\n                {\" \"}\n                <FlatButton\n                  onClick={handleClearSelection}\n                  disabled={!selectionSize}\n                >\n                  {`Unselect ${selectionSize || \"\"}`}\n                </FlatButton>\n                <FlatButton type=\"error\" onClick={handleDelete}>\n                  <Row align=\"center\" spacing={2}>\n                    <Icon svg={BtnTrash} />\n                    <TextField> Delete</TextField>\n                  </Row>\n                </FlatButton>\n              </>\n            )}\n          </Row>\n\n          {console.log(\"rowSelection: \", rowSelection)}\n          <Table\n            multiselect\n            height={500}\n            data={data}\n            isLoading={isLoading}\n            pageSize={pageSize}\n            rowSelection={rowSelection}\n            onCheckedRowsChange={handleRowCheckChange}\n            onRowClick={handleRowClick}\n            infiniteScrollOptions={{\n              skip,\n              scrollOffset,\n              onLoadMore: handleLoadMore,\n              totalCount: semiInfiniteData.length,\n            }}\n            sortBy={sortBy}\n            onSort={handleSort}\n          >\n            {/* <Column align=\"left\" dataKey=\"id\" width={width} sortable>\n              <HeaderCell id=\"id\">Id</HeaderCell>\n              <Cell />\n            </Column> */}\n            <Column dataKey=\"firstName\" width={width}>\n              <HeaderCell id=\"firstname\">First name</HeaderCell>\n              <Cell />\n            </Column>\n            <Column dataKey=\"lastName\" width={width}>\n              <HeaderCell id=\"lastname\">Last name</HeaderCell>\n              <Cell />\n            </Column>\n            <Column dataKey=\"email\" width={width}>\n              <HeaderCell id=\"email\">Email</HeaderCell>\n              <Cell />\n            </Column>\n            {/* <Column dataKey=\"periodStartDate\" width={width} sortable>\n              <HeaderCell id=\"startdate\">Date Cell</HeaderCell>\n              <DateCell />\n            </Column>\n            <Column dataKey=\"periodEndDate\" width={width} sortable>\n              <HeaderCell id=\"enddate\">DateTime Cell</HeaderCell>\n              <DateTimeCell />\n            </Column> */}\n          </Table>\n        </Section>\n      )}\n    </>\n  );\n};\nexport default UserTable;\n"]},"metadata":{},"sourceType":"module"}