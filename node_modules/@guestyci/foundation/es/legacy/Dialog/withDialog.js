import _extends from "@babel/runtime/helpers/esm/extends";
import React, { Component } from 'react';
/**
 * Create a wrapper compose to support Dialog functionality
 * @param ComposedComponent
 * @returns {{Component}}
 */

function withDialog(ComposedComponent) {
  class DialogWrapper extends Component {
    constructor(props) {
      super(props);

      this.closeDialog = () => {
        this.setState({
          isOpen: false
        });
      };

      this.openDialog = () => {
        this.setState({
          isOpen: true
        });
      };

      this.toggleDialog = () => {
        this.setState(prevState => ({
          isOpen: !prevState.isOpen
        }));
      };

      this.state = {
        isOpen: false
      };
    }

    render() {
      const {
        isOpen
      } = this.state;
      return /*#__PURE__*/React.createElement(ComposedComponent, _extends({}, this.props, {
        isDialogOpen: isOpen,
        closeDialog: this.closeDialog,
        openDialog: this.openDialog,
        toggleDialog: this.toggleDialog,
        "data-qa": "dialog-wrapper"
      }));
    }

  }

  return DialogWrapper;
}

export default withDialog;