import React, { forwardRef } from 'react';
import cn from 'classnames';
import PropTypes from 'prop-types';
import createStyles from "../createStyles";
import TextField from "../TextField";
import Row from "../Layout/Row";
export const useStyles = createStyles(theme => ({
  statusWrapper: {
    height: 21,
    borderRadius: 3,
    padding: theme.spacer(0, 2)
  },
  status: ({
    variant
  }) => ({
    backgroundColor: theme.palette[variant]?.background || theme.palette.secondary.background,
    color: theme.palette[variant]?.text || theme.palette.text.default
  }),
  dot: ({
    variant
  }) => ({
    borderRadius: '50%',
    height: '7px',
    width: '7px',
    backgroundColor: theme.palette[variant]?.text || theme.palette.text.default
  })
}));
const StatusPill = forwardRef(function StatusPill({
  variant = 'info',
  dotIcon = false,
  className,
  children,
  jss = {}
}, ref) {
  const classes = useStyles({
    jss,
    variant
  });
  return /*#__PURE__*/React.createElement(Row, {
    align: "center",
    justify: "start",
    spacing: 1,
    className: cn(classes.statusWrapper, classes.status, className),
    ref: ref
  }, dotIcon && /*#__PURE__*/React.createElement("div", {
    className: cn(classes.dot)
  }), /*#__PURE__*/React.createElement(TextField, {
    variant: "h7",
    overflowEllipsis: true
  }, children));
});
StatusPill.displayName = 'StatusPill';
StatusPill.propTypes = {
  variant: PropTypes.oneOf(['success', 'alert', 'info', 'primary', 'secondary', 'error']),

  /** root level class name to add */
  className: PropTypes.string,

  /** text node element */
  children: PropTypes.node.isRequired,

  /** jss override object to customize the jss classes [statusWrapper] */
  jss: PropTypes.oneOfType([PropTypes.shape(), PropTypes.func]),

  /** Boolean to determine if to show dot icon to left of the children */
  dotIcon: PropTypes.bool
};
export default StatusPill;