import _toConsumableArray from "@babel/runtime/helpers/esm/toConsumableArray";
import { useMemo, useState, useContext } from 'react';
import isObject from 'lodash/isObject';
import LocalizationContext from "../LocalizationProvider/LocalizationContext";
import { intl } from "../utils/i18nUtility";

var getFormattedTranslations = function getFormattedTranslations() {
  var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  return items.map(function (item) {
    var defaultMessage = item.d || item.defaultMessage;
    return intl.get(item.id, item.variables, defaultMessage).d(defaultMessage);
  });
};

var useTranslations = function useTranslations() {
  var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  var deps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

  var _useContext = useContext(LocalizationContext),
      language = _useContext.language;

  return useMemo(function () {
    var isMultiTranslate = isObject(items[0]);
    return isMultiTranslate ? getFormattedTranslations(items) : [intl.get(items[0]).d(items[1])];
  }, [language].concat(_toConsumableArray(deps)));
};

export default useTranslations;