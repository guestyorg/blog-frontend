{"ast":null,"code":"var _jsxFileName = \"/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/Account/AccountAddScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NavLink, useParams } from \"react-router-dom\";\nimport Resource from \"@guestyci/agni\";\nimport RaisedButton from \"@guestyci/foundation/RaisedButton\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport Form from \"@guestyci/foundation/Form\";\nimport Input from \"@guestyci/foundation/Input\";\nimport DateRangePicker from \"@guestyci/foundation/DatePicker/DateRangePicker\";\nimport SingleDatePicker from \"@guestyci/foundation/DatePicker/SingleDatePicker\";\nimport NumberPicker from \"@guestyci/foundation/NumberPicker\";\nimport EmailInput from \"@guestyci/foundation/EmailInput\";\nimport Dropdown, { Option } from \"@guestyci/foundation/Dropdown\";\nimport TextField from \"@guestyci/foundation/TextField\";\nimport TextArea from \"@guestyci/foundation/TextArea\";\nimport Col from \"@guestyci/foundation/Layout/Col\";\nimport Section from \"@guestyci/foundation/Layout/Section\";\nimport DurationPicker from \"@guestyci/foundation/DurationPicker\";\nimport TimePicker from \"@guestyci/foundation/TimePicker\";\nimport FormField from \"@guestyci/foundation/FormField\";\nimport FormGroup from \"@guestyci/foundation/FormGroup\";\nimport { FormProvider } from \"@guestyci/foundation/enums\"; // import { email } from '@guestyci/foundation/validators';\n\nimport createStyles from \"@guestyci/foundation/createStyles\";\nimport ErrorBanner from \"@guestyci/foundation/legacy/Table/ErrorBanner\";\nimport { useToast } from \"@guestyci/foundation/Toast\";\nimport { register } from \"../../actions/accountActions\";\nimport StatusIndication from \"@guestyci/foundation/StatusIndication\";\nimport Spinner from \"@guestyci/foundation/Spinner\";\nimport { updateUser } from \"../../actions/userActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = createStyles(theme => ({\n  app: {\n    backgroundColor: \"white\"\n  }\n}));\nexport default function AccountAddScreen(props) {\n  _s();\n\n  console.log(\"email\");\n  const classes = useStyles();\n  const {\n    addToast\n  } = useToast();\n  const {\n    api,\n    env,\n    config\n  } = Resource.create(); // const { id } = useParams();\n  // console.log(\"id:\", id);\n  /// states\n\n  const [name, setName] = useState();\n  const [email, setEmail] = useState(); // const [password, setPassword] = useState();\n\n  const errorMessage = \"There was a problem add the account.\";\n  const [error, setError] = useState(false); ///selectors\n\n  const accountRegister = useSelector(state => state.accountRegister);\n  const {\n    accountInfo,\n    loading,\n    error: errorRegister\n  } = accountRegister;\n  const accountSignin = useSelector(state => state.accountSignin);\n  const {\n    accountInfo: accountInfoSignIn,\n    loading: loadingSignIn,\n    error: errorSignIn\n  } = accountSignin; // console.log(\"accountSignin:\", accountSignin);\n\n  let accountId = \"\";\n\n  if (accountInfoSignIn) {\n    accountId = accountInfoSignIn._id;\n  }\n\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo,\n    loading: loadingUserSignIn,\n    error: errorUserSignIn\n  } = userSignin;\n  console.log(\"userSignin:\", userSignin);\n  let userId = \"\";\n\n  if (userSignin) {\n    userId = userInfo._id;\n    console.log(\"userId:\", userId);\n  } /// effects\n\n\n  useEffect(() => {\n    if (accountInfoSignIn) {\n      addToast.success(`account ${name} was add successfully`);\n      props.history.push(\"/\");\n    } else if (errorRegister) {\n      addToast.danger(\"error adding the account\");\n      setError(true);\n    }\n  }, [props.history, accountInfo, accountInfoSignIn]); //dispatchers\n\n  const dispatch = useDispatch();\n  console.log(\"userInfo.firstName:\", userInfo.firstName);\n  console.log(\"userInfo.email:\", userInfo.email);\n\n  const onSubmit = e => {\n    // e.preventDefault();\n    console.log(\"onSubmit\"); // console.log(name);\n    // console.log(email);\n\n    dispatch(register(name, email, userInfo.firstName, userInfo.email, userId)); // dispatch(updateUser({ id, accountId }));\n    // console.log(password);\n    // async function createAccount() {\n    //   try {\n    //     const response = await api.post(`/accounts`, {\n    //       name,\n    //       email,\n    //       // password,\n    //     }); // will go to `${config.MAILER_URL}/accounts`\n    //     console.log(\"response:\", response);\n    //     // const data = response.data;]\n    //     if (response.status === 200) {\n    //       addToast.success(`account ${name} was add successfully`);\n    //       props.history.push(\"/\");\n    //     } else {\n    //       console.log(\"response.status: \", response.status);\n    //     }\n    //   } catch (error) {\n    //     console.log(\"error:\", error);\n    //     addToast.danger(\"error adding the account\");\n    //     setError(true);\n    //     // setTimeout(() => {\n    //     //   setError(false);\n    //     // }, 3000);\n    //   }\n    // }\n    // createAccount();\n    // props.history.push(\"/\");\n  };\n\n  const closeError = () => {\n    setError(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    className: classes.app,\n    justify: \"center\",\n    \"data-qa\": \"account-add-screen\",\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      spacing: 6,\n      span: 6,\n      children: [loadingUserSignIn && /*#__PURE__*/_jsxDEV(Spinner, {\n        size: 80,\n        strokeWidth: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 31\n      }, this), loadingSignIn && /*#__PURE__*/_jsxDEV(Spinner, {\n        size: 80,\n        strokeWidth: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 27\n      }, this), errorUserSignIn && /*#__PURE__*/_jsxDEV(StatusIndication, {\n        variant: \"danger\",\n        text: \"User must be sign in to create account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), errorSignIn && /*#__PURE__*/_jsxDEV(StatusIndication, {\n        variant: \"danger\",\n        text: \"error in creating a new account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), userInfo && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"h2\",\n          children: [\"Add Account:\", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FinalForm, {\n          onSubmit: onSubmit,\n          initialValues: {},\n          render: ({\n            handleSubmit\n          }) => /*#__PURE__*/_jsxDEV(Form, {\n            title: \"Create Account\",\n            onSubmit: handleSubmit,\n            provider: FormProvider.Final,\n            fieldInstance: Field,\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                children: [/*#__PURE__*/_jsxDEV(FormField, {\n                  label: \"Account Name\",\n                  name: \"name\" //   info=\"Drama, Action etc.\"\n                  ,\n                  children: /*#__PURE__*/_jsxDEV(Input, {\n                    name: \"name\",\n                    value: name,\n                    placeholder: name,\n                    onChange: e => setName(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(FormField, {\n                  label: \"Email\",\n                  name: \"email\",\n                  children: /*#__PURE__*/_jsxDEV(EmailInput, {\n                    name: \"email\",\n                    value: email,\n                    placeholder: email // validate={[email]}\n                    ,\n                    onChange: e => setEmail(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(RaisedButton, {\n                type: \"submit\",\n                children: \"Create Account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 21\n              }, this), error && /*#__PURE__*/_jsxDEV(ErrorBanner, {\n                show: error,\n                errorMessage: errorMessage,\n                onClick: closeError,\n                actionText: \"Try again\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"/account/signin\" // activeStyle={activeStyle}\n              ,\n              style: {\n                marginLeft: \"20px\"\n              },\n              exact: true,\n              children: \"signin exist account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AccountAddScreen, \"xWJvzNv86ipOoG6OzbAogXEvjfU=\", false, function () {\n  return [useStyles, useToast, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = AccountAddScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountAddScreen\");","map":{"version":3,"sources":["/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/Account/AccountAddScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","NavLink","useParams","Resource","RaisedButton","Form","FinalForm","Field","Input","DateRangePicker","SingleDatePicker","NumberPicker","EmailInput","Dropdown","Option","TextField","TextArea","Col","Section","DurationPicker","TimePicker","FormField","FormGroup","FormProvider","createStyles","ErrorBanner","useToast","register","StatusIndication","Spinner","updateUser","useStyles","theme","app","backgroundColor","AccountAddScreen","props","console","log","classes","addToast","api","env","config","create","name","setName","email","setEmail","errorMessage","error","setError","accountRegister","state","accountInfo","loading","errorRegister","accountSignin","accountInfoSignIn","loadingSignIn","errorSignIn","accountId","_id","userSignin","userInfo","loadingUserSignIn","errorUserSignIn","userId","success","history","push","danger","dispatch","firstName","onSubmit","e","closeError","handleSubmit","Final","target","value","marginLeft"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { NavLink, useParams } from \"react-router-dom\";\nimport Resource from \"@guestyci/agni\";\n\nimport RaisedButton from \"@guestyci/foundation/RaisedButton\";\n\nimport { Form as FinalForm, Field } from \"react-final-form\";\n\nimport Form from \"@guestyci/foundation/Form\";\nimport Input from \"@guestyci/foundation/Input\";\nimport DateRangePicker from \"@guestyci/foundation/DatePicker/DateRangePicker\";\nimport SingleDatePicker from \"@guestyci/foundation/DatePicker/SingleDatePicker\";\nimport NumberPicker from \"@guestyci/foundation/NumberPicker\";\nimport EmailInput from \"@guestyci/foundation/EmailInput\";\nimport Dropdown, { Option } from \"@guestyci/foundation/Dropdown\";\nimport TextField from \"@guestyci/foundation/TextField\";\nimport TextArea from \"@guestyci/foundation/TextArea\";\nimport Col from \"@guestyci/foundation/Layout/Col\";\nimport Section from \"@guestyci/foundation/Layout/Section\";\nimport DurationPicker from \"@guestyci/foundation/DurationPicker\";\nimport TimePicker from \"@guestyci/foundation/TimePicker\";\n\nimport FormField from \"@guestyci/foundation/FormField\";\nimport FormGroup from \"@guestyci/foundation/FormGroup\";\nimport { FormProvider } from \"@guestyci/foundation/enums\";\n// import { email } from '@guestyci/foundation/validators';\nimport createStyles from \"@guestyci/foundation/createStyles\";\n\nimport ErrorBanner from \"@guestyci/foundation/legacy/Table/ErrorBanner\";\n\nimport { useToast } from \"@guestyci/foundation/Toast\";\nimport { register } from \"../../actions/accountActions\";\nimport StatusIndication from \"@guestyci/foundation/StatusIndication\";\nimport Spinner from \"@guestyci/foundation/Spinner\";\nimport { updateUser } from \"../../actions/userActions\";\n\nconst useStyles = createStyles((theme) => ({\n  app: {\n    backgroundColor: \"white\",\n  },\n}));\n\nexport default function AccountAddScreen(props) {\n  console.log(\"email\");\n\n  const classes = useStyles();\n  const { addToast } = useToast();\n\n  const { api, env, config } = Resource.create();\n\n  // const { id } = useParams();\n  // console.log(\"id:\", id);\n\n  /// states\n  const [name, setName] = useState();\n\n  const [email, setEmail] = useState();\n\n  // const [password, setPassword] = useState();\n\n  const errorMessage = \"There was a problem add the account.\";\n\n  const [error, setError] = useState(false);\n\n  ///selectors\n\n  const accountRegister = useSelector((state) => state.accountRegister);\n\n  const { accountInfo, loading, error: errorRegister } = accountRegister;\n\n  const accountSignin = useSelector((state) => state.accountSignin);\n  const {\n    accountInfo: accountInfoSignIn,\n    loading: loadingSignIn,\n    error: errorSignIn,\n  } = accountSignin;\n  // console.log(\"accountSignin:\", accountSignin);\n  let accountId = \"\";\n\n  if (accountInfoSignIn) {\n    accountId = accountInfoSignIn._id;\n  }\n\n  const userSignin = useSelector((state) => state.userSignin);\n  const {\n    userInfo,\n    loading: loadingUserSignIn,\n    error: errorUserSignIn,\n  } = userSignin;\n  console.log(\"userSignin:\", userSignin);\n\n  let userId = \"\";\n  if (userSignin) {\n    userId = userInfo._id;\n    console.log(\"userId:\", userId);\n  }\n\n  /// effects\n\n  useEffect(() => {\n    if (accountInfoSignIn) {\n      addToast.success(`account ${name} was add successfully`);\n      props.history.push(\"/\");\n    } else if (errorRegister) {\n      addToast.danger(\"error adding the account\");\n\n      setError(true);\n    }\n  }, [props.history, accountInfo, accountInfoSignIn]);\n\n  //dispatchers\n\n  const dispatch = useDispatch();\n  console.log(\"userInfo.firstName:\", userInfo.firstName);\n  console.log(\"userInfo.email:\", userInfo.email);\n  const onSubmit = (e) => {\n    // e.preventDefault();\n\n    console.log(\"onSubmit\");\n    // console.log(name);\n    // console.log(email);\n\n    dispatch(register(name, email, userInfo.firstName, userInfo.email, userId));\n    // dispatch(updateUser({ id, accountId }));\n\n    // console.log(password);\n\n    // async function createAccount() {\n    //   try {\n    //     const response = await api.post(`/accounts`, {\n    //       name,\n    //       email,\n    //       // password,\n    //     }); // will go to `${config.MAILER_URL}/accounts`\n    //     console.log(\"response:\", response);\n    //     // const data = response.data;]\n\n    //     if (response.status === 200) {\n    //       addToast.success(`account ${name} was add successfully`);\n    //       props.history.push(\"/\");\n    //     } else {\n    //       console.log(\"response.status: \", response.status);\n    //     }\n    //   } catch (error) {\n    //     console.log(\"error:\", error);\n    //     addToast.danger(\"error adding the account\");\n\n    //     setError(true);\n\n    //     // setTimeout(() => {\n    //     //   setError(false);\n    //     // }, 3000);\n    //   }\n    // }\n    // createAccount();\n\n    // props.history.push(\"/\");\n  };\n\n  const closeError = () => {\n    setError(false);\n  };\n\n  return (\n    <Section className={classes.app} justify=\"center\">\n      <Col spacing={6} span={6}>\n        {loadingUserSignIn && <Spinner size={80} strokeWidth={6} />}\n        {loadingSignIn && <Spinner size={80} strokeWidth={6} />}\n\n        {errorUserSignIn && (\n          <StatusIndication\n            variant=\"danger\"\n            text=\"User must be sign in to create account\"\n          />\n        )}\n\n        {errorSignIn && (\n          <StatusIndication\n            variant=\"danger\"\n            text=\"error in creating a new account\"\n          />\n        )}\n\n        {userInfo && (\n          <>\n            {\" \"}\n            <TextField variant=\"h2\">\n              Add Account:\n              {name}\n            </TextField>\n            <FinalForm\n              onSubmit={onSubmit}\n              initialValues={{}}\n              render={({ handleSubmit }) => (\n                <Form\n                  title=\"Create Account\"\n                  onSubmit={handleSubmit}\n                  provider={FormProvider.Final}\n                  fieldInstance={Field}\n                >\n                  <FormGroup>\n                    <FormGroup>\n                      <FormField\n                        label=\"Account Name\"\n                        name=\"name\"\n                        //   info=\"Drama, Action etc.\"\n                      >\n                        <Input\n                          name=\"name\"\n                          value={name}\n                          placeholder={name}\n                          onChange={(e) => setName(e.target.value)}\n                        />\n                      </FormField>\n                      <FormField label=\"Email\" name=\"email\">\n                        <EmailInput\n                          name=\"email\"\n                          value={email}\n                          placeholder={email}\n                          // validate={[email]}\n                          onChange={(e) => setEmail(e.target.value)}\n                        />\n                      </FormField>\n\n                      {/* \n                  <FormField label=\"Password\" name=\"password\">\n                    <Input\n                      name=\"password\"\n                      type={password}\n                      value={password}\n                      placeholder={password}\n                      validate={[password]}\n                      onChange={(e) => setPassword(e.target.value)}\n                    />\n                  </FormField> */}\n                    </FormGroup>\n                    {/* <FormField label=\"Country\" info=\"e.g (US)\" name=\"country\">\n                    <Input />\n                  </FormField>\n                  <FormField label=\"Runtime\" name=\"runtime\">\n                    <Input />\n                  </FormField>\n                  <FormField label=\"Contact\" name=\"contact\">\n                    <Input />\n                  </FormField>\n                  <FormField label=\"Biography\" name=\"bigraphy\" required>\n                    <TextArea />\n                  </FormField>\n                  <FormField label=\"Age\" name=\"age\" required>\n                    <NumberPicker />\n                  </FormField> */}\n                    {/* <FormField\n                  label=\"Email\"\n                  name=\"email\"\n                  validate={[email]}\n                  required\n                >\n                  <EmailInput\n                    name=\"email\"\n                    value={email}\n                    placeholder={email}\n                  />\n                </FormField> */}\n                    {/* <FormField label=\"Gender\" name=\"gender\" required>\n                    <Dropdown>\n                      {['Male', 'Female'].map((gender) => (\n                        <Option value={gender} key={gender}>\n                          {gender}\n                        </Option>\n                      ))}\n                    </Dropdown>\n                  </FormField>\n                  <FormField\n                    label=\"Single Date Picker\"\n                    name=\"singleDatePicker\"\n                    required\n                  >\n                    <SingleDatePicker />\n                  </FormField>\n                  <FormField\n                    label=\"Date Range Picker\"\n                    name=\"dateRangePicker\"\n                    required\n                  >\n                    <DateRangePicker />\n                  </FormField>\n                  <FormField label=\"Time picker\" name=\"time\" required>\n                    <TimePicker />\n                  </FormField>\n                  <FormField label=\"Duration picker\" name=\"duration\" required>\n                    <DurationPicker />\n                  </FormField> */}\n                    <RaisedButton type=\"submit\">Create Account</RaisedButton>\n\n                    {error && (\n                      <ErrorBanner\n                        show={error}\n                        errorMessage={errorMessage}\n                        onClick={closeError}\n                        actionText=\"Try again\"\n                      />\n                    )}\n                  </FormGroup>\n\n                  <NavLink\n                    to=\"/account/signin\"\n                    // activeStyle={activeStyle}\n                    style={{ marginLeft: \"20px\" }}\n                    exact\n                  >\n                    signin exist account\n                  </NavLink>\n                </Form>\n              )}\n            />\n          </>\n        )}\n      </Col>\n    </Section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}