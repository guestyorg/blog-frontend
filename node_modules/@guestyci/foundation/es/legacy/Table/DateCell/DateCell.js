import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
import React from 'react';
import { string, bool, oneOf, shape } from 'prop-types';
import cn from 'classnames';
import FormattedDate from '@guestyci/localize/FormattedDate';
import { MomentFormatTypes } from '@guestyci/localize/utils/localeData';
import TextCell from "../TextCell";

const DateCell = (_ref) => {
  let {
    date,
    format,
    isLoading,
    className,
    style
  } = _ref,
      rest = _objectWithoutPropertiesLoose(_ref, ["date", "format", "isLoading", "className", "style"]);

  return /*#__PURE__*/React.createElement(TextCell, _extends({}, rest, {
    isLoading: isLoading,
    className: cn('date-cell', className),
    style: style,
    "data-qa": "date-cell"
  }), date && /*#__PURE__*/React.createElement(FormattedDate, {
    date: date,
    format: format
  }));
};

DateCell.propTypes = {
  /** date value in ISO format */
  date: string,

  /** indicator that cell is yet to receive data */
  isLoading: bool,

  /** Date format to custom show moment (shortDate, date, fullDate, mmmm yyyyy, mmm yyyyy) */
  format: oneOf([MomentFormatTypes.ShortDate, MomentFormatTypes.Date, MomentFormatTypes.FullDate, MomentFormatTypes.MMMM_YYYY, MomentFormatTypes.MMM_YYYY]),

  /** class name of cell */
  className: string,

  /** styles applied to a cell */
  style: shape()
};
DateCell.defaultProps = {
  date: null,
  format: MomentFormatTypes.Date,
  isLoading: false
};
export default DateCell;
export { MomentFormatTypes };