"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _Collapse = _interopRequireDefault(require("../Collapse/Collapse"));

var _AccordionTitle = _interopRequireDefault(require("./AccordionTitle"));

function _createSuper(Derived) { return function () { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var Accordion = /*#__PURE__*/function (_PureComponent) {
  (0, _inherits2["default"])(Accordion, _PureComponent);

  var _super = _createSuper(Accordion);

  function Accordion(props) {
    var _this;

    (0, _classCallCheck2["default"])(this, Accordion);
    _this = _super.call(this, props);

    _this.handleTitleClick = function () {
      _this.setState(function (prevState) {
        return {
          isOpen: !prevState.isOpen
        };
      }, function () {
        var onChange = _this.props.onChange;
        var isOpen = _this.state.isOpen;

        if (onChange) {
          onChange(isOpen);
        }
      });
    };

    _this.state = {
      isOpen: props.isOpen
    };
    return _this;
  }

  (0, _createClass2["default"])(Accordion, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, prevState) {
      this.getIsOpen(prevProps, prevState);
    }
  }, {
    key: "getIsOpen",
    value: function getIsOpen(prevProps) {
      var isOpen = this.props.isOpen;
      var stateOpen = this.state.isOpen;

      if (isOpen !== prevProps.isOpen && isOpen !== stateOpen) {
        this.setState({
          isOpen: isOpen
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          children = _this$props.children,
          title = _this$props.title,
          hasBorderBottom = _this$props.hasBorderBottom;
      var isOpen = this.state.isOpen;
      return /*#__PURE__*/_react["default"].createElement("div", {
        className: (0, _classnames["default"])('flex-center d-flex-fill flex-column border-gray-light', {
          'pb-6': isOpen
        }, {
          'bb-1': hasBorderBottom
        }),
        "data-qa": "accordion"
      }, /*#__PURE__*/_react["default"].createElement(_AccordionTitle["default"], {
        isOpen: isOpen,
        onClick: this.handleTitleClick,
        title: title
      }), /*#__PURE__*/_react["default"].createElement(_Collapse["default"], {
        isOpen: isOpen
      }, children));
    }
  }]);
  return Accordion;
}(_react.PureComponent);

Accordion.defaultProps = {
  onChange: null,
  isOpen: false,
  hasBorderBottom: true
};
Accordion.propTypes = {
  /** The accordion component children */
  children: _propTypes["default"].oneOfType([_propTypes["default"].arrayOf(_propTypes["default"].node), _propTypes["default"].node]).isRequired,

  /** The accordion title element */
  title: _propTypes["default"].node.isRequired,

  /** CallBack for on click (for controlled mode ) */
  onChange: _propTypes["default"].func,

  /** Indicator whether or not to open accordion (for controlled mode ) */
  isOpen: _propTypes["default"].bool,

  /** Indicator whether or not to have bottom border accordion */
  hasBorderBottom: _propTypes["default"].bool
};
var _default = Accordion;
exports["default"] = _default;