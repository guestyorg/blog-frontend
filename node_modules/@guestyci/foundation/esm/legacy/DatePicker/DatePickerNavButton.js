import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import React from 'react';
import withStyle from 'react-jss';
import cn from 'classnames';
import PropTypes from 'prop-types';
import noop from 'lodash/noop';
import ActionButton from "../ActionButton/index";
import { DatePickerType } from "../../enums/enums";
var styles = {
  button: function button(_ref) {
    var sm = _ref.sm,
        type = _ref.type;
    return {
      position: 'absolute',
      top: '20px',
      width: type === DatePickerType.Single || sm ? 40 : undefined,
      height: type === DatePickerType.Single || sm ? 40 : undefined
    };
  },
  nextButton: {
    right: '22px'
  },
  prevButton: {
    left: '22px'
  }
};

var DatePickerNavButton = function DatePickerNavButton(_ref2) {
  var _cn;

  var direction = _ref2.direction,
      classes = _ref2.classes;
  return /*#__PURE__*/React.createElement(ActionButton, {
    onClick: noop,
    icon: "Btn".concat(direction, "Small"),
    iconHeight: 11,
    iconWidth: 6,
    className: cn(classes.button, (_cn = {}, _defineProperty(_cn, classes.nextButton, direction === 'Right'), _defineProperty(_cn, classes.prevButton, direction === 'Left'), _cn)),
    "data-qa": "date-picker-nav-button"
  });
};

DatePickerNavButton.defaultProps = {
  sm: false
};
DatePickerNavButton.propTypes = {
  direction: PropTypes.oneOf(['Right', 'Left']).isRequired,
  sm: PropTypes.bool,
  type: PropTypes.oneOf([DatePickerType.Single, DatePickerType.Range]).isRequired
};
export default withStyle(styles)(DatePickerNavButton);