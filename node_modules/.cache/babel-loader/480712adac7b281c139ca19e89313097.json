{"ast":null,"code":"var _jsxFileName = \"/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/Blog/BlogListScreen/BlogListScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteBlog, listBlogs } from \"../../../actions/blogActions\";\nimport { BLOG_DETAILS_RESET } from \"../../../constants/blogConstants\";\nimport Section from \"@guestyci/foundation/legacy/Section\";\nimport AddButton from \"@guestyci/foundation/AddButton\";\nimport Table, { Column } from \"@guestyci/foundation/legacy/Table\";\nimport { getEmptySelection, getSelectionOnAction } from \"@guestyci/foundation/legacy/Table/tableUtility\";\nimport Cell from \"@guestyci/foundation/legacy/Table/Cell\";\nimport HeaderCell from \"@guestyci/foundation/legacy/Table/HeaderCell\";\nimport FlatButton from \"@guestyci/foundation/legacy/FlatButton\";\nimport { sleep } from \"@guestyci/foundation/utils/commonUtility\";\nimport orderBy from \"lodash/orderBy\";\nimport DateCell from \"@guestyci/foundation/legacy/Table/DateCell\";\nimport DateTimeCell from \"@guestyci/foundation/legacy/Table/DateTimeCell\"; // import data from '../../../__mocks__/tableData';\n\nimport Resource from \"@guestyci/agni\";\nimport TextField from \"@guestyci/foundation/TextField\";\nimport { Row } from \"@guestyci/foundation/Layout\";\nimport { ReactComponent as BtnTrash } from \"@svgr/webpack?-svgo,+titleProp,+ref!@guestyci/foundation/icons/BtnTrash.svg\";\nimport Icon from \"@guestyci/foundation/Icon\";\nimport Spinner from \"@guestyci/foundation/Spinner\";\nimport StatusIndication from \"@guestyci/foundation/StatusIndication\";\nimport { NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function BlogListScreen(props) {\n  _s();\n\n  const [rawData, setRawData] = useState(); // const [data, setData] = useState();\n\n  let data;\n  const [blogDeleted, setBlogDeleted] = useState(false);\n  const [rowSelection, setRowSelection] = useState(getEmptySelection());\n  const {\n    allSelected,\n    items,\n    exceptItems\n  } = rowSelection;\n  const width = 200; // const pageSize = 25;\n  // const scrollOffset = data ? data.length : 100;\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [skip, setSkip] = useState(0);\n\n  const blogList = useSelector(state => state.blogList);\n  const {\n    loading,\n    error,\n    blogs\n  } = blogList; // console.log(\"blogs:\", blogs);\n\n  data = blogs;\n  const blogDelete = useSelector(state => state.blogDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete\n  } = blogDelete;\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo,\n    loadingAccount,\n    errorAccount\n  } = userSignin;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(listBlogs()); // dispatch({\n    //   type: BLOG_DETAILS_RESET,\n    // });\n  }, [dispatch, successDelete]); // const deleteHandler = (blog) => {\n  //   console.log(\"blog:\", blog);\n  //   if (window.confirm(\"Are you sure?\")) {\n  //     dispatch(deleteBlog(blog._id));\n  //   }\n  // };\n  // const classes = useStyles();\n\n  const selectionSize = allSelected && data.length > 0 ? data.length - exceptItems.size : items.size;\n\n  const handleRowCheckChange = action => {\n    console.log(\"handleRowCheckChange\"); // console.log('action:', action);\n\n    const selection = getSelectionOnAction({\n      rowSelection,\n      action,\n      data\n    });\n    console.log(\"rowSelection:\", rowSelection);\n    console.log(\"action:\", action);\n    console.log(\"data:\", data); // console.log('selection:', selection);\n\n    setRowSelection(selection);\n  };\n\n  const deleteBlogHandler = async blogId => {\n    console.log(\"deleteBlogHandler\");\n\n    try {\n      // const response = await api.delete(`/blogs/${blogId}`); // will go to `${config.MAILER_URL}/blogs`\n      // console.log('response:', response);\n      // const data = response.data;\n      // addToast.success('blog was delete')\n      // props.history.push('/');\n      dispatch(deleteBlog(blogId));\n      setBlogDeleted(true);\n      handleClearSelection();\n    } catch (error) {\n      console.log(\"error:\", error); // addToast.danger(\"error deleting the blog\")\n    }\n  };\n\n  const handleDelete = () => {\n    console.log(\"rowSelection.items: \", rowSelection.items);\n\n    if (window.confirm(\"Are you sure?\")) {\n      rowSelection.items.forEach(item => deleteBlogHandler(item));\n    }\n  };\n\n  const handleClearSelection = () => {\n    console.log(\"handleClearSelection\");\n    setRowSelection(getEmptySelection());\n  };\n\n  const handleRowClick = (...args) => {\n    console.log(\"handleRowClick\", ...args);\n    const rowData = { ...args\n    };\n    console.log(\"rowData:\", rowData);\n    console.log(\"rowData:\", rowData[0].id.children);\n    const blogId = rowData[0].id.children; // console.log('args:', args.id)\n    // props.history.push(\"www.google.com\")\n\n    props.history.push(`/blog/edit/${blogId}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading && /*#__PURE__*/_jsxDEV(Spinner, {\n      size: 80,\n      strokeWidth: 6\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(StatusIndication, {\n      variant: \"danger\",\n      text: \"error getting the data \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this), data && /*#__PURE__*/_jsxDEV(Section, {\n      col: true,\n      className: \"bg-white\",\n      children: [userInfo ? /*#__PURE__*/_jsxDEV(Section, {\n        gutter: 2,\n        children: /*#__PURE__*/_jsxDEV(AddButton, {\n          onClick: () => props.history.push(`/blog/add`),\n          text: \"Add Blog\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/user/signin\" // activeStyle={activeStyle}\n        ,\n        style: {\n          marginLeft: \"20px\"\n        },\n        exact: true,\n        children: \"sign in to create a new blog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        spacing: 4,\n        children: [/*#__PURE__*/_jsxDEV(FlatButton, {\n          onClick: handleClearSelection,\n          disabled: !selectionSize,\n          children: `Unselect ${selectionSize || \"\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), selectionSize > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(FlatButton, {\n            type: \"error\",\n            onClick: handleDelete,\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              align: \"center\",\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Icon, {\n                svg: BtnTrash\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                children: \" Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 17\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this), console.log(\"rowSelection: \", rowSelection), /*#__PURE__*/_jsxDEV(Table, {\n        multiselect: true,\n        height: 500,\n        data: blogs // isLoading={isLoading}\n        // pageSize={pageSize}\n        ,\n        rowSelection: rowSelection,\n        onCheckedRowsChange: handleRowCheckChange,\n        onRowClick: handleRowClick // infiniteScrollOptions={{\n        //   skip,\n        //   scrollOffset,\n        //   onLoadMore: handleLoadMore,\n        //   totalCount: semiInfiniteData.length,\n        // }}\n        // sortBy={sortBy}\n        // onSort={handleSort}\n        ,\n        children: [/*#__PURE__*/_jsxDEV(Column, {\n          align: \"left\",\n          dataKey: \"id\",\n          width: width,\n          sortable: true,\n          children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n            id: \"id\",\n            children: \"Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataKey: \"title\",\n          width: width,\n          children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n            id: \"title\",\n            children: \"Blog Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataKey: \"admin\",\n          width: width,\n          children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n            id: \"admin\",\n            children: \"Blog Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataKey: \"email\",\n          width: width,\n          children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n            id: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataKey: \"account\",\n          width: width,\n          children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n            id: \"account\",\n            children: \"account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataKey: \"createdAt\",\n          width: width,\n          children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n            id: \"createdAt\",\n            children: \"created At\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataKey: \"updatedAt\",\n          width: width,\n          children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n            id: \"updatedAt\",\n            children: \"updated At\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(BlogListScreen, \"AHKEJSGKjlBj6MpEPij+BUoJejI=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = BlogListScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogListScreen\");","map":{"version":3,"sources":["/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/Blog/BlogListScreen/BlogListScreen.js"],"names":["React","useState","useEffect","useCallback","useDispatch","useSelector","deleteBlog","listBlogs","BLOG_DETAILS_RESET","Section","AddButton","Table","Column","getEmptySelection","getSelectionOnAction","Cell","HeaderCell","FlatButton","sleep","orderBy","DateCell","DateTimeCell","Resource","TextField","Row","Icon","Spinner","StatusIndication","NavLink","BlogListScreen","props","rawData","setRawData","data","blogDeleted","setBlogDeleted","rowSelection","setRowSelection","allSelected","items","exceptItems","width","blogList","state","loading","error","blogs","blogDelete","loadingDelete","errorDelete","success","successDelete","userSignin","userInfo","loadingAccount","errorAccount","dispatch","selectionSize","length","size","handleRowCheckChange","action","console","log","selection","deleteBlogHandler","blogId","handleClearSelection","handleDelete","window","confirm","forEach","item","handleRowClick","args","rowData","id","children","history","push","marginLeft","BtnTrash"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteBlog, listBlogs } from \"../../../actions/blogActions\";\nimport { BLOG_DETAILS_RESET } from \"../../../constants/blogConstants\";\n\nimport Section from \"@guestyci/foundation/legacy/Section\";\nimport AddButton from \"@guestyci/foundation/AddButton\";\n\nimport Table, { Column } from \"@guestyci/foundation/legacy/Table\";\nimport {\n  getEmptySelection,\n  getSelectionOnAction,\n} from \"@guestyci/foundation/legacy/Table/tableUtility\";\nimport Cell from \"@guestyci/foundation/legacy/Table/Cell\";\nimport HeaderCell from \"@guestyci/foundation/legacy/Table/HeaderCell\";\nimport FlatButton from \"@guestyci/foundation/legacy/FlatButton\";\n\nimport { sleep } from \"@guestyci/foundation/utils/commonUtility\";\n\nimport orderBy from \"lodash/orderBy\";\n\nimport DateCell from \"@guestyci/foundation/legacy/Table/DateCell\";\nimport DateTimeCell from \"@guestyci/foundation/legacy/Table/DateTimeCell\";\n\n// import data from '../../../__mocks__/tableData';\n\nimport Resource from \"@guestyci/agni\";\n\nimport TextField from \"@guestyci/foundation/TextField\";\nimport { Row } from \"@guestyci/foundation/Layout\";\nimport { ReactComponent as BtnTrash } from \"@guestyci/foundation/icons/BtnTrash.svg\";\nimport Icon from \"@guestyci/foundation/Icon\";\n\nimport Spinner from \"@guestyci/foundation/Spinner\";\nimport StatusIndication from \"@guestyci/foundation/StatusIndication\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default function BlogListScreen(props) {\n  const [rawData, setRawData] = useState();\n  // const [data, setData] = useState();\n\n  let data;\n\n  const [blogDeleted, setBlogDeleted] = useState(false);\n\n  const [rowSelection, setRowSelection] = useState(getEmptySelection());\n  const { allSelected, items, exceptItems } = rowSelection;\n\n  const width = 200;\n  // const pageSize = 25;\n  // const scrollOffset = data ? data.length : 100;\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [skip, setSkip] = useState(0);\n  const blogList = useSelector((state) => state.blogList);\n  const { loading, error, blogs } = blogList;\n  // console.log(\"blogs:\", blogs);\n  data = blogs;\n  const blogDelete = useSelector((state) => state.blogDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = blogDelete;\n\n  const userSignin = useSelector((state) => state.userSignin);\n  const { userInfo, loadingAccount, errorAccount } = userSignin;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(listBlogs());\n    // dispatch({\n    //   type: BLOG_DETAILS_RESET,\n    // });\n  }, [dispatch, successDelete]);\n\n  // const deleteHandler = (blog) => {\n  //   console.log(\"blog:\", blog);\n  //   if (window.confirm(\"Are you sure?\")) {\n  //     dispatch(deleteBlog(blog._id));\n  //   }\n  // };\n\n  // const classes = useStyles();\n\n  const selectionSize =\n    allSelected && data.length > 0\n      ? data.length - exceptItems.size\n      : items.size;\n\n  const handleRowCheckChange = (action) => {\n    console.log(\"handleRowCheckChange\");\n    // console.log('action:', action);\n\n    const selection = getSelectionOnAction({ rowSelection, action, data });\n    console.log(\"rowSelection:\", rowSelection);\n    console.log(\"action:\", action);\n    console.log(\"data:\", data);\n    // console.log('selection:', selection);\n    setRowSelection(selection);\n  };\n\n  const deleteBlogHandler = async (blogId) => {\n    console.log(\"deleteBlogHandler\");\n    try {\n      // const response = await api.delete(`/blogs/${blogId}`); // will go to `${config.MAILER_URL}/blogs`\n      // console.log('response:', response);\n      // const data = response.data;\n      // addToast.success('blog was delete')\n      // props.history.push('/');\n      dispatch(deleteBlog(blogId));\n\n      setBlogDeleted(true);\n\n      handleClearSelection();\n    } catch (error) {\n      console.log(\"error:\", error);\n      // addToast.danger(\"error deleting the blog\")\n    }\n  };\n\n  const handleDelete = () => {\n    console.log(\"rowSelection.items: \", rowSelection.items);\n\n    if (window.confirm(\"Are you sure?\")) {\n      rowSelection.items.forEach((item) => deleteBlogHandler(item));\n    }\n  };\n\n  const handleClearSelection = () => {\n    console.log(\"handleClearSelection\");\n    setRowSelection(getEmptySelection());\n  };\n\n  const handleRowClick = (...args) => {\n    console.log(\"handleRowClick\", ...args);\n\n    const rowData = { ...args };\n    console.log(\"rowData:\", rowData);\n    console.log(\"rowData:\", rowData[0].id.children);\n\n    const blogId = rowData[0].id.children;\n    // console.log('args:', args.id)\n\n    // props.history.push(\"www.google.com\")\n\n    props.history.push(`/blog/edit/${blogId}`);\n  };\n\n  return (\n    <>\n      {/* {console.log(\"data:\", data)} */}\n      {loading && <Spinner size={80} strokeWidth={6} />}\n      {error && (\n        <StatusIndication variant=\"danger\" text=\"error getting the data \" />\n      )}\n\n      {data && (\n        <Section col className=\"bg-white\">\n          {userInfo ? (\n            <Section gutter={2}>\n              <AddButton\n                onClick={() => props.history.push(`/blog/add`)}\n                text=\"Add Blog\"\n              />\n            </Section>\n          ) : (\n            <NavLink\n              to=\"/user/signin\"\n              // activeStyle={activeStyle}\n              style={{ marginLeft: \"20px\" }}\n              exact\n            >\n              sign in to create a new blog\n            </NavLink>\n          )}\n          <Row spacing={4}>\n            <FlatButton\n              onClick={handleClearSelection}\n              disabled={!selectionSize}\n            >\n              {`Unselect ${selectionSize || \"\"}`}\n            </FlatButton>\n\n            {selectionSize > 0 && (\n              <>\n                <FlatButton type=\"error\" onClick={handleDelete}>\n                  <Row align=\"center\" spacing={2}>\n                    <Icon svg={BtnTrash} />\n                    <TextField> Delete</TextField>\n                  </Row>\n                </FlatButton>\n              </>\n            )}\n          </Row>\n\n          {console.log(\"rowSelection: \", rowSelection)}\n          <Table\n            multiselect\n            height={500}\n            data={blogs}\n            // isLoading={isLoading}\n            // pageSize={pageSize}\n            rowSelection={rowSelection}\n            onCheckedRowsChange={handleRowCheckChange}\n            onRowClick={handleRowClick}\n            // infiniteScrollOptions={{\n            //   skip,\n            //   scrollOffset,\n            //   onLoadMore: handleLoadMore,\n            //   totalCount: semiInfiniteData.length,\n            // }}\n            // sortBy={sortBy}\n            // onSort={handleSort}\n          >\n            <Column align=\"left\" dataKey=\"id\" width={width} sortable>\n              <HeaderCell id=\"id\">Id</HeaderCell>\n              <Cell />\n            </Column>\n            <Column dataKey=\"title\" width={width}>\n              <HeaderCell id=\"title\">Blog Name</HeaderCell>\n              <Cell />\n            </Column>\n            <Column dataKey=\"admin\" width={width}>\n              <HeaderCell id=\"admin\">Blog Admin</HeaderCell>\n              <Cell />\n            </Column>\n            <Column dataKey=\"email\" width={width}>\n              <HeaderCell id=\"email\">Email</HeaderCell>\n              <Cell />\n            </Column>\n            <Column dataKey=\"account\" width={width}>\n              <HeaderCell id=\"account\">account</HeaderCell>\n              <Cell />\n            </Column>\n            <Column dataKey=\"createdAt\" width={width}>\n              <HeaderCell id=\"createdAt\">created At</HeaderCell>\n              <Cell />\n            </Column>\n\n            <Column dataKey=\"updatedAt\" width={width}>\n              <HeaderCell id=\"updatedAt\">updated At</HeaderCell>\n              <Cell />\n            </Column>\n\n            {/* <Column dataKey=\"periodStartDate\" width={width} sortable>\n              <HeaderCell id=\"startdate\">Date Cell</HeaderCell>\n              <DateCell />\n            </Column>\n            <Column dataKey=\"periodEndDate\" width={width} sortable>\n              <HeaderCell id=\"enddate\">DateTime Cell</HeaderCell>\n              <DateTimeCell />\n            </Column> */}\n          </Table>\n        </Section>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}