{"ast":null,"code":"var _jsxFileName = \"/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/PostPreprod/PostPreprodAddScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NavLink, useParams } from \"react-router-dom\";\nimport Resource from \"@guestyci/agni\";\nimport RaisedButton from \"@guestyci/foundation/RaisedButton\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport Form from \"@guestyci/foundation/Form\";\nimport Input from \"@guestyci/foundation/Input\";\nimport DateRangePicker from \"@guestyci/foundation/DatePicker/DateRangePicker\";\nimport SingleDatePicker from \"@guestyci/foundation/DatePicker/SingleDatePicker\";\nimport NumberPicker from \"@guestyci/foundation/NumberPicker\";\nimport EmailInput from \"@guestyci/foundation/EmailInput\";\nimport Dropdown, { Option } from \"@guestyci/foundation/Dropdown\";\nimport TextField from \"@guestyci/foundation/TextField\";\nimport TextArea from \"@guestyci/foundation/TextArea\";\nimport Col from \"@guestyci/foundation/Layout/Col\";\nimport Section from \"@guestyci/foundation/Layout/Section\";\nimport DurationPicker from \"@guestyci/foundation/DurationPicker\";\nimport TimePicker from \"@guestyci/foundation/TimePicker\";\nimport FormField from \"@guestyci/foundation/FormField\";\nimport FormGroup from \"@guestyci/foundation/FormGroup\";\nimport { FormProvider } from \"@guestyci/foundation/enums\"; // import { email } from '@guestyci/foundation/validators';\n\nimport createStyles from \"@guestyci/foundation/createStyles\";\nimport ErrorBanner from \"@guestyci/foundation/legacy/Table/ErrorBanner\";\nimport { useToast } from \"@guestyci/foundation/Toast\";\nimport { addPostPreprod } from \"../../actions/blogActions\";\nimport { POST_ADD_RESET } from \"../../constants/blogConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = createStyles(theme => ({\n  app: {\n    backgroundColor: \"white\"\n  }\n}));\nexport default function PostPreprodAddScreen(props) {\n  _s();\n\n  // console.log(\"email\");\n  const classes = useStyles();\n  const {\n    addToast\n  } = useToast();\n  const {\n    id: blogId\n  } = useParams(); // console.log(\"blogId:\", blogId);\n  /// states\n\n  const [title, setTitle] = useState();\n  const [content, setContent] = useState();\n  const errorMessage = \"There was a problem add the post.\";\n  const [error, setError] = useState(false); ///selectors\n\n  const postAdd = useSelector(state => state.postAdd);\n  const {\n    postInfo,\n    loading,\n    error: errorAdd\n  } = postAdd; // const userData= useSelector((state) => state.userData);\n  // const { userInfoData, loadingAccount, errorAccount } = userData;\n  // const {  userId } = userInfoData;\n  // console.log(\"userId:\", userId);\n  /// effects\n\n  useEffect(() => {\n    if (postInfo) {\n      addToast.success(`post ${title} was add successfully`);\n      props.history.push(`/blog/preprod/edit/${blogId}`);\n      dispatch({\n        type: POST_ADD_RESET\n      });\n    } else if (errorAdd) {\n      addToast.danger(\"error adding the post\");\n      setError(true);\n    }\n  }, [props.history, postInfo, errorAdd]); //dispatchers\n\n  const dispatch = useDispatch();\n\n  const onSubmit = e => {\n    // e.preventDefault();\n    console.log(\"onSubmit\"); // console.log(title);\n\n    dispatch(addPostPreprod(title, content, blogId));\n  };\n\n  const closeError = () => {\n    setError(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    className: classes.app,\n    justify: \"center\",\n    \"data-qa\": \"post-preprod-add-screen\",\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      spacing: 6,\n      span: 6,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"h2\",\n        children: [\"Add Post:\", title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FinalForm, {\n        onSubmit: onSubmit,\n        initialValues: {},\n        render: ({\n          handleSubmit\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          title: \"Create Post\",\n          onSubmit: handleSubmit,\n          provider: FormProvider.Final,\n          fieldInstance: Field,\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(FormField, {\n                label: \"Post Title\",\n                name: \"title\" //   info=\"Drama, Action etc.\"\n                ,\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  name: \"title\",\n                  value: title,\n                  placeholder: title,\n                  onChange: e => setTitle(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormField, {\n                label: \"Post Content\",\n                name: \"content\" //   info=\"Drama, Action etc.\"\n                ,\n                children: /*#__PURE__*/_jsxDEV(TextArea, {\n                  name: \"content\",\n                  placeholder: content,\n                  value: content,\n                  onChange: e => setContent(e.target.value),\n                  minRows: 71,\n                  maxRows: 9\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(RaisedButton, {\n              type: \"submit\",\n              children: \"Create Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this), error && /*#__PURE__*/_jsxDEV(ErrorBanner, {\n              show: error,\n              errorMessage: errorMessage,\n              onClick: closeError,\n              actionText: \"Try again\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n            to: \"/blog/preprod/list\" // activeStyle={activeStyle}\n            ,\n            style: {\n              marginLeft: \"20px\"\n            },\n            exact: true,\n            children: \"back to blog list\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostPreprodAddScreen, \"K2bt0fSwggrJmAIiI5jcD0qmBwM=\", false, function () {\n  return [useStyles, useToast, useParams, useSelector, useDispatch];\n});\n\n_c = PostPreprodAddScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostPreprodAddScreen\");","map":{"version":3,"sources":["/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/PostPreprod/PostPreprodAddScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","NavLink","useParams","Resource","RaisedButton","Form","FinalForm","Field","Input","DateRangePicker","SingleDatePicker","NumberPicker","EmailInput","Dropdown","Option","TextField","TextArea","Col","Section","DurationPicker","TimePicker","FormField","FormGroup","FormProvider","createStyles","ErrorBanner","useToast","addPostPreprod","POST_ADD_RESET","useStyles","theme","app","backgroundColor","PostPreprodAddScreen","props","classes","addToast","id","blogId","title","setTitle","content","setContent","errorMessage","error","setError","postAdd","state","postInfo","loading","errorAdd","success","history","push","dispatch","type","danger","onSubmit","e","console","log","closeError","handleSubmit","Final","target","value","marginLeft"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { NavLink, useParams } from \"react-router-dom\";\nimport Resource from \"@guestyci/agni\";\n\nimport RaisedButton from \"@guestyci/foundation/RaisedButton\";\n\nimport { Form as FinalForm, Field } from \"react-final-form\";\n\nimport Form from \"@guestyci/foundation/Form\";\nimport Input from \"@guestyci/foundation/Input\";\nimport DateRangePicker from \"@guestyci/foundation/DatePicker/DateRangePicker\";\nimport SingleDatePicker from \"@guestyci/foundation/DatePicker/SingleDatePicker\";\nimport NumberPicker from \"@guestyci/foundation/NumberPicker\";\nimport EmailInput from \"@guestyci/foundation/EmailInput\";\nimport Dropdown, { Option } from \"@guestyci/foundation/Dropdown\";\nimport TextField from \"@guestyci/foundation/TextField\";\nimport TextArea from \"@guestyci/foundation/TextArea\";\nimport Col from \"@guestyci/foundation/Layout/Col\";\nimport Section from \"@guestyci/foundation/Layout/Section\";\nimport DurationPicker from \"@guestyci/foundation/DurationPicker\";\nimport TimePicker from \"@guestyci/foundation/TimePicker\";\n\nimport FormField from \"@guestyci/foundation/FormField\";\nimport FormGroup from \"@guestyci/foundation/FormGroup\";\nimport { FormProvider } from \"@guestyci/foundation/enums\";\n// import { email } from '@guestyci/foundation/validators';\nimport createStyles from \"@guestyci/foundation/createStyles\";\n\nimport ErrorBanner from \"@guestyci/foundation/legacy/Table/ErrorBanner\";\n\nimport { useToast } from \"@guestyci/foundation/Toast\";\nimport { addPostPreprod } from \"../../actions/blogActions\";\nimport { POST_ADD_RESET } from \"../../constants/blogConstants\";\n\nconst useStyles = createStyles((theme) => ({\n  app: {\n    backgroundColor: \"white\",\n  },\n}));\n\nexport default function PostPreprodAddScreen(props) {\n  // console.log(\"email\");\n\n  const classes = useStyles();\n  const { addToast } = useToast();\n\n\n  const { id: blogId } = useParams();\n  // console.log(\"blogId:\", blogId);\n\n  /// states\n\n  const [title, setTitle] = useState();\n\n  const [content, setContent] = useState();\n\n  const errorMessage = \"There was a problem add the post.\";\n\n  const [error, setError] = useState(false);\n\n  ///selectors\n\n  const postAdd = useSelector((state) => state.postAdd);\n\n  const { postInfo, loading, error: errorAdd } = postAdd;\n\n  // const userData= useSelector((state) => state.userData);\n  // const { userInfoData, loadingAccount, errorAccount } = userData;\n  // const {  userId } = userInfoData;\n  // console.log(\"userId:\", userId);\n  /// effects\n\n  useEffect(() => {\n    if (postInfo) {\n      addToast.success(`post ${title} was add successfully`);\n      props.history.push(`/blog/preprod/edit/${blogId}`);\n      dispatch({ type: POST_ADD_RESET });\n    } else if (errorAdd) {\n      addToast.danger(\"error adding the post\");\n\n      setError(true);\n    }\n  }, [props.history, postInfo, errorAdd]);\n\n  //dispatchers\n\n  const dispatch = useDispatch();\n\n  const onSubmit = (e) => {\n    // e.preventDefault();\n\n    console.log(\"onSubmit\");\n    // console.log(title);\n    dispatch(addPostPreprod(title, content, blogId));\n  };\n\n  const closeError = () => {\n    setError(false);\n  };\n\n  return (\n    <Section className={classes.app} justify=\"center\">\n      <Col spacing={6} span={6}>\n        <TextField variant=\"h2\">\n          Add Post:\n          {title}\n        </TextField>\n        <FinalForm\n          onSubmit={onSubmit}\n          initialValues={{}}\n          render={({ handleSubmit }) => (\n            <Form\n              title=\"Create Post\"\n              onSubmit={handleSubmit}\n              provider={FormProvider.Final}\n              fieldInstance={Field}\n            >\n              <FormGroup>\n                <FormGroup>\n                  <FormField\n                    label=\"Post Title\"\n                    name=\"title\"\n                    //   info=\"Drama, Action etc.\"\n                  >\n                    <Input\n                      name=\"title\"\n                      value={title}\n                      placeholder={title}\n                      onChange={(e) => setTitle(e.target.value)}\n                    />\n                  </FormField>\n\n                  <FormField\n                    label=\"Post Content\"\n                    name=\"content\"\n                    //   info=\"Drama, Action etc.\"\n                  >\n                    {/* <Input\n                      name=\"content\"\n                      value={content}\n                      placeholder={content}\n                      onChange={(e) => setContent(e.target.value)}\n                    /> */}\n\n                    <TextArea\n                      name=\"content\"\n                      placeholder={content}\n                      value={content}\n                      onChange={(e) => setContent(e.target.value)}\n                      minRows={71}\n                      maxRows={9}\n                    />\n                  </FormField>\n                </FormGroup>\n\n                <RaisedButton type=\"submit\">Create Post</RaisedButton>\n\n                {error && (\n                  <ErrorBanner\n                    show={error}\n                    errorMessage={errorMessage}\n                    onClick={closeError}\n                    actionText=\"Try again\"\n                  />\n                )}\n              </FormGroup>\n\n              <NavLink\n                to=\"/blog/preprod/list\"\n                // activeStyle={activeStyle}\n                style={{ marginLeft: \"20px\" }}\n                exact\n              >\n                back to blog list\n              </NavLink>\n            </Form>\n          )}\n        />\n      </Col>\n    </Section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}