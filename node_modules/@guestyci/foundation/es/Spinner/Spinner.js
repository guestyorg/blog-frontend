import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
import React from 'react';
import PropTypes from 'prop-types';
import cn from 'classnames';
import createStyles from "../createStyles";
const SIZE = 50;
export const useStyles = createStyles(theme => ({
  root: {
    display: 'flex'
  },
  spinner: {
    width: 'inherit',
    animation: '$spinnerRotate 2s linear infinite',
    transformOrigin: 'center center',
    top: 0,
    bottom: 0,
    left: 0,
    right: 0,
    margin: 0
  },
  size: {
    width: ({
      size
    }) => size,
    height: ({
      size
    }) => size
  },
  color: {
    color: ({
      color
    }) => color || theme.palette.primary.default
  },
  circle: {
    stroke: 'currentColor',
    strokeDasharray: '1, 100',
    strokeDashoffset: 0,
    animation: '$spinnerPathDash 1.5s ease-in-out infinite',
    strokeLinecap: 'round'
  },
  '@keyframes spinnerRotate': {
    '100%': {
      transform: 'rotate(360deg)'
    }
  },
  '@keyframes spinnerPathDash': {
    '0%': {
      strokeDasharray: '1, 200',
      strokeDashoffset: 0
    },
    '50%': {
      strokeDasharray: '89, 200',
      strokeDashoffset: '-35px'
    },
    '100%': {
      strokeDasharray: '89, 200',
      strokeDashoffset: '-124px'
    }
  }
}), {
  name: 'Spinner'
});
const Spinner = React.forwardRef(function Spinner(_ref, ref) {
  let {
    color,
    strokeWidth,
    className,
    style,
    size,
    jss
  } = _ref,
      props = _objectWithoutPropertiesLoose(_ref, ["color", "strokeWidth", "className", "style", "size", "jss"]);

  const classes = useStyles({
    color,
    size,
    jss
  });
  return /*#__PURE__*/React.createElement("div", _extends({
    ref: ref,
    className: cn(classes.root, classes.color, classes.size, className),
    style: style
  }, props), /*#__PURE__*/React.createElement("svg", {
    className: cn(classes.spinner),
    viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`
  }, /*#__PURE__*/React.createElement("circle", {
    className: classes.circle,
    cx: SIZE,
    cy: SIZE,
    r: "20",
    fill: "none",
    strokeWidth: strokeWidth,
    strokeMiterlimit: "10"
  })));
});
Spinner.defaultProps = {
  color: undefined,
  size: 40,
  className: '',
  style: {},
  strokeWidth: 3.6
};
Spinner.propTypes = {
  /** Spinner color - set from theme colors */
  color: PropTypes.string,

  /** Spinner size */
  size: PropTypes.number,

  /** Spinner className */
  className: PropTypes.string,

  /** Spinner style */
  style: PropTypes.shape(),

  /** Spinner stroke width */
  strokeWidth: PropTypes.number,

  /** jss override object to customize the jss classes */
  jss: PropTypes.oneOfType([PropTypes.shape(), PropTypes.func])
};
Spinner.displayName = 'Spinner';
export default Spinner;