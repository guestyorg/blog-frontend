var createActiveFieldDecorator = function createActiveFieldDecorator(fieldFocusListener) {
  return function (formApi) {
    var unsubscribeToField;
    var previousValue;
    var isFirstRun = true;

    function unsubscribeToActiveField() {
      if (unsubscribeToField) {
        unsubscribeToField();
        unsubscribeToField = undefined;
        previousValue = undefined;
        isFirstRun = true;
      }
    }

    var unsubscribe = formApi.subscribe(function (_ref) {
      var fieldName = _ref.active;
      unsubscribeToActiveField();

      if (!fieldName) {
        return;
      }

      var onValueChange = function onValueChange(_ref2) {
        var currentValue = _ref2.value;

        if (isFirstRun) {
          isFirstRun = false;
          return;
        }

        if (previousValue !== currentValue) {
          var activeField = formApi.getFieldState(fieldName);
          fieldFocusListener({
            value: currentValue,
            field: activeField
          });
        }

        previousValue = currentValue;
      };

      unsubscribeToField = formApi.registerField(fieldName, onValueChange, {
        value: true
      });
    }, {
      active: true
    });
    return function () {
      if (unsubscribeToField) {
        unsubscribeToField();
      }

      unsubscribe();
    };
  };
};

export default createActiveFieldDecorator;