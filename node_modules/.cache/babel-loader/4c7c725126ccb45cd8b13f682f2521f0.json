{"ast":null,"code":"var _jsxFileName = \"/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/User/UserInfoScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NavLink, useParams } from \"react-router-dom\";\nimport TextField from \"@guestyci/foundation/TextField\";\nimport Col from \"@guestyci/foundation/Layout/Col\";\nimport Section from \"@guestyci/foundation/Layout/Section\"; // import { email } from \"@guestyci/foundation/validators\";\n\nimport createStyles from \"@guestyci/foundation/createStyles\";\nimport { useToast } from \"@guestyci/foundation/Toast\";\nimport { deleteUser, detailsUser, updateUser } from \"../../actions/userActions\";\nimport { USER_DELETE_RESET, USER_DETAILS_RESET, USER_UPDATE_RESET } from \"../../constants/userConstants\";\nimport StatusIndication from \"@guestyci/foundation/StatusIndication\";\nimport Spinner from \"@guestyci/foundation/Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = createStyles(theme => ({\n  app: {\n    backgroundColor: \"white\"\n  }\n}));\nexport default function UserInfoScreen(props) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    id\n  } = useParams(); // console.log(\"id:\", id);\n  // useSelector\n\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error: errorUserDetails,\n    user\n  } = userDetails; // useDispatch\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!user) {\n      dispatch(detailsUser(id));\n    }\n  }, [dispatch, props.history, user, id]);\n  useEffect(() => {\n    dispatch({\n      type: USER_DETAILS_RESET\n    });\n  }, []);\n\n  const closeError = () => {\n    setError(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    className: classes.app,\n    justify: \"center\",\n    \"data-qa\": \"user-info-screen\",\n    children: [loading && /*#__PURE__*/_jsxDEV(Spinner, {\n      size: 80,\n      strokeWidth: 6\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }, this), errorUserDetails && /*#__PURE__*/_jsxDEV(StatusIndication, {\n      variant: \"danger\",\n      text: \"error getting the info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      spacing: 6,\n      span: 6,\n      children: user && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\" \", console.log('user:', user), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"h1\",\n          children: [\"User Info: \", user.firstName, \" \", user.lastName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"h3\",\n          children: [\"First Name: \", user.firstName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"h3\",\n          children: [\"Last Name: \", user.lastName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"h3\",\n          children: [\"Email: \", user.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), user.accountId && /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"h3\",\n          children: [\"Account: \", user.accountId.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"h3\",\n          children: [\"Created At: \", new Date(user.createdAt).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"h3\",\n          children: [\"Updated At: \", new Date(user.updatedAt).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          to: `/user/edit/${id}` // activeStyle={activeStyle}\n          ,\n          style: {\n            marginLeft: \"20px\"\n          },\n          exact: true,\n          children: \"edit the user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserInfoScreen, \"2jMHM10QIV4SkP5C5XR3/DaUix0=\", false, function () {\n  return [useStyles, useParams, useSelector, useDispatch];\n});\n\n_c = UserInfoScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserInfoScreen\");","map":{"version":3,"sources":["/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/User/UserInfoScreen.js"],"names":["React","useEffect","useDispatch","useSelector","NavLink","useParams","TextField","Col","Section","createStyles","useToast","deleteUser","detailsUser","updateUser","USER_DELETE_RESET","USER_DETAILS_RESET","USER_UPDATE_RESET","StatusIndication","Spinner","useStyles","theme","app","backgroundColor","UserInfoScreen","props","classes","id","userDetails","state","loading","error","errorUserDetails","user","dispatch","history","type","closeError","setError","console","log","firstName","lastName","email","accountId","name","Date","createdAt","toLocaleString","updatedAt","marginLeft"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { NavLink, useParams } from \"react-router-dom\";\n\nimport TextField from \"@guestyci/foundation/TextField\";\nimport Col from \"@guestyci/foundation/Layout/Col\";\nimport Section from \"@guestyci/foundation/Layout/Section\";\n\n// import { email } from \"@guestyci/foundation/validators\";\nimport createStyles from \"@guestyci/foundation/createStyles\";\n\nimport { useToast } from \"@guestyci/foundation/Toast\";\nimport { deleteUser, detailsUser, updateUser } from \"../../actions/userActions\";\nimport {\n  USER_DELETE_RESET,\n  USER_DETAILS_RESET,\n  USER_UPDATE_RESET,\n} from \"../../constants/userConstants\";\nimport StatusIndication from \"@guestyci/foundation/StatusIndication\";\nimport Spinner from \"@guestyci/foundation/Spinner\";\n\nconst useStyles = createStyles((theme) => ({\n  app: {\n    backgroundColor: \"white\",\n  },\n}));\n\nexport default function UserInfoScreen(props) {\n  const classes = useStyles();\n\n  const { id } = useParams();\n  // console.log(\"id:\", id);\n\n  // useSelector\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error: errorUserDetails, user } = userDetails;\n\n  // useDispatch\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!user) {\n      dispatch(detailsUser(id));\n    }\n  }, [dispatch, props.history, user, id]);\n\n  useEffect(() => {\n    dispatch({ type: USER_DETAILS_RESET });\n  }, []);\n\n  const closeError = () => {\n    setError(false);\n  };\n\n  return (\n    <Section className={classes.app} justify=\"center\">\n      {loading && <Spinner size={80} strokeWidth={6} />}\n\n      {errorUserDetails && (\n        <StatusIndication variant=\"danger\" text=\"error getting the info\" />\n      )}\n\n      <Col spacing={6} span={6}>\n        {user && (\n          <>\n            {\" \"}\n            {console.log('user:', user)}\n            <TextField variant=\"h1\">\n              User Info: {user.firstName} {user.lastName}\n            </TextField>\n            <TextField variant=\"h3\">First Name: {user.firstName}</TextField>\n            <TextField variant=\"h3\">Last Name: {user.lastName}</TextField>\n            <TextField variant=\"h3\">Email: {user.email}</TextField>\n            {user.accountId && (\n              <TextField variant=\"h3\">Account: {user.accountId.name}</TextField>\n            )}\n            <TextField variant=\"h3\">\n              Created At: {new Date(user.createdAt).toLocaleString()}\n            </TextField>\n            <TextField variant=\"h3\">\n              Updated At: {new Date(user.updatedAt).toLocaleString()}\n            </TextField>\n            <NavLink\n              to={`/user/edit/${id}`}\n              // activeStyle={activeStyle}\n              style={{ marginLeft: \"20px\" }}\n              exact\n            >\n              edit the user\n            </NavLink>\n          </>\n        )}\n      </Col>\n    </Section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}