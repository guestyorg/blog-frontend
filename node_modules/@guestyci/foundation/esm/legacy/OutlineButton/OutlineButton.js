import _extends from "@babel/runtime/helpers/esm/extends";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import React from 'react';
import PropTypes from 'prop-types';
import cn from 'classnames';
import BaseButton from "../BaseButton/BaseButton";
import { Theme } from "../../enums/enums";
var lightThemeClasses = 'text-white border-white text-hover-blue-dark-theme border-hover-blue-dark-theme';

var OutlineButton = function OutlineButton(_ref) {
  var children = _ref.children,
      onClick = _ref.onClick,
      className = _ref.className,
      style = _ref.style,
      disabled = _ref.disabled,
      isLoading = _ref.isLoading,
      theme = _ref.theme,
      childrenClassName = _ref.childrenClassName,
      props = _objectWithoutProperties(_ref, ["children", "onClick", "className", "style", "disabled", "isLoading", "theme", "childrenClassName"]);

  return /*#__PURE__*/React.createElement(BaseButton, _extends({
    onClick: onClick,
    className: cn('font-size-sm', className, _defineProperty({}, lightThemeClasses, theme === Theme.Light)),
    variant: "outline",
    style: style,
    disabled: disabled,
    isLoading: isLoading,
    loaderColor: "blue",
    childrenClassName: childrenClassName
  }, props, {
    "data-qa": "outline-button"
  }), children);
};

OutlineButton.defaultProps = {
  className: '',
  style: {},
  disabled: false,
  isLoading: false,
  theme: 'dark'
};
OutlineButton.propTypes = {
  /** Button click callback function */
  onClick: PropTypes.func.isRequired,

  /** Button inner children */
  children: PropTypes.node.isRequired,

  /** Button indicator whether disabled or not */
  disabled: PropTypes.bool,

  /** Button additional classes */
  className: PropTypes.string,

  /** Button additional styling */
  style: PropTypes.shape(),

  /** Loader indicator for button */
  isLoading: PropTypes.bool,

  /** Defined the theme for the button component */
  theme: PropTypes.oneOf(['dark', 'light'])
};
export default OutlineButton;