import _extends from "@babel/runtime/helpers/esm/extends";
import React, { Component } from 'react';
import cn from 'classnames';
import PropTypes from 'prop-types';
import StepDivider from "../Steps/StepDivider";
import ProgressMapStep from "./ProgressMapStep";

class ProgressMap extends Component {
  render() {
    const {
      descriptions,
      className,
      style,
      color,
      width
    } = this.props;
    return /*#__PURE__*/React.createElement("div", {
      className: cn('flex-center', className),
      style: _extends({}, style),
      "data-qa": "progress-map"
    }, descriptions.map((item, index, array) => {
      if (array.length - 1 !== index) {
        return [/*#__PURE__*/React.createElement(ProgressMapStep, {
          color: color,
          item: index + 1,
          key: `s-${index + 1}`
        }), /*#__PURE__*/React.createElement(StepDivider, {
          color: color,
          text: item,
          key: `s-${index + 1}`,
          width: width
        })];
      }

      return /*#__PURE__*/React.createElement(ProgressMapStep, {
        color: color,
        item: index + 1,
        key: `s-${index + 1}`,
        "data-qa": "progress-map"
      });
    }));
  }

}

ProgressMap.defaultProps = {
  color: 'blue',
  width: 150
};
ProgressMap.propTypes = {
  /** Array of descriptions which will define steps count also */
  descriptions: PropTypes.arrayOf(PropTypes.string, PropTypes.node).isRequired,

  /** color for step */
  color: PropTypes.oneOf(['blue', 'gray']),

  /** distance between steps */
  width: PropTypes.number
};
export default ProgressMap;