{"ast":null,"code":"var _jsxFileName = \"/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/PostPreprod/PostPreprodViewScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NavLink, useParams } from \"react-router-dom\";\nimport Resource from \"@guestyci/agni\";\nimport RaisedButton from \"@guestyci/foundation/RaisedButton\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport Form from \"@guestyci/foundation/Form\";\nimport Input from \"@guestyci/foundation/Input\";\nimport DateRangePicker from \"@guestyci/foundation/DatePicker/DateRangePicker\";\nimport SingleDatePicker from \"@guestyci/foundation/DatePicker/SingleDatePicker\";\nimport NumberPicker from \"@guestyci/foundation/NumberPicker\";\nimport EmailInput from \"@guestyci/foundation/EmailInput\";\nimport Dropdown, { Option } from \"@guestyci/foundation/Dropdown\";\nimport TextField from \"@guestyci/foundation/TextField\";\nimport TextArea from \"@guestyci/foundation/TextArea\";\nimport Col from \"@guestyci/foundation/Layout/Col\";\nimport Section from \"@guestyci/foundation/Layout/Section\";\nimport DurationPicker from \"@guestyci/foundation/DurationPicker\";\nimport TimePicker from \"@guestyci/foundation/TimePicker\";\nimport FormField from \"@guestyci/foundation/FormField\";\nimport FormGroup from \"@guestyci/foundation/FormGroup\";\nimport { FormProvider } from \"@guestyci/foundation/enums\"; // import { email } from \"@guestyci/foundation/validators\";\n\nimport createStyles from \"@guestyci/foundation/createStyles\";\nimport FlatButton from \"@guestyci/foundation/FlatButton\";\nimport { Row } from \"@guestyci/foundation/Layout\";\nimport { ReactComponent as BtnTrash } from \"@svgr/webpack?-svgo,+titleProp,+ref!@guestyci/foundation/icons/BtnTrash.svg\";\nimport Icon from \"@guestyci/foundation/Icon\";\nimport { useToast } from \"@guestyci/foundation/Toast\";\nimport { deletePost, detailsPreprodPost, detailsPreprodBlog, updatePost } from \"../../actions/blogActions\";\nimport { POST_DELETE_RESET, POST_DETAILS_RESET, POST_UPDATE_RESET } from \"../../constants/blogConstants\"; // posts\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = createStyles(theme => ({\n  app: {\n    backgroundColor: \"white\",\n    marginTop: \"20px\"\n  }\n}));\nexport default function PostPreprodViewScreen(props) {\n  _s();\n\n  const classes = useStyles(); // const { api, env, config } = Resource.create();\n\n  const {\n    blogId,\n    postId\n  } = useParams(); // console.log(\"id:\", id);\n\n  const [title, setTitle] = useState();\n  const [email, setEmail] = useState(); /////\n\n  const [content, setContent] = useState(); /////\n\n  const [author, setAuthor] = useState();\n  const [date, setDate] = useState(); // useSelector\n\n  const postDetails = useSelector(state => state.postDetails);\n  const {\n    loading,\n    error: errorPostDetails,\n    post\n  } = postDetails;\n  console.log(\"post:\", post);\n  const blogDetails = useSelector(state => state.blogDetails);\n  const {\n    loading: loadingBlog,\n    error: errorBlogDetails,\n    blog\n  } = blogDetails;\n  const userData = useSelector(state => state.userData);\n  const {\n    accountData,\n    userInfoData,\n    loading: loadingUserData,\n    error: errorUserData\n  } = userData; // useDispatch\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!post) {\n      dispatch(detailsPreprodPost(blogId, postId));\n      dispatch(detailsPreprodBlog(blogId));\n    } else {\n      setTitle(post.title); ////\n\n      setAuthor(post.author);\n      setEmail(post.email);\n      setContent(post.content);\n      setDate(new Date(post.createdAt).toLocaleString());\n    }\n  }, [dispatch, props.history, post, blogId, postId]);\n  useEffect(() => {\n    dispatch({\n      type: POST_DETAILS_RESET\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Section, {\n      className: classes.app,\n      justify: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        spacing: 6,\n        span: 6,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"h2\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"h5\",\n          children: [\"author: \", author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"h5\",\n          children: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"h5\",\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"h4\",\n          children: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), post && blog && (post.userPreprodId === blog.userPreprodId || blog.userPreprodId === userInfoData.userId) && /*#__PURE__*/_jsxDEV(NavLink, {\n          to: `/blog/edit/${blogId}/post/${postId}/preprod` // activeStyle={activeStyle}\n          ,\n          style: {\n            marginLeft: \"20px\"\n          },\n          exact: true,\n          children: \"edit the post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, this), blog && /*#__PURE__*/_jsxDEV(NavLink, {\n          to: `/blog/preprod/edit/${blogId}` // activeStyle={activeStyle}\n          ,\n          style: {\n            marginLeft: \"20px\"\n          },\n          exact: true,\n          children: [\"back to the blog: \", blog.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(PostPreprodViewScreen, \"/xGCWLkkB9MPvIQt98DIeG7LI90=\", false, function () {\n  return [useStyles, useParams, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = PostPreprodViewScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostPreprodViewScreen\");","map":{"version":3,"sources":["/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/PostPreprod/PostPreprodViewScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","NavLink","useParams","Resource","RaisedButton","Form","FinalForm","Field","Input","DateRangePicker","SingleDatePicker","NumberPicker","EmailInput","Dropdown","Option","TextField","TextArea","Col","Section","DurationPicker","TimePicker","FormField","FormGroup","FormProvider","createStyles","FlatButton","Row","Icon","useToast","deletePost","detailsPreprodPost","detailsPreprodBlog","updatePost","POST_DELETE_RESET","POST_DETAILS_RESET","POST_UPDATE_RESET","useStyles","theme","app","backgroundColor","marginTop","PostPreprodViewScreen","props","classes","blogId","postId","title","setTitle","email","setEmail","content","setContent","author","setAuthor","date","setDate","postDetails","state","loading","error","errorPostDetails","post","console","log","blogDetails","loadingBlog","errorBlogDetails","blog","userData","accountData","userInfoData","loadingUserData","errorUserData","dispatch","Date","createdAt","toLocaleString","history","type","userPreprodId","userId","marginLeft"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { NavLink, useParams } from \"react-router-dom\";\n\nimport Resource from \"@guestyci/agni\";\n\nimport RaisedButton from \"@guestyci/foundation/RaisedButton\";\n\nimport { Form as FinalForm, Field } from \"react-final-form\";\n\nimport Form from \"@guestyci/foundation/Form\";\nimport Input from \"@guestyci/foundation/Input\";\nimport DateRangePicker from \"@guestyci/foundation/DatePicker/DateRangePicker\";\nimport SingleDatePicker from \"@guestyci/foundation/DatePicker/SingleDatePicker\";\nimport NumberPicker from \"@guestyci/foundation/NumberPicker\";\nimport EmailInput from \"@guestyci/foundation/EmailInput\";\nimport Dropdown, { Option } from \"@guestyci/foundation/Dropdown\";\nimport TextField from \"@guestyci/foundation/TextField\";\nimport TextArea from \"@guestyci/foundation/TextArea\";\nimport Col from \"@guestyci/foundation/Layout/Col\";\nimport Section from \"@guestyci/foundation/Layout/Section\";\nimport DurationPicker from \"@guestyci/foundation/DurationPicker\";\nimport TimePicker from \"@guestyci/foundation/TimePicker\";\n\nimport FormField from \"@guestyci/foundation/FormField\";\nimport FormGroup from \"@guestyci/foundation/FormGroup\";\nimport { FormProvider } from \"@guestyci/foundation/enums\";\n// import { email } from \"@guestyci/foundation/validators\";\nimport createStyles from \"@guestyci/foundation/createStyles\";\n\nimport FlatButton from \"@guestyci/foundation/FlatButton\";\nimport { Row } from \"@guestyci/foundation/Layout\";\nimport { ReactComponent as BtnTrash } from \"@guestyci/foundation/icons/BtnTrash.svg\";\nimport Icon from \"@guestyci/foundation/Icon\";\n\nimport { useToast } from \"@guestyci/foundation/Toast\";\nimport {\n  deletePost,\n  detailsPreprodPost,\n  detailsPreprodBlog,\n  updatePost,\n} from \"../../actions/blogActions\";\nimport {\n  POST_DELETE_RESET,\n  POST_DETAILS_RESET,\n  POST_UPDATE_RESET,\n} from \"../../constants/blogConstants\";\n\n// posts\n\nconst useStyles = createStyles((theme) => ({\n  app: {\n    backgroundColor: \"white\",\n    marginTop: \"20px\",\n  },\n}));\n\nexport default function PostPreprodViewScreen(props) {\n  const classes = useStyles();\n\n  // const { api, env, config } = Resource.create();\n\n  const { blogId, postId } = useParams();\n  // console.log(\"id:\", id);\n\n  const [title, setTitle] = useState();\n\n  const [email, setEmail] = useState();\n\n  /////\n  const [content, setContent] = useState();\n  /////\n\n  const [author, setAuthor] = useState();\n\n  const [date, setDate] = useState();\n\n  // useSelector\n  const postDetails = useSelector((state) => state.postDetails);\n  const { loading, error: errorPostDetails, post } = postDetails;\n  console.log(\"post:\", post);\n\n  const blogDetails = useSelector((state) => state.blogDetails);\n  const { loading: loadingBlog, error: errorBlogDetails, blog } = blogDetails;\n\n  const userData = useSelector((state) => state.userData);\n\n  const {\n    accountData,\n    userInfoData,\n    loading: loadingUserData,\n    error: errorUserData,\n  } = userData;\n\n  // useDispatch\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!post) {\n      dispatch(detailsPreprodPost(blogId, postId));\n      dispatch(detailsPreprodBlog(blogId));\n    } else {\n      setTitle(post.title);\n      ////\n\n      setAuthor(post.author);\n\n      setEmail(post.email);\n      setContent(post.content);\n      setDate(new Date(post.createdAt).toLocaleString());\n    }\n  }, [dispatch, props.history, post, blogId, postId]);\n\n  useEffect(() => {\n    dispatch({ type: POST_DETAILS_RESET });\n  }, []);\n\n  return (\n    <>\n      <Section className={classes.app} justify=\"center\">\n        <Col spacing={6} span={6}>\n          <TextField variant=\"h2\">{title}</TextField>\n          <TextField variant=\"h5\">author: {author}</TextField>\n          <TextField variant=\"h5\">{email}</TextField>\n\n          <TextField variant=\"h5\">{date}</TextField>\n\n          <TextField variant=\"h4\">{content}</TextField>\n\n          {post &&\n            blog &&\n            (post.userPreprodId === blog.userPreprodId ||\n              blog.userPreprodId === userInfoData.userId) && (\n              <NavLink\n                to={`/blog/edit/${blogId}/post/${postId}/preprod`}\n                // activeStyle={activeStyle}\n                style={{ marginLeft: \"20px\" }}\n                exact\n              >\n                edit the post\n              </NavLink>\n            )}\n\n          {blog && (\n            <NavLink\n              to={`/blog/preprod/edit/${blogId}`}\n              // activeStyle={activeStyle}\n              style={{ marginLeft: \"20px\" }}\n              exact\n            >\n              back to the blog: {blog.title}\n            </NavLink>\n          )}\n        </Col>\n      </Section>\n      {/* /////////////////////// posts//////////////////  */}\n      {/* <PostList postId={id} /> */}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}