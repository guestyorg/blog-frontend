{"ast":null,"code":"import Axios from \"axios\";\nimport { ACCOUNT_DETAILS_FAIL, ACCOUNT_DETAILS_REQUEST, ACCOUNT_DETAILS_SUCCESS, ACCOUNT_REGISTER_FAIL, ACCOUNT_REGISTER_REQUEST, ACCOUNT_REGISTER_SUCCESS, ACCOUNT_SIGNIN_FAIL, ACCOUNT_SIGNIN_REQUEST, ACCOUNT_SIGNIN_SUCCESS, ACCOUNT_SIGNOUT, ACCOUNT_UPDATE_PROFILE_FAIL, ACCOUNT_UPDATE_PROFILE_REQUEST, ACCOUNT_UPDATE_PROFILE_SUCCESS, ACCOUNT_LIST_REQUEST, ACCOUNT_LIST_SUCCESS, ACCOUNT_LIST_FAIL, ACCOUNT_DELETE_REQUEST, ACCOUNT_DELETE_SUCCESS, ACCOUNT_DELETE_FAIL, ACCOUNT_UPDATE_SUCCESS, ACCOUNT_UPDATE_FAIL } from \"../constants/accountConstants\";\nimport { USER_SIGNOUT } from \"../constants/userConstants\";\nimport Resource from \"@guestyci/agni\"; // const { api, env, config } = Resource.create();\n\nconst temp = Resource.create(\"account\");\ntemp.api.defaults.baseURL = `http://localhost:9999/api/accounts`;\nconst accountApi = temp.api;\nexport const register = (name, email) => async dispatch => {\n  dispatch({\n    type: ACCOUNT_REGISTER_REQUEST,\n    payload: {\n      name,\n      email\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await accountApi.post(\"/register\", {\n      name,\n      email\n    });\n    console.log(\"data:\", data); // const { data } = await Axios.post(\n    //   \"http://localhost:3000/api/accounts/register\",\n    //   {\n    //     name,\n    //     email,\n    //   }\n    // );\n\n    dispatch({\n      type: ACCOUNT_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: ACCOUNT_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"accountInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: ACCOUNT_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signin = email => async dispatch => {\n  dispatch({\n    type: ACCOUNT_SIGNIN_REQUEST,\n    payload: {\n      email\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"http://localhost:3000/api/accounts/signin\", {\n      email\n    });\n    dispatch({\n      type: ACCOUNT_SIGNIN_SUCCESS,\n      payload: data\n    }); // dispatch(emailAccount(email));\n\n    localStorage.setItem(\"accountInfo\", JSON.stringify(data));\n  } catch (error) {\n    // console.log(\"error :\", error);\n    dispatch({\n      type: ACCOUNT_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signout = () => dispatch => {\n  localStorage.removeItem(\"accountInfo\");\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: ACCOUNT_SIGNOUT\n  });\n  dispatch({\n    type: USER_SIGNOUT\n  }); // document.location.href = \"/signin\";\n};\nexport const listAccounts = () => async (dispatch, getState) => {\n  dispatch({\n    type: ACCOUNT_LIST_REQUEST\n  });\n\n  try {\n    const {\n      accountSignin: {\n        accountInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.get(\"http://localhost:3000/api/accounts\", {\n      headers: {\n        Authorization: `Bearer ${accountInfo.token}`\n      }\n    });\n    dispatch({\n      type: ACCOUNT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ACCOUNT_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deleteAccount = accountId => async (dispatch, getState) => {\n  dispatch({\n    type: ACCOUNT_DELETE_REQUEST,\n    payload: accountId\n  });\n  const {\n    accountSignin: {\n      accountInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.delete(`http://localhost:3000/api/accounts/${accountId}`, {\n      headers: {\n        Authorization: `Bearer ${accountInfo.token}`\n      }\n    });\n    dispatch({\n      type: ACCOUNT_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ACCOUNT_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const detailsAccount = accountId => async dispatch => {\n  dispatch({\n    type: ACCOUNT_DETAILS_REQUEST,\n    payload: accountId\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`http://localhost:3000/api/accounts/${accountId}`);\n    dispatch({\n      type: ACCOUNT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ACCOUNT_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateAccount = account => async (dispatch, getState) => {\n  console.log(\"account:\", account);\n  dispatch({\n    type: ACCOUNT_UPDATE_PROFILE_REQUEST,\n    payload: account\n  });\n  const {\n    accountSignin: {\n      accountInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.patch(`http://localhost:3000/api/accounts/${account._id}`, account, {\n      headers: {\n        Authorization: `Bearer ${accountInfo.token}`\n      }\n    });\n    dispatch({\n      type: ACCOUNT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ACCOUNT_UPDATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/actions/accountActions.js"],"names":["Axios","ACCOUNT_DETAILS_FAIL","ACCOUNT_DETAILS_REQUEST","ACCOUNT_DETAILS_SUCCESS","ACCOUNT_REGISTER_FAIL","ACCOUNT_REGISTER_REQUEST","ACCOUNT_REGISTER_SUCCESS","ACCOUNT_SIGNIN_FAIL","ACCOUNT_SIGNIN_REQUEST","ACCOUNT_SIGNIN_SUCCESS","ACCOUNT_SIGNOUT","ACCOUNT_UPDATE_PROFILE_FAIL","ACCOUNT_UPDATE_PROFILE_REQUEST","ACCOUNT_UPDATE_PROFILE_SUCCESS","ACCOUNT_LIST_REQUEST","ACCOUNT_LIST_SUCCESS","ACCOUNT_LIST_FAIL","ACCOUNT_DELETE_REQUEST","ACCOUNT_DELETE_SUCCESS","ACCOUNT_DELETE_FAIL","ACCOUNT_UPDATE_SUCCESS","ACCOUNT_UPDATE_FAIL","USER_SIGNOUT","Resource","temp","create","api","defaults","baseURL","accountApi","register","name","email","dispatch","type","payload","data","post","console","log","localStorage","setItem","JSON","stringify","error","response","message","signin","signout","removeItem","listAccounts","getState","accountSignin","accountInfo","get","headers","Authorization","token","deleteAccount","accountId","delete","detailsAccount","updateAccount","account","patch","_id"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\nimport {\n  ACCOUNT_DETAILS_FAIL,\n  ACCOUNT_DETAILS_REQUEST,\n  ACCOUNT_DETAILS_SUCCESS,\n  ACCOUNT_REGISTER_FAIL,\n  ACCOUNT_REGISTER_REQUEST,\n  ACCOUNT_REGISTER_SUCCESS,\n  ACCOUNT_SIGNIN_FAIL,\n  ACCOUNT_SIGNIN_REQUEST,\n  ACCOUNT_SIGNIN_SUCCESS,\n  ACCOUNT_SIGNOUT,\n  ACCOUNT_UPDATE_PROFILE_FAIL,\n  ACCOUNT_UPDATE_PROFILE_REQUEST,\n  ACCOUNT_UPDATE_PROFILE_SUCCESS,\n  ACCOUNT_LIST_REQUEST,\n  ACCOUNT_LIST_SUCCESS,\n  ACCOUNT_LIST_FAIL,\n  ACCOUNT_DELETE_REQUEST,\n  ACCOUNT_DELETE_SUCCESS,\n  ACCOUNT_DELETE_FAIL,\n  ACCOUNT_UPDATE_SUCCESS,\n  ACCOUNT_UPDATE_FAIL,\n} from \"../constants/accountConstants\";\nimport { USER_SIGNOUT } from \"../constants/userConstants\";\n\nimport Resource from \"@guestyci/agni\";\n// const { api, env, config } = Resource.create();\nconst temp = Resource.create(\"account\");\ntemp.api.defaults.baseURL = `http://localhost:9999/api/accounts`;\nconst accountApi = temp.api;\n\nexport const register = (name, email) => async (dispatch) => {\n  dispatch({\n    type: ACCOUNT_REGISTER_REQUEST,\n    payload: { name, email },\n  });\n  try {\n    const { data } = await accountApi.post(\"/register\", {\n      name,\n      email,\n    });\n    console.log(\"data:\", data);\n\n    // const { data } = await Axios.post(\n    //   \"http://localhost:3000/api/accounts/register\",\n    //   {\n    //     name,\n    //     email,\n    //   }\n    // );\n\n    dispatch({ type: ACCOUNT_REGISTER_SUCCESS, payload: data });\n\n    dispatch({ type: ACCOUNT_SIGNIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"accountInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: ACCOUNT_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const signin = (email) => async (dispatch) => {\n  dispatch({ type: ACCOUNT_SIGNIN_REQUEST, payload: { email } });\n  try {\n    const { data } = await Axios.post(\n      \"http://localhost:3000/api/accounts/signin\",\n      { email }\n    );\n    dispatch({ type: ACCOUNT_SIGNIN_SUCCESS, payload: data });\n    // dispatch(emailAccount(email));\n\n    localStorage.setItem(\"accountInfo\", JSON.stringify(data));\n  } catch (error) {\n    // console.log(\"error :\", error);\n    dispatch({\n      type: ACCOUNT_SIGNIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const signout = () => (dispatch) => {\n  localStorage.removeItem(\"accountInfo\");\n  localStorage.removeItem(\"userInfo\");\n\n  dispatch({ type: ACCOUNT_SIGNOUT });\n\n  dispatch({ type: USER_SIGNOUT });\n\n  // document.location.href = \"/signin\";\n};\n\nexport const listAccounts = () => async (dispatch, getState) => {\n  dispatch({ type: ACCOUNT_LIST_REQUEST });\n  try {\n    const {\n      accountSignin: { accountInfo },\n    } = getState();\n    const { data } = await Axios.get(\"http://localhost:3000/api/accounts\", {\n      headers: {\n        Authorization: `Bearer ${accountInfo.token}`,\n      },\n    });\n\n    dispatch({ type: ACCOUNT_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ACCOUNT_LIST_FAIL, payload: message });\n  }\n};\n\nexport const deleteAccount = (accountId) => async (dispatch, getState) => {\n  dispatch({ type: ACCOUNT_DELETE_REQUEST, payload: accountId });\n  const {\n    accountSignin: { accountInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.delete(\n      `http://localhost:3000/api/accounts/${accountId}`,\n      {\n        headers: { Authorization: `Bearer ${accountInfo.token}` },\n      }\n    );\n    dispatch({ type: ACCOUNT_DELETE_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ACCOUNT_DELETE_FAIL, payload: message });\n  }\n};\n\nexport const detailsAccount = (accountId) => async (dispatch) => {\n  dispatch({ type: ACCOUNT_DETAILS_REQUEST, payload: accountId });\n  try {\n    const { data } = await Axios.get(\n      `http://localhost:3000/api/accounts/${accountId}`\n    );\n    dispatch({ type: ACCOUNT_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ACCOUNT_DETAILS_FAIL, payload: message });\n  }\n};\n\nexport const updateAccount = (account) => async (dispatch, getState) => {\n  console.log(\"account:\", account);\n  dispatch({ type: ACCOUNT_UPDATE_PROFILE_REQUEST, payload: account });\n  const {\n    accountSignin: { accountInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.patch(\n      `http://localhost:3000/api/accounts/${account._id}`,\n      account,\n      {\n        headers: { Authorization: `Bearer ${accountInfo.token}` },\n      }\n    );\n    dispatch({ type: ACCOUNT_UPDATE_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ACCOUNT_UPDATE_FAIL, payload: message });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}