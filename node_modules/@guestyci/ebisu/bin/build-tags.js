#!/usr/bin/env node

const ora = require('ora');
const argv = require('yargs').argv;
const chalk = require('chalk');
const { getKeyFromJson, loadPackageJson } = require('../util/files');
const { createTagFromRegex } = require('../scripts/build-tags');
const { makeAndPushTag, getCommitMessage } = require('../util/git');
const {
  triggers: { commitMessageTag },
} = require('../util/default');

const spinner = ora({ spinner: 'triangle', color: 'blue' });

const start = async () => {
  try {
    if (argv.byMessage) {
      if (!getCommitMessage().includes(commitMessageTag)) {
        return spinner.warn(`Skip Build.`).stop();
      }
      spinner.info('Start tagging due to commit message trigger');
    }

    spinner.info('Matching files change to tags regex`s');

    const tagsRoles = getKeyFromJson('guesty.build.tags', loadPackageJson());

    if (!tagsRoles) {
      return spinner
        .fail('No tags in package.json Path: guesty.build.tags')
        .stop();
    }

    const buildTriggerTag = argv.listFilesDiff
      ? await createTagFromRegex(tagsRoles, argv.listFilesDiff)
      : await createTagFromRegex(tagsRoles);

    spinner.info(`Create build Tag: ${chalk.bold.green(buildTriggerTag)}`);

    await makeAndPushTag(buildTriggerTag, { pushArgs: '--no-verify' });

    spinner.succeed('Finish tagging commit');
  } catch (e) {
    spinner.stop();
    throw e;
  }

  return;
};

module.exports = start;
