{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { useMemo, useState, useContext } from 'react';\nimport isObject from 'lodash/isObject';\nimport LocalizationContext from \"../LocalizationProvider/LocalizationContext\";\nimport { intl } from \"../utils/i18nUtility\";\n\nvar getFormattedTranslations = function getFormattedTranslations() {\n  var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return items.map(function (item) {\n    var defaultMessage = item.d || item.defaultMessage;\n    return intl.get(item.id, item.variables, defaultMessage).d(defaultMessage);\n  });\n};\n\nvar useTranslations = function useTranslations() {\n  var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var deps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  var _useContext = useContext(LocalizationContext),\n      language = _useContext.language;\n\n  return useMemo(function () {\n    var isMultiTranslate = isObject(items[0]);\n    return isMultiTranslate ? getFormattedTranslations(items) : [intl.get(items[0]).d(items[1])];\n  }, [language].concat(_toConsumableArray(deps)));\n};\n\nexport default useTranslations;","map":{"version":3,"sources":["/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/node_modules/@guestyci/localize/esm/useTranslations/useTranslations.js"],"names":["_toConsumableArray","useMemo","useState","useContext","isObject","LocalizationContext","intl","getFormattedTranslations","items","arguments","length","undefined","map","item","defaultMessage","d","get","id","variables","useTranslations","deps","_useContext","language","isMultiTranslate","concat"],"mappings":"AAAA,OAAOA,kBAAP,MAA+B,8CAA/B;AACA,SAASC,OAAT,EAAkBC,QAAlB,EAA4BC,UAA5B,QAA8C,OAA9C;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,mBAAP,MAAgC,6CAAhC;AACA,SAASC,IAAT,QAAqB,sBAArB;;AAEA,IAAIC,wBAAwB,GAAG,SAASA,wBAAT,GAAoC;AACjE,MAAIC,KAAK,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAhF;AACA,SAAOD,KAAK,CAACI,GAAN,CAAU,UAAUC,IAAV,EAAgB;AAC/B,QAAIC,cAAc,GAAGD,IAAI,CAACE,CAAL,IAAUF,IAAI,CAACC,cAApC;AACA,WAAOR,IAAI,CAACU,GAAL,CAASH,IAAI,CAACI,EAAd,EAAkBJ,IAAI,CAACK,SAAvB,EAAkCJ,cAAlC,EAAkDC,CAAlD,CAAoDD,cAApD,CAAP;AACD,GAHM,CAAP;AAID,CAND;;AAQA,IAAIK,eAAe,GAAG,SAASA,eAAT,GAA2B;AAC/C,MAAIX,KAAK,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAhF;AACA,MAAIW,IAAI,GAAGX,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAA/E;;AAEA,MAAIY,WAAW,GAAGlB,UAAU,CAACE,mBAAD,CAA5B;AAAA,MACIiB,QAAQ,GAAGD,WAAW,CAACC,QAD3B;;AAGA,SAAOrB,OAAO,CAAC,YAAY;AACzB,QAAIsB,gBAAgB,GAAGnB,QAAQ,CAACI,KAAK,CAAC,CAAD,CAAN,CAA/B;AACA,WAAOe,gBAAgB,GAAGhB,wBAAwB,CAACC,KAAD,CAA3B,GAAqC,CAACF,IAAI,CAACU,GAAL,CAASR,KAAK,CAAC,CAAD,CAAd,EAAmBO,CAAnB,CAAqBP,KAAK,CAAC,CAAD,CAA1B,CAAD,CAA5D;AACD,GAHa,EAGX,CAACc,QAAD,EAAWE,MAAX,CAAkBxB,kBAAkB,CAACoB,IAAD,CAApC,CAHW,CAAd;AAID,CAXD;;AAaA,eAAeD,eAAf","sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { useMemo, useState, useContext } from 'react';\nimport isObject from 'lodash/isObject';\nimport LocalizationContext from \"../LocalizationProvider/LocalizationContext\";\nimport { intl } from \"../utils/i18nUtility\";\n\nvar getFormattedTranslations = function getFormattedTranslations() {\n  var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return items.map(function (item) {\n    var defaultMessage = item.d || item.defaultMessage;\n    return intl.get(item.id, item.variables, defaultMessage).d(defaultMessage);\n  });\n};\n\nvar useTranslations = function useTranslations() {\n  var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var deps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  var _useContext = useContext(LocalizationContext),\n      language = _useContext.language;\n\n  return useMemo(function () {\n    var isMultiTranslate = isObject(items[0]);\n    return isMultiTranslate ? getFormattedTranslations(items) : [intl.get(items[0]).d(items[1])];\n  }, [language].concat(_toConsumableArray(deps)));\n};\n\nexport default useTranslations;"]},"metadata":{},"sourceType":"module"}