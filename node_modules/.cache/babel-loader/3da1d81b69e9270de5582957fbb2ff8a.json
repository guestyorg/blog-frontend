{"ast":null,"code":"var _jsxFileName = \"/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/screens/AccountAddScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport Resource from \"@guestyci/agni\";\nimport RaisedButton from \"@guestyci/foundation/RaisedButton\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport Form from \"@guestyci/foundation/Form\";\nimport Input from \"@guestyci/foundation/Input\";\nimport DateRangePicker from \"@guestyci/foundation/DatePicker/DateRangePicker\";\nimport SingleDatePicker from \"@guestyci/foundation/DatePicker/SingleDatePicker\";\nimport NumberPicker from \"@guestyci/foundation/NumberPicker\";\nimport EmailInput from \"@guestyci/foundation/EmailInput\";\nimport Dropdown, { Option } from \"@guestyci/foundation/Dropdown\";\nimport TextField from \"@guestyci/foundation/TextField\";\nimport TextArea from \"@guestyci/foundation/TextArea\";\nimport Col from \"@guestyci/foundation/Layout/Col\";\nimport Section from \"@guestyci/foundation/Layout/Section\";\nimport DurationPicker from \"@guestyci/foundation/DurationPicker\";\nimport TimePicker from \"@guestyci/foundation/TimePicker\";\nimport FormField from \"@guestyci/foundation/FormField\";\nimport FormGroup from \"@guestyci/foundation/FormGroup\";\nimport { FormProvider } from \"@guestyci/foundation/enums\"; // import { email } from '@guestyci/foundation/validators';\n\nimport createStyles from \"@guestyci/foundation/createStyles\";\nimport ErrorBanner from \"@guestyci/foundation/legacy/Table/ErrorBanner\";\nimport { useToast } from \"@guestyci/foundation/Toast\";\nimport { register } from \"../actions/accountActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = createStyles(theme => ({\n  app: {\n    backgroundColor: \"white\"\n  }\n}));\nexport default function AccountAddScreen(props) {\n  _s();\n\n  console.log(\"email\");\n  const classes = useStyles();\n  const {\n    addToast\n  } = useToast();\n  const {\n    api,\n    env,\n    config\n  } = Resource.create(); // const { id } = useParams();\n  // console.log(\"id:\", id);\n  /// states\n\n  const [name, setName] = useState();\n  const [email, setEmail] = useState(); // const [password, setPassword] = useState();\n\n  const errorMessage = \"There was a problem add the user.\";\n  const [error, setError] = useState(false); ///selectors\n\n  const accountRegister = useSelector(state => state.accountRegister);\n  const {\n    accountInfo,\n    loading,\n    error: errorRegister\n  } = accountRegister;\n  const accountSignin = useSelector(state => state.accountSignin);\n  const {\n    accountInfo: accountInfoSignIn,\n    loading: loadingSignIn,\n    error: errorSignIn\n  } = accountSignin; /// effects\n\n  useEffect(() => {\n    if (accountInfo || accountInfoSignIn) {\n      addToast.success(`account ${name} was add successfully`);\n      props.history.push(\"/\");\n    }\n  }, [props.history, redirect, accountInfo, accountInfoSignIn]); //dispatchers\n\n  const dispatch = useDispatch();\n\n  const onSubmit = e => {\n    // e.preventDefault();\n    console.log(\"onSubmit\");\n    console.log(name);\n    console.log(email);\n    dispatch(register(name, email));\n    setName(\"\");\n    setEmail(\"\"); // console.log(password);\n    // async function createAccount() {\n    //   try {\n    //     const response = await api.post(`/users`, {\n    //       name,\n    //       email,\n    //       // password,\n    //     }); // will go to `${config.MAILER_URL}/users`\n    //     console.log(\"response:\", response);\n    //     // const data = response.data;]\n    //     if (response.status === 200) {\n    //       addToast.success(`user ${name} was add successfully`);\n    //       props.history.push(\"/\");\n    //     } else {\n    //       console.log(\"response.status: \", response.status);\n    //     }\n    //   } catch (error) {\n    //     console.log(\"error:\", error);\n    //     addToast.danger(\"error adding the user\");\n    //     setError(true);\n    //     // setTimeout(() => {\n    //     //   setError(false);\n    //     // }, 3000);\n    //   }\n    // }\n    // createAccount();\n    // props.history.push(\"/\");\n  };\n\n  const closeError = () => {\n    setError(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    className: classes.app,\n    justify: \"center\",\n    \"data-qa\": \"account-add-screen\",\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      spacing: 6,\n      span: 6,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"h2\",\n        children: [\"Add Account:\", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FinalForm, {\n        onSubmit: onSubmit,\n        initialValues: {},\n        render: ({\n          handleSubmit\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          title: \"Create Account\",\n          onSubmit: handleSubmit,\n          provider: FormProvider.Final,\n          fieldInstance: Field,\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(FormField, {\n                label: \"First Name\",\n                name: \"name\" //   info=\"Drama, Action etc.\"\n                ,\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  name: \"name\",\n                  value: name,\n                  placeholder: name,\n                  onChange: e => setName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormField, {\n                label: \"Email\",\n                name: \"email\",\n                children: /*#__PURE__*/_jsxDEV(EmailInput, {\n                  name: \"email\",\n                  value: email,\n                  placeholder: email // validate={[email]}\n                  ,\n                  onChange: e => setEmail(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(RaisedButton, {\n              type: \"submit\",\n              children: \"Create Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 17\n            }, this), error && /*#__PURE__*/_jsxDEV(ErrorBanner, {\n              show: error,\n              errorMessage: errorMessage,\n              onClick: closeError,\n              actionText: \"Try again\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AccountAddScreen, \"N+Zc0w+QZbyVCvUJQWlCprYziUA=\", false, function () {\n  return [useStyles, useToast, useSelector, useSelector, useDispatch];\n});\n\n_c = AccountAddScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountAddScreen\");","map":{"version":3,"sources":["/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/screens/AccountAddScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","useParams","Resource","RaisedButton","Form","FinalForm","Field","Input","DateRangePicker","SingleDatePicker","NumberPicker","EmailInput","Dropdown","Option","TextField","TextArea","Col","Section","DurationPicker","TimePicker","FormField","FormGroup","FormProvider","createStyles","ErrorBanner","useToast","register","useStyles","theme","app","backgroundColor","AccountAddScreen","props","console","log","classes","addToast","api","env","config","create","name","setName","email","setEmail","errorMessage","error","setError","accountRegister","state","accountInfo","loading","errorRegister","accountSignin","accountInfoSignIn","loadingSignIn","errorSignIn","success","history","push","redirect","dispatch","onSubmit","e","closeError","handleSubmit","Final","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { useParams } from \"react-router-dom\";\nimport Resource from \"@guestyci/agni\";\n\nimport RaisedButton from \"@guestyci/foundation/RaisedButton\";\n\nimport { Form as FinalForm, Field } from \"react-final-form\";\n\nimport Form from \"@guestyci/foundation/Form\";\nimport Input from \"@guestyci/foundation/Input\";\nimport DateRangePicker from \"@guestyci/foundation/DatePicker/DateRangePicker\";\nimport SingleDatePicker from \"@guestyci/foundation/DatePicker/SingleDatePicker\";\nimport NumberPicker from \"@guestyci/foundation/NumberPicker\";\nimport EmailInput from \"@guestyci/foundation/EmailInput\";\nimport Dropdown, { Option } from \"@guestyci/foundation/Dropdown\";\nimport TextField from \"@guestyci/foundation/TextField\";\nimport TextArea from \"@guestyci/foundation/TextArea\";\nimport Col from \"@guestyci/foundation/Layout/Col\";\nimport Section from \"@guestyci/foundation/Layout/Section\";\nimport DurationPicker from \"@guestyci/foundation/DurationPicker\";\nimport TimePicker from \"@guestyci/foundation/TimePicker\";\n\nimport FormField from \"@guestyci/foundation/FormField\";\nimport FormGroup from \"@guestyci/foundation/FormGroup\";\nimport { FormProvider } from \"@guestyci/foundation/enums\";\n// import { email } from '@guestyci/foundation/validators';\nimport createStyles from \"@guestyci/foundation/createStyles\";\n\nimport ErrorBanner from \"@guestyci/foundation/legacy/Table/ErrorBanner\";\n\nimport { useToast } from \"@guestyci/foundation/Toast\";\nimport { register } from \"../actions/accountActions\";\n\nconst useStyles = createStyles((theme) => ({\n  app: {\n    backgroundColor: \"white\",\n  },\n}));\n\nexport default function AccountAddScreen(props) {\n  console.log(\"email\");\n\n  const classes = useStyles();\n  const { addToast } = useToast();\n\n  const { api, env, config } = Resource.create();\n\n  // const { id } = useParams();\n  // console.log(\"id:\", id);\n\n/// states\n  const [name, setName] = useState();\n\n  const [email, setEmail] = useState();\n\n  // const [password, setPassword] = useState();\n\n  const errorMessage = \"There was a problem add the user.\";\n\n  const [error, setError] = useState(false);\n\n\n  ///selectors\n\n  const accountRegister = useSelector((state) => state.accountRegister);\n\n  const { accountInfo, loading, error:errorRegister } = accountRegister;\n\n  const accountSignin = useSelector((state) => state.accountSignin);\n  const {\n    accountInfo: accountInfoSignIn,\n    loading: loadingSignIn,\n    error: errorSignIn,\n  } = accountSignin;\n\n\n\n  /// effects\n\n  useEffect(() => {\n    if (accountInfo || accountInfoSignIn) {\n      addToast.success(`account ${name} was add successfully`)\n      props.history.push(\"/\");\n    }\n  }, [props.history, redirect, accountInfo, accountInfoSignIn]);\n\n\n\n\n\n\n\n\n\n\n  //dispatchers\n\n  const dispatch = useDispatch();\n\n  const onSubmit = (e) => {\n    // e.preventDefault();\n\n    console.log(\"onSubmit\");\n    console.log(name);\n    console.log(email);\n\n    dispatch(register(name, email));\n\n    \n\n\n    \n    setName(\"\");\n    setEmail(\"\");\n\n    // console.log(password);\n\n    // async function createAccount() {\n    //   try {\n    //     const response = await api.post(`/users`, {\n    //       name,\n    //       email,\n    //       // password,\n    //     }); // will go to `${config.MAILER_URL}/users`\n    //     console.log(\"response:\", response);\n    //     // const data = response.data;]\n\n    //     if (response.status === 200) {\n    //       addToast.success(`user ${name} was add successfully`);\n    //       props.history.push(\"/\");\n    //     } else {\n    //       console.log(\"response.status: \", response.status);\n    //     }\n    //   } catch (error) {\n    //     console.log(\"error:\", error);\n    //     addToast.danger(\"error adding the user\");\n\n    //     setError(true);\n\n    //     // setTimeout(() => {\n    //     //   setError(false);\n    //     // }, 3000);\n    //   }\n    // }\n    // createAccount();\n\n    // props.history.push(\"/\");\n  };\n\n  const closeError = () => {\n    setError(false);\n  };\n\n  return (\n    <Section className={classes.app} justify=\"center\">\n      <Col spacing={6} span={6}>\n        <TextField variant=\"h2\">\n          Add Account:\n          {name}\n        </TextField>\n        <FinalForm\n          onSubmit={onSubmit}\n          initialValues={{}}\n          render={({ handleSubmit }) => (\n            <Form\n              title=\"Create Account\"\n              onSubmit={handleSubmit}\n              provider={FormProvider.Final}\n              fieldInstance={Field}\n            >\n              <FormGroup>\n                <FormGroup>\n                  <FormField\n                    label=\"First Name\"\n                    name=\"name\"\n                    //   info=\"Drama, Action etc.\"\n                  >\n                    <Input\n                      name=\"name\"\n                      value={name}\n                      placeholder={name}\n                      onChange={(e) => setName(e.target.value)}\n                    />\n                  </FormField>\n                  <FormField label=\"Email\" name=\"email\">\n                    <EmailInput\n                      name=\"email\"\n                      value={email}\n                      placeholder={email}\n                      // validate={[email]}\n                      onChange={(e) => setEmail(e.target.value)}\n                    />\n                  </FormField>\n\n                  {/* \n                  <FormField label=\"Password\" name=\"password\">\n                    <Input\n                      name=\"password\"\n                      type={password}\n                      value={password}\n                      placeholder={password}\n                      validate={[password]}\n                      onChange={(e) => setPassword(e.target.value)}\n                    />\n                  </FormField> */}\n                </FormGroup>\n                {/* <FormField label=\"Country\" info=\"e.g (US)\" name=\"country\">\n                    <Input />\n                  </FormField>\n                  <FormField label=\"Runtime\" name=\"runtime\">\n                    <Input />\n                  </FormField>\n                  <FormField label=\"Contact\" name=\"contact\">\n                    <Input />\n                  </FormField>\n                  <FormField label=\"Biography\" name=\"bigraphy\" required>\n                    <TextArea />\n                  </FormField>\n                  <FormField label=\"Age\" name=\"age\" required>\n                    <NumberPicker />\n                  </FormField> */}\n                {/* <FormField\n                  label=\"Email\"\n                  name=\"email\"\n                  validate={[email]}\n                  required\n                >\n                  <EmailInput\n                    name=\"email\"\n                    value={email}\n                    placeholder={email}\n                  />\n                </FormField> */}\n                {/* <FormField label=\"Gender\" name=\"gender\" required>\n                    <Dropdown>\n                      {['Male', 'Female'].map((gender) => (\n                        <Option value={gender} key={gender}>\n                          {gender}\n                        </Option>\n                      ))}\n                    </Dropdown>\n                  </FormField>\n                  <FormField\n                    label=\"Single Date Picker\"\n                    name=\"singleDatePicker\"\n                    required\n                  >\n                    <SingleDatePicker />\n                  </FormField>\n                  <FormField\n                    label=\"Date Range Picker\"\n                    name=\"dateRangePicker\"\n                    required\n                  >\n                    <DateRangePicker />\n                  </FormField>\n                  <FormField label=\"Time picker\" name=\"time\" required>\n                    <TimePicker />\n                  </FormField>\n                  <FormField label=\"Duration picker\" name=\"duration\" required>\n                    <DurationPicker />\n                  </FormField> */}\n                <RaisedButton type=\"submit\">Create Account</RaisedButton>\n\n                {error && (\n                  <ErrorBanner\n                    show={error}\n                    errorMessage={errorMessage}\n                    onClick={closeError}\n                    actionText=\"Try again\"\n                  />\n                )}\n              </FormGroup>\n            </Form>\n          )}\n        />\n      </Col>\n    </Section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}