#!/usr/bin/env node

const { pushTags } = require('../scripts/push-tags');
const git = require('../util/git');

const ora = require('ora');
const chalk = require('chalk');
const termImg = require('term-img');

const argv = require('yargs').argv;

const OTHER = 'other';
const envs = new Set([
  'staging',
  'staging2',
  'staging3',
  'staging4',
  'staging5',
  'staging6',
  'staging7',
  'staging8',
  'staging9',
  'preprod',
  OTHER,
]);

const catImage = __dirname + '/assets/cat-ninja.png';
const spinner = ora({ spinner: 'bouncingBar' });
spinner.color = 'blue';

const { AutoComplete, Input } = require('enquirer');
class AutoCompleteWithNumbers extends AutoComplete {
  number(key) {
    this.append(key);
  }
}

const triggerPrompt = async () => {
  const prompt = new AutoCompleteWithNumbers({
    name: '',
    choices: [...envs].map(env => `âœ¶ ${env}`),
    highlight: chalk.red,
    separator: '>',
    prefix: `${chalk.blue.bold(
      'Please choose a deployment environment (you can search)'
    )}`,
    styles: {
      primary: chalk.blue,
      placeholder: chalk.blue,
      em: chalk.blue,
    },
    result: env => {
      return env.slice(2);
    },
  });

  return prompt.run().then(ans => {
    prompt.clear();

    if (ans === OTHER) {
      const input = new Input({
        message: 'What will be the required env? (e.g stg6-1)',
      });
      return input.run().then(ans => ans);
    }

    return ans;
  });
};

const start = async ({ cluster }) => {
  console.log(
    `\n\t\t\t\t\t\t${chalk.yellow.bgMagenta.bold(
      'Welcome to the Guesty deploy script'
    )}\n`
  );

  let env = cluster || argv.env;

  try {
    git.validateGitIsClean();

    if (env) {
      console.log(
        `Started with configuration. Deploying to ${chalk.blue.bold(env)}`
      );
    } else {
      env = await triggerPrompt();
    }

    spinner.start('Starting CI process, please wait..');
    await pushTags(env);

    console.clear();
    console.log('\n');

    spinner.succeed(
      `Thank you. The deployment process has been triggered for env ${chalk.bold.blue(
        env
      )}\n`
    );

    termImg(catImage, { fallback: () => {} });
  } catch (e) {
    spinner.stop();

    if (e.message.includes('already exists')) {
      throw new Error(
        `${chalk.red(`This commit has already been deployed to ${env}`)}`
      );
    }

    throw e;
  }
};

module.exports = start;
