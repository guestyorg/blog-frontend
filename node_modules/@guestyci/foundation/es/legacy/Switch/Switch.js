import React, { Component } from 'react';
import cn from 'classnames';
import PropTypes from 'prop-types';
import { uuid } from "../../utils/commonUtility";
import Row from "../Row/Row";
import TextField from "../TextField/TextField";

class Switch extends Component {
  constructor(props) {
    super(props);

    this.toggle = ({
      target
    }) => {
      const {
        onChange,
        id,
        name
      } = this.props;
      onChange(target.checked, id || name);
    };

    this.state = {
      id: props.id || uuid()
    };
  }

  render() {
    const {
      label,
      textClassName,
      on,
      isDisabled,
      className,
      disabled
    } = this.props;
    const {
      id
    } = this.state;
    return /*#__PURE__*/React.createElement(Row, {
      spacing: "sm",
      className: cn('switch w-inherit', className),
      "data-qa": "switch"
    }, /*#__PURE__*/React.createElement("label", {
      htmlFor: id,
      className: cn('switch', {
        disabled: disabled || isDisabled
      })
    }, /*#__PURE__*/React.createElement("input", {
      id: id,
      type: "checkbox",
      disabled: disabled || isDisabled,
      onChange: this.toggle,
      checked: on
    }), /*#__PURE__*/React.createElement("span", {
      className: "slider"
    })), label && /*#__PURE__*/React.createElement(TextField, {
      color: on ? 'blue' : 'muted',
      className: cn('switch-label', textClassName)
    }, label));
  }

}

Switch.propTypes = {
  label: PropTypes.string,

  /** Switch status if it's on or off */
  on: PropTypes.bool.isRequired,

  /** classes to provide for the component */
  className: PropTypes.string,

  /** callback function to call when switch state change */
  onChange: PropTypes.func.isRequired,

  /** String, class for the text */
  textClassName: PropTypes.string,

  /** name for component */
  name: PropTypes.string,

  /** id for component */
  id: PropTypes.string,

  /** Indicator whether or not is disabled */
  disabled: PropTypes.bool,

  /** Indicator whether or not switch is disabled - Deprecated - use disabled */
  isDisabled: PropTypes.bool
};
Switch.defaultProps = {
  className: '',
  label: null,
  textClassName: '',
  name: '',
  id: undefined,
  disabled: false,
  isDisabled: false
};
export default Switch;