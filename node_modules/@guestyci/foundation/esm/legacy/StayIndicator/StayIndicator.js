import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";

var _tooltips;

import React from 'react';
import PropTypes from 'prop-types';
import { StayStatus } from "../../enums/enums";
import Tooltip from "../Tooltip/Tooltip";
import BaseStayIndicator from "./BaseStayIndicator";
var tooltips = (_tooltips = {}, _defineProperty(_tooltips, StayStatus.Reserved, 'Reserved'), _defineProperty(_tooltips, StayStatus.Planned, 'Upcoming stay'), _defineProperty(_tooltips, StayStatus.Staying, 'Currently staying'), _defineProperty(_tooltips, StayStatus.Complete, 'Checked out'), _tooltips);

var StayIndicator = function StayIndicator(_ref) {
  var status = _ref.status,
      className = _ref.className,
      style = _ref.style,
      dark = _ref.dark,
      id = _ref.id,
      fullWidth = _ref.fullWidth;
  return /*#__PURE__*/React.createElement(Tooltip, {
    body: tooltips[status],
    id: id,
    containerClassName: "d-flex-fill",
    "data-qa": "stay-indicator"
  }, /*#__PURE__*/React.createElement(BaseStayIndicator, {
    dark: dark,
    status: status,
    style: style,
    className: className,
    fullWdith: fullWidth
  }));
};

StayIndicator.defaultProps = {
  status: StayStatus.Planned,
  className: '',
  style: {},
  dark: false,
  id: undefined,
  fullWidth: false
};
StayIndicator.propTypes = {
  /** Stay status - Enum (StayStatus- [Reserved, Planned, Staying, Complete,]) */
  status: PropTypes.oneOf([StayStatus.Planned, StayStatus.Staying, StayStatus.Complete, StayStatus.Reserved]),

  /** Additional class to add to StayIndicator */
  className: PropTypes.string,

  /** Additional style to add to StayIndicator */
  style: PropTypes.shape(),

  /** Set theme to dark */
  dark: PropTypes.bool,

  /** Id for the stay indicator component */
  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),

  /** Set the stay indicator to fill parent component width */
  fullWidth: PropTypes.bool
};
export default StayIndicator;