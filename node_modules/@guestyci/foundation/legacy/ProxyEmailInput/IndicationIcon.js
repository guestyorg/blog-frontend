"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _reactJss = _interopRequireDefault(require("react-jss"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _SvgIcon = _interopRequireDefault(require("../SvgIcon/SvgIcon"));

var _Spinner = _interopRequireDefault(require("../Spinner/Spinner"));

var IcoApproved = function IcoApproved(props) {
  return /*#__PURE__*/_react["default"].createElement("svg", props, /*#__PURE__*/_react["default"].createElement("path", {
    d: "M10.5 0C4.701 0 0 4.701 0 10.5S4.701 21 10.5 21 21 16.299 21 10.5 16.299 0 10.5 0zm4.633 6.752l-5.537 8.202c-.018.026-.044.04-.065.063-.012.014-.018.032-.032.045-.01.01-.024.013-.035.021a.597.597 0 0 1-.123.075.595.595 0 0 1-.096.04.608.608 0 0 1-.121.018.617.617 0 0 1-.12 0 .602.602 0 0 1-.103-.025.596.596 0 0 1-.13-.054c-.013-.007-.027-.008-.04-.016-.016-.01-.024-.028-.04-.04-.023-.019-.051-.03-.072-.052l-2.693-2.931c-.233-.252-.218-.648.034-.88s.647-.219.88.033l2.163 2.354 5.098-7.55a.625.625 0 0 1 .864-.168c.284.192.36.581.168.865z"
  }));
};

IcoApproved.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 21 21"
};

var IcoDeclined = function IcoDeclined(props) {
  return /*#__PURE__*/_react["default"].createElement("svg", props, /*#__PURE__*/_react["default"].createElement("path", {
    d: "M10.5 0C4.701 0 0 4.701 0 10.5S4.701 21 10.5 21 21 16.299 21 10.5 16.299 0 10.5 0zm4.212 13.75l-.962.962-.106-.106-3.144-3.144-3.25 3.25-.962-.962 3.25-3.25-3.25-3.25.962-.962 3.25 3.25 3.25-3.25.962.962-3.25 3.25 3.25 3.25z"
  }));
};

IcoDeclined.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 21 21"
};
var style = {
  outerSize: {
    padding: '12px',
    width: 'inherit'
  }
};

var IndicationIcon = function IndicationIcon(_ref) {
  var isValidating = _ref.isValidating,
      isValid = _ref.isValid,
      classes = _ref.classes;
  return /*#__PURE__*/_react["default"].createElement("div", {
    className: (0, _classnames["default"])('flex-center', 'bg-gray-lightest', classes.outerSize),
    "data-qa": "indication-icon"
  }, isValidating ? /*#__PURE__*/_react["default"].createElement(_Spinner["default"], {
    size: 22
  }) : /*#__PURE__*/_react["default"].createElement(_SvgIcon["default"], {
    svg: isValid ? IcoApproved : IcoDeclined,
    width: 21,
    height: 21,
    color: isValid ? 'green' : 'red'
  }));
};

IndicationIcon.propTypes = {
  isValidating: _propTypes["default"].bool.isRequired,
  isValid: _propTypes["default"].bool.isRequired
};

var _default = (0, _reactJss["default"])(style)(IndicationIcon);

exports["default"] = _default;