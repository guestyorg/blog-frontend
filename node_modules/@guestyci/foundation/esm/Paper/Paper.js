import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import _extends from "@babel/runtime/helpers/esm/extends";
import React from 'react';
import PropTypes from 'prop-types';
import cn from 'classnames';
import createStyles from "../createStyles";

var generateBoxShadowClasses = function generateBoxShadowClasses(elevations) {
  return elevations.reduce(function (acc, el, index) {
    acc["boxShadow".concat(index)] = {
      'box-shadow': el
    };
    return acc;
  }, {});
};

export var useStyles = createStyles(function (theme) {
  return _extends({
    root: {
      borderRadius: 2,
      width: 'auto',
      transition: theme.transition.create('box-shadow')
    },
    bgColor: {
      backgroundColor: function backgroundColor(_ref) {
        var bgColor = _ref.bgColor;
        return bgColor;
      }
    },
    square: {
      borderRadius: 0
    },
    box: {
      border: "1px solid ".concat(theme.palette.border)
    }
  }, generateBoxShadowClasses(theme.boxShadow));
}, {
  name: 'Paper'
});
var Paper = React.forwardRef(function Paper(_ref2, ref) {
  var _cn;

  var _ref2$className = _ref2.className,
      className = _ref2$className === void 0 ? '' : _ref2$className,
      bgColor = _ref2.bgColor,
      _ref2$style = _ref2.style,
      style = _ref2$style === void 0 ? {} : _ref2$style,
      _ref2$elevation = _ref2.elevation,
      elevation = _ref2$elevation === void 0 ? 1 : _ref2$elevation,
      children = _ref2.children,
      _ref2$jss = _ref2.jss,
      jss = _ref2$jss === void 0 ? {} : _ref2$jss,
      _ref2$box = _ref2.box,
      box = _ref2$box === void 0 ? false : _ref2$box,
      _ref2$square = _ref2.square,
      square = _ref2$square === void 0 ? false : _ref2$square,
      props = _objectWithoutProperties(_ref2, ["className", "bgColor", "style", "elevation", "children", "jss", "box", "square"]);

  var classes = useStyles({
    bgColor: bgColor,
    jss: jss
  });
  return /*#__PURE__*/React.createElement("div", _extends({
    ref: ref,
    className: cn(classes.root, (_cn = {}, _defineProperty(_cn, classes.bgColor, bgColor), _defineProperty(_cn, classes.box, box), _defineProperty(_cn, classes["boxShadow".concat(elevation)], !box), _defineProperty(_cn, classes.square, square), _cn), className),
    style: style
  }, props), children);
});
Paper.propTypes = {
  /** Paper inner content */
  children: PropTypes.node.isRequired,

  /** Paper background color - from our theme colors */
  bgColor: PropTypes.string,

  /** Paper box shadow elevation - values 0-5 */
  elevation: PropTypes.oneOf([0, 1, 2, 3, 4, 5]),

  /** Paper additional classes */
  className: PropTypes.string,

  /** Paper additional styles */
  style: PropTypes.shape(),

  /** jss override object to customize the jss classes */
  jss: PropTypes.oneOfType([PropTypes.shape(), PropTypes.func]),

  /** Create Paper as a card box */
  box: PropTypes.bool,

  /** Set paper border radius to 0 */
  square: PropTypes.bool
}; // Hack for withInfo plugin

Paper.displayName = 'Paper';
export default Paper;