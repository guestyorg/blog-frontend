import _extends from "@babel/runtime/helpers/esm/extends";
import React from 'react';
import PropTypes from 'prop-types';
import withStyles from 'react-jss';
import IconDropdown from "../IconDropdown/IconDropdown";
import { colors, fontSize } from "./richTextEditorConf";
import ToolbarActionButton from "./RichTextEditorToolbarActionButton";
import { grayLight, grayLightest } from "../../theme/colors";
import { Theme } from "../../enums/enums";
import Row from "../Row/Row";
import RichTextEditorToolbarItem from "./RichTextEditorToolbarItem";

var BtnRichTextSize = function BtnRichTextSize(props) {
  return /*#__PURE__*/React.createElement("svg", props, /*#__PURE__*/React.createElement("path", {
    d: "M8.75 1.5H12V0H4v1.5h3.25v6.25h1.5V1.5z"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M3.25 4.5H5V3H0v1.5h1.75v3.25h1.5V4.5z"
  }));
};

BtnRichTextSize.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 12 7.75"
};

var BtnRichBold = function BtnRichBold(props) {
  return /*#__PURE__*/React.createElement("svg", props, /*#__PURE__*/React.createElement("path", {
    d: "M8.293 7.105c0 .457-.092.866-.276 1.225-.184.36-.437.658-.76.896-.371.279-.78.478-1.227.596S5.018 10 4.332 10H.206V.549h3.669c.762 0 1.32.025 1.673.076.352.05.703.162 1.05.336.36.182.628.427.803.733.175.307.263.658.263 1.05 0 .457-.12.86-.361 1.21-.241.349-.582.621-1.022.816v.05c.617.123 1.108.377 1.469.762.362.385.543.893.543 1.523zM5.17 3.221c0-.157-.04-.314-.117-.47a.733.733 0 0 0-.416-.349 1.985 1.985 0 0 0-.663-.111c-.265-.007-.637-.01-1.115-.01h-.228v2h.38c.386 0 .714-.007.985-.02s.484-.054.64-.126c.22-.098.364-.224.432-.378s.102-.333.102-.536zm.59 3.846c0-.3-.058-.532-.174-.695s-.314-.284-.592-.364c-.19-.056-.452-.085-.786-.09a89.315 89.315 0 0 0-1.045-.006h-.532v2.356h.177c.684 0 1.174-.003 1.47-.007s.568-.06.818-.165c.253-.106.427-.246.521-.422.096-.176.143-.378.143-.607z"
  }));
};

BtnRichBold.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 9 10"
};

var BtnRichItali = function BtnRichItali(props) {
  return /*#__PURE__*/React.createElement("svg", props, /*#__PURE__*/React.createElement("path", {
    d: "M3.746 9.451H0l.21-.92h1.237L3.21.92H1.973l.21-.92h3.745l-.21.92H4.481L2.718 8.53h1.238l-.21.92z"
  }));
};

BtnRichItali.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 5.9282227 9.4511719"
};

var BtnRichUnderline = function BtnRichUnderline(props) {
  return /*#__PURE__*/React.createElement("svg", props, /*#__PURE__*/React.createElement("path", {
    d: "M7.255 5.655c0 .686-.074 1.283-.225 1.793a2.899 2.899 0 0 1-1.883 1.978c-.435.148-.943.222-1.522.222-.593 0-1.11-.079-1.55-.235s-.81-.388-1.11-.692a3.006 3.006 0 0 1-.74-1.256C.076 6.974 0 6.37 0 5.655V0h1.257v5.719c0 .511.035.916.104 1.213.07.296.188.564.353.805.186.276.439.483.759.622.319.14.703.21 1.152.21.452 0 .837-.069 1.155-.207a1.75 1.75 0 0 0 .762-.625 2.38 2.38 0 0 0 .352-.828c.07-.311.105-.697.105-1.159V0h1.256v5.655z"
  }));
};

BtnRichUnderline.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 7.2548828 9.6484375"
};

var BtnRichTextColor = function BtnRichTextColor(props) {
  return /*#__PURE__*/React.createElement("svg", props, /*#__PURE__*/React.createElement("style", null, ".st0", `{`, "enable-background:new", `}`), /*#__PURE__*/React.createElement("path", {
    d: "M10.778 9.451H9.44l-.927-2.635H4.425l-.927 2.635H2.222L5.662 0h1.676l3.44 9.451zM8.125 5.738l-1.656-4.64-1.664 4.64h3.32z",
    className: "st0"
  }), /*#__PURE__*/React.createElement("path", {
    id: "icon",
    d: "M0 11.451h13v1H0z"
  }));
};

BtnRichTextColor.defaultProps = {
  id: "icon_2_",
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 13 12.4510498"
};

var BtnRichBullets = function BtnRichBullets(props) {
  return /*#__PURE__*/React.createElement("svg", props, /*#__PURE__*/React.createElement("path", {
    d: "M4 2h7v1H4V2zm0 4h7v1H4V6zm0 2h7v1H4V8zM0 6h2v2H0V6zm4-6h7v1H4V0zM0 0h2v2H0V0z"
  }));
};

BtnRichBullets.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 11 9"
};

var BtnRichNumbers = function BtnRichNumbers(props) {
  return /*#__PURE__*/React.createElement("svg", props, /*#__PURE__*/React.createElement("path", {
    d: "M5 0h7v1H5zM5 6h7v1H5zM5 2h7v1H5zM5 8h7v1H5zM1 9H0v1h3V9H2V8H1zM0 7h2v1h1V6H0zM1 1h1v3h1V0H1z"
  }));
};

BtnRichNumbers.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 12 10"
};

const getBorderFromProps = props => `1px solid ${props.theme === Theme.Light ? grayLightest : grayLight}`;

const styles = {
  icon: {
    width: 25,
    height: 25,
    borderColor: grayLightest,
    border: 'none',
    padding: '5px 0 !important',
    '&:hover': {
      border: getBorderFromProps
    }
  }
};
const colorArray = colors.map(color => ({
  label: /*#__PURE__*/React.createElement("div", {
    style: {
      width: 50,
      height: 16,
      background: color
    }
  }),
  value: color
}));

const Toolbar = ({
  toggleInlineType,
  toggleBlockType,
  editorState,
  style,
  classes,
  theme
}) => {
  const currentStyles = editorState.getCurrentInlineStyle();
  return /*#__PURE__*/React.createElement("div", {
    className: `rich-text-toolbar px-1 d-flex-fill min-height-35 bb-1 ${theme === Theme.Light ? 'border-gray-lightest bg-white ' : 'border-gray-light bg-gray-lightest'}`,
    style: _extends({}, style, {
      userSelect: 'none'
    }),
    "data-qa": "toolbar"
  }, /*#__PURE__*/React.createElement(Row, {
    dense: true,
    align: "center"
  }, /*#__PURE__*/React.createElement(RichTextEditorToolbarItem, null, /*#__PURE__*/React.createElement(IconDropdown, {
    color: "transparent",
    svg: BtnRichTextSize,
    id: "font-size-control",
    containerClassName: "flex-center",
    persistSelection: true,
    width: 12,
    height: 8,
    onSelect: toggleInlineType,
    options: fontSize,
    iconClassName: classes.icon
  })), /*#__PURE__*/React.createElement(ToolbarActionButton, {
    onToggle: toggleInlineType,
    type: "BOLD",
    svg: BtnRichBold,
    iconWidth: 8,
    iconHeight: 9,
    active: currentStyles.has('BOLD'),
    theme: theme
  }), /*#__PURE__*/React.createElement(ToolbarActionButton, {
    onToggle: toggleInlineType,
    type: "ITALIC",
    svg: BtnRichItali,
    iconWidth: 6,
    iconHeight: 9,
    active: currentStyles.has('ITALIC'),
    theme: theme
  }), /*#__PURE__*/React.createElement(ToolbarActionButton, {
    onToggle: toggleInlineType,
    type: "UNDERLINE",
    svg: BtnRichUnderline,
    iconWidth: 7,
    iconHeight: 9,
    active: currentStyles.has('UNDERLINE'),
    theme: theme
  }), /*#__PURE__*/React.createElement(RichTextEditorToolbarItem, null, /*#__PURE__*/React.createElement(IconDropdown, {
    color: "transparent",
    onSelect: toggleInlineType,
    id: "color-control",
    svg: BtnRichTextColor,
    width: 13,
    height: 12,
    persistSelection: true,
    iconClassName: classes.icon,
    options: colorArray
  })), /*#__PURE__*/React.createElement(ToolbarActionButton, {
    onToggle: toggleBlockType,
    svg: BtnRichBullets,
    iconWidth: 11,
    iconHeight: 9,
    type: "unordered-list-item",
    theme: theme
  }), /*#__PURE__*/React.createElement(ToolbarActionButton, {
    onToggle: toggleBlockType,
    svg: BtnRichNumbers,
    iconWidth: 12,
    iconHeight: 10,
    type: "ordered-list-item",
    theme: theme
  })));
};

Toolbar.defaultProps = {
  style: {}
};
Toolbar.propTypes = {
  style: PropTypes.shape(),
  theme: PropTypes.string.isRequired
};
export default withStyles(styles)(Toolbar);