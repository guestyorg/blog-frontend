{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _CellRow = _interopRequireDefault(require(\"./CellRow/CellRow\"));\n\nvar LoadingIndicator = function LoadingIndicator(_ref) {\n  var show = _ref.show,\n      isTableEmpty = _ref.isTableEmpty,\n      pageSize = _ref.pageSize,\n      multiSelect = _ref.multiSelect,\n      checked = _ref.checked,\n      className = _ref.className,\n      cellComponents = _ref.cellComponents;\n  var rowPlaceholdersArray = (0, _react.useMemo)(function () {\n    var count = isTableEmpty ? pageSize : 4;\n    return (0, _toConsumableArray2[\"default\"])(Array(count).keys());\n  }, [isTableEmpty, pageSize]);\n  return show ? rowPlaceholdersArray.map(function (key) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_CellRow[\"default\"], {\n      key: \"placeholder-\".concat(key),\n      rowId: \"placeholder-\".concat(key),\n      multiSelect: multiSelect,\n      className: className,\n      data: {},\n      checked: checked,\n      isLoading: true\n    }, cellComponents);\n  }) : null;\n};\n\nLoadingIndicator.defaultProps = {\n  isTableEmpty: true,\n  pageSize: 25,\n  multiSelect: false,\n  checked: false,\n  className: undefined,\n  cellComponents: undefined\n};\nLoadingIndicator.propTypes = {\n  /** Defines whether to show the indicator */\n  show: _propTypes[\"default\"].bool,\n\n  /** Defines whether the table is currently empty */\n  isTableEmpty: _propTypes[\"default\"].bool,\n\n  /** Numner of items per page */\n  pageSize: _propTypes[\"default\"].number,\n\n  /** Boolean indicator for allowing bulk actions */\n  multiSelect: _propTypes[\"default\"].bool,\n\n  /** Boolean indicator the rows to be checked */\n  checked: _propTypes[\"default\"].bool,\n\n  /** Optional class name to the cell row */\n  className: _propTypes[\"default\"].string,\n\n  /** cell components to be shown in each row  */\n  cellComponents: _propTypes[\"default\"].node.isRequired\n};\nvar _default = LoadingIndicator;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/giladdekel/Workspace/Guesty/simple-app-archive/node_modules/@guestyci/foundation/legacy/Table/LoadingIndicator.js"],"names":["_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","exports","value","_toConsumableArray2","_react","_propTypes","_CellRow","LoadingIndicator","_ref","show","isTableEmpty","pageSize","multiSelect","checked","className","cellComponents","rowPlaceholdersArray","useMemo","count","Array","keys","map","key","createElement","concat","rowId","data","isLoading","defaultProps","undefined","propTypes","bool","number","string","node","isRequired","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _CellRow = _interopRequireDefault(require(\"./CellRow/CellRow\"));\n\nvar LoadingIndicator = function LoadingIndicator(_ref) {\n  var show = _ref.show,\n      isTableEmpty = _ref.isTableEmpty,\n      pageSize = _ref.pageSize,\n      multiSelect = _ref.multiSelect,\n      checked = _ref.checked,\n      className = _ref.className,\n      cellComponents = _ref.cellComponents;\n  var rowPlaceholdersArray = (0, _react.useMemo)(function () {\n    var count = isTableEmpty ? pageSize : 4;\n    return (0, _toConsumableArray2[\"default\"])(Array(count).keys());\n  }, [isTableEmpty, pageSize]);\n  return show ? rowPlaceholdersArray.map(function (key) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_CellRow[\"default\"], {\n      key: \"placeholder-\".concat(key),\n      rowId: \"placeholder-\".concat(key),\n      multiSelect: multiSelect,\n      className: className,\n      data: {},\n      checked: checked,\n      isLoading: true\n    }, cellComponents);\n  }) : null;\n};\n\nLoadingIndicator.defaultProps = {\n  isTableEmpty: true,\n  pageSize: 25,\n  multiSelect: false,\n  checked: false,\n  className: undefined,\n  cellComponents: undefined\n};\nLoadingIndicator.propTypes = {\n  /** Defines whether to show the indicator */\n  show: _propTypes[\"default\"].bool,\n\n  /** Defines whether the table is currently empty */\n  isTableEmpty: _propTypes[\"default\"].bool,\n\n  /** Numner of items per page */\n  pageSize: _propTypes[\"default\"].number,\n\n  /** Boolean indicator for allowing bulk actions */\n  multiSelect: _propTypes[\"default\"].bool,\n\n  /** Boolean indicator the rows to be checked */\n  checked: _propTypes[\"default\"].bool,\n\n  /** Optional class name to the cell row */\n  className: _propTypes[\"default\"].string,\n\n  /** cell components to be shown in each row  */\n  cellComponents: _propTypes[\"default\"].node.isRequired\n};\nvar _default = LoadingIndicator;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}