{"ast":null,"code":"var _jsxFileName = \"/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/Post/PostViewScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NavLink, useParams } from \"react-router-dom\";\nimport Resource from \"@guestyci/agni\";\nimport RaisedButton from \"@guestyci/foundation/RaisedButton\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport Form from \"@guestyci/foundation/Form\";\nimport Input from \"@guestyci/foundation/Input\";\nimport DateRangePicker from \"@guestyci/foundation/DatePicker/DateRangePicker\";\nimport SingleDatePicker from \"@guestyci/foundation/DatePicker/SingleDatePicker\";\nimport NumberPicker from \"@guestyci/foundation/NumberPicker\";\nimport EmailInput from \"@guestyci/foundation/EmailInput\";\nimport Dropdown, { Option } from \"@guestyci/foundation/Dropdown\";\nimport TextField from \"@guestyci/foundation/TextField\";\nimport TextArea from \"@guestyci/foundation/TextArea\";\nimport Col from \"@guestyci/foundation/Layout/Col\";\nimport Section from \"@guestyci/foundation/Layout/Section\";\nimport DurationPicker from \"@guestyci/foundation/DurationPicker\";\nimport TimePicker from \"@guestyci/foundation/TimePicker\";\nimport FormField from \"@guestyci/foundation/FormField\";\nimport FormGroup from \"@guestyci/foundation/FormGroup\";\nimport { FormProvider } from \"@guestyci/foundation/enums\"; // import { email } from \"@guestyci/foundation/validators\";\n\nimport createStyles from \"@guestyci/foundation/createStyles\";\nimport FlatButton from \"@guestyci/foundation/FlatButton\";\nimport { Row } from \"@guestyci/foundation/Layout\";\nimport { ReactComponent as BtnTrash } from \"@svgr/webpack?-svgo,+titleProp,+ref!@guestyci/foundation/icons/BtnTrash.svg\";\nimport Icon from \"@guestyci/foundation/Icon\";\nimport { useToast } from \"@guestyci/foundation/Toast\";\nimport { deletePost, detailsPost, updatePost } from \"../../actions/blogActions\";\nimport { POST_DELETE_RESET, POST_DETAILS_RESET, POST_UPDATE_RESET } from \"../../constants/blogConstants\"; // posts\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = createStyles(theme => ({\n  app: {\n    backgroundColor: \"white\",\n    marginTop: \"20px\"\n  }\n}));\nexport default function PostViewScreen(props) {\n  _s();\n\n  const classes = useStyles(); // const { api, env, config } = Resource.create();\n\n  const {\n    blogId,\n    postId\n  } = useParams(); // console.log(\"id:\", id);\n\n  const [title, setTitle] = useState();\n  const [email, setEmail] = useState(); /////\n\n  const [content, setContent] = useState(); /////\n\n  const [author, setAuthor] = useState();\n  const [date, setDate] = useState(); // useSelector\n\n  const postDetails = useSelector(state => state.postDetails);\n  const {\n    loading,\n    error: errorPostDetails,\n    post\n  } = postDetails;\n  console.log('post:', post); // useDispatch\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!post) {\n      dispatch(detailsPost(blogId, postId));\n    } else {\n      setTitle(post.title); ////\n\n      setAuthor(`${post.userId.firstName} ${post.userId.lastName}`);\n      setEmail(post.userId.email);\n      setContent(post.content);\n      setDate(new Date(post.createdAt).toLocaleString());\n    }\n  }, [dispatch, props.history, post, blogId, postId]);\n  useEffect(() => {\n    dispatch({\n      type: POST_DETAILS_RESET\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Section, {\n      className: classes.app,\n      justify: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        spacing: 6,\n        span: 6,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"h1\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"h5\",\n          children: author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"h5\",\n          children: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"h5\",\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"h4\",\n          children: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          to: `/blog/edit/${blogId}/post/${postId}` // activeStyle={activeStyle}\n          ,\n          style: {\n            marginLeft: \"20px\"\n          },\n          exact: true,\n          children: \"edit the post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(PostViewScreen, \"wjt6KvvPG3dpSdoA/2mkOJAzzj0=\", false, function () {\n  return [useStyles, useParams, useSelector, useDispatch];\n});\n\n_c = PostViewScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostViewScreen\");","map":{"version":3,"sources":["/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/Post/PostViewScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","NavLink","useParams","Resource","RaisedButton","Form","FinalForm","Field","Input","DateRangePicker","SingleDatePicker","NumberPicker","EmailInput","Dropdown","Option","TextField","TextArea","Col","Section","DurationPicker","TimePicker","FormField","FormGroup","FormProvider","createStyles","FlatButton","Row","Icon","useToast","deletePost","detailsPost","updatePost","POST_DELETE_RESET","POST_DETAILS_RESET","POST_UPDATE_RESET","useStyles","theme","app","backgroundColor","marginTop","PostViewScreen","props","classes","blogId","postId","title","setTitle","email","setEmail","content","setContent","author","setAuthor","date","setDate","postDetails","state","loading","error","errorPostDetails","post","console","log","dispatch","userId","firstName","lastName","Date","createdAt","toLocaleString","history","type","marginLeft"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { NavLink, useParams } from \"react-router-dom\";\n\nimport Resource from \"@guestyci/agni\";\n\nimport RaisedButton from \"@guestyci/foundation/RaisedButton\";\n\nimport { Form as FinalForm, Field } from \"react-final-form\";\n\nimport Form from \"@guestyci/foundation/Form\";\nimport Input from \"@guestyci/foundation/Input\";\nimport DateRangePicker from \"@guestyci/foundation/DatePicker/DateRangePicker\";\nimport SingleDatePicker from \"@guestyci/foundation/DatePicker/SingleDatePicker\";\nimport NumberPicker from \"@guestyci/foundation/NumberPicker\";\nimport EmailInput from \"@guestyci/foundation/EmailInput\";\nimport Dropdown, { Option } from \"@guestyci/foundation/Dropdown\";\nimport TextField from \"@guestyci/foundation/TextField\";\nimport TextArea from \"@guestyci/foundation/TextArea\";\nimport Col from \"@guestyci/foundation/Layout/Col\";\nimport Section from \"@guestyci/foundation/Layout/Section\";\nimport DurationPicker from \"@guestyci/foundation/DurationPicker\";\nimport TimePicker from \"@guestyci/foundation/TimePicker\";\n\nimport FormField from \"@guestyci/foundation/FormField\";\nimport FormGroup from \"@guestyci/foundation/FormGroup\";\nimport { FormProvider } from \"@guestyci/foundation/enums\";\n// import { email } from \"@guestyci/foundation/validators\";\nimport createStyles from \"@guestyci/foundation/createStyles\";\n\nimport FlatButton from \"@guestyci/foundation/FlatButton\";\nimport { Row } from \"@guestyci/foundation/Layout\";\nimport { ReactComponent as BtnTrash } from \"@guestyci/foundation/icons/BtnTrash.svg\";\nimport Icon from \"@guestyci/foundation/Icon\";\n\nimport { useToast } from \"@guestyci/foundation/Toast\";\nimport { deletePost, detailsPost, updatePost } from \"../../actions/blogActions\";\nimport {\n  POST_DELETE_RESET,\n  POST_DETAILS_RESET,\n  POST_UPDATE_RESET,\n} from \"../../constants/blogConstants\";\n\n// posts\n\nconst useStyles = createStyles((theme) => ({\n  app: {\n    backgroundColor: \"white\",\n    marginTop: \"20px\",\n  },\n}));\n\nexport default function PostViewScreen(props) {\n  const classes = useStyles();\n\n  // const { api, env, config } = Resource.create();\n\n  const { blogId, postId } = useParams();\n  // console.log(\"id:\", id);\n\n  const [title, setTitle] = useState();\n\n  const [email, setEmail] = useState();\n\n  /////\n  const [content, setContent] = useState();\n  /////\n\n  const [author, setAuthor] = useState();\n\n  const [date, setDate] = useState();\n\n  // useSelector\n  const postDetails = useSelector((state) => state.postDetails);\n  const { loading, error: errorPostDetails, post } = postDetails;\n  console.log('post:', post)\n\n  // useDispatch\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!post) {\n      dispatch(detailsPost(blogId, postId));\n    } else {\n      setTitle(post.title);\n      ////\n\n      setAuthor(`${post.userId.firstName} ${post.userId.lastName}`);\n\n      setEmail(post.userId.email);\n      setContent(post.content);\n      setDate(new Date(post.createdAt).toLocaleString());\n    }\n  }, [dispatch, props.history, post, blogId, postId]);\n\n  useEffect(() => {\n    dispatch({ type: POST_DETAILS_RESET });\n  }, []);\n\n  return (\n    <>\n      <Section className={classes.app} justify=\"center\">\n        <Col spacing={6} span={6}>\n          <TextField variant=\"h1\">{title}</TextField>\n          <TextField variant=\"h5\">{author}</TextField>\n          <TextField variant=\"h5\">{email}</TextField>\n\n          <TextField variant=\"h5\">{date}</TextField>\n\n          <TextField variant=\"h4\">{content}</TextField>\n\n\n          <NavLink\n            to={`/blog/edit/${blogId}/post/${postId}`}\n            // activeStyle={activeStyle}\n            style={{ marginLeft: \"20px\" }}\n            exact\n          >\n            edit the post\n          </NavLink>\n        </Col>\n      </Section>\n      {/* /////////////////////// posts//////////////////  */}\n      {/* <PostList postId={id} /> */}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}