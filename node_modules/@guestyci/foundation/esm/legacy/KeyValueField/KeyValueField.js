import React from 'react';
import PropTypes from 'prop-types';
import isBoolean from 'lodash/isBoolean';
import Tooltip from "../Tooltip/Tooltip";
import SvgIcon from "../SvgIcon/SvgIcon";

var BtnHelp = function BtnHelp(props) {
  return /*#__PURE__*/React.createElement("svg", props, /*#__PURE__*/React.createElement("path", {
    d: "M6.5 13C2.916 13 0 10.084 0 6.5S2.916 0 6.5 0 13 2.916 13 6.5 10.084 13 6.5 13zm0-12A5.506 5.506 0 0 0 1 6.5C1 9.532 3.467 12 6.5 12 9.532 12 12 9.532 12 6.5 12 3.467 9.532 1 6.5 1z"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M4.5 3.735c.113-.1.237-.195.372-.285a2.674 2.674 0 0 1 .948-.393C6.003 3.02 6.202 3 6.415 3c.29 0 .554.04.792.12s.443.194.613.343c.17.148.302.327.395.537s.14.445.14.705c0 .253-.037.472-.11.658s-.166.345-.277.482a2.205 2.205 0 0 1-.363.355l-.37.283a2.924 2.924 0 0 0-.303.26.513.513 0 0 0-.152.287l-.115.73H5.82l-.085-.815a.222.222 0 0 1-.005-.042V6.86c0-.147.037-.274.11-.383s.165-.21.275-.304c.11-.096.228-.188.355-.278.127-.09.245-.187.355-.292.11-.106.202-.225.275-.358a.96.96 0 0 0 .11-.47.73.73 0 0 0-.255-.568c-.08-.068-.176-.12-.287-.157s-.233-.055-.363-.055a1.615 1.615 0 0 0-.817.202c-.092.052-.17.099-.233.14a.32.32 0 0 1-.17.063.273.273 0 0 1-.26-.15L4.5 3.735zm.945 5.62c0-.103.02-.202.058-.295a.705.705 0 0 1 .16-.24.79.79 0 0 1 .545-.22.76.76 0 0 1 .537.22.756.756 0 0 1 .22.535.764.764 0 0 1-.22.535.774.774 0 0 1-.537.215.787.787 0 0 1-.545-.215.71.71 0 0 1-.16-.237.761.761 0 0 1-.058-.298z"
  }));
};

BtnHelp.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 13 13"
};
import { firstLetterUppercase } from "../../utils/commonUtility";

function humaniseValue(value) {
  if (isBoolean(value)) {
    return value ? 'Yes' : 'No';
  }

  return value;
}

var KeyValueField = function KeyValueField(_ref) {
  var title = _ref.title,
      value = _ref.value,
      valueColor = _ref.valueColor,
      tooltip = _ref.tooltip;
  return /*#__PURE__*/React.createElement("div", {
    className: "flex-1 flex-column",
    "data-qa": "key-value-field"
  }, /*#__PURE__*/React.createElement("div", {
    className: "font-size-md title-field text-muted d-flex"
  }, firstLetterUppercase(title), tooltip && /*#__PURE__*/React.createElement(Tooltip, {
    body: tooltip
  }, /*#__PURE__*/React.createElement(SvgIcon, {
    className: "ml-1",
    color: "muted",
    width: 13,
    height: 13,
    svg: BtnHelp
  }))), /*#__PURE__*/React.createElement("div", {
    className: "font-size-lg mt-2 value-field text-".concat(value ? valueColor : 'muted')
  }, humaniseValue(value) || 'Not defined'));
};

KeyValueField.defaultProps = {
  tooltip: null,
  valueColor: 'black',
  value: ''
};
KeyValueField.propTypes = {
  /** The label of the value */
  title: PropTypes.string.isRequired,

  /** The value of the key */
  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.node, PropTypes.bool]),

  /** The tooltip's body */
  tooltip: PropTypes.node,

  /** The color of the value */
  valueColor: PropTypes.string
};
export default KeyValueField;