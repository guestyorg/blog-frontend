"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

var _enzymeToJson = require("enzyme-to-json");

var _isEmpty = _interopRequireDefault(require("lodash/isEmpty"));

var _enzymeAdapterReact = _interopRequireDefault(require("enzyme-adapter-react-16"));

(0, _enzyme.configure)({
  adapter: new _enzymeAdapterReact["default"]()
});

var setup = function setup(component) {
  var isMount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  return isMount ? (0, _enzyme.mount)(component) : (0, _enzyme.shallow)(component);
};
/**
 * Base test for all component unit testing
 * @param component {Component} The component to test
 * @param props {Object}  The props supported by the component
 * @param snapShot  {{}} The component snapshot
 */


var _default = function _default(component) {
  var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var snapShot = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  describe('Base test for all component testing', function () {
    test('Should render component', function () {
      expect(component).toBeDefined();
    });
    test('Should render and equal snapshot', function () {
      var children = props.children,
          otherProps = (0, _objectWithoutProperties2["default"])(props, ["children"]);

      var snapComponent = _react["default"].createElement(component, otherProps, children);

      var wrapper = setup(!(0, _isEmpty["default"])(snapShot) ? snapShot : snapComponent);
      expect((0, _enzymeToJson.shallowToJson)(wrapper)).toMatchSnapshot();
    });
    test('Should have expected props', function () {
      var wrapper = setup(_react["default"].createElement("component", props));
      Object.keys(props).forEach(function (prop) {
        return expect(wrapper.prop(prop)).toEqual(props[prop]);
      });
    });
  });
};

exports["default"] = _default;