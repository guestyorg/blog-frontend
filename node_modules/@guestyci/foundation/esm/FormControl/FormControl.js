import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import React from 'react';
import PropTypes from 'prop-types';
import cn from 'classnames';
import TextField from "../TextField";
import Row from "../Layout/Row";
import Col from "../Layout/Col";
import createStyles from "../createStyles";
export var useStyles = createStyles(function (theme) {
  return {
    root: {},
    label: {
      alignSelf: 'flex-start',
      marginBottom: theme.spacer(2),
      color: theme.palette.label
    },
    info: {
      marginTop: '2px',
      color: theme.palette.description
    }
  };
});
var FormControl = React.forwardRef(function FormControl(_ref, ref) {
  var name = _ref.name,
      children = _ref.children,
      _ref$label = _ref.label,
      label = _ref$label === void 0 ? null : _ref$label,
      _ref$info = _ref.info,
      info = _ref$info === void 0 ? null : _ref$info,
      _ref$className = _ref.className,
      className = _ref$className === void 0 ? '' : _ref$className,
      _ref$error = _ref.error,
      error = _ref$error === void 0 ? '' : _ref$error,
      _ref$style = _ref.style,
      style = _ref$style === void 0 ? {} : _ref$style,
      _ref$required = _ref.required,
      required = _ref$required === void 0 ? false : _ref$required,
      _ref$jss = _ref.jss,
      jss = _ref$jss === void 0 ? {} : _ref$jss,
      props = _objectWithoutProperties(_ref, ["name", "children", "label", "info", "className", "error", "style", "required", "jss"]);

  var classes = useStyles({
    jss: jss
  });
  var showInfo = info && !error;
  return /*#__PURE__*/React.createElement(Col, _extends({}, props, {
    ref: ref,
    tabIndex: -1,
    className: cn(classes.root, {
      'form-control-error': !!error
    }, className),
    style: style
  }), label && /*#__PURE__*/React.createElement(TextField, {
    className: classes.label
  }, label), React.cloneElement(children, {
    error: !!error,
    name: name,
    required: required
  }), /*#__PURE__*/React.createElement(Row, {
    spacing: 3,
    justify: error ? 'start' : 'end'
  }, error && /*#__PURE__*/React.createElement(TextField, {
    color: "error"
  }, error), showInfo && /*#__PURE__*/React.createElement(TextField, {
    className: classes.info
  }, info)));
});
FormControl.propTypes = {
  /** Child component for the form control */
  children: PropTypes.node.isRequired,

  /** Boolean indicator for required */
  required: PropTypes.bool,

  /** Form control label field */
  label: PropTypes.node,

  /* Form control info field */
  info: PropTypes.node,

  /** Additional root classname */
  className: PropTypes.string,

  /** additional root syle */
  style: PropTypes.shape(),

  /** Jss override to create custom styles */
  jss: PropTypes.oneOfType([PropTypes.shape(), PropTypes.func])
};
FormControl.displayName = 'FormControl';
export default FormControl;