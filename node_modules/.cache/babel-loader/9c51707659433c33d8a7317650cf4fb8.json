{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React, { useRef, useState, useEffect, useCallback } from 'react';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport createStyles from \"../createStyles\";\nimport DropdownInput from \"./DropdownInput\";\nimport Menu from \"../Menu/Menu\";\nimport composeEvent from \"../utils/composeEvent\";\nimport TextField from \"../TextField\";\nimport DropdownSearch from \"./DropdownSearch\";\nimport DropdownMenuList from \"./DropdownMenuList\";\nimport InfiniteScroll from \"../InfiniteScroll\";\nexport var useStyles = createStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      width: '100%',\n      position: 'relative',\n      flexFlow: 'column'\n    },\n    input: {\n      marginLeft: theme.spacer(1),\n      width: \"calc(100% - \".concat(theme.spacer(2), \"px)\")\n    },\n    menu: {\n      overflowY: 'hidden',\n      maxHeight: '100%'\n    },\n    menuList: {\n      maxHeight: 260,\n      padding: 0\n    },\n    scrollable: {\n      overflowY: 'auto'\n    },\n    searchableMaxHeight: {\n      maxHeight: 220\n    },\n    initialLoading: {\n      height: 180\n    },\n    emptyState: {\n      color: theme.palette.text.secondary,\n      paddingLeft: theme.spacer(1),\n      paddingTop: theme.spacer(1)\n    }\n  };\n}, {\n  name: 'Dropdown'\n});\nvar loaderOverride = {\n  loader: {\n    height: '100%'\n  }\n};\nvar Dropdown = React.forwardRef(function Dropdown(_ref, ref) {\n  var _cn;\n\n  var children = _ref.children,\n      input = _ref.input,\n      placeholder = _ref.placeholder,\n      inputProps = _ref.inputProps,\n      renderComponent = _ref.renderComponent,\n      className = _ref.className,\n      style = _ref.style,\n      jss = _ref.jss,\n      onChange = _ref.onChange,\n      renderSelected = _ref.renderSelected,\n      value = _ref.value,\n      variant = _ref.variant,\n      searchable = _ref.searchable,\n      onSearchQueryChange = _ref.onSearchQueryChange,\n      disabled = _ref.disabled,\n      emptyStateComponent = _ref.emptyStateComponent,\n      name = _ref.name,\n      error = _ref.error,\n      menuWidth = _ref.menuWidth,\n      infiniteScrollOptions = _ref.infiniteScrollOptions,\n      props = _objectWithoutProperties(_ref, [\"children\", \"input\", \"placeholder\", \"inputProps\", \"renderComponent\", \"className\", \"style\", \"jss\", \"onChange\", \"renderSelected\", \"value\", \"variant\", \"searchable\", \"onSearchQueryChange\", \"disabled\", \"emptyStateComponent\", \"name\", \"error\", \"menuWidth\", \"infiniteScrollOptions\"]);\n\n  var classes = useStyles({\n    jss: jss\n  });\n  var dropdownAnchorRef = useRef();\n  var searchInputRef = useRef();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      query = _useState4[0],\n      setQuery = _useState4[1];\n\n  useEffect(function () {\n    if (open && searchable && searchInputRef) {\n      setTimeout(function () {\n        return searchInputRef.current.focus();\n      }, 0);\n    }\n  }, [open]);\n\n  var handleInputClick = function handleInputClick() {\n    setOpen(!open);\n  };\n\n  var handleDismissDropdown = function handleDismissDropdown() {\n    setOpen(false);\n  };\n\n  var dispatchOnChange = function dispatchOnChange(e, selectedValue) {\n    e.stopPropagation();\n    var newEvent = composeEvent(e, {\n      name: name,\n      value: selectedValue\n    });\n    onChange(newEvent, selectedValue);\n\n    if (variant === 'single') {\n      handleDismissDropdown();\n    }\n  };\n\n  var handleSelectItem = useCallback(function (e, menuItemValue) {\n    setQuery('');\n    dispatchOnChange(e, menuItemValue);\n  }, [setQuery, dispatchOnChange]);\n\n  var handleSearchInputChange = function handleSearchInputChange(e) {\n    var searchQueryValue = e.currentTarget.value;\n    setQuery(searchQueryValue);\n    onSearchQueryChange(composeEvent(e, {\n      name: name\n    }));\n  };\n\n  var handleClearSearchInputQuery = function handleClearSearchInputQuery(e) {\n    setQuery('');\n    onSearchQueryChange(composeEvent(e, {\n      name: name,\n      value: ''\n    }));\n  };\n\n  var handleClearValue = function handleClearValue(e) {\n    // Due to bug in redux form, we must pass null\n    // see details here: https://github.com/redux-form/redux-form/issues/3946\n    dispatchOnChange(e, null);\n  };\n\n  var isLoading = infiniteScrollOptions.isLoading;\n  var InputComponent = input || /*#__PURE__*/React.createElement(DropdownInput, null);\n  var shouldShowEmptyState = isEmpty(children) && !isLoading;\n  var isInfiniteScroll = infiniteScrollOptions.totalCount;\n  var emptyStateMessage = searchable && query ? 'No results found.' : emptyStateComponent;\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: cn(classes.root, className),\n    style: style,\n    ref: ref\n  }, props), React.cloneElement(InputComponent, _extends({\n    ref: dropdownAnchorRef,\n    open: open,\n    name: name,\n    variant: variant,\n    disabled: disabled,\n    value: value,\n    placeholder: placeholder,\n    renderComponent: renderComponent,\n    renderSelected: renderSelected,\n    onClear: handleClearValue,\n    onClick: handleInputClick,\n    onChange: dispatchOnChange,\n    error: error\n  }, inputProps)), /*#__PURE__*/React.createElement(Menu, {\n    variant: \"menu\",\n    menuWidth: menuWidth,\n    open: open,\n    onClose: handleDismissDropdown,\n    className: classes.menu,\n    anchorDirection: \"start\",\n    originDirection: \"bottom\",\n    fitAnchor: true,\n    anchor: dropdownAnchorRef\n  }, searchable && /*#__PURE__*/React.createElement(DropdownSearch, {\n    ref: searchInputRef,\n    value: query,\n    onChange: handleSearchInputChange,\n    onClear: handleClearSearchInputQuery,\n    className: classes.input\n  }), /*#__PURE__*/React.createElement(Menu, {\n    variant: \"list\",\n    elevation: 0,\n    className: cn(classes.menuList, (_cn = {}, _defineProperty(_cn, classes.initialLoading, isLoading && isEmpty(children)), _defineProperty(_cn, classes.scrollable, !isInfiniteScroll), _defineProperty(_cn, classes.searchableMaxHeight, searchable), _cn))\n  }, /*#__PURE__*/React.createElement(InfiniteScroll, _extends({}, infiniteScrollOptions, {\n    jss: loaderOverride\n  }), /*#__PURE__*/React.createElement(DropdownMenuList, {\n    variant: variant,\n    value: value,\n    disabled: disabled,\n    onChange: handleSelectItem\n  }, children))), shouldShowEmptyState && emptyStateMessage && /*#__PURE__*/React.createElement(TextField, {\n    className: cn(classes.emptyState)\n  }, emptyStateMessage)));\n});\nDropdown.defaultProps = {\n  searchable: false,\n  placeholder: 'Select an option',\n  onSearchQueryChange: null,\n  className: '',\n  style: {},\n  name: '',\n  value: undefined,\n  disabled: false,\n  variant: 'single',\n  emptyStateComponent: null,\n  renderComponent: null,\n  infiniteScrollOptions: {}\n};\nDropdown.propTypes = {\n  /** Dropdown menuItem options to provide to the dropdown\n   * Use <MenuItem> component for rendering children\n   */\n  children: PropTypes.arrayOf(PropTypes.node).isRequired,\n\n  /** Indicator whether or not the input field is searchable */\n  searchable: PropTypes.bool,\n\n  /** Placeholder for input field */\n  placeholder: PropTypes.string,\n\n  /** Empty state component  to display when there're no results */\n  emptyStateComponent: PropTypes.node,\n\n  /** Mandatory if searchable - callback for on input change */\n  onSearchQueryChange: PropTypes.func,\n\n  /** Callback function to be called on value changed - arguments - (event, value)\n   * event will contain the html dom value converted to string, to access the full value, use the second argument\n   * */\n  onChange: PropTypes.func.isRequired,\n\n  /** Additional class for dropdown root */\n  className: PropTypes.string,\n\n  /** Additional style for dropdown root */\n  style: PropTypes.shape(),\n\n  /** form element name */\n  name: PropTypes.string,\n\n  /** Selected dropdown value */\n  value: PropTypes.oneOfType([PropTypes.shape(), PropTypes.array, PropTypes.string, PropTypes.number]),\n\n  /** Set the dropdown content menu width manually - by default it will resolve to the larger of the input width or the content width */\n  menuWidth: PropTypes.number,\n\n  /** Indicator for disabled status */\n  disabled: PropTypes.bool,\n\n  /** variant for the type of dropdown we want to render - values [single, multiselect, chip] */\n  variant: PropTypes.oneOf(['single', 'multiselect', 'chip']),\n\n  /** custom props to pass to the input component */\n  inputProps: PropTypes.shape(),\n\n  /** DEPRECATED- USE renderSelected */\n  renderComponent: PropTypes.func,\n\n  /** Set the input component to show on selected item, Accepting function and String\n   * If strings - will render the value[renderSelected].\n   * If function - will pass the value props\n   * */\n  renderSelected: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n  /** Object to define infinite scrolling behaviour */\n  infiniteScrollOptions: PropTypes.shape({\n    /** starting index of the chunk */\n    skip: PropTypes.number,\n\n    /** cb to notify about required loads */\n    onLoadMore: PropTypes.func,\n\n    /** total number of entries */\n    totalCount: PropTypes.number,\n\n    /** offset from the bottom, from which loading the next chunk should be triggered */\n    scrollOffset: PropTypes.number,\n\n    /** number of rows per page */\n    pageSize: PropTypes.number\n  }),\n\n  /** indicator for data fetching state */\n  isLoading: PropTypes.bool\n};\nDropdown.displayName = 'Dropdown';\nexport default Dropdown;","map":{"version":3,"sources":["/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/node_modules/@guestyci/foundation/esm/Dropdown/Dropdown.js"],"names":["_defineProperty","_extends","_slicedToArray","_objectWithoutProperties","React","useRef","useState","useEffect","useCallback","cn","PropTypes","isEmpty","createStyles","DropdownInput","Menu","composeEvent","TextField","DropdownSearch","DropdownMenuList","InfiniteScroll","useStyles","theme","root","display","width","position","flexFlow","input","marginLeft","spacer","concat","menu","overflowY","maxHeight","menuList","padding","scrollable","searchableMaxHeight","initialLoading","height","emptyState","color","palette","text","secondary","paddingLeft","paddingTop","name","loaderOverride","loader","Dropdown","forwardRef","_ref","ref","_cn","children","placeholder","inputProps","renderComponent","className","style","jss","onChange","renderSelected","value","variant","searchable","onSearchQueryChange","disabled","emptyStateComponent","error","menuWidth","infiniteScrollOptions","props","classes","dropdownAnchorRef","searchInputRef","_useState","_useState2","open","setOpen","_useState3","_useState4","query","setQuery","setTimeout","current","focus","handleInputClick","handleDismissDropdown","dispatchOnChange","e","selectedValue","stopPropagation","newEvent","handleSelectItem","menuItemValue","handleSearchInputChange","searchQueryValue","currentTarget","handleClearSearchInputQuery","handleClearValue","isLoading","InputComponent","createElement","shouldShowEmptyState","isInfiniteScroll","totalCount","emptyStateMessage","cloneElement","onClear","onClick","onClose","anchorDirection","originDirection","fitAnchor","anchor","elevation","defaultProps","undefined","propTypes","arrayOf","node","isRequired","bool","string","func","shape","oneOfType","array","number","oneOf","skip","onLoadMore","scrollOffset","pageSize","displayName"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React, { useRef, useState, useEffect, useCallback } from 'react';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport createStyles from \"../createStyles\";\nimport DropdownInput from \"./DropdownInput\";\nimport Menu from \"../Menu/Menu\";\nimport composeEvent from \"../utils/composeEvent\";\nimport TextField from \"../TextField\";\nimport DropdownSearch from \"./DropdownSearch\";\nimport DropdownMenuList from \"./DropdownMenuList\";\nimport InfiniteScroll from \"../InfiniteScroll\";\nexport var useStyles = createStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      width: '100%',\n      position: 'relative',\n      flexFlow: 'column'\n    },\n    input: {\n      marginLeft: theme.spacer(1),\n      width: \"calc(100% - \".concat(theme.spacer(2), \"px)\")\n    },\n    menu: {\n      overflowY: 'hidden',\n      maxHeight: '100%'\n    },\n    menuList: {\n      maxHeight: 260,\n      padding: 0\n    },\n    scrollable: {\n      overflowY: 'auto'\n    },\n    searchableMaxHeight: {\n      maxHeight: 220\n    },\n    initialLoading: {\n      height: 180\n    },\n    emptyState: {\n      color: theme.palette.text.secondary,\n      paddingLeft: theme.spacer(1),\n      paddingTop: theme.spacer(1)\n    }\n  };\n}, {\n  name: 'Dropdown'\n});\nvar loaderOverride = {\n  loader: {\n    height: '100%'\n  }\n};\nvar Dropdown = React.forwardRef(function Dropdown(_ref, ref) {\n  var _cn;\n\n  var children = _ref.children,\n      input = _ref.input,\n      placeholder = _ref.placeholder,\n      inputProps = _ref.inputProps,\n      renderComponent = _ref.renderComponent,\n      className = _ref.className,\n      style = _ref.style,\n      jss = _ref.jss,\n      onChange = _ref.onChange,\n      renderSelected = _ref.renderSelected,\n      value = _ref.value,\n      variant = _ref.variant,\n      searchable = _ref.searchable,\n      onSearchQueryChange = _ref.onSearchQueryChange,\n      disabled = _ref.disabled,\n      emptyStateComponent = _ref.emptyStateComponent,\n      name = _ref.name,\n      error = _ref.error,\n      menuWidth = _ref.menuWidth,\n      infiniteScrollOptions = _ref.infiniteScrollOptions,\n      props = _objectWithoutProperties(_ref, [\"children\", \"input\", \"placeholder\", \"inputProps\", \"renderComponent\", \"className\", \"style\", \"jss\", \"onChange\", \"renderSelected\", \"value\", \"variant\", \"searchable\", \"onSearchQueryChange\", \"disabled\", \"emptyStateComponent\", \"name\", \"error\", \"menuWidth\", \"infiniteScrollOptions\"]);\n\n  var classes = useStyles({\n    jss: jss\n  });\n  var dropdownAnchorRef = useRef();\n  var searchInputRef = useRef();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      query = _useState4[0],\n      setQuery = _useState4[1];\n\n  useEffect(function () {\n    if (open && searchable && searchInputRef) {\n      setTimeout(function () {\n        return searchInputRef.current.focus();\n      }, 0);\n    }\n  }, [open]);\n\n  var handleInputClick = function handleInputClick() {\n    setOpen(!open);\n  };\n\n  var handleDismissDropdown = function handleDismissDropdown() {\n    setOpen(false);\n  };\n\n  var dispatchOnChange = function dispatchOnChange(e, selectedValue) {\n    e.stopPropagation();\n    var newEvent = composeEvent(e, {\n      name: name,\n      value: selectedValue\n    });\n    onChange(newEvent, selectedValue);\n\n    if (variant === 'single') {\n      handleDismissDropdown();\n    }\n  };\n\n  var handleSelectItem = useCallback(function (e, menuItemValue) {\n    setQuery('');\n    dispatchOnChange(e, menuItemValue);\n  }, [setQuery, dispatchOnChange]);\n\n  var handleSearchInputChange = function handleSearchInputChange(e) {\n    var searchQueryValue = e.currentTarget.value;\n    setQuery(searchQueryValue);\n    onSearchQueryChange(composeEvent(e, {\n      name: name\n    }));\n  };\n\n  var handleClearSearchInputQuery = function handleClearSearchInputQuery(e) {\n    setQuery('');\n    onSearchQueryChange(composeEvent(e, {\n      name: name,\n      value: ''\n    }));\n  };\n\n  var handleClearValue = function handleClearValue(e) {\n    // Due to bug in redux form, we must pass null\n    // see details here: https://github.com/redux-form/redux-form/issues/3946\n    dispatchOnChange(e, null);\n  };\n\n  var isLoading = infiniteScrollOptions.isLoading;\n  var InputComponent = input || /*#__PURE__*/React.createElement(DropdownInput, null);\n  var shouldShowEmptyState = isEmpty(children) && !isLoading;\n  var isInfiniteScroll = infiniteScrollOptions.totalCount;\n  var emptyStateMessage = searchable && query ? 'No results found.' : emptyStateComponent;\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: cn(classes.root, className),\n    style: style,\n    ref: ref\n  }, props), React.cloneElement(InputComponent, _extends({\n    ref: dropdownAnchorRef,\n    open: open,\n    name: name,\n    variant: variant,\n    disabled: disabled,\n    value: value,\n    placeholder: placeholder,\n    renderComponent: renderComponent,\n    renderSelected: renderSelected,\n    onClear: handleClearValue,\n    onClick: handleInputClick,\n    onChange: dispatchOnChange,\n    error: error\n  }, inputProps)), /*#__PURE__*/React.createElement(Menu, {\n    variant: \"menu\",\n    menuWidth: menuWidth,\n    open: open,\n    onClose: handleDismissDropdown,\n    className: classes.menu,\n    anchorDirection: \"start\",\n    originDirection: \"bottom\",\n    fitAnchor: true,\n    anchor: dropdownAnchorRef\n  }, searchable && /*#__PURE__*/React.createElement(DropdownSearch, {\n    ref: searchInputRef,\n    value: query,\n    onChange: handleSearchInputChange,\n    onClear: handleClearSearchInputQuery,\n    className: classes.input\n  }), /*#__PURE__*/React.createElement(Menu, {\n    variant: \"list\",\n    elevation: 0,\n    className: cn(classes.menuList, (_cn = {}, _defineProperty(_cn, classes.initialLoading, isLoading && isEmpty(children)), _defineProperty(_cn, classes.scrollable, !isInfiniteScroll), _defineProperty(_cn, classes.searchableMaxHeight, searchable), _cn))\n  }, /*#__PURE__*/React.createElement(InfiniteScroll, _extends({}, infiniteScrollOptions, {\n    jss: loaderOverride\n  }), /*#__PURE__*/React.createElement(DropdownMenuList, {\n    variant: variant,\n    value: value,\n    disabled: disabled,\n    onChange: handleSelectItem\n  }, children))), shouldShowEmptyState && emptyStateMessage && /*#__PURE__*/React.createElement(TextField, {\n    className: cn(classes.emptyState)\n  }, emptyStateMessage)));\n});\nDropdown.defaultProps = {\n  searchable: false,\n  placeholder: 'Select an option',\n  onSearchQueryChange: null,\n  className: '',\n  style: {},\n  name: '',\n  value: undefined,\n  disabled: false,\n  variant: 'single',\n  emptyStateComponent: null,\n  renderComponent: null,\n  infiniteScrollOptions: {}\n};\nDropdown.propTypes = {\n  /** Dropdown menuItem options to provide to the dropdown\n   * Use <MenuItem> component for rendering children\n   */\n  children: PropTypes.arrayOf(PropTypes.node).isRequired,\n\n  /** Indicator whether or not the input field is searchable */\n  searchable: PropTypes.bool,\n\n  /** Placeholder for input field */\n  placeholder: PropTypes.string,\n\n  /** Empty state component  to display when there're no results */\n  emptyStateComponent: PropTypes.node,\n\n  /** Mandatory if searchable - callback for on input change */\n  onSearchQueryChange: PropTypes.func,\n\n  /** Callback function to be called on value changed - arguments - (event, value)\n   * event will contain the html dom value converted to string, to access the full value, use the second argument\n   * */\n  onChange: PropTypes.func.isRequired,\n\n  /** Additional class for dropdown root */\n  className: PropTypes.string,\n\n  /** Additional style for dropdown root */\n  style: PropTypes.shape(),\n\n  /** form element name */\n  name: PropTypes.string,\n\n  /** Selected dropdown value */\n  value: PropTypes.oneOfType([PropTypes.shape(), PropTypes.array, PropTypes.string, PropTypes.number]),\n\n  /** Set the dropdown content menu width manually - by default it will resolve to the larger of the input width or the content width */\n  menuWidth: PropTypes.number,\n\n  /** Indicator for disabled status */\n  disabled: PropTypes.bool,\n\n  /** variant for the type of dropdown we want to render - values [single, multiselect, chip] */\n  variant: PropTypes.oneOf(['single', 'multiselect', 'chip']),\n\n  /** custom props to pass to the input component */\n  inputProps: PropTypes.shape(),\n\n  /** DEPRECATED- USE renderSelected */\n  renderComponent: PropTypes.func,\n\n  /** Set the input component to show on selected item, Accepting function and String\n   * If strings - will render the value[renderSelected].\n   * If function - will pass the value props\n   * */\n  renderSelected: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n  /** Object to define infinite scrolling behaviour */\n  infiniteScrollOptions: PropTypes.shape({\n    /** starting index of the chunk */\n    skip: PropTypes.number,\n\n    /** cb to notify about required loads */\n    onLoadMore: PropTypes.func,\n\n    /** total number of entries */\n    totalCount: PropTypes.number,\n\n    /** offset from the bottom, from which loading the next chunk should be triggered */\n    scrollOffset: PropTypes.number,\n\n    /** number of rows per page */\n    pageSize: PropTypes.number\n  }),\n\n  /** indicator for data fetching state */\n  isLoading: PropTypes.bool\n};\nDropdown.displayName = 'Dropdown';\nexport default Dropdown;"]},"metadata":{},"sourceType":"module"}