{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSelectionOnAction = getSelectionOnAction;\nexports.getSelectionOnData = getSelectionOnData;\nexports.getEmptySelection = exports.getOrderedColumnsById = exports.getTableCells = exports.serializeColumns = exports.buildCellGroups = exports.getFixedColClassName = exports.getColumnCells = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _utils = require(\"../../utils\");\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar MULTI_SELECT_OFFSET = 36;\n\nvar getColumnCells = function getColumnCells() {\n  var cells = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var dataKey = props.dataKey,\n      resizable = props.resizable,\n      commonProps = (0, _objectWithoutProperties2[\"default\"])(props, [\"dataKey\", \"resizable\"]);\n\n  if (!Array.isArray(cells) || cells.length < 2) {\n    throw new Error(\"Components <HeaderCell> and <Cell> are required, column: \".concat(dataKey));\n  }\n\n  return {\n    header: _react[\"default\"].cloneElement(cells[0], (0, _extends2[\"default\"])({\n      id: dataKey,\n      resizable: resizable\n    }, commonProps)),\n    cell: _react[\"default\"].cloneElement(cells[1], (0, _extends2[\"default\"])({\n      dataKey: dataKey\n    }, commonProps))\n  };\n};\n\nexports.getColumnCells = getColumnCells;\n\nvar getFixedColClassName = function getFixedColClassName(fixedDirection, index, length, isMultiSelect) {\n  var className = \"fixed-cell-group cell-group cell-group-\".concat(fixedDirection);\n\n  if (index === 0) {\n    className = \"\".concat(className, \" cell-group-item-first \").concat(isMultiSelect ? 'cell-group-item-no-padding' : '');\n  }\n\n  if (index === length) {\n    className = \"\".concat(className, \" cell-group-item-last\");\n  }\n\n  return className;\n};\n\nexports.getFixedColClassName = getFixedColClassName;\n\nvar buildCellGroups = function buildCellGroups(columns) {\n  return columns.reduce(function (_ref, col) {\n    var _ref2 = (0, _slicedToArray2[\"default\"])(_ref, 3),\n        left = _ref2[0],\n        center = _ref2[1],\n        right = _ref2[2];\n\n    var _col$props = col === null || col === void 0 ? void 0 : col.props,\n        fixed = _col$props.fixed;\n\n    if (fixed === 'left') {\n      left.push(col);\n    } else if (fixed === 'right') {\n      right.push(col);\n    } else {\n      center.push(col);\n    }\n\n    return [left, center, right];\n  }, [[], [], []]);\n};\n\nexports.buildCellGroups = buildCellGroups;\n\nvar serializeColumns = function serializeColumns(cols, isMultiSelect) {\n  var _buildCellGroups = buildCellGroups(cols),\n      _buildCellGroups2 = (0, _slicedToArray2[\"default\"])(_buildCellGroups, 3),\n      leftColumns = _buildCellGroups2[0],\n      centerColumns = _buildCellGroups2[1],\n      rightColumns = _buildCellGroups2[2];\n\n  if (!(0, _utils.isEmpty)(leftColumns)) {\n    var columns = (0, _toConsumableArray2[\"default\"])(leftColumns);\n    var offset = isMultiSelect ? MULTI_SELECT_OFFSET : 0;\n    columns.forEach(function (col, index) {\n      var _col$props2 = col.props,\n          width = _col$props2.width,\n          fixed = _col$props2.fixed,\n          className = _col$props2.className;\n\n      var column = _react[\"default\"].cloneElement(col, {\n        className: (0, _classnames[\"default\"])(className, getFixedColClassName(fixed, index, leftColumns.length - 1, isMultiSelect)),\n        positionLeft: offset\n      });\n\n      offset += width;\n      leftColumns[index] = column;\n    });\n  }\n\n  if (!(0, _utils.isEmpty)(rightColumns)) {\n    var _offset = 0;\n\n    var _columns = (0, _toConsumableArray2[\"default\"])(rightColumns).reverse();\n\n    var length = rightColumns.length - 1;\n\n    _columns.forEach(function (col, index) {\n      var _col$props3 = col.props,\n          width = _col$props3.width,\n          fixed = _col$props3.fixed;\n\n      var column = _react[\"default\"].cloneElement(col, {\n        className: getFixedColClassName(fixed, length - index, leftColumns.length),\n        positionRight: _offset\n      });\n\n      _offset += width;\n      rightColumns[length - index] = column;\n    });\n  }\n\n  return [].concat((0, _toConsumableArray2[\"default\"])(leftColumns), (0, _toConsumableArray2[\"default\"])(centerColumns), (0, _toConsumableArray2[\"default\"])(rightColumns));\n};\n/**\n *  Get the teable cells to render to the table\n * @param columns { Array } Array of nodes\n * @param multiselect { Boolean }  boolean indicator for multi select\n * @return {Array}\n */\n\n\nexports.serializeColumns = serializeColumns;\n\nvar getTableCells = function getTableCells(columns, multiselect) {\n  var serializedColumns = serializeColumns(columns, multiselect);\n  return serializedColumns.reduce(function (_ref3, column) {\n    var _ref4 = (0, _slicedToArray2[\"default\"])(_ref3, 2),\n        headerCells = _ref4[0],\n        bodyCells = _ref4[1];\n\n    var _column$props = column === null || column === void 0 ? void 0 : column.props,\n        columnChildren = _column$props.children,\n        rest = (0, _objectWithoutProperties2[\"default\"])(_column$props, [\"children\"]);\n\n    var _getColumnCells = getColumnCells(columnChildren, rest),\n        header = _getColumnCells.header,\n        cell = _getColumnCells.cell;\n\n    headerCells.push(header);\n    bodyCells.push(cell);\n    return [headerCells, bodyCells];\n  }, [[], []]);\n};\n/**\n * Build an ordered array of columns\n * @param columns {Array} Array of nodes\n * @param source {String} drag source id\n * @param target {String} drag target id\n * @return {Array} - string array of columns id\n */\n\n\nexports.getTableCells = getTableCells;\n\nvar getOrderedColumnsById = function getOrderedColumnsById(columns, source, target) {\n  var sourceColumn = columns.find(function (child) {\n    var _child$props;\n\n    return (child === null || child === void 0 ? void 0 : (_child$props = child.props) === null || _child$props === void 0 ? void 0 : _child$props.dataKey) === source;\n  });\n  var sourceIndex = -1;\n  var orderedColumns = columns.reduce(function (cols, column, index) {\n    var dataKey = column.props.dataKey;\n\n    if (dataKey === source) {\n      sourceIndex = index;\n      return cols;\n    }\n\n    if (dataKey === target) {\n      if (sourceIndex === -1) {\n        cols.push(sourceColumn);\n        cols.push(column);\n      } else {\n        cols.push(column);\n        cols.push(sourceColumn);\n      }\n    } else {\n      cols.push(column);\n    }\n\n    return cols;\n  }, []);\n  return orderedColumns.map(function (col) {\n    var _col$props4;\n\n    return col === null || col === void 0 ? void 0 : (_col$props4 = col.props) === null || _col$props4 === void 0 ? void 0 : _col$props4.dataKey;\n  });\n};\n\nexports.getOrderedColumnsById = getOrderedColumnsById;\n\nvar getEmptySelection = function getEmptySelection() {\n  return {\n    allSelected: false,\n    items: new Set(),\n    exceptItems: new Set()\n  };\n};\n/**\n * Produces rows selection state based on the current state and next user action\n * @param rowSelection {Object} - { allSelected, items, exceptItems }\n * @param action {Object} - { rowId, selectAll }\n * @param data {Array} - table data\n * @param rowIdDataKey {String} - key from row data to be used as identifier\n */\n\n\nexports.getEmptySelection = getEmptySelection;\n\nfunction getSelectionOnAction(_ref5) {\n  var rowSelection = _ref5.rowSelection,\n      action = _ref5.action,\n      data = _ref5.data,\n      _ref5$rowIdDataKey = _ref5.rowIdDataKey,\n      rowIdDataKey = _ref5$rowIdDataKey === void 0 ? '_id' : _ref5$rowIdDataKey,\n      itemsTotalCount = _ref5.itemsTotalCount;\n  var rowId = action.rowId,\n      selectAll = action.selectAll;\n  var prevAllSelected = rowSelection.allSelected,\n      prevItems = rowSelection.items,\n      prevExceptItems = rowSelection.exceptItems;\n  var allSelected = prevAllSelected;\n  var items = new Set(prevItems);\n  var exceptItems = new Set(prevExceptItems);\n  var totalCount = itemsTotalCount || (data === null || data === void 0 ? void 0 : data.length) || 0;\n  var rowSelect = !items.has(rowId);\n  var rowUnSelect = !rowSelect;\n\n  if (selectAll) {\n    var someSelected = items.size;\n    var ids = someSelected ? [] : data.map(function (item) {\n      return item[rowIdDataKey];\n    });\n    return {\n      allSelected: !someSelected,\n      items: new Set(ids),\n      exceptItems: new Set()\n    };\n  }\n\n  if (!allSelected && rowSelect) {\n    items.add(rowId);\n    exceptItems.clear();\n\n    if (items.size === totalCount) {\n      allSelected = true;\n    }\n  }\n\n  if (!allSelected && rowUnSelect) {\n    items[\"delete\"](rowId);\n    exceptItems.clear();\n  }\n\n  if (allSelected && rowSelect) {\n    items.add(rowId);\n    exceptItems[\"delete\"](rowId);\n  }\n\n  if (allSelected && rowUnSelect) {\n    items[\"delete\"](rowId);\n    exceptItems.add(rowId);\n\n    if (exceptItems.size === totalCount) {\n      allSelected = false;\n    }\n  }\n\n  return {\n    allSelected: allSelected,\n    items: items,\n    exceptItems: exceptItems\n  };\n}\n/**\n * Produces rows selection state based on the current state and data\n * @param rowSelection {Object} - { allSelected, items, exceptItems }\n * @param data {Array} - table data\n * @param rowIdDataKey {String} - key from row data to be used as identifier\n * @returns {Object} - { allSelected, items, exceptItems }\n */\n\n\nfunction getSelectionOnData(_ref6) {\n  var rowSelection = _ref6.rowSelection,\n      data = _ref6.data,\n      _ref6$rowIdDataKey = _ref6.rowIdDataKey,\n      rowIdDataKey = _ref6$rowIdDataKey === void 0 ? '_id' : _ref6$rowIdDataKey;\n  var allSelected = rowSelection.allSelected,\n      items = rowSelection.items,\n      exceptItems = rowSelection.exceptItems;\n  var newItems = new Set();\n\n  if (allSelected) {\n    var ids = data.map(function (item) {\n      return item[rowIdDataKey];\n    });\n    newItems = new Set(ids);\n    exceptItems.forEach(function (id) {\n      return newItems[\"delete\"](id);\n    });\n    return {\n      allSelected: allSelected,\n      items: new Set([].concat((0, _toConsumableArray2[\"default\"])(items), (0, _toConsumableArray2[\"default\"])(newItems))),\n      exceptItems: exceptItems\n    };\n  }\n\n  return {\n    allSelected: allSelected,\n    items: items,\n    exceptItems: exceptItems\n  };\n}","map":{"version":3,"sources":["/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/node_modules/@guestyci/foundation/legacy/Table/tableUtility.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","getSelectionOnAction","getSelectionOnData","getEmptySelection","getOrderedColumnsById","getTableCells","serializeColumns","buildCellGroups","getFixedColClassName","getColumnCells","_toConsumableArray2","_slicedToArray2","_extends2","_objectWithoutProperties2","_react","_utils","_classnames","MULTI_SELECT_OFFSET","cells","arguments","length","undefined","props","dataKey","resizable","commonProps","Array","isArray","Error","concat","header","cloneElement","id","cell","fixedDirection","index","isMultiSelect","className","columns","reduce","_ref","col","_ref2","left","center","right","_col$props","fixed","push","cols","_buildCellGroups","_buildCellGroups2","leftColumns","centerColumns","rightColumns","isEmpty","offset","forEach","_col$props2","width","column","positionLeft","_offset","_columns","reverse","_col$props3","positionRight","multiselect","serializedColumns","_ref3","_ref4","headerCells","bodyCells","_column$props","columnChildren","children","rest","_getColumnCells","source","target","sourceColumn","find","child","_child$props","sourceIndex","orderedColumns","map","_col$props4","allSelected","items","Set","exceptItems","_ref5","rowSelection","action","data","_ref5$rowIdDataKey","rowIdDataKey","itemsTotalCount","rowId","selectAll","prevAllSelected","prevItems","prevExceptItems","totalCount","rowSelect","has","rowUnSelect","someSelected","size","ids","item","add","clear","_ref6","_ref6$rowIdDataKey","newItems"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSelectionOnAction = getSelectionOnAction;\nexports.getSelectionOnData = getSelectionOnData;\nexports.getEmptySelection = exports.getOrderedColumnsById = exports.getTableCells = exports.serializeColumns = exports.buildCellGroups = exports.getFixedColClassName = exports.getColumnCells = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _utils = require(\"../../utils\");\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar MULTI_SELECT_OFFSET = 36;\n\nvar getColumnCells = function getColumnCells() {\n  var cells = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var dataKey = props.dataKey,\n      resizable = props.resizable,\n      commonProps = (0, _objectWithoutProperties2[\"default\"])(props, [\"dataKey\", \"resizable\"]);\n\n  if (!Array.isArray(cells) || cells.length < 2) {\n    throw new Error(\"Components <HeaderCell> and <Cell> are required, column: \".concat(dataKey));\n  }\n\n  return {\n    header: _react[\"default\"].cloneElement(cells[0], (0, _extends2[\"default\"])({\n      id: dataKey,\n      resizable: resizable\n    }, commonProps)),\n    cell: _react[\"default\"].cloneElement(cells[1], (0, _extends2[\"default\"])({\n      dataKey: dataKey\n    }, commonProps))\n  };\n};\n\nexports.getColumnCells = getColumnCells;\n\nvar getFixedColClassName = function getFixedColClassName(fixedDirection, index, length, isMultiSelect) {\n  var className = \"fixed-cell-group cell-group cell-group-\".concat(fixedDirection);\n\n  if (index === 0) {\n    className = \"\".concat(className, \" cell-group-item-first \").concat(isMultiSelect ? 'cell-group-item-no-padding' : '');\n  }\n\n  if (index === length) {\n    className = \"\".concat(className, \" cell-group-item-last\");\n  }\n\n  return className;\n};\n\nexports.getFixedColClassName = getFixedColClassName;\n\nvar buildCellGroups = function buildCellGroups(columns) {\n  return columns.reduce(function (_ref, col) {\n    var _ref2 = (0, _slicedToArray2[\"default\"])(_ref, 3),\n        left = _ref2[0],\n        center = _ref2[1],\n        right = _ref2[2];\n\n    var _col$props = col === null || col === void 0 ? void 0 : col.props,\n        fixed = _col$props.fixed;\n\n    if (fixed === 'left') {\n      left.push(col);\n    } else if (fixed === 'right') {\n      right.push(col);\n    } else {\n      center.push(col);\n    }\n\n    return [left, center, right];\n  }, [[], [], []]);\n};\n\nexports.buildCellGroups = buildCellGroups;\n\nvar serializeColumns = function serializeColumns(cols, isMultiSelect) {\n  var _buildCellGroups = buildCellGroups(cols),\n      _buildCellGroups2 = (0, _slicedToArray2[\"default\"])(_buildCellGroups, 3),\n      leftColumns = _buildCellGroups2[0],\n      centerColumns = _buildCellGroups2[1],\n      rightColumns = _buildCellGroups2[2];\n\n  if (!(0, _utils.isEmpty)(leftColumns)) {\n    var columns = (0, _toConsumableArray2[\"default\"])(leftColumns);\n    var offset = isMultiSelect ? MULTI_SELECT_OFFSET : 0;\n    columns.forEach(function (col, index) {\n      var _col$props2 = col.props,\n          width = _col$props2.width,\n          fixed = _col$props2.fixed,\n          className = _col$props2.className;\n\n      var column = _react[\"default\"].cloneElement(col, {\n        className: (0, _classnames[\"default\"])(className, getFixedColClassName(fixed, index, leftColumns.length - 1, isMultiSelect)),\n        positionLeft: offset\n      });\n\n      offset += width;\n      leftColumns[index] = column;\n    });\n  }\n\n  if (!(0, _utils.isEmpty)(rightColumns)) {\n    var _offset = 0;\n\n    var _columns = (0, _toConsumableArray2[\"default\"])(rightColumns).reverse();\n\n    var length = rightColumns.length - 1;\n\n    _columns.forEach(function (col, index) {\n      var _col$props3 = col.props,\n          width = _col$props3.width,\n          fixed = _col$props3.fixed;\n\n      var column = _react[\"default\"].cloneElement(col, {\n        className: getFixedColClassName(fixed, length - index, leftColumns.length),\n        positionRight: _offset\n      });\n\n      _offset += width;\n      rightColumns[length - index] = column;\n    });\n  }\n\n  return [].concat((0, _toConsumableArray2[\"default\"])(leftColumns), (0, _toConsumableArray2[\"default\"])(centerColumns), (0, _toConsumableArray2[\"default\"])(rightColumns));\n};\n/**\n *  Get the teable cells to render to the table\n * @param columns { Array } Array of nodes\n * @param multiselect { Boolean }  boolean indicator for multi select\n * @return {Array}\n */\n\n\nexports.serializeColumns = serializeColumns;\n\nvar getTableCells = function getTableCells(columns, multiselect) {\n  var serializedColumns = serializeColumns(columns, multiselect);\n  return serializedColumns.reduce(function (_ref3, column) {\n    var _ref4 = (0, _slicedToArray2[\"default\"])(_ref3, 2),\n        headerCells = _ref4[0],\n        bodyCells = _ref4[1];\n\n    var _column$props = column === null || column === void 0 ? void 0 : column.props,\n        columnChildren = _column$props.children,\n        rest = (0, _objectWithoutProperties2[\"default\"])(_column$props, [\"children\"]);\n\n    var _getColumnCells = getColumnCells(columnChildren, rest),\n        header = _getColumnCells.header,\n        cell = _getColumnCells.cell;\n\n    headerCells.push(header);\n    bodyCells.push(cell);\n    return [headerCells, bodyCells];\n  }, [[], []]);\n};\n/**\n * Build an ordered array of columns\n * @param columns {Array} Array of nodes\n * @param source {String} drag source id\n * @param target {String} drag target id\n * @return {Array} - string array of columns id\n */\n\n\nexports.getTableCells = getTableCells;\n\nvar getOrderedColumnsById = function getOrderedColumnsById(columns, source, target) {\n  var sourceColumn = columns.find(function (child) {\n    var _child$props;\n\n    return (child === null || child === void 0 ? void 0 : (_child$props = child.props) === null || _child$props === void 0 ? void 0 : _child$props.dataKey) === source;\n  });\n  var sourceIndex = -1;\n  var orderedColumns = columns.reduce(function (cols, column, index) {\n    var dataKey = column.props.dataKey;\n\n    if (dataKey === source) {\n      sourceIndex = index;\n      return cols;\n    }\n\n    if (dataKey === target) {\n      if (sourceIndex === -1) {\n        cols.push(sourceColumn);\n        cols.push(column);\n      } else {\n        cols.push(column);\n        cols.push(sourceColumn);\n      }\n    } else {\n      cols.push(column);\n    }\n\n    return cols;\n  }, []);\n  return orderedColumns.map(function (col) {\n    var _col$props4;\n\n    return col === null || col === void 0 ? void 0 : (_col$props4 = col.props) === null || _col$props4 === void 0 ? void 0 : _col$props4.dataKey;\n  });\n};\n\nexports.getOrderedColumnsById = getOrderedColumnsById;\n\nvar getEmptySelection = function getEmptySelection() {\n  return {\n    allSelected: false,\n    items: new Set(),\n    exceptItems: new Set()\n  };\n};\n/**\n * Produces rows selection state based on the current state and next user action\n * @param rowSelection {Object} - { allSelected, items, exceptItems }\n * @param action {Object} - { rowId, selectAll }\n * @param data {Array} - table data\n * @param rowIdDataKey {String} - key from row data to be used as identifier\n */\n\n\nexports.getEmptySelection = getEmptySelection;\n\nfunction getSelectionOnAction(_ref5) {\n  var rowSelection = _ref5.rowSelection,\n      action = _ref5.action,\n      data = _ref5.data,\n      _ref5$rowIdDataKey = _ref5.rowIdDataKey,\n      rowIdDataKey = _ref5$rowIdDataKey === void 0 ? '_id' : _ref5$rowIdDataKey,\n      itemsTotalCount = _ref5.itemsTotalCount;\n  var rowId = action.rowId,\n      selectAll = action.selectAll;\n  var prevAllSelected = rowSelection.allSelected,\n      prevItems = rowSelection.items,\n      prevExceptItems = rowSelection.exceptItems;\n  var allSelected = prevAllSelected;\n  var items = new Set(prevItems);\n  var exceptItems = new Set(prevExceptItems);\n  var totalCount = itemsTotalCount || (data === null || data === void 0 ? void 0 : data.length) || 0;\n  var rowSelect = !items.has(rowId);\n  var rowUnSelect = !rowSelect;\n\n  if (selectAll) {\n    var someSelected = items.size;\n    var ids = someSelected ? [] : data.map(function (item) {\n      return item[rowIdDataKey];\n    });\n    return {\n      allSelected: !someSelected,\n      items: new Set(ids),\n      exceptItems: new Set()\n    };\n  }\n\n  if (!allSelected && rowSelect) {\n    items.add(rowId);\n    exceptItems.clear();\n\n    if (items.size === totalCount) {\n      allSelected = true;\n    }\n  }\n\n  if (!allSelected && rowUnSelect) {\n    items[\"delete\"](rowId);\n    exceptItems.clear();\n  }\n\n  if (allSelected && rowSelect) {\n    items.add(rowId);\n    exceptItems[\"delete\"](rowId);\n  }\n\n  if (allSelected && rowUnSelect) {\n    items[\"delete\"](rowId);\n    exceptItems.add(rowId);\n\n    if (exceptItems.size === totalCount) {\n      allSelected = false;\n    }\n  }\n\n  return {\n    allSelected: allSelected,\n    items: items,\n    exceptItems: exceptItems\n  };\n}\n/**\n * Produces rows selection state based on the current state and data\n * @param rowSelection {Object} - { allSelected, items, exceptItems }\n * @param data {Array} - table data\n * @param rowIdDataKey {String} - key from row data to be used as identifier\n * @returns {Object} - { allSelected, items, exceptItems }\n */\n\n\nfunction getSelectionOnData(_ref6) {\n  var rowSelection = _ref6.rowSelection,\n      data = _ref6.data,\n      _ref6$rowIdDataKey = _ref6.rowIdDataKey,\n      rowIdDataKey = _ref6$rowIdDataKey === void 0 ? '_id' : _ref6$rowIdDataKey;\n  var allSelected = rowSelection.allSelected,\n      items = rowSelection.items,\n      exceptItems = rowSelection.exceptItems;\n  var newItems = new Set();\n\n  if (allSelected) {\n    var ids = data.map(function (item) {\n      return item[rowIdDataKey];\n    });\n    newItems = new Set(ids);\n    exceptItems.forEach(function (id) {\n      return newItems[\"delete\"](id);\n    });\n    return {\n      allSelected: allSelected,\n      items: new Set([].concat((0, _toConsumableArray2[\"default\"])(items), (0, _toConsumableArray2[\"default\"])(newItems))),\n      exceptItems: exceptItems\n    };\n  }\n\n  return {\n    allSelected: allSelected,\n    items: items,\n    exceptItems: exceptItems\n  };\n}"]},"metadata":{},"sourceType":"script"}