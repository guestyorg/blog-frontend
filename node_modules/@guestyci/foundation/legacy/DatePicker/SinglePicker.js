"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactDates = require("react-dates");

var _enums = require("../../enums/enums");

var SinglePicker = function SinglePicker(_ref) {
  var id = _ref.id,
      style = _ref.style,
      prevMonthButton = _ref.prevMonthButton,
      nextMonthButton = _ref.nextMonthButton,
      renderMonthElement = _ref.renderMonthElement,
      verticalSpacing = _ref.verticalSpacing,
      disabled = _ref.disabled,
      date = _ref.date,
      readOnly = _ref.readOnly,
      daySize = _ref.daySize,
      numberOfMonths = _ref.numberOfMonths,
      isOutsideRange = _ref.isOutsideRange,
      isDayBlocked = _ref.isDayBlocked,
      initialVisibleMonth = _ref.initialVisibleMonth,
      onDateChange = _ref.onDateChange,
      isFocused = _ref.isFocused,
      onFocusChange = _ref.onFocusChange,
      renderDayContents = _ref.renderDayContents,
      anchorDirection = _ref.anchorDirection,
      openDirection = _ref.openDirection,
      weekDayFormat = _ref.weekDayFormat,
      appendToBody = _ref.appendToBody;
  return /*#__PURE__*/_react["default"].createElement("div", {
    style: style,
    "data-qa": "single-picker"
  }, /*#__PURE__*/_react["default"].createElement(_reactDates.SingleDatePicker, {
    date: date,
    placeholder: "Select",
    id: id,
    onDateChange: onDateChange,
    noBorder: true,
    daySize: daySize,
    numberOfMonths: numberOfMonths,
    verticalSpacing: verticalSpacing,
    navPrev: prevMonthButton,
    navNext: nextMonthButton,
    renderMonthElement: renderMonthElement,
    focused: isFocused,
    onFocusChange: onFocusChange,
    disabled: disabled,
    hideKeyboardShortcutsPanel: true,
    readOnly: readOnly,
    renderDayContents: renderDayContents,
    isOutsideRange: isOutsideRange,
    isDayBlocked: isDayBlocked,
    initialVisibleMonth: initialVisibleMonth,
    anchorDirection: anchorDirection,
    openDirection: openDirection,
    weekDayFormat: weekDayFormat,
    displayFormat: _enums.DateDisplayFormat,
    appendToBody: appendToBody
  }));
};

var _default = SinglePicker;
exports["default"] = _default;