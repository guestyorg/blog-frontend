import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import React from 'react';
import cn from 'classnames';
import PropTypes from 'prop-types';
import Checkbox from "../../../Checkbox";
import createStyles from "../../../createStyles";
var useStyles = createStyles({
  root: {
    display: 'table-cell',
    background: 'inherit',
    width: 36,
    verticalAlign: 'middle'
  },
  fixed: {
    position: 'sticky',
    left: 0
  }
}, {
  name: 'CheckboxCell'
});
var CheckboxCell = React.memo(function (_ref) {
  var className = _ref.className,
      style = _ref.style,
      onChange = _ref.onChange,
      checked = _ref.checked,
      indeterminate = _ref.indeterminate,
      value = _ref.value,
      fixed = _ref.fixed;
  var classes = useStyles({
    fixed: fixed
  });

  var handleCheck = function handleCheck() {
    onChange(value);
  };

  var handleClick = function handleClick(e) {
    e.stopPropagation();
  };

  var inputProps = {
    onClick: handleClick
  };
  return /*#__PURE__*/React.createElement("div", {
    className: cn('checkbox-cell', classes.root, _defineProperty({}, classes.fixed, fixed), className),
    style: style
  }, /*#__PURE__*/React.createElement(Checkbox, {
    checked: checked,
    inputProps: inputProps,
    indeterminate: indeterminate,
    onChange: handleCheck,
    value: value
  }));
});
CheckboxCell.defaultProps = {
  className: '',
  style: {},
  checked: false,
  value: '',
  fixed: false
};
CheckboxCell.propTypes = {
  onChange: PropTypes.func.isRequired,
  className: PropTypes.string,
  style: PropTypes.shape(),
  checked: PropTypes.bool,
  indeterminate: PropTypes.bool,
  fixed: PropTypes.bool,
  value: PropTypes.string
};
CheckboxCell.displayName = 'CheckboxCell';
export default CheckboxCell;