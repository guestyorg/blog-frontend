"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.renderHook = exports.mockCustomHook = exports.mockHook = void 0;

var _react = _interopRequireDefault(require("react"));

var _utils = require("../utils");

/**
 * Mock a react hook from the react api
 * @param hook
 * @return {*}
 */
var mockHook = function mockHook(hook, cb) {
  return jest.spyOn(_react["default"], hook).mockImplementation(function (f) {
    return cb() || f();
  });
};
/**
 *  Custom hook
 * @param hook
 * @param cb
 * @return {*}
 */


exports.mockHook = mockHook;

var mockCustomHook = function mockCustomHook(hook, cb) {
  return jest.spyOn(hook).mockImplementation(function () {
    return cb();
  });
};

exports.mockCustomHook = mockCustomHook;

function HookWrapper(_ref) {
  var hook = _ref.hook;
  var hookInstance = hook ? hook() : undefined;
  return _react["default"].createElement("div", {
    hook: hookInstance
  });
}
/**
 * Render a custom hook to the DOM
 * @param hook  {Function} Hook to render
 * @param args  {*} Initial values to hook
 * @return {function(): *}
 */


var renderHook = function renderHook(_hook) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }

  var wrapper = (0, _utils.shallow)(_react["default"].createElement(HookWrapper, {
    hook: function hook() {
      return _hook.apply(void 0, args);
    }
  }));
  return function () {
    return wrapper.prop('hook');
  };
};

exports.renderHook = renderHook;