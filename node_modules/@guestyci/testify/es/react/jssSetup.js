import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
import React from 'react';
import { mount, shallow } from 'enzyme';
import MockJssProvider from "./MockJssProvider";
/**
 * Setup for component using jss classes
 * @param comp
 * @return {function(*=, *=): *}
 */

export default (comp => {
  return (props = {}, options = {}) => {
    const {
      isMount = false
    } = options,
          rest = _objectWithoutPropertiesLoose(options, ["isMount"]);

    const component = React.createElement(comp, _extends({}, props, {
      className: `${props === null || props === void 0 ? void 0 : props.className} test-rendered-component`
    }));
    const wrapper = isMount ? mount(component, _extends({}, rest, {
      wrappingComponent: MockJssProvider
    })) : shallow(component, _extends({}, rest, {
      wrappingComponent: MockJssProvider
    }));
    return isMount ? wrapper.find('.test-rendered-component').last() : wrapper.find('.test-rendered-component');
  };
});