import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
import React from 'react';
import PropTypes from 'prop-types';
import cn from 'classnames';
import createStyles from "../createStyles";
import Button from "../Button";
export const useStyles = createStyles(theme => ({
  root: {
    height: '100%',
    width: 46,
    minWidth: 46,
    borderRadius: 0,
    transition: theme.transition.create(),
    fill: theme.palette.secondary.default,
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    borderRight: `solid 1px ${theme.palette.border}`
  },
  pickerButton: {
    width: '25px',
    height: '25px'
  }
}));
const CountryFlagButton = React.forwardRef(function CountryFlagButton(_ref, ref) {
  let {
    CountryIcon,
    disabled,
    style,
    onClick,
    className,
    jss
  } = _ref,
      props = _objectWithoutPropertiesLoose(_ref, ["CountryIcon", "disabled", "style", "onClick", "className", "jss"]);

  const classes = useStyles({
    jss
  });
  return /*#__PURE__*/React.createElement(Button, _extends({}, props, {
    style: style,
    component: "span",
    ref: ref,
    enableRipple: false,
    className: cn(classes.root, className),
    disabled: disabled,
    size: "xs",
    onClick: onClick
  }), /*#__PURE__*/React.createElement(CountryIcon, {
    className: classes.pickerButton
  }));
});
CountryFlagButton.propTypes = {
  /** The country Icon SVG */
  CountryIcon: PropTypes.oneOfType([PropTypes.shape(), PropTypes.func]),

  /** Cb for onClick */
  onClick: PropTypes.func,

  /** Additional class to the top component level */
  className: PropTypes.string,

  /** Additional style to the top component level */
  style: PropTypes.shape(),

  /** Boolean disable/enable component */
  disabled: PropTypes.bool,

  /** jss override object to customize the jss classes */
  jss: PropTypes.oneOfType([PropTypes.shape(), PropTypes.func])
};
export default CountryFlagButton;