{"ast":null,"code":"// import Axios from \"axios\";\n// import {\n//   USER_DETAILS_FAIL,\n//   USER_DETAILS_REQUEST,\n//   USER_DETAILS_SUCCESS,\n//   USER_REGISTER_FAIL,\n//   USER_REGISTER_REQUEST,\n//   USER_REGISTER_SUCCESS,\n//   USER_SIGNIN_FAIL,\n//   USER_SIGNIN_REQUEST,\n//   USER_SIGNIN_SUCCESS,\n//   USER_SIGNOUT,\n//   USER_UPDATE_PROFILE_FAIL,\n//   USER_UPDATE_PROFILE_REQUEST,\n//   USER_UPDATE_PROFILE_SUCCESS,\n//   USER_LIST_REQUEST,\n//   USER_LIST_SUCCESS,\n//   USER_LIST_FAIL,\n//   USER_DELETE_REQUEST,\n//   USER_DELETE_SUCCESS,\n//   USER_DELETE_FAIL,\n//   USER_UPDATE_SUCCESS,\n//   USER_UPDATE_FAIL,\n// } from \"../constants/userConstants\";\n// import Resource from \"@guestyci/agni\";\n// // const { api, env, config } = Resource.create();\n// const temp = Resource.create(\"user\");\n// temp.api.defaults.baseURL = `http://localhost:3000/api/users`;\n// const userApi = temp.api;\n// export const listUsers = () => async (dispatch) => {\n//   dispatch({ type: USER_LIST_REQUEST });\n//   console.log(\"USER_LIST_REQUEST\");\n//   try {\n//     // const { data } = await Axios.get(\"http://localhost:3000/api/users\");\n//     // const temp = Resource.create('tasks');\n//     // temp.api.defaults.baseURL = `http://localhost:9999/tasks`;\n//     // export const tasksApi = temp.api;\n//     const data = await userApi.get(); // will go to `${config.MAILER_URL}/users`\n//     console.log(\"data:\", data);\n//     let counter = 1;\n//     const arr = [];\n//     let users = data;\n//     for (let i = 0; i < users.length; i++) {\n//       // console.log(\"users[i]: \", users[i]);\n//       const arrUser = Object.entries(users[i]);\n//       // console.log(\"arrUser:\", arrUser);\n//       //  firstName: {\n//       //   children: 'John',\n//       // },\n//       const bigObj = {};\n//       for (let j = 0; j < arrUser.length; j++) {\n//         const obj = {};\n//         // console.log(\"arrUser[j]: \", arrUser[j]);\n//         // console.log(\"arrUser[0]: \",arrUser[j][0]);\n//         // console.log(\"arrUser[1]: \",arrUser[j][1]);\n//         // console.log(\"obj:\", obj);\n//         if (arrUser[j][0] === \"_id\") {\n//           obj.children = arrUser[j][1];\n//           bigObj.id = obj;\n//           bigObj._id = arrUser[j][1];\n//         } else if (\n//           arrUser[j][0] === \"createdAt\" ||\n//           arrUser[j][0] === \"updatedAt\"\n//         ) {\n//           obj.children = new Date(arrUser[j][1]).toLocaleString();\n//           bigObj[arrUser[j][0]] = obj;\n//         } else if (arrUser[j][0] === \"account\") {\n//           // console.log(\"arrUser:\", arrUser);\n//           obj.children = arrUser[j][1].name;\n//           bigObj[arrUser[j][0]] = obj;\n//         } else {\n//           obj.children = arrUser[j][1];\n//           bigObj[arrUser[j][0]] = obj;\n//         }\n//         console.log(\"bigObj:\", bigObj);\n//         // arr.push( `${arrUser[j][0]}: {children: '${arrUser[j][1]}',}`)\n//       }\n//       // arr.push({gilad:1,...users[i]})\n//       arr.push({ ...bigObj });\n//       // arr.push({ _id: `${counter}`, ...bigObj });\n//       counter++;\n//     }\n//     console.log(\"arr: \", arr);\n//     //  setData(response.data.results)\n//     dispatch({ type: USER_LIST_SUCCESS, payload: arr });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: USER_LIST_FAIL, payload: message });\n//   }\n// };\n// export const register =\n//   (firstName, lastName, email, accountId) => async (dispatch) => {\n//     dispatch({\n//       type: USER_REGISTER_REQUEST,\n//       payload: { firstName, lastName, email, accountId },\n//     });\n//     try {\n//       const { data } = await Axios.post(\n//         \"http://localhost:3000/api/users/register\",\n//         {\n//           firstName,\n//           lastName,\n//           email,\n//           accountId,\n//         }\n//       );\n//       dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n//       dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n//       localStorage.setItem(\"userInfo\", JSON.stringify(data));\n//     } catch (error) {\n//       dispatch({\n//         type: USER_REGISTER_FAIL,\n//         payload:\n//           error.response && error.response.data.message\n//             ? error.response.data.message\n//             : error.message,\n//       });\n//     }\n//   };\n// export const signin = (email) => async (dispatch) => {\n//   dispatch({ type: USER_SIGNIN_REQUEST, payload: { email } });\n//   try {\n//     const { data } = await Axios.post(\n//       \"http://localhost:3000/api/users/signin\",\n//       { email }\n//     );\n//     dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n//     // dispatch(emailUser(email));\n//     localStorage.setItem(\"userInfo\", JSON.stringify(data));\n//   } catch (error) {\n//     // console.log(\"error :\", error);\n//     dispatch({\n//       type: USER_SIGNIN_FAIL,\n//       payload:\n//         error.response && error.response.data.message\n//           ? error.response.data.message\n//           : error.message,\n//     });\n//   }\n// };\n// export const signout = () => (dispatch) => {\n//   localStorage.removeItem(\"userInfo\");\n//   dispatch({ type: USER_SIGNOUT });\n//   document.location.href = \"/signin\";\n// };\n// export const deleteUser = (userId) => async (dispatch) => {\n//   dispatch({ type: USER_DELETE_REQUEST, payload: userId });\n//   try {\n//     const { data } = await Axios.delete(\n//       `http://localhost:3000/api/users/${userId}`\n//     );\n//     dispatch({ type: USER_DELETE_SUCCESS, payload: data });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: USER_DELETE_FAIL, payload: message });\n//   }\n// };\n// export const detailsUser = (userId) => async (dispatch) => {\n//   dispatch({ type: USER_DETAILS_REQUEST, payload: userId });\n//   try {\n//     const { data } = await Axios.get(\n//       `http://localhost:3000/api/users/${userId}`\n//     );\n//     dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: USER_DETAILS_FAIL, payload: message });\n//   }\n// };\n// export const updateUser = (user) => async (dispatch) => {\n//   // console.log(\"user:\", user);\n//   dispatch({ type: USER_UPDATE_PROFILE_REQUEST, payload: user });\n//   try {\n//     const { data } = await Axios.patch(\n//       `http://localhost:3000/api/users/${user._id}`,\n//       user\n//     );\n//     dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: USER_UPDATE_FAIL, payload: message });\n//   }\n// };","map":{"version":3,"sources":["/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/actions/userActions.js"],"names":[],"mappingssourcesContent":["// import Axios from \"axios\";\n// import {\n//   USER_DETAILS_FAIL,\n//   USER_DETAILS_REQUEST,\n//   USER_DETAILS_SUCCESS,\n//   USER_REGISTER_FAIL,\n//   USER_REGISTER_REQUEST,\n//   USER_REGISTER_SUCCESS,\n//   USER_SIGNIN_FAIL,\n//   USER_SIGNIN_REQUEST,\n//   USER_SIGNIN_SUCCESS,\n//   USER_SIGNOUT,\n//   USER_UPDATE_PROFILE_FAIL,\n//   USER_UPDATE_PROFILE_REQUEST,\n//   USER_UPDATE_PROFILE_SUCCESS,\n//   USER_LIST_REQUEST,\n//   USER_LIST_SUCCESS,\n//   USER_LIST_FAIL,\n//   USER_DELETE_REQUEST,\n//   USER_DELETE_SUCCESS,\n//   USER_DELETE_FAIL,\n//   USER_UPDATE_SUCCESS,\n//   USER_UPDATE_FAIL,\n// } from \"../constants/userConstants\";\n// import Resource from \"@guestyci/agni\";\n// // const { api, env, config } = Resource.create();\n// const temp = Resource.create(\"user\");\n// temp.api.defaults.baseURL = `http://localhost:3000/api/users`;\n\n// const userApi = temp.api;\n\n// export const listUsers = () => async (dispatch) => {\n//   dispatch({ type: USER_LIST_REQUEST });\n//   console.log(\"USER_LIST_REQUEST\");\n//   try {\n//     // const { data } = await Axios.get(\"http://localhost:3000/api/users\");\n\n//     // const temp = Resource.create('tasks');\n//     // temp.api.defaults.baseURL = `http://localhost:9999/tasks`;\n//     // export const tasksApi = temp.api;\n\n//     const data = await userApi.get(); // will go to `${config.MAILER_URL}/users`\n\n//     console.log(\"data:\", data);\n\n//     let counter = 1;\n//     const arr = [];\n\n//     let users = data;\n\n//     for (let i = 0; i < users.length; i++) {\n//       // console.log(\"users[i]: \", users[i]);\n\n//       const arrUser = Object.entries(users[i]);\n//       // console.log(\"arrUser:\", arrUser);\n\n//       //  firstName: {\n//       //   children: 'John',\n//       // },\n\n//       const bigObj = {};\n\n//       for (let j = 0; j < arrUser.length; j++) {\n//         const obj = {};\n//         // console.log(\"arrUser[j]: \", arrUser[j]);\n//         // console.log(\"arrUser[0]: \",arrUser[j][0]);\n//         // console.log(\"arrUser[1]: \",arrUser[j][1]);\n\n//         // console.log(\"obj:\", obj);\n\n//         if (arrUser[j][0] === \"_id\") {\n//           obj.children = arrUser[j][1];\n\n//           bigObj.id = obj;\n\n//           bigObj._id = arrUser[j][1];\n//         } else if (\n//           arrUser[j][0] === \"createdAt\" ||\n//           arrUser[j][0] === \"updatedAt\"\n//         ) {\n//           obj.children = new Date(arrUser[j][1]).toLocaleString();\n\n//           bigObj[arrUser[j][0]] = obj;\n//         } else if (arrUser[j][0] === \"account\") {\n//           // console.log(\"arrUser:\", arrUser);\n\n//           obj.children = arrUser[j][1].name;\n\n//           bigObj[arrUser[j][0]] = obj;\n//         } else {\n//           obj.children = arrUser[j][1];\n\n//           bigObj[arrUser[j][0]] = obj;\n//         }\n\n//         console.log(\"bigObj:\", bigObj);\n\n//         // arr.push( `${arrUser[j][0]}: {children: '${arrUser[j][1]}',}`)\n//       }\n//       // arr.push({gilad:1,...users[i]})\n//       arr.push({ ...bigObj });\n//       // arr.push({ _id: `${counter}`, ...bigObj });\n\n//       counter++;\n//     }\n\n//     console.log(\"arr: \", arr);\n//     //  setData(response.data.results)\n\n//     dispatch({ type: USER_LIST_SUCCESS, payload: arr });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: USER_LIST_FAIL, payload: message });\n//   }\n// };\n\n// export const register =\n//   (firstName, lastName, email, accountId) => async (dispatch) => {\n//     dispatch({\n//       type: USER_REGISTER_REQUEST,\n//       payload: { firstName, lastName, email, accountId },\n//     });\n//     try {\n//       const { data } = await Axios.post(\n//         \"http://localhost:3000/api/users/register\",\n//         {\n//           firstName,\n//           lastName,\n//           email,\n//           accountId,\n//         }\n//       );\n\n//       dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n\n//       dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n//       localStorage.setItem(\"userInfo\", JSON.stringify(data));\n//     } catch (error) {\n//       dispatch({\n//         type: USER_REGISTER_FAIL,\n//         payload:\n//           error.response && error.response.data.message\n//             ? error.response.data.message\n//             : error.message,\n//       });\n//     }\n//   };\n\n// export const signin = (email) => async (dispatch) => {\n//   dispatch({ type: USER_SIGNIN_REQUEST, payload: { email } });\n//   try {\n//     const { data } = await Axios.post(\n//       \"http://localhost:3000/api/users/signin\",\n//       { email }\n//     );\n//     dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n//     // dispatch(emailUser(email));\n\n//     localStorage.setItem(\"userInfo\", JSON.stringify(data));\n//   } catch (error) {\n//     // console.log(\"error :\", error);\n//     dispatch({\n//       type: USER_SIGNIN_FAIL,\n//       payload:\n//         error.response && error.response.data.message\n//           ? error.response.data.message\n//           : error.message,\n//     });\n//   }\n// };\n\n// export const signout = () => (dispatch) => {\n//   localStorage.removeItem(\"userInfo\");\n\n//   dispatch({ type: USER_SIGNOUT });\n//   document.location.href = \"/signin\";\n// };\n\n// export const deleteUser = (userId) => async (dispatch) => {\n//   dispatch({ type: USER_DELETE_REQUEST, payload: userId });\n\n//   try {\n//     const { data } = await Axios.delete(\n//       `http://localhost:3000/api/users/${userId}`\n//     );\n//     dispatch({ type: USER_DELETE_SUCCESS, payload: data });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: USER_DELETE_FAIL, payload: message });\n//   }\n// };\n\n// export const detailsUser = (userId) => async (dispatch) => {\n//   dispatch({ type: USER_DETAILS_REQUEST, payload: userId });\n\n//   try {\n//     const { data } = await Axios.get(\n//       `http://localhost:3000/api/users/${userId}`\n//     );\n//     dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: USER_DETAILS_FAIL, payload: message });\n//   }\n// };\n\n// export const updateUser = (user) => async (dispatch) => {\n//   // console.log(\"user:\", user);\n//   dispatch({ type: USER_UPDATE_PROFILE_REQUEST, payload: user });\n//   try {\n//     const { data } = await Axios.patch(\n//       `http://localhost:3000/api/users/${user._id}`,\n//       user\n//     );\n//     dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: USER_UPDATE_FAIL, payload: message });\n//   }\n// };\n"]},"metadata":{},"sourceType":"module"}