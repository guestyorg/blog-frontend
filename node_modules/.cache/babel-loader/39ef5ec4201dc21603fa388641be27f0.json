{"ast":null,"code":"export var easing = {\n  // This is the most common easing curve.\n  easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',\n  // Objects enter the screen at full velocity from off-screen and\n  // slowly decelerate to a resting point.\n  easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',\n  // Objects leave the screen at full velocity. They do not decelerate when off-screen.\n  easeIn: 'cubic-bezier(0.4, 0, 1, 1)',\n  // The sharp curve is used by objects that may return to the screen at any time.\n  sharp: 'cubic-bezier(0.4, 0, 0.6, 1)'\n};\nexport var duration = {\n  shortest: 150,\n  shorter: 200,\n  \"short\": 250,\n  // most basic recommended timing\n  standard: 300,\n  // this is to be used in complex animations\n  complex: 375,\n  // recommended when something is entering screen\n  enteringScreen: 225,\n  // recommended when something is leaving screen\n  leavingScreen: 195\n};\nexport default {\n  easing: easing,\n  duration: duration,\n  create: function create() {\n    var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['all'];\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _options$duration = options.duration,\n        durationOption = _options$duration === void 0 ? duration.standard : _options$duration,\n        _options$easing = options.easing,\n        easingOption = _options$easing === void 0 ? easing.sharp : _options$easing,\n        _options$delay = options.delay,\n        delay = _options$delay === void 0 ? 0 : _options$delay;\n    return (Array.isArray(attrs) ? attrs : [attrs]).map(function (transitionAttribute) {\n      return \"\".concat(transitionAttribute, \" \").concat(durationOption, \"ms \").concat(easingOption, \" \").concat(delay, \"ms\");\n    }).join(',');\n  }\n};","map":{"version":3,"sources":["/Users/giladdekel/Workspace/Guesty/simple-app-archive/node_modules/@guestyci/foundation/esm/theme/transition.js"],"names":["easing","easeInOut","easeOut","easeIn","sharp","duration","shortest","shorter","standard","complex","enteringScreen","leavingScreen","create","attrs","arguments","length","undefined","options","_options$duration","durationOption","_options$easing","easingOption","_options$delay","delay","Array","isArray","map","transitionAttribute","concat","join"],"mappings":"AAAA,OAAO,IAAIA,MAAM,GAAG;AAClB;AACAC,EAAAA,SAAS,EAAE,8BAFO;AAGlB;AACA;AACAC,EAAAA,OAAO,EAAE,8BALS;AAMlB;AACAC,EAAAA,MAAM,EAAE,4BAPU;AAQlB;AACAC,EAAAA,KAAK,EAAE;AATW,CAAb;AAWP,OAAO,IAAIC,QAAQ,GAAG;AACpBC,EAAAA,QAAQ,EAAE,GADU;AAEpBC,EAAAA,OAAO,EAAE,GAFW;AAGpB,WAAS,GAHW;AAIpB;AACAC,EAAAA,QAAQ,EAAE,GALU;AAMpB;AACAC,EAAAA,OAAO,EAAE,GAPW;AAQpB;AACAC,EAAAA,cAAc,EAAE,GATI;AAUpB;AACAC,EAAAA,aAAa,EAAE;AAXK,CAAf;AAaP,eAAe;AACbX,EAAAA,MAAM,EAAEA,MADK;AAEbK,EAAAA,QAAQ,EAAEA,QAFG;AAGbO,EAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB;AACxB,QAAIC,KAAK,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,CAAC,KAAD,CAAhF;AACA,QAAIG,OAAO,GAAGH,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA,QAAII,iBAAiB,GAAGD,OAAO,CAACZ,QAAhC;AAAA,QACIc,cAAc,GAAGD,iBAAiB,KAAK,KAAK,CAA3B,GAA+Bb,QAAQ,CAACG,QAAxC,GAAmDU,iBADxE;AAAA,QAEIE,eAAe,GAAGH,OAAO,CAACjB,MAF9B;AAAA,QAGIqB,YAAY,GAAGD,eAAe,KAAK,KAAK,CAAzB,GAA6BpB,MAAM,CAACI,KAApC,GAA4CgB,eAH/D;AAAA,QAIIE,cAAc,GAAGL,OAAO,CAACM,KAJ7B;AAAA,QAKIA,KAAK,GAAGD,cAAc,KAAK,KAAK,CAAxB,GAA4B,CAA5B,GAAgCA,cAL5C;AAMA,WAAO,CAACE,KAAK,CAACC,OAAN,CAAcZ,KAAd,IAAuBA,KAAvB,GAA+B,CAACA,KAAD,CAAhC,EAAyCa,GAAzC,CAA6C,UAAUC,mBAAV,EAA+B;AACjF,aAAO,GAAGC,MAAH,CAAUD,mBAAV,EAA+B,GAA/B,EAAoCC,MAApC,CAA2CT,cAA3C,EAA2D,KAA3D,EAAkES,MAAlE,CAAyEP,YAAzE,EAAuF,GAAvF,EAA4FO,MAA5F,CAAmGL,KAAnG,EAA0G,IAA1G,CAAP;AACD,KAFM,EAEJM,IAFI,CAEC,GAFD,CAAP;AAGD;AAfY,CAAf","sourcesContent":["export var easing = {\n  // This is the most common easing curve.\n  easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',\n  // Objects enter the screen at full velocity from off-screen and\n  // slowly decelerate to a resting point.\n  easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',\n  // Objects leave the screen at full velocity. They do not decelerate when off-screen.\n  easeIn: 'cubic-bezier(0.4, 0, 1, 1)',\n  // The sharp curve is used by objects that may return to the screen at any time.\n  sharp: 'cubic-bezier(0.4, 0, 0.6, 1)'\n};\nexport var duration = {\n  shortest: 150,\n  shorter: 200,\n  \"short\": 250,\n  // most basic recommended timing\n  standard: 300,\n  // this is to be used in complex animations\n  complex: 375,\n  // recommended when something is entering screen\n  enteringScreen: 225,\n  // recommended when something is leaving screen\n  leavingScreen: 195\n};\nexport default {\n  easing: easing,\n  duration: duration,\n  create: function create() {\n    var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['all'];\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _options$duration = options.duration,\n        durationOption = _options$duration === void 0 ? duration.standard : _options$duration,\n        _options$easing = options.easing,\n        easingOption = _options$easing === void 0 ? easing.sharp : _options$easing,\n        _options$delay = options.delay,\n        delay = _options$delay === void 0 ? 0 : _options$delay;\n    return (Array.isArray(attrs) ? attrs : [attrs]).map(function (transitionAttribute) {\n      return \"\".concat(transitionAttribute, \" \").concat(durationOption, \"ms \").concat(easingOption, \" \").concat(delay, \"ms\");\n    }).join(',');\n  }\n};"]},"metadata":{},"sourceType":"module"}