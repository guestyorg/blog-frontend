"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _noop = _interopRequireDefault(require("lodash/noop"));

var _Popover = _interopRequireDefault(require("../Popover/Popover"));

var _ActionPopoverBody = _interopRequireDefault(require("./ActionPopoverBody"));

var ActionPopover = function ActionPopover(_ref) {
  var children = _ref.children,
      onClose = _ref.onClose,
      isOpen = _ref.isOpen,
      body = _ref.body,
      className = _ref.className,
      containerClassName = _ref.containerClassName,
      placement = _ref.placement,
      id = _ref.id,
      offset = _ref.offset,
      onClick = _ref.onClick,
      actionText = _ref.actionText;
  return /*#__PURE__*/_react["default"].createElement(_Popover["default"], {
    onClose: onClose,
    isOpen: isOpen,
    body: /*#__PURE__*/_react["default"].createElement(_ActionPopoverBody["default"], {
      onClick: onClick,
      buttonText: actionText,
      body: body
    }),
    className: className,
    containerClassName: containerClassName,
    placement: placement,
    offset: offset,
    id: id,
    "data-qa": "action-popover"
  }, children);
};

ActionPopover.defaultProps = {
  className: '',
  id: undefined,
  placement: 'top',
  offset: undefined,
  containerClassName: '',
  body: null,
  actionText: 'Got it',
  onClose: _noop["default"]
};
ActionPopover.propTypes = {
  /** Bool - Boolean defining whether or not to toggle the popover */
  isOpen: _propTypes["default"].bool.isRequired,

  /** Node - the component wrapped by the popover */
  children: _propTypes["default"].node.isRequired,

  /** String || React Element - The popover body */
  body: _propTypes["default"].node,

  /** onClose  - Function to support the popover toggle */
  onClose: _propTypes["default"].func,

  /** String - Set the popover trigger id */
  id: _propTypes["default"].string,

  /** String - Additional popover component class */
  className: _propTypes["default"].string,

  /** Popover placement supporting (top, bottom, left, right ) => <pos>-start, <pos>-end */
  placement: _propTypes["default"].string,

  /** set custom offset to popover arrow */
  offset: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].number]),

  /** Add class to popover root level */
  containerClassName: _propTypes["default"].string,

  /** Callback function for action click */
  onClick: _propTypes["default"].func.isRequired,

  /** Custom action button text */
  actionText: _propTypes["default"].string
};
var _default = ActionPopover;
exports["default"] = _default;