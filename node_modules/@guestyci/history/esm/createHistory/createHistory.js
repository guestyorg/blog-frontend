import { createBrowserHistory } from 'history';
import { listener } from "../routerListener/routeListener";
var browserHistory = createBrowserHistory();
/**
 * Create a new browser history and init with params
 * @param params  {Object}  Params for history
 * @return {{createHref, goBack, length, replace, go, action, location, goForward, block, push, listen}}
 */

export function createHistory() {
  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var _params$baseUrl = params.baseUrl,
      baseUrl = _params$baseUrl === void 0 ? '' : _params$baseUrl,
      _params$isFragment = params.isFragment,
      isFragment = _params$isFragment === void 0 ? true : _params$isFragment,
      alias = params.alias;
  browserHistory = createBrowserHistory({
    basename: baseUrl
  });
  browserHistory.isFragment = isFragment;
  browserHistory.baseUrl = baseUrl;
  browserHistory.alias = alias;
  browserHistory.unlisten = listener(browserHistory);
  return browserHistory;
}
/**
 * return the history instance
 * @return {{createHref, goBack, length, replace, go, action, location, goForward, block, push, listen}}
 */

export function getHistory() {
  return browserHistory;
}
export default createHistory;