"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _isEmpty = _interopRequireDefault(require("lodash/isEmpty"));

var _classnames = _interopRequireDefault(require("classnames"));

var _createStyles = _interopRequireDefault(require("@guestyci/foundation/createStyles"));

var _utils = _interopRequireDefault(require("../utils"));

var useStyles = (0, _createStyles["default"])({
  a: {
    '&:hover': {
      color: 'inherit',
      textDecoration: 'inherit'
    },
    color: 'inherit'
  }
});

var resolvePathName = function resolvePathName() {
  var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  var currentPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '/';
  var serializedPath = path.startsWith('/') ? path.substr(1) : path;

  if (currentPath.endsWith('/')) {
    return "".concat(currentPath).concat(serializedPath);
  }

  var currentPathArray = currentPath.split('/');

  if (currentPathArray.length) {
    currentPathArray.pop();
    var currentPathWithoutLastItem = currentPathArray.join('/');
    return "".concat(currentPathWithoutLastItem, "/").concat(serializedPath);
  }

  return "/".concat(serializedPath);
};

var Link = function Link(_ref) {
  var to = _ref.to,
      href = _ref.href,
      children = _ref.children,
      className = _ref.className,
      onClick = _ref.onClick,
      rest = (0, _objectWithoutProperties2["default"])(_ref, ["to", "href", "children", "className", "onClick"]);
  var classes = useStyles();
  var target = rest.target;
  var aHref = (0, _react.useMemo)(function () {
    if (!(0, _isEmpty["default"])(href)) {
      return href;
    }

    var location = to;

    if (typeof to === 'string') {
      var locationFromPath = _utils["default"].parsePath(to);

      locationFromPath.pathname = resolvePathName(locationFromPath.pathname, _utils["default"].location().pathname);
      location = locationFromPath;
    }

    return location ? _utils["default"].createHref(location) : '';
  }, [href, to]);
  var onLinkClick = (0, _react.useCallback)(function (e) {
    if (!target || target === '_self') {
      e.preventDefault();

      if (e.ctrlKey || e.metaKey) {
        _utils["default"].link(aHref, true);
      } else if (!(0, _isEmpty["default"])(to)) {
        _utils["default"].push(to);
      } else {
        _utils["default"].link(href, false);
      }
    }

    if (target === '_none') {
      e.preventDefault();
    }

    if (onClick) {
      onClick(e);
    }
  }, [href, to, target, onClick, _utils["default"]]);
  return /*#__PURE__*/_react["default"].createElement("a", (0, _extends2["default"])({
    href: aHref,
    className: (0, _classnames["default"])(classes.a, className),
    onClick: onLinkClick
  }, rest), children);
};

Link.defaultProps = {
  className: '',
  to: '',
  href: ''
};
Link.propTypes = {
  /** Navigation prop for react route navigation */
  to: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].shape()]),

  /** Navigation prop for window location navigation */
  href: _propTypes["default"].string,

  /** Custom classes to style Link component */
  className: _propTypes["default"].string
};
var _default = Link;
exports["default"] = _default;