import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";

function _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import noop from 'lodash/noop';
import cn from 'classnames';
import InputStarDeleteActionAddOn from "../baseInput/InputStarDeleteActionAddon";
import withHover from "../../withHover/withHover";
import Input from "../Input/Input";

var EmailInput = /*#__PURE__*/function (_PureComponent) {
  _inherits(EmailInput, _PureComponent);

  var _super = _createSuper(EmailInput);

  function EmailInput(props) {
    var _this;

    _classCallCheck(this, EmailInput);

    _this = _super.call(this, props);

    _this.handleInputChange = function (value, target) {
      var onChange = _this.props.onChange;

      if (onChange) {
        onChange(value, target);
      }

      _this.setState({
        fieldValue: value
      });
    };

    _this.state = {
      fieldValue: props.value
    };
    return _this;
  }

  _createClass(EmailInput, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          inputStyle = _this$props.inputStyle,
          inputClassName = _this$props.inputClassName,
          disabled = _this$props.disabled,
          name = _this$props.name,
          withActions = _this$props.withActions,
          className = _this$props.className,
          id = _this$props.id,
          placeholder = _this$props.placeholder,
          onStarClick = _this$props.onStarClick,
          onTrashClick = _this$props.onTrashClick,
          isPrimary = _this$props.isPrimary,
          onHoverEnter = _this$props.onHoverEnter,
          onHoverLeave = _this$props.onHoverLeave,
          isHovering = _this$props.isHovering,
          style = _this$props.style,
          required = _this$props.required;
      var fieldValue = this.state.fieldValue;
      return /*#__PURE__*/React.createElement("div", {
        onMouseEnter: onHoverEnter,
        onMouseLeave: onHoverLeave,
        className: cn('d-flex', 'action-input', 'email-input', 'height-46', className),
        style: style,
        "data-qa": "email-input"
      }, /*#__PURE__*/React.createElement(Input, {
        onChange: this.handleInputChange,
        style: inputStyle,
        className: inputClassName,
        disabled: disabled,
        value: fieldValue,
        type: "email",
        placeholder: placeholder,
        name: name,
        id: id,
        required: required
      }), /*#__PURE__*/React.createElement(InputStarDeleteActionAddOn, {
        disabled: disabled,
        show: withActions && isHovering,
        isPrimary: isPrimary,
        onTrash: onTrashClick,
        onStar: onStarClick,
        name: name,
        id: id
      }));
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(props, state) {
      if (props.value && props.value !== state.fieldValue) {
        return {
          fieldValue: props.value
        };
      }

      return null;
    }
  }]);

  return EmailInput;
}(PureComponent);

EmailInput.defaultProps = {
  onChange: noop,
  onTrashClick: noop,
  onStarClick: noop,
  withActions: false,
  isPrimary: false,
  inputClassName: '',
  inputStyle: {},
  value: '',
  name: '',
  placeholder: '',
  disabled: false,
  className: '',
  style: {}
};
EmailInput.propTypes = {
  /** Cb for input change
   *  passing : value: {String}, target: {id or name defined}
   *  */
  onChange: PropTypes.func,

  /**  Cb for clicking on the trash icon */
  onTrashClick: PropTypes.func,

  /** Cb for clicking on the star (set primary) icon */
  onStarClick: PropTypes.func,

  /** Indicator whether to show the star/trash actions */
  withActions: PropTypes.bool,

  /** Boolean setting the email as primary */
  isPrimary: PropTypes.bool,

  /** Inout level additional style */
  inputStyle: PropTypes.shape(),

  /** Input level addition class */
  inputClassName: PropTypes.string,

  /** Input level name property */
  name: PropTypes.string,

  /** Email value - setting as controlled */
  value: PropTypes.string,

  /** Placeholder for the email */
  placeholder: PropTypes.string,

  /** Boolean to set the email and component as disabled */
  disabled: PropTypes.bool,

  /** Additional class to the top component level */
  className: PropTypes.string,

  /** Additional style to the top component level */
  style: PropTypes.shape()
};
/** Work around to fix storybook HOC propTypes bug  - DO NOT IMPORT THIS */

export var EmailComponent = EmailInput;
export default withHover(EmailInput);