import React, { Component } from 'react';
import PropTypes from 'prop-types';
import { ActionTooltipType } from "../../enums/enums";
import RaisedButton from "../RaisedButton/RaisedButton";
import Link from "../Link/Link";

class ActionTooltipButton extends Component {
  constructor(...args) {
    super(...args);

    this.handleClick = e => {
      const {
        actionHref,
        onAction
      } = this.props;

      if (actionHref) {
        window.open(actionHref, '_blank');
      }

      onAction(e);
    };
  }

  getActionSettings() {
    const {
      actionType
    } = this.props;
    const buttonComponents = {
      RaisedButton,
      Link
    };
    let ActionComponent = buttonComponents.RaisedButton;
    let className = '';

    if (actionType !== ActionTooltipType.Button) {
      ActionComponent = buttonComponents.Link;
      className = 'text-hover-blue-dark-theme';
    }

    return {
      ActionComponent,
      className
    };
  }

  render() {
    const {
      actionText
    } = this.props;
    const {
      ActionComponent,
      className
    } = this.getActionSettings();
    return /*#__PURE__*/React.createElement(ActionComponent, {
      className: className,
      onClick: this.handleClick,
      "data-qa": "action-tooltip-button"
    }, /*#__PURE__*/React.createElement("div", {
      className: "flex-center"
    }, /*#__PURE__*/React.createElement("span", {
      className: ""
    }, actionText)));
  }

}

ActionTooltipButton.defaultProps = {
  actionHref: '',
  onAction: () => {}
};
ActionTooltipButton.propTypes = {
  /** Sets the type of the action */
  actionType: PropTypes.oneOf([ActionTooltipType.Button, ActionTooltipType.Link]).isRequired,

  /** Sets the text of the action */
  actionText: PropTypes.node.isRequired,

  /** Sets the Href of the action */
  actionHref: PropTypes.string,

  /** Callback(optional) to be executed when the action is clicked */
  onAction: PropTypes.func
};
export default ActionTooltipButton;