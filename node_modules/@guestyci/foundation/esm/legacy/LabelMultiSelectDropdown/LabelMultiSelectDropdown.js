import React from 'react';
import cn from 'classnames';
import isEmpty from 'lodash/isEmpty';
import withDropdown from "../baseDropdown/withDropdown";
import withMultiSelect from "../baseDropdown/withMultiSelect";
import LabelDropdownInputField from "../LabelDropdown/LabelDropdownInputField";
import DropdownInputField from "../baseDropdown/DropdownInputField";
import DropdownMenu from "../baseDropdown/DropdownMenu";
import MultiSelectDropdownSelectedMenu from "../MultiSelectDropdown/MultiSelectDropdownSelectedMenu";
import MultiSelectDropdownMenuItem from "../MultiSelectDropdown/MultiSelectDropdownMenuItem";

var LabelMultiSelectDropdown = function LabelMultiSelectDropdown(_ref) {
  var toggleCollapse = _ref.toggleCollapse,
      isCollapsed = _ref.isCollapsed,
      name = _ref.name,
      className = _ref.className,
      onSearchChange = _ref.onSearchChange,
      clearQuery = _ref.clearQuery,
      closeDropdown = _ref.closeDropdown,
      style = _ref.style,
      isFetching = _ref.isFetching,
      fetchNextPage = _ref.fetchNextPage,
      pageCount = _ref.pageCount,
      currentPage = _ref.currentPage,
      query = _ref.query,
      placeholder = _ref.placeholder,
      searchable = _ref.searchable,
      clearSelectedItem = _ref.clearSelectedItem,
      selectedItem = _ref.selectedItem,
      searchPlaceholder = _ref.searchPlaceholder,
      searchInputValue = _ref.searchInputValue,
      unselectedOptions = _ref.unselectedOptions,
      selectedOptions = _ref.selectedOptions,
      searchQuery = _ref.searchQuery,
      onChange = _ref.onChange;
  return /*#__PURE__*/React.createElement("div", {
    className: cn('d-flex-fill relative flex-column', className),
    style: style,
    name: name,
    "data-qa": "label-multi-select-dropdown"
  }, /*#__PURE__*/React.createElement(LabelDropdownInputField, {
    label: searchInputValue,
    onClick: toggleCollapse,
    isOpen: !isCollapsed,
    placeholder: placeholder
  }), /*#__PURE__*/React.createElement(DropdownMenu, {
    pageCount: pageCount,
    onDismiss: closeDropdown,
    isEmptyState: !unselectedOptions.length,
    currentPage: currentPage,
    onLoadMore: fetchNextPage,
    isFetching: isFetching,
    isCollapsed: isCollapsed,
    className: cn('max-width-280', searchable ? 'min-width-280' : 'min-width-140'),
    topBar: /*#__PURE__*/React.createElement(DropdownInputField, {
      noAction: true,
      placeholder: searchPlaceholder,
      className: "b-0 bb-1",
      inputClassName: cn({
        'text-blue': !isEmpty(selectedItem)
      }),
      onQueryChange: onSearchChange,
      query: query,
      value: searchQuery,
      onClearQuery: clearQuery,
      onClearSelected: clearSelectedItem,
      searchable: true
    })
  }, /*#__PURE__*/React.createElement(MultiSelectDropdownSelectedMenu, {
    options: selectedOptions,
    onChange: onChange
  }), unselectedOptions.map(function (option, key) {
    var iteratorId = key;
    return /*#__PURE__*/React.createElement(MultiSelectDropdownMenuItem, {
      key: "MultiSelectDropdownMenuItem-".concat(iteratorId),
      checked: false,
      onChange: onChange,
      value: option
    }, option.label);
  })));
};

export var LabelMultiSelectDropdownComponent = LabelMultiSelectDropdown;
export default withDropdown(withMultiSelect(LabelMultiSelectDropdown));