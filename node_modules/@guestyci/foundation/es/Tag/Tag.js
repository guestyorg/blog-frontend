import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
import React from 'react';
import PropTypes from 'prop-types';
import cn from 'classnames';
import TextField from "../TextField";
import createStyles from "../createStyles";
import Paper from "../Paper";
export const useStyles = createStyles(theme => ({
  root: {
    padding: `2px ${theme.spacer(1)}px`,
    minWidth: 37
  },
  bgDefault: {
    backgroundColor: theme.palette.background.system
  },
  bgBold: {
    backgroundColor: theme.palette.background.secondary
  }
}), {
  name: 'Tag'
});
const Tag = React.forwardRef(function Tag(_ref, ref) {
  let {
    children,
    bold = false,
    jss = {},
    className = ''
  } = _ref,
      props = _objectWithoutPropertiesLoose(_ref, ["children", "bold", "jss", "className"]);

  const classes = useStyles({
    jss
  });
  return /*#__PURE__*/React.createElement(Paper, _extends({
    elevation: 0,
    ref: ref,
    className: cn(classes.root, {
      [classes.bgBold]: bold,
      [classes.bgDefault]: !bold
    }, className)
  }, props), /*#__PURE__*/React.createElement(TextField, {
    variant: "h5",
    overflowEllipsis: true,
    align: "center"
  }, children));
});
Tag.propTypes = {
  /** Child component to render */
  children: PropTypes.node,

  /** Jss override to create custom styles */
  jss: PropTypes.oneOfType([PropTypes.shape(), PropTypes.func]),

  /** Boolean indicator whether or not to render in emphasized mode  */
  bold: PropTypes.bool,

  /** Additional classname  */
  className: PropTypes.string
};
Tag.displayName = 'Tag';
export default Tag;