"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.useStyles = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _createStyles = _interopRequireDefault(require("../createStyles"));

var _styles = _interopRequireDefault(require("../Input/styles"));

var _Row = _interopRequireDefault(require("../Layout/Row"));

var _DropdownArrowButton = _interopRequireDefault(require("./DropdownArrowButton"));

var _Button = _interopRequireDefault(require("../Button"));

var _DropdownClearButton = _interopRequireDefault(require("./DropdownClearButton"));

var _TextField = _interopRequireDefault(require("../TextField"));

var _utils = require("../utils");

var _DropdownInputSelectedValue = _interopRequireDefault(require("./DropdownInputSelectedValue"));

var useStyles = (0, _createStyles["default"])(function (theme) {
  return {
    root: (0, _extends2["default"])({}, theme.typography.primary, {}, _styles["default"].shared(theme), {
      paddingRight: 0,
      '&:not([disabled]):hover': (0, _extends2["default"])({}, _styles["default"].hover(theme), {
        '& .dropdown-arrow-button': {
          fill: theme.palette.primary["default"]
        }
      }),
      height: '46px',
      '&::placeholder': _styles["default"].placeholder(theme)
    }),
    input: {
      flex: 1,
      overflowX: 'auto',
      height: '100%'
    },
    ellipsis: {
      overflow: 'hidden',
      textOverflow: 'ellipsis',
      whiteSpace: 'nowrap'
    },
    clearIcon: {
      color: theme.palette.secondary["default"],
      '&:hover': {
        color: theme.palette.primary["default"]
      }
    },
    row: {
      height: '100%'
    },
    disabled: _styles["default"].disabled(theme),
    focus: _styles["default"].focused(theme),
    error: _styles["default"].error(theme)
  };
});
exports.useStyles = useStyles;

var DropdownInput = _react["default"].forwardRef(function DropdownInput(_ref, ref) {
  var _cn;

  var value = _ref.value,
      onClick = _ref.onClick,
      open = _ref.open,
      _ref$renderComponent = _ref.renderComponent,
      renderComponent = _ref$renderComponent === void 0 ? null : _ref$renderComponent,
      _ref$renderSelected = _ref.renderSelected,
      renderSelected = _ref$renderSelected === void 0 ? null : _ref$renderSelected,
      _ref$name = _ref.name,
      name = _ref$name === void 0 ? '' : _ref$name,
      className = _ref.className,
      style = _ref.style,
      disabled = _ref.disabled,
      onClear = _ref.onClear,
      noClear = _ref.noClear,
      jss = _ref.jss,
      dataKey = _ref.dataKey,
      variant = _ref.variant,
      error = _ref.error,
      placeholder = _ref.placeholder,
      props = (0, _objectWithoutProperties2["default"])(_ref, ["value", "onClick", "open", "renderComponent", "renderSelected", "name", "className", "style", "disabled", "onClear", "noClear", "jss", "dataKey", "variant", "error", "placeholder"]);
  var classes = useStyles({
    jss: jss
  });
  var renderValueComponent = renderSelected || renderComponent || null;
  return /*#__PURE__*/_react["default"].createElement(_Button["default"], (0, _extends2["default"])({}, props, {
    enableRipple: false,
    ref: ref,
    value: value,
    name: name,
    className: (0, _classnames["default"])(classes.root, (_cn = {}, (0, _defineProperty2["default"])(_cn, classes.disabled, disabled), (0, _defineProperty2["default"])(_cn, classes.focus, open), (0, _defineProperty2["default"])(_cn, classes.error, error), _cn), className),
    onClick: onClick,
    disabled: disabled,
    style: style
  }), /*#__PURE__*/_react["default"].createElement(_Row["default"], {
    fullWidth: true,
    wrap: false,
    justify: "between",
    align: "center",
    className: classes.row
  }, /*#__PURE__*/_react["default"].createElement(_Row["default"], {
    fullWidth: true,
    align: "center",
    className: (0, _classnames["default"])(classes.input)
  }, /*#__PURE__*/_react["default"].createElement(_DropdownInputSelectedValue["default"], {
    renderValue: renderValueComponent,
    value: value,
    variant: variant
  }), (0, _utils.isEmpty)(value) && /*#__PURE__*/_react["default"].createElement(_TextField["default"], null, " ", placeholder)), !noClear && /*#__PURE__*/_react["default"].createElement(_DropdownClearButton["default"], {
    show: !(0, _utils.isEmpty)(value),
    onClick: onClear
  }), /*#__PURE__*/_react["default"].createElement(_DropdownArrowButton["default"], {
    disabled: disabled,
    active: open
  })));
});

DropdownInput.propTypes = {
  /** Selected value to pass to the input */
  value: _propTypes["default"].oneOfType([_propTypes["default"].shape(), _propTypes["default"].array, _propTypes["default"].string, _propTypes["default"].number]),
  onClick: _propTypes["default"].func,
  onClear: _propTypes["default"].func,

  /** Prop to remove clear button if exists */
  noClear: _propTypes["default"].bool,

  /** Disabled boolean indicator */
  disabled: _propTypes["default"].bool,

  /** variant for the type of dropdown we want to render - values [single, multiselect, chip] */
  variant: _propTypes["default"].oneOf(['single', 'multiselect', 'chip']),

  /** Additional className */
  className: _propTypes["default"].string,

  /** Additional style */
  style: _propTypes["default"].shape(),

  /** form level name */
  name: _propTypes["default"].string,

  /** Indicator whether or not the dropdown is open */
  open: _propTypes["default"].bool,

  /** Deprecated - use renderValue  */
  renderComponent: _propTypes["default"].func,

  /** Custom node element to render as the value of the input  */
  renderValue: _propTypes["default"].oneOfType([_propTypes["default"].func, _propTypes["default"].string]),

  /** jss override  */
  jss: _propTypes["default"].oneOfType([_propTypes["default"].shape(), _propTypes["default"].func]),

  /** Identifier key when passing complex structurs as value, defaults to value */
  dataKey: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string])
};
DropdownInput.displayName = 'DropdownInput';
var _default = DropdownInput;
exports["default"] = _default;