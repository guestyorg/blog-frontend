import React from 'react';
import PropTypes from 'prop-types';
import FormControl from "../FormControl";

const FormFieldComponent = ({
  children,
  input,
  label,
  info,
  className,
  meta,
  input: {
    name,
    value: inputValue
  },
  style,
  required
}) => {
  const onChangeValue = (...args) => {
    const {
      onChange,
      onSelect
    } = children.props;

    if (onChange) {
      onChange(...args);
    }

    if (onSelect) {
      onSelect(...args);
    }

    input.onChange(...args);
  };

  const handleFocus = () => {
    input.onFocus();
  };

  const handleBlur = () => {
    input.onBlur();
  };

  const {
    disabled
  } = children.props;
  const {
    error,
    touched,
    active
  } = meta;
  const showError = error && touched && !active;
  const errorMessage = showError ? error : '';
  return /*#__PURE__*/React.createElement(FormControl, {
    info: info,
    error: errorMessage,
    label: label,
    onFocus: handleFocus,
    onBlur: handleBlur,
    className: className,
    style: style,
    name: name,
    required: required,
    "data-qa": "form-field-component"
  }, React.cloneElement(children, {
    disabled,
    onChange: onChangeValue,
    value: inputValue
  }));
};

FormFieldComponent.defaultProps = {
  className: '',
  label: null,
  info: null,
  style: {},
  required: false
};
FormFieldComponent.propTypes = {
  children: PropTypes.node.isRequired,
  required: PropTypes.bool,
  label: PropTypes.string,
  info: PropTypes.string,
  className: PropTypes.string,
  style: PropTypes.shape(),
  input: PropTypes.shape().isRequired,
  meta: PropTypes.shape().isRequired
};
FormFieldComponent.displayName = 'FormFieldComponent';
export default FormFieldComponent;