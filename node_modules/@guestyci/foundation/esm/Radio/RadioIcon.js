import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import React from 'react';
import PropTypes from 'prop-types';
import cn from 'classnames';
import createStyles from "../createStyles";
import { Section } from "../Layout";
import { blueGray300, gray300, gray100 } from "../theme/colors";
export var useStyles = createStyles(function (theme) {
  return {
    root: {
      display: 'flex'
    },
    hovering: {
      '& .radio-inner-content': {
        transform: 'scale(.3) !important',
        opacity: 0.5
      }
    },
    checked: {
      '& $inner': {
        transform: 'scale(.7)',
        opacity: 1
      },
      '& $outer': {
        border: "1px solid ".concat(theme.palette.primary["default"])
      }
    },
    outer: {
      width: '100%',
      height: '100%',
      backgroundColor: 'transparent',
      borderRadius: '50%',
      border: "1px solid ".concat(blueGray300)
    },
    inner: {
      transition: theme.transition.create('transform'),
      borderRadius: '50%',
      width: '100%',
      height: '100%',
      transform: 'scale(0)',
      backgroundColor: theme.palette.primary["default"]
    },
    disabled: {
      '& $inner': {
        transform: 'scale(1)',
        opacity: 1,
        backgroundColor: gray100
      },
      '&$checked': {
        '& $inner': {
          transform: 'scale(.7)',
          backgroundColor: gray300
        }
      },
      '& $outer': {
        border: "1px solid ".concat(gray300)
      }
    }
  };
});

var RadioIcon = function RadioIcon(_ref) {
  var _cn;

  var className = _ref.className,
      checked = _ref.checked,
      isHovering = _ref.isHovering,
      disabled = _ref.disabled;
  var classes = useStyles();
  var isActivelyHovering = isHovering && !checked && !disabled;
  return /*#__PURE__*/React.createElement("div", {
    className: cn(classes.root, (_cn = {}, _defineProperty(_cn, classes.checked, checked), _defineProperty(_cn, classes.hovering, isActivelyHovering), _defineProperty(_cn, classes.disabled, disabled), _cn), className),
    "data-qa": "radio-icon"
  }, /*#__PURE__*/React.createElement(Section, {
    borderRadius: "50%",
    justify: "center",
    align: "center",
    className: classes.outer
  }, /*#__PURE__*/React.createElement("span", {
    className: cn('radio-inner-content', classes.inner)
  })));
};

RadioIcon.propTypes = {
  className: PropTypes.string,
  checked: PropTypes.bool,
  disabled: PropTypes.bool,
  isHovering: PropTypes.bool
};
RadioIcon.displayName = 'RadioIcon';
export default RadioIcon;