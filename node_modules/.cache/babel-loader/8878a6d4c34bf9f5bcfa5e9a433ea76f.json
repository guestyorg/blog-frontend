{"ast":null,"code":"import Axios from \"axios\";\nimport { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL } from \"../constants/userConstants\";\nexport const register = (name, email, password, image) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      name,\n      email,\n      password,\n      image\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"http://localhost:5000/api/users/register\", {\n      name,\n      email,\n      password,\n      image\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"http://localhost:5000/api/users/signin\", {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    }); // dispatch(emailUser(email));\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    // console.log(\"error :\", error);\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signout = () => dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_SIGNOUT\n  });\n  document.location.href = \"/signin\";\n};\nexport const listUsers = () => async dispatch => {\n  dispatch({\n    type: USER_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(\"http://localhost:5000/api/users\");\n    console.log(\"data:\", data);\n    let counter = 1;\n    const arr = [];\n    let users = data;\n\n    for (let i = 0; i < users.length; i++) {\n      console.log(\"users[i]: \", users[i]);\n      const arrUser = Object.entries(users[i]);\n      console.log('arrUser:', arrUser); //  firstName: {\n      //   children: 'John',\n      // },\n\n      const bigObj = {};\n\n      for (let j = 0; j < arrUser.length; j++) {\n        const obj = {};\n        console.log(\"arrUser[j]: \", arrUser[j]); // console.log(\"arrUser[0]: \",arrUser[j][0]);\n        // console.log(\"arrUser[1]: \",arrUser[j][1]);\n\n        console.log('obj:', obj);\n\n        if (arrUser[j][0] === \"_id\") {\n          obj.children = arrUser[j][1];\n          bigObj.id = obj;\n          bigObj._id = arrUser[j][1];\n        } else if (arrUser[j][0] === \"createdAt\" || arrUser[j][0] === \"updatedAt\") {\n          obj.children = new Date(arrUser[j][1]).toLocaleString();\n          bigObj[arrUser[j][0]] = obj;\n        } else {\n          obj.children = arrUser[j][1];\n          bigObj[arrUser[j][0]] = obj;\n        }\n\n        console.log('bigObj:', bigObj); // arr.push( `${arrUser[j][0]}: {children: '${arrUser[j][1]}',}`)\n      } // arr.push({gilad:1,...users[i]})\n\n\n      arr.push({ ...bigObj\n      }); // arr.push({ _id: `${counter}`, ...bigObj });\n\n      counter++;\n    }\n\n    console.log(\"arr: \", arr); //  setData(response.data.results)\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: arr\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deleteUser = userId => async (dispatch, getState) => {\n  dispatch({\n    type: USER_DELETE_REQUEST,\n    payload: userId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.delete(`http://localhost:5000/api/users/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const detailsUser = userId => async (dispatch, getState) => {\n  dispatch({\n    type: USER_DETAILS_REQUEST,\n    payload: userId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get(`http://localhost:5000/api/users/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo === null || userInfo === void 0 ? void 0 : userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateUser = user => async (dispatch, getState) => {\n  console.log(\"user:\", user);\n  dispatch({\n    type: USER_UPDATE_PROFILE_REQUEST,\n    payload: user\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.patch(`http://localhost:5000/api/users/${user._id}`, user, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/actions/userActions.js"],"names":["Axios","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNOUT","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","register","name","email","password","image","dispatch","type","payload","data","post","localStorage","setItem","JSON","stringify","error","response","message","signin","signout","removeItem","document","location","href","listUsers","get","console","log","counter","arr","users","i","length","arrUser","Object","entries","bigObj","j","obj","children","id","_id","Date","toLocaleString","push","deleteUser","userId","getState","userSignin","userInfo","delete","headers","Authorization","token","detailsUser","updateUser","user","patch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,iBADF,EAEEC,oBAFF,EAGEC,oBAHF,EAIEC,kBAJF,EAKEC,qBALF,EAMEC,qBANF,EAOEC,gBAPF,EAQEC,mBARF,EASEC,mBATF,EAUEC,YAVF,EAWEC,wBAXF,EAYEC,2BAZF,EAaEC,2BAbF,EAcEC,iBAdF,EAeEC,iBAfF,EAgBEC,cAhBF,EAiBEC,mBAjBF,EAkBEC,mBAlBF,EAmBEC,gBAnBF,EAoBEC,mBApBF,EAqBEC,gBArBF,QAsBO,4BAtBP;AAwBA,OAAO,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOC,KAAP,EAAcC,QAAd,EAAwBC,KAAxB,KAAkC,MAAOC,QAAP,IAAoB;AAC5EA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEvB,qBADC;AAEPwB,IAAAA,OAAO,EAAE;AAAEN,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA,QAAf;AAAyBC,MAAAA;AAAzB;AAFF,GAAD,CAAR;;AAIA,MAAI;AACF,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAM9B,KAAK,CAAC+B,IAAN,CACrB,0CADqB,EAErB;AACER,MAAAA,IADF;AAEEC,MAAAA,KAFF;AAGEC,MAAAA,QAHF;AAIEC,MAAAA;AAJF,KAFqB,CAAvB;AAUAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEtB,qBAAR;AAA+BuB,MAAAA,OAAO,EAAEC;AAAxC,KAAD,CAAR;AAEAH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEnB,mBAAR;AAA6BoB,MAAAA,OAAO,EAAEC;AAAtC,KAAD,CAAR;AACAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAjC;AACD,GAfD,CAeE,OAAOM,KAAP,EAAc;AACdT,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAExB,kBADC;AAEPyB,MAAAA,OAAO,EACLO,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CA7BM;AA+BP,OAAO,MAAMC,MAAM,GAAG,CAACf,KAAD,EAAQC,QAAR,KAAqB,MAAOE,QAAP,IAAoB;AAC7DA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEpB,mBAAR;AAA6BqB,IAAAA,OAAO,EAAE;AAAEL,MAAAA,KAAF;AAASC,MAAAA;AAAT;AAAtC,GAAD,CAAR;;AACA,MAAI;AACF,UAAM;AAAEK,MAAAA;AAAF,QAAW,MAAM9B,KAAK,CAAC+B,IAAN,CACrB,wCADqB,EAErB;AAAEP,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAFqB,CAAvB;AAIAE,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEnB,mBAAR;AAA6BoB,MAAAA,OAAO,EAAEC;AAAtC,KAAD,CAAR,CALE,CAMF;;AAEAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAjC;AACD,GATD,CASE,OAAOM,KAAP,EAAc;AACd;AACAT,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAErB,gBADC;AAEPsB,MAAAA,OAAO,EACLO,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CArBM;AAuBP,OAAO,MAAME,OAAO,GAAG,MAAOb,QAAD,IAAc;AACzCK,EAAAA,YAAY,CAACS,UAAb,CAAwB,UAAxB;AAEAd,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAElB;AAAR,GAAD,CAAR;AACAgC,EAAAA,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,GAAyB,SAAzB;AACD,CALM;AAOP,OAAO,MAAMC,SAAS,GAAG,MAAM,MAAOlB,QAAP,IAAoB;AACjDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEd;AAAR,GAAD,CAAR;;AACA,MAAI;AACF,UAAM;AAAEgB,MAAAA;AAAF,QAAW,MAAM9B,KAAK,CAAC8C,GAAN,CAAU,iCAAV,CAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBlB,IAArB;AAEA,QAAImB,OAAO,GAAG,CAAd;AACA,UAAMC,GAAG,GAAG,EAAZ;AAEA,QAAIC,KAAK,GAAGrB,IAAZ;;AAEA,SAAK,IAAIsB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACpCL,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BG,KAAK,CAACC,CAAD,CAA/B;AAED,YAAME,OAAO,GAAGC,MAAM,CAACC,OAAP,CAAeL,KAAK,CAACC,CAAD,CAApB,CAAhB;AACCL,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBM,OAAxB,EAJoC,CAMrC;AACA;AACA;;AAEA,YAAMG,MAAM,GAAG,EAAf;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,OAAO,CAACD,MAA5B,EAAoCK,CAAC,EAArC,EAAyC;AACvC,cAAMC,GAAG,GAAG,EAAZ;AACAZ,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BM,OAAO,CAACI,CAAD,CAAlC,EAFuC,CAGvC;AACA;;AAEAX,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBW,GAApB;;AAEA,YAAIL,OAAO,CAACI,CAAD,CAAP,CAAW,CAAX,MAAkB,KAAtB,EAA6B;AAC3BC,UAAAA,GAAG,CAACC,QAAJ,GAAeN,OAAO,CAACI,CAAD,CAAP,CAAW,CAAX,CAAf;AAEAD,UAAAA,MAAM,CAACI,EAAP,GAAYF,GAAZ;AAEAF,UAAAA,MAAM,CAACK,GAAP,GAAaR,OAAO,CAACI,CAAD,CAAP,CAAW,CAAX,CAAb;AACD,SAND,MAOK,IAAGJ,OAAO,CAACI,CAAD,CAAP,CAAW,CAAX,MAAkB,WAAlB,IAAiCJ,OAAO,CAACI,CAAD,CAAP,CAAW,CAAX,MAAkB,WAAtD,EAAmE;AACtEC,UAAAA,GAAG,CAACC,QAAJ,GAAe,IAAIG,IAAJ,CAAST,OAAO,CAACI,CAAD,CAAP,CAAW,CAAX,CAAT,EAAwBM,cAAxB,EAAf;AAEAP,UAAAA,MAAM,CAACH,OAAO,CAACI,CAAD,CAAP,CAAW,CAAX,CAAD,CAAN,GAAuBC,GAAvB;AAED,SALI,MAMA;AACHA,UAAAA,GAAG,CAACC,QAAJ,GAAeN,OAAO,CAACI,CAAD,CAAP,CAAW,CAAX,CAAf;AAEAD,UAAAA,MAAM,CAACH,OAAO,CAACI,CAAD,CAAP,CAAW,CAAX,CAAD,CAAN,GAAwBC,GAAxB;AACD;;AAEDZ,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBS,MAAvB,EA3BuC,CA6BvC;AACD,OA1CoC,CA2CrC;;;AACAP,MAAAA,GAAG,CAACe,IAAJ,CAAS,EAAE,GAAGR;AAAL,OAAT,EA5CqC,CA6CrC;;AAEAR,MAAAA,OAAO;AACR;;AAEDF,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBE,GAArB,EA3DE,CA4DF;;AAEAvB,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEb,iBAAR;AAA2Bc,MAAAA,OAAO,EAAEqB;AAApC,KAAD,CAAR;AACD,GA/DD,CA+DE,OAAOd,KAAP,EAAc;AACd,UAAME,OAAO,GACXF,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OADxB,GAEIF,KAAK,CAACE,OAHZ;AAIAX,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEZ,cAAR;AAAwBa,MAAAA,OAAO,EAAES;AAAjC,KAAD,CAAR;AACD;AACF,CAxEM;AA0EP,OAAO,MAAM4B,UAAU,GAAIC,MAAD,IAAY,OAAOxC,QAAP,EAAiByC,QAAjB,KAA8B;AAClEzC,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEX,mBAAR;AAA6BY,IAAAA,OAAO,EAAEsC;AAAtC,GAAD,CAAR;AACA,QAAM;AACJE,IAAAA,UAAU,EAAE;AAAEC,MAAAA;AAAF;AADR,MAEFF,QAAQ,EAFZ;;AAGA,MAAI;AACF,UAAM;AAAEtC,MAAAA;AAAF,QAAW,MAAM9B,KAAK,CAACuE,MAAN,CACpB,mCAAkCJ,MAAO,EADrB,EAErB;AACEK,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAA1C;AADX,KAFqB,CAAvB;AAMA/C,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEV,mBAAR;AAA6BW,MAAAA,OAAO,EAAEC;AAAtC,KAAD,CAAR;AACD,GARD,CAQE,OAAOM,KAAP,EAAc;AACd,UAAME,OAAO,GACXF,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OADxB,GAEIF,KAAK,CAACE,OAHZ;AAIAX,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET,gBAAR;AAA0BU,MAAAA,OAAO,EAAES;AAAnC,KAAD,CAAR;AACD;AACF,CApBM;AAsBP,OAAO,MAAMqC,WAAW,GAAIR,MAAD,IAAY,OAAOxC,QAAP,EAAiByC,QAAjB,KAA8B;AACnEzC,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAE1B,oBAAR;AAA8B2B,IAAAA,OAAO,EAAEsC;AAAvC,GAAD,CAAR;AACA,QAAM;AACJE,IAAAA,UAAU,EAAE;AAAEC,MAAAA;AAAF;AADR,MAEFF,QAAQ,EAFZ;;AAGA,MAAI;AACF,UAAM;AAAEtC,MAAAA;AAAF,QAAW,MAAM9B,KAAK,CAAC8C,GAAN,CACpB,mCAAkCqB,MAAO,EADrB,EAErB;AACEK,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASH,QAAV,aAAUA,QAAV,uBAAUA,QAAQ,CAAEI,KAAM;AAA3C;AADX,KAFqB,CAAvB;AAMA/C,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEzB,oBAAR;AAA8B0B,MAAAA,OAAO,EAAEC;AAAvC,KAAD,CAAR;AACD,GARD,CAQE,OAAOM,KAAP,EAAc;AACd,UAAME,OAAO,GACXF,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OADxB,GAEIF,KAAK,CAACE,OAHZ;AAIAX,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE3B,iBAAR;AAA2B4B,MAAAA,OAAO,EAAES;AAApC,KAAD,CAAR;AACD;AACF,CApBM;AAsBP,OAAO,MAAMsC,UAAU,GAAIC,IAAD,IAAU,OAAOlD,QAAP,EAAiByC,QAAjB,KAA8B;AAChErB,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB6B,IAArB;AACAlD,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEhB,2BAAR;AAAqCiB,IAAAA,OAAO,EAAEgD;AAA9C,GAAD,CAAR;AACA,QAAM;AACJR,IAAAA,UAAU,EAAE;AAAEC,MAAAA;AAAF;AADR,MAEFF,QAAQ,EAFZ;;AAGA,MAAI;AACF,UAAM;AAAEtC,MAAAA;AAAF,QAAW,MAAM9B,KAAK,CAAC8E,KAAN,CACpB,mCAAkCD,IAAI,CAACf,GAAI,EADvB,EAErBe,IAFqB,EAGrB;AACEL,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAA1C;AADX,KAHqB,CAAvB;AAOA/C,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,mBAAR;AAA6BS,MAAAA,OAAO,EAAEC;AAAtC,KAAD,CAAR;AACD,GATD,CASE,OAAOM,KAAP,EAAc;AACd,UAAME,OAAO,GACXF,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OADxB,GAEIF,KAAK,CAACE,OAHZ;AAIAX,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP,gBAAR;AAA0BQ,MAAAA,OAAO,EAAES;AAAnC,KAAD,CAAR;AACD;AACF,CAtBM","sourcesContent":["import Axios from \"axios\";\nimport {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_SIGNIN_FAIL,\n  USER_SIGNIN_REQUEST,\n  USER_SIGNIN_SUCCESS,\n  USER_SIGNOUT,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n} from \"../constants/userConstants\";\n\nexport const register = (name, email, password, image) => async (dispatch) => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: { name, email, password, image },\n  });\n  try {\n    const { data } = await Axios.post(\n      \"http://localhost:5000/api/users/register\",\n      {\n        name,\n        email,\n        password,\n        image,\n      }\n    );\n\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const signin = (email, password) => async (dispatch) => {\n  dispatch({ type: USER_SIGNIN_REQUEST, payload: { email, password } });\n  try {\n    const { data } = await Axios.post(\n      \"http://localhost:5000/api/users/signin\",\n      { email, password }\n    );\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n    // dispatch(emailUser(email));\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    // console.log(\"error :\", error);\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const signout = () => (dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n\n  dispatch({ type: USER_SIGNOUT });\n  document.location.href = \"/signin\";\n};\n\nexport const listUsers = () => async (dispatch) => {\n  dispatch({ type: USER_LIST_REQUEST });\n  try {\n    const { data } = await Axios.get(\"http://localhost:5000/api/users\");\n    console.log(\"data:\", data);\n\n    let counter = 1;\n    const arr = [];\n\n    let users = data;\n\n    for (let i = 0; i < users.length; i++) {\n       console.log(\"users[i]: \", users[i] );\n\n      const arrUser = Object.entries(users[i]);\n       console.log('arrUser:', arrUser)\n\n      //  firstName: {\n      //   children: 'John',\n      // },\n\n      const bigObj = {};\n\n      for (let j = 0; j < arrUser.length; j++) {\n        const obj = {};\n        console.log(\"arrUser[j]: \",arrUser[j]);\n        // console.log(\"arrUser[0]: \",arrUser[j][0]);\n        // console.log(\"arrUser[1]: \",arrUser[j][1]);\n\n        console.log('obj:', obj)\n\n        if (arrUser[j][0] === \"_id\") {\n          obj.children = arrUser[j][1];\n\n          bigObj.id = obj;\n\n          bigObj._id = arrUser[j][1];\n        } \n        else if(arrUser[j][0] === \"createdAt\" || arrUser[j][0] === \"updatedAt\" ){\n          obj.children = new Date(arrUser[j][1]).toLocaleString();\n\n          bigObj[arrUser[j][0]]= obj;\n\n        }\n        else {\n          obj.children = arrUser[j][1];\n\n          bigObj[arrUser[j][0]] = obj;\n        }\n\n        console.log('bigObj:', bigObj)\n\n        // arr.push( `${arrUser[j][0]}: {children: '${arrUser[j][1]}',}`)\n      }\n      // arr.push({gilad:1,...users[i]})\n      arr.push({ ...bigObj });\n      // arr.push({ _id: `${counter}`, ...bigObj });\n\n      counter++;\n    }\n\n    console.log(\"arr: \", arr);\n    //  setData(response.data.results)\n\n    dispatch({ type: USER_LIST_SUCCESS, payload: arr });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: USER_LIST_FAIL, payload: message });\n  }\n};\n\nexport const deleteUser = (userId) => async (dispatch, getState) => {\n  dispatch({ type: USER_DELETE_REQUEST, payload: userId });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.delete(\n      `http://localhost:5000/api/users/${userId}`,\n      {\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      }\n    );\n    dispatch({ type: USER_DELETE_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: USER_DELETE_FAIL, payload: message });\n  }\n};\n\nexport const detailsUser = (userId) => async (dispatch, getState) => {\n  dispatch({ type: USER_DETAILS_REQUEST, payload: userId });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.get(\n      `http://localhost:5000/api/users/${userId}`,\n      {\n        headers: { Authorization: `Bearer ${userInfo?.token}` },\n      }\n    );\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: USER_DETAILS_FAIL, payload: message });\n  }\n};\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  console.log(\"user:\", user);\n  dispatch({ type: USER_UPDATE_PROFILE_REQUEST, payload: user });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.patch(\n      `http://localhost:5000/api/users/${user._id}`,\n      user,\n      {\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      }\n    );\n    dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: USER_UPDATE_FAIL, payload: message });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}