{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = useTableSelection;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = require(\"react\");\n\nvar _tableUtility = require(\"../tableUtility\");\n/**\n * Hook that provides table selection state\n * @param data {Array} - table data\n * @param rowIdDataKey {String} - key from row data to be used as identifier\n */\n\n\nfunction useTableSelection() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$data = _ref.data,\n      data = _ref$data === void 0 ? [] : _ref$data,\n      _ref$rowIdDataKey = _ref.rowIdDataKey,\n      rowIdDataKey = _ref$rowIdDataKey === void 0 ? '_id' : _ref$rowIdDataKey,\n      itemsTotalCount = _ref.itemsTotalCount;\n\n  var _useState = (0, _react.useState)((0, _tableUtility.getEmptySelection)()),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      rowSelection = _useState2[0],\n      setSelection = _useState2[1];\n\n  var setTableSelection = function setTableSelection(action) {\n    var nextSelection = (0, _tableUtility.getSelectionOnAction)({\n      rowSelection: rowSelection,\n      action: action,\n      data: data,\n      rowIdDataKey: rowIdDataKey,\n      itemsTotalCount: itemsTotalCount\n    });\n    setSelection(nextSelection);\n  };\n\n  var clearSelection = function clearSelection() {\n    setSelection((0, _tableUtility.getEmptySelection)());\n  };\n\n  (0, _react.useEffect)(function () {\n    var allSelected = rowSelection.allSelected;\n\n    if (allSelected) {\n      var nextSelection = (0, _tableUtility.getSelectionOnData)({\n        rowSelection: rowSelection,\n        data: data,\n        rowIdDataKey: rowIdDataKey\n      });\n      setSelection(nextSelection);\n    }\n  }, [data, rowIdDataKey]);\n  return [rowSelection, setTableSelection, {\n    clearSelection: clearSelection\n  }];\n}","map":{"version":3,"sources":["/Users/giladdekel/Workspace/Guesty/onboarding-blog/onboarding-blog-app/onboarding-frontend-main/simple-app-archive/node_modules/@guestyci/foundation/legacy/Table/useTableSelection/useTableSelection.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","useTableSelection","_slicedToArray2","_react","_tableUtility","_ref","arguments","length","undefined","_ref$data","data","_ref$rowIdDataKey","rowIdDataKey","itemsTotalCount","_useState","useState","getEmptySelection","_useState2","rowSelection","setSelection","setTableSelection","action","nextSelection","getSelectionOnAction","clearSelection","useEffect","allSelected","getSelectionOnData"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqBE,iBAArB;;AAEA,IAAIC,eAAe,GAAGP,sBAAsB,CAACC,OAAO,CAAC,sCAAD,CAAR,CAA5C;;AAEA,IAAIO,MAAM,GAAGP,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIQ,aAAa,GAAGR,OAAO,CAAC,iBAAD,CAA3B;AAEA;AACA;AACA;AACA;AACA;;;AACA,SAASK,iBAAT,GAA6B;AAC3B,MAAII,IAAI,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAA/E;AAAA,MACIG,SAAS,GAAGJ,IAAI,CAACK,IADrB;AAAA,MAEIA,IAAI,GAAGD,SAAS,KAAK,KAAK,CAAnB,GAAuB,EAAvB,GAA4BA,SAFvC;AAAA,MAGIE,iBAAiB,GAAGN,IAAI,CAACO,YAH7B;AAAA,MAIIA,YAAY,GAAGD,iBAAiB,KAAK,KAAK,CAA3B,GAA+B,KAA/B,GAAuCA,iBAJ1D;AAAA,MAKIE,eAAe,GAAGR,IAAI,CAACQ,eAL3B;;AAOA,MAAIC,SAAS,GAAG,CAAC,GAAGX,MAAM,CAACY,QAAX,EAAqB,CAAC,GAAGX,aAAa,CAACY,iBAAlB,GAArB,CAAhB;AAAA,MACIC,UAAU,GAAG,CAAC,GAAGf,eAAe,CAAC,SAAD,CAAnB,EAAgCY,SAAhC,EAA2C,CAA3C,CADjB;AAAA,MAEII,YAAY,GAAGD,UAAU,CAAC,CAAD,CAF7B;AAAA,MAGIE,YAAY,GAAGF,UAAU,CAAC,CAAD,CAH7B;;AAKA,MAAIG,iBAAiB,GAAG,SAASA,iBAAT,CAA2BC,MAA3B,EAAmC;AACzD,QAAIC,aAAa,GAAG,CAAC,GAAGlB,aAAa,CAACmB,oBAAlB,EAAwC;AAC1DL,MAAAA,YAAY,EAAEA,YAD4C;AAE1DG,MAAAA,MAAM,EAAEA,MAFkD;AAG1DX,MAAAA,IAAI,EAAEA,IAHoD;AAI1DE,MAAAA,YAAY,EAAEA,YAJ4C;AAK1DC,MAAAA,eAAe,EAAEA;AALyC,KAAxC,CAApB;AAOAM,IAAAA,YAAY,CAACG,aAAD,CAAZ;AACD,GATD;;AAWA,MAAIE,cAAc,GAAG,SAASA,cAAT,GAA0B;AAC7CL,IAAAA,YAAY,CAAC,CAAC,GAAGf,aAAa,CAACY,iBAAlB,GAAD,CAAZ;AACD,GAFD;;AAIA,GAAC,GAAGb,MAAM,CAACsB,SAAX,EAAsB,YAAY;AAChC,QAAIC,WAAW,GAAGR,YAAY,CAACQ,WAA/B;;AAEA,QAAIA,WAAJ,EAAiB;AACf,UAAIJ,aAAa,GAAG,CAAC,GAAGlB,aAAa,CAACuB,kBAAlB,EAAsC;AACxDT,QAAAA,YAAY,EAAEA,YAD0C;AAExDR,QAAAA,IAAI,EAAEA,IAFkD;AAGxDE,QAAAA,YAAY,EAAEA;AAH0C,OAAtC,CAApB;AAKAO,MAAAA,YAAY,CAACG,aAAD,CAAZ;AACD;AACF,GAXD,EAWG,CAACZ,IAAD,EAAOE,YAAP,CAXH;AAYA,SAAO,CAACM,YAAD,EAAeE,iBAAf,EAAkC;AACvCI,IAAAA,cAAc,EAAEA;AADuB,GAAlC,CAAP;AAGD","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = useTableSelection;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = require(\"react\");\n\nvar _tableUtility = require(\"../tableUtility\");\n\n/**\n * Hook that provides table selection state\n * @param data {Array} - table data\n * @param rowIdDataKey {String} - key from row data to be used as identifier\n */\nfunction useTableSelection() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$data = _ref.data,\n      data = _ref$data === void 0 ? [] : _ref$data,\n      _ref$rowIdDataKey = _ref.rowIdDataKey,\n      rowIdDataKey = _ref$rowIdDataKey === void 0 ? '_id' : _ref$rowIdDataKey,\n      itemsTotalCount = _ref.itemsTotalCount;\n\n  var _useState = (0, _react.useState)((0, _tableUtility.getEmptySelection)()),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      rowSelection = _useState2[0],\n      setSelection = _useState2[1];\n\n  var setTableSelection = function setTableSelection(action) {\n    var nextSelection = (0, _tableUtility.getSelectionOnAction)({\n      rowSelection: rowSelection,\n      action: action,\n      data: data,\n      rowIdDataKey: rowIdDataKey,\n      itemsTotalCount: itemsTotalCount\n    });\n    setSelection(nextSelection);\n  };\n\n  var clearSelection = function clearSelection() {\n    setSelection((0, _tableUtility.getEmptySelection)());\n  };\n\n  (0, _react.useEffect)(function () {\n    var allSelected = rowSelection.allSelected;\n\n    if (allSelected) {\n      var nextSelection = (0, _tableUtility.getSelectionOnData)({\n        rowSelection: rowSelection,\n        data: data,\n        rowIdDataKey: rowIdDataKey\n      });\n      setSelection(nextSelection);\n    }\n  }, [data, rowIdDataKey]);\n  return [rowSelection, setTableSelection, {\n    clearSelection: clearSelection\n  }];\n}"]},"metadata":{},"sourceType":"script"}