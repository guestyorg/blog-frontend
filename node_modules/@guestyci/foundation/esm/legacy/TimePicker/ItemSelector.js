import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";

function _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

import React, { Component } from 'react';
import PropTypes from 'prop-types';
import IconButton from "../IconButton/IconButton";

var BtnArrowUp = function BtnArrowUp(props) {
  return /*#__PURE__*/React.createElement("svg", props, /*#__PURE__*/React.createElement("path", {
    d: "M4.529 0a.474.474 0 0 0-.357.137L.137 4.172a.488.488 0 0 0 .69.689L4.53 1.156l3.705 3.705a.488.488 0 0 0 .69-.69L4.89.138A.477.477 0 0 0 4.53 0z"
  }));
};

BtnArrowUp.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 9.0618038 4.9977479"
};

var BtnArrowDown = function BtnArrowDown(props) {
  return /*#__PURE__*/React.createElement("svg", props, /*#__PURE__*/React.createElement("path", {
    d: "M4.533 4.997c.13.006.26-.039.357-.136L8.925.826a.488.488 0 0 0-.69-.69L4.532 3.843.826.137a.488.488 0 0 0-.69.69L4.172 4.86c.097.097.23.143.362.136z"
  }));
};

BtnArrowDown.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 9.0618038 4.9977479"
};
import TextField from "../TextField";
import Col from "../Col";

var ItemSelector = /*#__PURE__*/function (_Component) {
  _inherits(ItemSelector, _Component);

  var _super = _createSuper(ItemSelector);

  function ItemSelector(props) {
    var _this;

    _classCallCheck(this, ItemSelector);

    _this = _super.call(this, props);

    _this.onIncrease = function () {
      var _this$props = _this.props,
          step = _this$props.step,
          values = _this$props.values,
          onChange = _this$props.onChange;
      var stateIndex = _this.state.index;
      var index = (stateIndex + step) % values.length;

      _this.setState({
        index: index
      });

      onChange(index);
    };

    _this.onDecrease = function () {
      var _this$props2 = _this.props,
          step = _this$props2.step,
          values = _this$props2.values,
          onChange = _this$props2.onChange;
      var stateIndex = _this.state.index;
      var index = (stateIndex - step + values.length) % values.length;

      _this.setState({
        index: index
      });

      onChange(index);
    };

    _this.state = {
      index: props.index || 0
    };
    return _this;
  }

  _createClass(ItemSelector, [{
    key: "render",
    value: function render() {
      var index = this.state.index;
      var _this$props3 = this.props,
          renderValue = _this$props3.renderValue,
          values = _this$props3.values;
      var rawValue = values[index];
      var value = renderValue ? renderValue(rawValue) : rawValue;
      return /*#__PURE__*/React.createElement(Col, {
        spacing: 0,
        align: "center",
        justify: "center",
        className: "fill-hover-blue width-35",
        "data-qa": "item-selector"
      }, /*#__PURE__*/React.createElement(IconButton, {
        onClick: this.onIncrease,
        svg: BtnArrowUp,
        iconWidth: 9,
        iconHeight: 5
      }), /*#__PURE__*/React.createElement(TextField, {
        color: "gray-dark"
      }, value), /*#__PURE__*/React.createElement(IconButton, {
        onClick: this.onDecrease,
        svg: BtnArrowDown,
        iconWidth: 9,
        iconHeight: 5
      }));
    }
  }]);

  return ItemSelector;
}(Component);

ItemSelector.defaultProps = {
  onChange: function onChange() {},
  step: 1,
  values: [],
  renderValue: null
};
ItemSelector.propTypes = {
  onChange: PropTypes.func,
  step: PropTypes.number,
  values: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),
  renderValue: PropTypes.func
};
export default ItemSelector;