"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _SvgIcon = _interopRequireDefault(require("../SvgIcon/SvgIcon"));

var _S3Icon = _interopRequireDefault(require("./S3Icon"));

var Icon = (0, _react.forwardRef)(function Icon(_ref, ref) {
  var icon = _ref.icon,
      svg = _ref.svg,
      props = (0, _objectWithoutProperties2["default"])(_ref, ["icon", "svg"]);

  if (svg) {
    return /*#__PURE__*/_react["default"].createElement(_SvgIcon["default"], (0, _extends2["default"])({
      svg: svg
    }, props, {
      ref: ref
    }));
  }

  if (icon) {
    return /*#__PURE__*/_react["default"].createElement(_S3Icon["default"], (0, _extends2["default"])({
      icon: icon
    }, props));
  }

  return null;
});
Icon.defaultProps = {
  width: 20,
  height: 20,
  color: '',
  fillColor: '',
  strokeColor: '',
  className: '',
  style: {},
  noFill: false
};

var svgOrIconPropsCheck = function svgOrIconPropsCheck(props) {
  if (!props.icon && !props.svg) {
    return new Error("One of 'icon' or 'svg' is required by 'Icon' component.");
  }

  if (props.icon && typeof props.icon !== 'string') {
    return new Error("Icon expects a string.");
  }

  if (props.svg && typeof props.svg !== 'function' && (0, _typeof2["default"])(props.svg) !== 'object') {
    return new Error("Svg expects a function or an object.");
  }
};

Icon.propTypes = {
  /** Icon width in pixels */
  width: _propTypes["default"].number,

  /** Icon height in pixels */
  height: _propTypes["default"].number,

  /** Icon fill color - see style guide colors for options - Deprecated use fillColor */
  color: _propTypes["default"].string,

  /** Icon fill color - see style guide colors for options */
  fillColor: _propTypes["default"].string,

  /** Icon stroke color - see style guide colors for options */
  strokeColor: _propTypes["default"].string,

  /** Class to add to the Icon component */
  className: _propTypes["default"].string,

  /** Style to add to Icon component */
  style: _propTypes["default"].shape(),

  /** The string name of the Icon to use. Also possible to pass without the icon prop */
  icon: svgOrIconPropsCheck,

  /** The svg icon to render */
  svg: svgOrIconPropsCheck,

  /** boolean - decide whether to disable default fill color */
  noFill: _propTypes["default"].bool
}; // Hack for withInfo plugin

Icon.displayName = 'Icon';
var _default = Icon;
exports["default"] = _default;