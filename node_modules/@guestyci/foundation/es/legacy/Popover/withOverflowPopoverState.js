import _extends from "@babel/runtime/helpers/esm/extends";
import React from 'react';

const withOverflowPopoverState = WrappedComponent => {
  class WithOverflowState extends React.Component {
    constructor(props) {
      super(props);

      this.onMouseEnter = () => {
        const {
          clientWidth,
          scrollWidth
        } = this.ref.current;

        if (scrollWidth > clientWidth) {
          this.setState({
            showPopover: true
          });
        }
      };

      this.onMouseLeave = () => {
        this.setState({
          showPopover: false
        });
      };

      this.state = {
        showPopover: false
      };
      this.ref = React.createRef();
    }

    render() {
      const {
        showPopover
      } = this.state;
      return /*#__PURE__*/React.createElement("div", {
        className: "w-fill",
        ref: this.ref,
        onMouseEnter: this.onMouseEnter,
        onMouseLeave: this.onMouseLeave,
        "data-qa": "with-overflow-state"
      }, /*#__PURE__*/React.createElement(WrappedComponent, _extends({
        showPopover: showPopover
      }, this.props)));
    }

  }

  WithOverflowState.displayName = `WithOverflowState(${WrappedComponent.displayName || WrappedComponent.name || 'Component'})`;
  return WithOverflowState;
};

export default withOverflowPopoverState;