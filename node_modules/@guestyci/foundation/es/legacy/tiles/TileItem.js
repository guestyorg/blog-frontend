import React, { Component } from 'react';
import PropTypes from 'prop-types';
import cn from 'classnames';
import Icon from "../Icon";
import IconButton from "../IconButton/IconButton";

class TileItem extends Component {
  constructor(...args) {
    super(...args);

    this.onDeleteItem = () => {
      const {
        onDelete,
        itemKey
      } = this.props;
      onDelete(itemKey);
    };
  }

  render() {
    const {
      icon,
      text,
      width,
      height
    } = this.props;
    return /*#__PURE__*/React.createElement("div", {
      className: cn('flex-space-between-center flex-column bg-white p-1 h-fill w-fill'),
      "data-qa": "tile-item"
    }, /*#__PURE__*/React.createElement(IconButton, {
      className: "d-flex-fill flex-end-center",
      onClick: this.onDeleteItem,
      icon: "BtnDelete",
      iconHeight: 10,
      iconWidth: 10
    }), /*#__PURE__*/React.createElement(Icon, {
      icon: icon,
      width: width,
      height: height
    }), /*#__PURE__*/React.createElement("div", {
      className: "item-text font-size-xs mb-2"
    }, text));
  }

}

TileItem.defaultProps = {
  icon: '',
  text: '',
  height: 40,
  width: 40,
  onDelete: () => {}
};
TileItem.propTypes = {
  // icon name - string
  icon: PropTypes.string,
  // icon text
  text: PropTypes.string,
  // icon height
  height: PropTypes.number,
  // icon width
  width: PropTypes.number,
  // item's key
  itemKey: PropTypes.string.isRequired,
  // callback to be called when a tile is changed
  onDelete: PropTypes.func
};
export default TileItem;