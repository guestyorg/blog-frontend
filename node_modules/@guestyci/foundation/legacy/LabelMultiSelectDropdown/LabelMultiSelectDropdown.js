"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.LabelMultiSelectDropdownComponent = void 0;

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _isEmpty = _interopRequireDefault(require("lodash/isEmpty"));

var _withDropdown = _interopRequireDefault(require("../baseDropdown/withDropdown"));

var _withMultiSelect = _interopRequireDefault(require("../baseDropdown/withMultiSelect"));

var _LabelDropdownInputField = _interopRequireDefault(require("../LabelDropdown/LabelDropdownInputField"));

var _DropdownInputField = _interopRequireDefault(require("../baseDropdown/DropdownInputField"));

var _DropdownMenu = _interopRequireDefault(require("../baseDropdown/DropdownMenu"));

var _MultiSelectDropdownSelectedMenu = _interopRequireDefault(require("../MultiSelectDropdown/MultiSelectDropdownSelectedMenu"));

var _MultiSelectDropdownMenuItem = _interopRequireDefault(require("../MultiSelectDropdown/MultiSelectDropdownMenuItem"));

var LabelMultiSelectDropdown = function LabelMultiSelectDropdown(_ref) {
  var toggleCollapse = _ref.toggleCollapse,
      isCollapsed = _ref.isCollapsed,
      name = _ref.name,
      className = _ref.className,
      onSearchChange = _ref.onSearchChange,
      clearQuery = _ref.clearQuery,
      closeDropdown = _ref.closeDropdown,
      style = _ref.style,
      isFetching = _ref.isFetching,
      fetchNextPage = _ref.fetchNextPage,
      pageCount = _ref.pageCount,
      currentPage = _ref.currentPage,
      query = _ref.query,
      placeholder = _ref.placeholder,
      searchable = _ref.searchable,
      clearSelectedItem = _ref.clearSelectedItem,
      selectedItem = _ref.selectedItem,
      searchPlaceholder = _ref.searchPlaceholder,
      searchInputValue = _ref.searchInputValue,
      unselectedOptions = _ref.unselectedOptions,
      selectedOptions = _ref.selectedOptions,
      searchQuery = _ref.searchQuery,
      onChange = _ref.onChange;
  return /*#__PURE__*/_react["default"].createElement("div", {
    className: (0, _classnames["default"])('d-flex-fill relative flex-column', className),
    style: style,
    name: name,
    "data-qa": "label-multi-select-dropdown"
  }, /*#__PURE__*/_react["default"].createElement(_LabelDropdownInputField["default"], {
    label: searchInputValue,
    onClick: toggleCollapse,
    isOpen: !isCollapsed,
    placeholder: placeholder
  }), /*#__PURE__*/_react["default"].createElement(_DropdownMenu["default"], {
    pageCount: pageCount,
    onDismiss: closeDropdown,
    isEmptyState: !unselectedOptions.length,
    currentPage: currentPage,
    onLoadMore: fetchNextPage,
    isFetching: isFetching,
    isCollapsed: isCollapsed,
    className: (0, _classnames["default"])('max-width-280', searchable ? 'min-width-280' : 'min-width-140'),
    topBar: /*#__PURE__*/_react["default"].createElement(_DropdownInputField["default"], {
      noAction: true,
      placeholder: searchPlaceholder,
      className: "b-0 bb-1",
      inputClassName: (0, _classnames["default"])({
        'text-blue': !(0, _isEmpty["default"])(selectedItem)
      }),
      onQueryChange: onSearchChange,
      query: query,
      value: searchQuery,
      onClearQuery: clearQuery,
      onClearSelected: clearSelectedItem,
      searchable: true
    })
  }, /*#__PURE__*/_react["default"].createElement(_MultiSelectDropdownSelectedMenu["default"], {
    options: selectedOptions,
    onChange: onChange
  }), unselectedOptions.map(function (option, key) {
    var iteratorId = key;
    return /*#__PURE__*/_react["default"].createElement(_MultiSelectDropdownMenuItem["default"], {
      key: "MultiSelectDropdownMenuItem-".concat(iteratorId),
      checked: false,
      onChange: onChange,
      value: option
    }, option.label);
  })));
};

var LabelMultiSelectDropdownComponent = LabelMultiSelectDropdown;
exports.LabelMultiSelectDropdownComponent = LabelMultiSelectDropdownComponent;

var _default = (0, _withDropdown["default"])((0, _withMultiSelect["default"])(LabelMultiSelectDropdown));

exports["default"] = _default;