import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";

function _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

import React, { Component } from 'react';
import PropTypes from 'prop-types';
import cn from 'classnames';
import noop from 'lodash/noop';
import SearchBar from "../SearchBar/SearchBar";

var BtnSearch = function BtnSearch(props) {
  return /*#__PURE__*/React.createElement("svg", props, /*#__PURE__*/React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M19.96 20.243l-5.995-5.995c.049-.046.1-.086.149-.134A8.269 8.269 0 0 0 2.422 2.422a8.267 8.267 0 0 0 0 11.692c2.939 2.939 7.538 3.193 10.775.779l6.057 6.057.707-.707zM3.13 13.407A7.268 7.268 0 1 1 13.408 3.129a7.268 7.268 0 0 1-10.28 10.278z"
  }));
};

BtnSearch.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 19.9607 20.9498"
};
import IconButton from "../IconButton";
import Fade from "../Fade/Fade";

var ExpandingSearchBar = /*#__PURE__*/function (_Component) {
  _inherits(ExpandingSearchBar, _Component);

  var _super = _createSuper(ExpandingSearchBar);

  function ExpandingSearchBar(props) {
    var _this;

    _classCallCheck(this, ExpandingSearchBar);

    _this = _super.call(this, props);

    _this.closeSearchBar = function () {
      _this.setState({
        isShowSearch: false
      });

      var onToggleSearch = _this.props.onToggleSearch;

      if (onToggleSearch) {
        onToggleSearch(false);
      }
    };

    _this.showSearch = function () {
      _this.setState({
        isShowSearch: true
      });

      var onToggleSearch = _this.props.onToggleSearch;

      if (onToggleSearch) {
        onToggleSearch(true);
      }

      setTimeout(function () {
        _this.inputWrapper.current.getElementsByClassName('search-bar-input')[0].focus();
      }, 300);
    };

    _this.inputWrapper = React.createRef();
    _this.state = {
      isShowSearch: props.initialIsOpen
    };
    return _this;
  }

  _createClass(ExpandingSearchBar, [{
    key: "render",
    value: function render() {
      var isShowSearch = this.state.isShowSearch;
      var _this$props = this.props,
          defaultValue = _this$props.defaultValue,
          onSubmit = _this$props.onSubmit,
          onChange = _this$props.onChange,
          className = _this$props.className,
          style = _this$props.style,
          noBorder = _this$props.noBorder,
          containerClassName = _this$props.containerClassName,
          containerStyle = _this$props.containerStyle,
          placeholder = _this$props.placeholder;
      return /*#__PURE__*/React.createElement("div", {
        className: cn('d-flex-fill', 'align-items-center', 'relative', 'expandable-search-bar-wrapper', containerClassName),
        style: containerStyle,
        "data-qa": "expanding-search-bar"
      }, /*#__PURE__*/React.createElement("div", {
        ref: this.inputWrapper,
        className: "d-flex-fill expandable-search-bar slide-open ".concat(isShowSearch ? 'search-expand' : 'search-collapse')
      }, /*#__PURE__*/React.createElement(SearchBar, {
        showDelete: true,
        defaultValue: defaultValue,
        placeholder: placeholder,
        onSubmit: onSubmit,
        onChange: onChange,
        onClear: this.closeSearchBar,
        style: style,
        className: cn('mt-1', className),
        noBorder: noBorder
      })), /*#__PURE__*/React.createElement("div", {
        className: "absolute right-0"
      }, /*#__PURE__*/React.createElement(Fade, {
        timeout: {
          enter: 225,
          exit: 225
        },
        speed: "slow",
        show: !isShowSearch
      }, /*#__PURE__*/React.createElement(IconButton, {
        iconHeight: 18,
        iconWidth: 17,
        svg: BtnSearch,
        onClick: this.showSearch
      }))));
    }
  }]);

  return ExpandingSearchBar;
}(Component);

ExpandingSearchBar.defaultProps = {
  onChange: noop,
  onToggleSearch: noop,
  onSubmit: noop,
  className: '',
  style: {},
  noBorder: false,
  containerClassName: '',
  containerStyle: {},
  placeholder: '',
  initialIsOpen: false
};
ExpandingSearchBar.propTypes = {
  /** Callback function to handle search bar submit */
  onSubmit: PropTypes.func,

  /** Callback function to handle search bar open and close toggle */
  onToggleSearch: PropTypes.func,

  /** Callback function to handle searchbar value change */
  onChange: PropTypes.func,

  /** Initial input content */
  defaultValue: PropTypes.string,

  /** Additional class for searchbar root */
  className: PropTypes.string,

  /** Additional style for searchbar root */
  style: PropTypes.shape(),

  /** Indicator whether or not to show search border bottom */
  noBorder: PropTypes.bool,

  /** Additional class or root level */
  containerClassName: PropTypes.string,

  /** Additional style for root level */
  containerStyle: PropTypes.shape(),

  /** placeholder for search bar */
  placeholder: PropTypes.string,

  /** Initial value for isShowSearch */
  initialIsOpen: PropTypes.bool
};
export default ExpandingSearchBar;