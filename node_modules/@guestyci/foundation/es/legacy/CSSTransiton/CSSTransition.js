import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
import React from 'react';
import cn from 'classnames';
import PropTypes from 'prop-types';
import { CSSTransition as RTGCCTransition } from 'react-transition-group';

const CSSTransition = (_ref) => {
  let {
    animation,
    className,
    timeout,
    children,
    show,
    style
  } = _ref,
      props = _objectWithoutPropertiesLoose(_ref, ["animation", "className", "timeout", "children", "show", "style"]);

  return animation ? /*#__PURE__*/React.createElement(RTGCCTransition, _extends({
    in: show,
    unmountOnExit: true,
    classNames: animation,
    timeout: timeout,
    style: style,
    className: cn('css-transition', className, children.props.className)
  }, props), children) : children;
};

CSSTransition.defaultProps = {
  className: '',
  timeout: 0,
  animation: ''
};
CSSTransition.propTypes = {
  /* boolean flag whether or not to show the children */
  show: PropTypes.bool,

  /* Animation for css transition from animation scss */
  animation: PropTypes.string,

  /* Additional class name for css transition root */
  className: PropTypes.string,

  /* Child component for css transition */
  children: PropTypes.node.isRequired,

  /* timeout between animations */
  timeout: PropTypes.oneOfType([PropTypes.shape({
    enter: PropTypes.number.isRequired,
    exit: PropTypes.number.isRequired
  }), PropTypes.number])
};
export default CSSTransition;