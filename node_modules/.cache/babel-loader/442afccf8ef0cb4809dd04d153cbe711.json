{"ast":null,"code":"var _jsxFileName = \"/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/User/UserListScreen/UserListScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteUser, listUsers } from \"../../../actions/userActions\";\nimport { USER_DETAILS_RESET } from \"../../../constants/userConstants\";\nimport Section from \"@guestyci/foundation/legacy/Section\";\nimport AddButton from \"@guestyci/foundation/AddButton\";\nimport Table, { Column } from \"@guestyci/foundation/legacy/Table\";\nimport { getEmptySelection, getSelectionOnAction } from \"@guestyci/foundation/legacy/Table/tableUtility\";\nimport Cell from \"@guestyci/foundation/legacy/Table/Cell\";\nimport HeaderCell from \"@guestyci/foundation/legacy/Table/HeaderCell\";\nimport FlatButton from \"@guestyci/foundation/legacy/FlatButton\";\nimport { sleep } from \"@guestyci/foundation/utils/commonUtility\";\nimport orderBy from \"lodash/orderBy\";\nimport DateCell from \"@guestyci/foundation/legacy/Table/DateCell\";\nimport DateTimeCell from \"@guestyci/foundation/legacy/Table/DateTimeCell\"; // import data from '../../../__mocks__/tableData';\n\nimport Resource from \"@guestyci/agni\";\nimport TextField from \"@guestyci/foundation/TextField\";\nimport { Row } from \"@guestyci/foundation/Layout\";\nimport { ReactComponent as BtnTrash } from \"@svgr/webpack?-svgo,+titleProp,+ref!@guestyci/foundation/icons/BtnTrash.svg\";\nimport Icon from \"@guestyci/foundation/Icon\";\nimport Spinner from \"@guestyci/foundation/Spinner\";\nimport StatusIndication from \"@guestyci/foundation/StatusIndication\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UserListScreen(props) {\n  _s();\n\n  const [rawData, setRawData] = useState(); // const [data, setData] = useState();\n\n  let data;\n  const [userDeleted, setUserDeleted] = useState(false);\n  const [rowSelection, setRowSelection] = useState(getEmptySelection());\n  const {\n    allSelected,\n    items,\n    exceptItems\n  } = rowSelection;\n  const width = 200; // const pageSize = 25;\n  // const scrollOffset = data ? data.length : 100;\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [skip, setSkip] = useState(0);\n\n  const userList = useSelector(state => state.userList);\n  const {\n    loading,\n    error,\n    users\n  } = userList; // console.log(\"users:\", users);\n\n  data = users;\n  const userDelete = useSelector(state => state.userDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete\n  } = userDelete;\n  const dispatch = useDispatch();\n  let auth = \"gilad\";\n  useEffect(() => {\n    dispatch(listUsers(auth)); // dispatch({\n    //   type: USER_DETAILS_RESET,\n    // });\n  }, [dispatch, successDelete]); // const deleteHandler = (user) => {\n  //   console.log(\"user:\", user);\n  //   if (window.confirm(\"Are you sure?\")) {\n  //     dispatch(deleteUser(user._id));\n  //   }\n  // };\n  // const classes = useStyles();\n\n  const selectionSize = allSelected && data.length > 0 ? data.length - exceptItems.size : items.size;\n\n  const handleRowCheckChange = action => {\n    console.log(\"handleRowCheckChange\"); // console.log('action:', action);\n\n    const selection = getSelectionOnAction({\n      rowSelection,\n      action,\n      data\n    });\n    console.log('rowSelection:', rowSelection);\n    console.log('action:', action);\n    console.log('data:', data); // console.log('selection:', selection);\n\n    setRowSelection(selection);\n  };\n\n  const deleteUserHandler = async userId => {\n    console.log(\"deleteUserHandler\");\n\n    try {\n      // const response = await api.delete(`/users/${userId}`); // will go to `${config.MAILER_URL}/users`\n      // console.log('response:', response);\n      // const data = response.data;\n      // addToast.success('user was delete')\n      // props.history.push('/');\n      dispatch(deleteUser(userId));\n      setUserDeleted(true);\n      handleClearSelection();\n    } catch (error) {\n      console.log(\"error:\", error); // addToast.danger(\"error deleting the user\")\n    }\n  };\n\n  const handleDelete = () => {\n    console.log(\"rowSelection.items: \", rowSelection.items);\n\n    if (window.confirm(\"Are you sure?\")) {\n      rowSelection.items.forEach(item => deleteUserHandler(item));\n    }\n  };\n\n  const handleClearSelection = () => {\n    console.log(\"handleClearSelection\");\n    setRowSelection(getEmptySelection());\n  };\n\n  const handleRowClick = (...args) => {\n    console.log(\"handleRowClick\", ...args);\n    const rowData = { ...args\n    };\n    console.log(\"rowData:\", rowData);\n    console.log(\"rowData:\", rowData[0].id.children);\n    const userId = rowData[0].id.children; // console.log('args:', args.id)\n    // props.history.push(\"www.google.com\")\n\n    props.history.push(`/user/edit/${userId}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading && /*#__PURE__*/_jsxDEV(Spinner, {\n      size: 80,\n      strokeWidth: 6\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(StatusIndication, {\n      variant: \"danger\",\n      text: \"error getting the data \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this), data && /*#__PURE__*/_jsxDEV(Section, {\n      col: true,\n      className: \"bg-white\",\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        gutter: 2,\n        children: /*#__PURE__*/_jsxDEV(AddButton, {\n          onClick: () => props.history.push(`/user/add`),\n          text: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        spacing: 4,\n        children: [/*#__PURE__*/_jsxDEV(FlatButton, {\n          onClick: handleClearSelection,\n          disabled: !selectionSize,\n          children: `Unselect ${selectionSize || \"\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), selectionSize > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(FlatButton, {\n            type: \"error\",\n            onClick: handleDelete,\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              align: \"center\",\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Icon, {\n                svg: BtnTrash\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                children: \" Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 17\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), console.log(\"rowSelection: \", rowSelection), /*#__PURE__*/_jsxDEV(Table, {\n        multiselect: true,\n        height: 500,\n        data: users // isLoading={isLoading}\n        // pageSize={pageSize}\n        ,\n        rowSelection: rowSelection,\n        onCheckedRowsChange: handleRowCheckChange,\n        onRowClick: handleRowClick // infiniteScrollOptions={{\n        //   skip,\n        //   scrollOffset,\n        //   onLoadMore: handleLoadMore,\n        //   totalCount: semiInfiniteData.length,\n        // }}\n        // sortBy={sortBy}\n        // onSort={handleSort}\n        ,\n        children: [/*#__PURE__*/_jsxDEV(Column, {\n          align: \"left\",\n          dataKey: \"id\",\n          width: width,\n          sortable: true,\n          children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n            id: \"id\",\n            children: \"Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataKey: \"firstName\",\n          width: width,\n          children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n            id: \"firstname\",\n            children: \"First name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataKey: \"lastName\",\n          width: width,\n          children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n            id: \"lastname\",\n            children: \"Last name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataKey: \"email\",\n          width: width,\n          children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n            id: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataKey: \"createdAt\",\n          width: width,\n          children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n            id: \"createdAt\",\n            children: \"created At\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataKey: \"updatedAt\",\n          width: width,\n          children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n            id: \"updatedAt\",\n            children: \"updated At\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataKey: \"accountId\",\n          width: width,\n          children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n            id: \"accountId\",\n            children: \"account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UserListScreen, \"u8AS2Hu5aLGqqD+lvABcMAlcc6k=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = UserListScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserListScreen\");","map":{"version":3,"sources":["/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/User/UserListScreen/UserListScreen.js"],"names":["React","useState","useEffect","useCallback","useDispatch","useSelector","deleteUser","listUsers","USER_DETAILS_RESET","Section","AddButton","Table","Column","getEmptySelection","getSelectionOnAction","Cell","HeaderCell","FlatButton","sleep","orderBy","DateCell","DateTimeCell","Resource","TextField","Row","Icon","Spinner","StatusIndication","UserListScreen","props","rawData","setRawData","data","userDeleted","setUserDeleted","rowSelection","setRowSelection","allSelected","items","exceptItems","width","userList","state","loading","error","users","userDelete","loadingDelete","errorDelete","success","successDelete","dispatch","auth","selectionSize","length","size","handleRowCheckChange","action","console","log","selection","deleteUserHandler","userId","handleClearSelection","handleDelete","window","confirm","forEach","item","handleRowClick","args","rowData","id","children","history","push","BtnTrash"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteUser, listUsers } from \"../../../actions/userActions\";\nimport { USER_DETAILS_RESET } from \"../../../constants/userConstants\";\n\nimport Section from \"@guestyci/foundation/legacy/Section\";\nimport AddButton from \"@guestyci/foundation/AddButton\";\n\nimport Table, { Column } from \"@guestyci/foundation/legacy/Table\";\nimport {\n  getEmptySelection,\n  getSelectionOnAction,\n} from \"@guestyci/foundation/legacy/Table/tableUtility\";\nimport Cell from \"@guestyci/foundation/legacy/Table/Cell\";\nimport HeaderCell from \"@guestyci/foundation/legacy/Table/HeaderCell\";\nimport FlatButton from \"@guestyci/foundation/legacy/FlatButton\";\n\nimport { sleep } from \"@guestyci/foundation/utils/commonUtility\";\n\nimport orderBy from \"lodash/orderBy\";\n\nimport DateCell from \"@guestyci/foundation/legacy/Table/DateCell\";\nimport DateTimeCell from \"@guestyci/foundation/legacy/Table/DateTimeCell\";\n\n// import data from '../../../__mocks__/tableData';\n\nimport Resource from \"@guestyci/agni\";\n\nimport TextField from \"@guestyci/foundation/TextField\";\nimport { Row } from \"@guestyci/foundation/Layout\";\nimport { ReactComponent as BtnTrash } from \"@guestyci/foundation/icons/BtnTrash.svg\";\nimport Icon from \"@guestyci/foundation/Icon\";\n\nimport Spinner from \"@guestyci/foundation/Spinner\";\nimport StatusIndication from \"@guestyci/foundation/StatusIndication\";\n\nexport default function UserListScreen(props) {\n  const [rawData, setRawData] = useState();\n  // const [data, setData] = useState();\n\n  let data;\n\n  const [userDeleted, setUserDeleted] = useState(false);\n\n  const [rowSelection, setRowSelection] = useState(getEmptySelection());\n  const { allSelected, items, exceptItems } = rowSelection;\n\n  const width = 200;\n  // const pageSize = 25;\n  // const scrollOffset = data ? data.length : 100;\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [skip, setSkip] = useState(0);\n  const userList = useSelector((state) => state.userList);\n  const { loading, error, users } = userList;\n  // console.log(\"users:\", users);\n  data = users;\n  const userDelete = useSelector((state) => state.userDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = userDelete;\n\n  const dispatch = useDispatch();\n   let auth=\"gilad\";\n  useEffect(() => {\n    dispatch(listUsers(auth));\n    // dispatch({\n    //   type: USER_DETAILS_RESET,\n    // });\n  }, [dispatch, successDelete]);\n\n  // const deleteHandler = (user) => {\n  //   console.log(\"user:\", user);\n  //   if (window.confirm(\"Are you sure?\")) {\n  //     dispatch(deleteUser(user._id));\n  //   }\n  // };\n\n  // const classes = useStyles();\n\n  const selectionSize =\n    allSelected && data.length > 0 ? data.length - exceptItems.size : items.size;\n\n  const handleRowCheckChange = (action) => {\n    console.log(\"handleRowCheckChange\");\n    // console.log('action:', action);\n\n    const selection = getSelectionOnAction({ rowSelection, action, data });\n    console.log('rowSelection:', rowSelection)\n    console.log('action:', action)\n    console.log('data:', data)\n    // console.log('selection:', selection);\n    setRowSelection(selection);\n  };\n\n  const deleteUserHandler = async (userId) => {\n    console.log(\"deleteUserHandler\");\n    try {\n      // const response = await api.delete(`/users/${userId}`); // will go to `${config.MAILER_URL}/users`\n      // console.log('response:', response);\n      // const data = response.data;\n      // addToast.success('user was delete')\n      // props.history.push('/');\n      dispatch(deleteUser(userId));\n\n      setUserDeleted(true);\n\n      handleClearSelection();\n    } catch (error) {\n      console.log(\"error:\", error);\n      // addToast.danger(\"error deleting the user\")\n    }\n  };\n\n  const handleDelete = () => {\n    console.log(\"rowSelection.items: \", rowSelection.items);\n\n    if (window.confirm(\"Are you sure?\")) {\n      rowSelection.items.forEach((item) => deleteUserHandler(item));\n    }\n  };\n\n  const handleClearSelection = () => {\n    console.log(\"handleClearSelection\");\n    setRowSelection(getEmptySelection());\n  };\n\n  const handleRowClick = (...args) => {\n    console.log(\"handleRowClick\", ...args);\n\n    const rowData = { ...args };\n    console.log(\"rowData:\", rowData);\n    console.log(\"rowData:\", rowData[0].id.children);\n\n    const userId = rowData[0].id.children;\n    // console.log('args:', args.id)\n\n    // props.history.push(\"www.google.com\")\n\n    props.history.push(`/user/edit/${userId}`);\n  };\n\n\n  return (\n    <>\n      {/* {console.log(\"data:\", data)} */}\n      {loading && <Spinner size={80} strokeWidth={6} />}\n      {error && (\n        <StatusIndication variant=\"danger\" text=\"error getting the data \" />\n      )}\n\n      {data && (\n        <Section col className=\"bg-white\">\n          <Section gutter={2}>\n            <AddButton\n              onClick={() => props.history.push(`/user/add`)}\n              text=\"Add User\"\n            />\n          </Section>\n          <Row spacing={4}>\n            <FlatButton\n              onClick={handleClearSelection}\n              disabled={!selectionSize}\n            >\n              {`Unselect ${selectionSize || \"\"}`}\n            </FlatButton>\n\n            {selectionSize > 0 && (\n              <>\n                <FlatButton type=\"error\" onClick={handleDelete}>\n                  <Row align=\"center\" spacing={2}>\n                    <Icon svg={BtnTrash} />\n                    <TextField> Delete</TextField>\n                  </Row>\n                </FlatButton>\n              </>\n            )}\n          </Row>\n\n          {console.log(\"rowSelection: \", rowSelection)}\n          <Table\n            multiselect\n            height={500}\n            data={users}\n            // isLoading={isLoading}\n            // pageSize={pageSize}\n            rowSelection={rowSelection}\n            onCheckedRowsChange={handleRowCheckChange}\n            onRowClick={handleRowClick}\n            // infiniteScrollOptions={{\n            //   skip,\n            //   scrollOffset,\n            //   onLoadMore: handleLoadMore,\n            //   totalCount: semiInfiniteData.length,\n            // }}\n            // sortBy={sortBy}\n            // onSort={handleSort}\n          >\n            <Column align=\"left\" dataKey=\"id\" width={width} sortable>\n              <HeaderCell id=\"id\">Id</HeaderCell>\n              <Cell />\n            </Column>\n            <Column dataKey=\"firstName\" width={width}>\n              <HeaderCell id=\"firstname\">First name</HeaderCell>\n              <Cell />\n            </Column>\n            <Column dataKey=\"lastName\" width={width}>\n              <HeaderCell id=\"lastname\">Last name</HeaderCell>\n              <Cell />\n            </Column>\n            <Column dataKey=\"email\" width={width}>\n              <HeaderCell id=\"email\">Email</HeaderCell>\n              <Cell />\n            </Column>\n\n            <Column dataKey=\"createdAt\" width={width}>\n              <HeaderCell id=\"createdAt\">created At</HeaderCell>\n              <Cell />\n            </Column>\n\n            <Column dataKey=\"updatedAt\" width={width}>\n              <HeaderCell id=\"updatedAt\">updated At</HeaderCell>\n              <Cell />\n            </Column>\n            <Column dataKey=\"accountId\" width={width}>\n              <HeaderCell id=\"accountId\">account</HeaderCell>\n              <Cell />\n            </Column>\n\n            {/* <Column dataKey=\"periodStartDate\" width={width} sortable>\n              <HeaderCell id=\"startdate\">Date Cell</HeaderCell>\n              <DateCell />\n            </Column>\n            <Column dataKey=\"periodEndDate\" width={width} sortable>\n              <HeaderCell id=\"enddate\">DateTime Cell</HeaderCell>\n              <DateTimeCell />\n            </Column> */}\n          </Table>\n        </Section>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}