[{"/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/index.js":"1","/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/store.js":"2","/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/bootstrap.js":"3","/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/app/App.js":"4","/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/FormControlExample.js":"5","/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/screens/UserTable.js":"6","/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/components/NavBar.js":"7","/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/reducers/userReducers.js":"8","/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/constants/userConstants.js":"9","/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/reducers/accountReducers.js":"10","/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/reducers/blogReducers.js":"11","/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/constants/accountConstants.js":"12","/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/constants/blogConstants.js":"13","/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/actions/accountActions.js":"14","/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/actions/userActions.js":"15","/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/screens/Account/AccountAddScreen.js":"16","/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/screens/Account/AccountSigninScreen.js":"17","/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/screens/User/UserAddScreen.js":"18","/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/screens/User/UserEditScreen.js":"19","/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/screens/User/UserListScreen/UserListScreen.js":"20","/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/screens/User/UserRegisterScreen.js":"21","/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/screens/User/UserSigninScreen.js":"22","/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/screens/Blog/BlogAddScreen.js":"23","/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/screens/Blog/BlogListScreen/BlogListScreen.js":"24","/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/screens/Blog/BlogEditScreen.js":"25","/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/actions/blogActions.js":"26","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/index.js":"27","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/bootstrap.js":"28","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/store.js":"29","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/app/App.js":"30","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/FormControlExample.js":"31","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/reducers/accountReducers.js":"32","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/reducers/userReducers.js":"33","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/reducers/blogReducers.js":"34","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/UserTable.js":"35","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/User/UserAddScreen.js":"36","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/Account/AccountAddScreen.js":"37","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/User/UserEditScreen.js":"38","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/User/UserRegisterScreen.js":"39","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/Account/AccountSigninScreen.js":"40","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/User/UserSigninScreen.js":"41","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/Blog/BlogAddScreen.js":"42","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/components/NavBar.js":"43","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/User/UserListScreen/UserListScreen.js":"44","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/Blog/BlogEditScreen.js":"45","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/Blog/BlogListScreen/BlogListScreen.js":"46","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/constants/userConstants.js":"47","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/constants/accountConstants.js":"48","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/constants/blogConstants.js":"49","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/actions/blogActions.js":"50","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/actions/userActions.js":"51","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/actions/accountActions.js":"52","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/components/PostList.js":"53","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/Post/PostAddScreen.js":"54","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/Post/PostEditScreen.js":"55","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/Post/PostViewScreen.js":"56","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/components/PrivateRoute.js":"57","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/Home.js":"58","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/utils.js":"59","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/User/UserInfoScreen.js":"60","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/Account/AccountInfoScreen.js":"61"},{"size":1408,"mtime":1631264634000,"results":"62","hashOfConfig":"63"},{"size":5124,"mtime":1631566749365,"results":"64","hashOfConfig":"63"},{"size":899,"mtime":1630047351000,"results":"65","hashOfConfig":"63"},{"size":3307,"mtime":1631566442614,"results":"66","hashOfConfig":"63"},{"size":7938,"mtime":1631264634000,"results":"67","hashOfConfig":"63"},{"size":16287,"mtime":1631533436119,"results":"68","hashOfConfig":"63"},{"size":3760,"mtime":1631566049731,"results":"69","hashOfConfig":"63"},{"size":3337,"mtime":1631563680123,"results":"70","hashOfConfig":"63"},{"size":1713,"mtime":1631563666231,"results":"71","hashOfConfig":"63"},{"size":3052,"mtime":1631270091876,"results":"72","hashOfConfig":"63"},{"size":3337,"mtime":1631566754345,"results":"73","hashOfConfig":"63"},{"size":1674,"mtime":1631269134232,"results":"74","hashOfConfig":"63"},{"size":1713,"mtime":1631566521923,"results":"75","hashOfConfig":"63"},{"size":4786,"mtime":1631531535481,"results":"76","hashOfConfig":"63"},{"size":7883,"mtime":1631563162604,"results":"77","hashOfConfig":"63"},{"size":8873,"mtime":1631391921934,"results":"78","hashOfConfig":"63"},{"size":8670,"mtime":1631534269427,"results":"79","hashOfConfig":"63"},{"size":9511,"mtime":1631563807526,"results":"80","hashOfConfig":"63"},{"size":10292,"mtime":1631563304613,"results":"81","hashOfConfig":"63"},{"size":7825,"mtime":1631565883389,"results":"82","hashOfConfig":"63"},{"size":9676,"mtime":1631543527584,"results":"83","hashOfConfig":"63"},{"size":8561,"mtime":1631543304086,"results":"84","hashOfConfig":"63"},{"size":9511,"mtime":1631566471773,"results":"85","hashOfConfig":"63"},{"size":7811,"mtime":1631568178417,"results":"86","hashOfConfig":"63"},{"size":10292,"mtime":1631566468726,"results":"87","hashOfConfig":"63"},{"size":8072,"mtime":1631568176512,"results":"88","hashOfConfig":"63"},{"size":1408,"mtime":1631600893000,"results":"89","hashOfConfig":"90"},{"size":899,"mtime":1631600893000,"results":"91","hashOfConfig":"90"},{"size":5305,"mtime":1631783992853,"results":"92","hashOfConfig":"90"},{"size":6139,"mtime":1631974894870,"results":"93","hashOfConfig":"90"},{"size":7938,"mtime":1631600893000,"results":"94","hashOfConfig":"90"},{"size":3052,"mtime":1631600893000,"results":"95","hashOfConfig":"90"},{"size":3337,"mtime":1631600893000,"results":"96","hashOfConfig":"90"},{"size":5414,"mtime":1631784429673,"results":"97","hashOfConfig":"90"},{"size":16343,"mtime":1631962301202,"results":"98","hashOfConfig":"90"},{"size":9511,"mtime":1631600893000,"results":"99","hashOfConfig":"90"},{"size":10614,"mtime":1631984332893,"results":"100","hashOfConfig":"90"},{"size":10950,"mtime":1632036141118,"results":"101","hashOfConfig":"90"},{"size":9873,"mtime":1631983851111,"results":"102","hashOfConfig":"90"},{"size":8670,"mtime":1631600893000,"results":"103","hashOfConfig":"90"},{"size":8804,"mtime":1631975719538,"results":"104","hashOfConfig":"90"},{"size":6008,"mtime":1631889596896,"results":"105","hashOfConfig":"90"},{"size":4488,"mtime":1632118536267,"results":"106","hashOfConfig":"90"},{"size":11227,"mtime":1631951150600,"results":"107","hashOfConfig":"90"},{"size":7688,"mtime":1631951011607,"results":"108","hashOfConfig":"90"},{"size":11113,"mtime":1631951131024,"results":"109","hashOfConfig":"90"},{"size":1713,"mtime":1631600893000,"results":"110","hashOfConfig":"90"},{"size":1674,"mtime":1631600893000,"results":"111","hashOfConfig":"90"},{"size":2640,"mtime":1631783888088,"results":"112","hashOfConfig":"90"},{"size":12387,"mtime":1631962138482,"results":"113","hashOfConfig":"90"},{"size":9269,"mtime":1632047206428,"results":"114","hashOfConfig":"90"},{"size":5356,"mtime":1631976311555,"results":"115","hashOfConfig":"90"},{"size":12466,"mtime":1632036224234,"results":"116","hashOfConfig":"90"},{"size":6635,"mtime":1631791477994,"results":"117","hashOfConfig":"90"},{"size":7689,"mtime":1631887778347,"results":"118","hashOfConfig":"90"},{"size":4450,"mtime":1631887690361,"results":"119","hashOfConfig":"90"},{"size":648,"mtime":1631913559662,"results":"120","hashOfConfig":"90"},{"size":126,"mtime":1631949818325,"results":"121","hashOfConfig":"90"},{"size":6235,"mtime":1631961854625,"results":"122","hashOfConfig":"90"},{"size":2947,"mtime":1632036433893,"results":"123","hashOfConfig":"90"},{"size":2716,"mtime":1631974073233,"results":"124","hashOfConfig":"90"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},"dwenkx",{"filePath":"128","messages":"129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"127"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"127"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"127"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":1,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":1,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},"vf3hvd",{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"183"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"183"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"183"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"183"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"183"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"183"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"183"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"183"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"183"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"183"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"183"},{"filePath":"230","messages":"231","errorCount":1,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"183"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"183"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"183"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"183"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"183"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"183"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"183"},{"filePath":"257","messages":"258","errorCount":1,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"183"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"183"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"269","messages":"270","errorCount":1,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"183"},{"filePath":"272","messages":"273","errorCount":1,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"183"},"/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/index.js",[],["275","276"],"/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/store.js",["277","278","279","280"],"/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/bootstrap.js",[],"/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/app/App.js",["281","282"],"/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/FormControlExample.js",[],"/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/screens/UserTable.js",["283","284","285","286","287","288","289","290","291","292","293","294","295","296"],"import React, { useState, useEffect, useCallback } from 'react';\nimport Section from '@guestyci/foundation/legacy/Section';\nimport AddButton from '@guestyci/foundation/AddButton';\n\nimport Table, { Column } from '@guestyci/foundation/legacy/Table';\nimport {\n  getEmptySelection,\n  getSelectionOnAction,\n} from '@guestyci/foundation/legacy/Table/tableUtility';\nimport Cell from '@guestyci/foundation/legacy/Table/Cell';\nimport HeaderCell from '@guestyci/foundation/legacy/Table/HeaderCell';\nimport FlatButton from '@guestyci/foundation/legacy/FlatButton';\n\nimport { sleep } from '@guestyci/foundation/utils/commonUtility';\n\nimport orderBy from 'lodash/orderBy';\n\nimport DateCell from '@guestyci/foundation/legacy/Table/DateCell';\nimport DateTimeCell from '@guestyci/foundation/legacy/Table/DateTimeCell';\n\n// import data from '../../../__mocks__/tableData';\n\nimport Resource from '@guestyci/agni';\n\nimport TextField from '@guestyci/foundation/TextField';\nimport { Row } from '@guestyci/foundation/Layout';\nimport { ReactComponent as BtnTrash } from '@guestyci/foundation/icons/BtnTrash.svg';\nimport Icon from '@guestyci/foundation/Icon';\n\nimport axios from 'axios';\nimport { after } from 'lodash';\n\nconst data1 = [\n  {\n    _id: '1',\n    id: {\n      children: '12345tdgfbvm',\n    },\n    firstName: {\n      children: 'John',\n    },\n    lastName: {\n      children: 'Doe',\n    },\n    reportUrl: {\n      children:\n        'feature/5c9ca46f3da70f13f5cb2eec/pdf/8ec2ee446553816d82017c159872ef6b_Task_Batch_Editing.pdf',\n    },\n    listing: {\n      href: 'listings/59ca00f463917d1c0005b2b1',\n      title: 'listing name 1',\n    },\n    businessModel: {\n      href: 'financial/business-models/1',\n      target: '_blank',\n      title: 'business model #1',\n    },\n    periodStartDate: {\n      date: '2020-10-01T00:00:00.000Z',\n    },\n    periodEndDate: {\n      date: '2020-11-29T00:00:00.000Z',\n    },\n    price: {\n      currency: 'USD',\n      value: 100,\n    },\n    tags: {\n      tags: ['Email'],\n    },\n    user: {\n      name: 'Frank Sinatra',\n      img: 'https://i.pravatar.cc/150?u=1',\n    },\n    status: {\n      status: 'PENDING',\n    },\n  },\n  {\n    _id: '2',\n    id: {\n      children: '12343tdgfbvm',\n    },\n    firstName: {\n      children: 'Jonathan',\n    },\n    lastName: {\n      children: 'Yehie',\n    },\n    reportUrl: {\n      children:\n        'feature/5c9ca46f3da70f13f5cb2eec/pdf/8ec2ee446553816d82017c159872ef6b_Task_Batch_Editing.pdf',\n    },\n    listing: {\n      href: 'listings/59ca00f463917d1c0005b2b1',\n      title: 'listing name 2',\n    },\n    businessModel: {\n      href: 'financial/business-models/2',\n      target: '_blank',\n      title: 'business model #2',\n    },\n    periodEndDate: {\n      date: null,\n    },\n    price: {\n      currency: 'EUR',\n      value: 20000000000,\n    },\n    tags: {\n      tags: ['Email', 'Phone', 'Owners Portal'],\n    },\n    user: {\n      name: 'Frank Sinatra',\n    },\n    status: {\n      status: 'APPROVED',\n    },\n  },\n  {\n    _id: '3',\n    id: {\n      children: '43345tdgfbvm',\n    },\n    firstName: {\n      children: 'Aram',\n    },\n    lastName: {\n      children: 'Ben Shushan Erlich',\n    },\n    reportUrl: {\n      children:\n        'feature/5c9ca46f3da70f13f5cb2eec/pdf/8ec2ee446553816d82017c159872ef6b_Task_Batch_Editing.pdf',\n    },\n    listing: {\n      href: 'listings/59ca00f463917d1c0005b2b1',\n      title: 'listing name 3',\n    },\n    periodStartDate: {\n      date: '2020-07-05T00:00:00.000Z',\n    },\n    periodEndDate: {\n      date: '2020-11-15T00:00:00.000Z',\n    },\n    price: {\n      currency: 'UAH',\n      value: 300,\n    },\n    user: {\n      img: 'https://i.pravatar.cc/150?u=1',\n      name: 'John Doe',\n    },\n    status: {\n      status: 'FLAGGED',\n    },\n  },\n  {\n    _id: '4',\n    id: {\n      children: '1234rgdgfbvm',\n    },\n    firstName: {\n      children: 'Nik',\n    },\n    lastName: {\n      children: 'Frank',\n    },\n    reportUrl: {\n      children:\n        'feature/5c9ca46f3da70f13f5cb2eec/pdf/8ec2ee446553816d82017c159872ef6b_Task_Batch_Editing.pdf',\n    },\n    listing: {\n      href: 'listings/59ca00f463917d1c0005b2b1',\n      title: 'listing name 2',\n    },\n    periodStartDate: {\n      date: '2020-06-04T00:00:00.000Z',\n    },\n    periodEndDate: {\n      date: '2020-08-29T00:00:00.000Z',\n    },\n    price: {\n      currency: 'USD',\n      value: 400,\n    },\n    tags: {\n      tags: ['Email', 'Phone'],\n    },\n    user: {\n      name: 'Frank Sinatra',\n    },\n    status: {\n      status: 'ARCHIVED',\n    },\n  },\n  {\n    _id: '5',\n    id: {\n      children: '12095tdgfbvm',\n    },\n    firstName: {\n      children: 'Gil',\n    },\n    lastName: {\n      children: 'Tabak',\n    },\n    reportUrl: {\n      children:\n        'feature/5c9ca46f3da70f13f5cb2eec/pdf/8ec2ee446553816d82017c159872ef6b_Task_Batch_Editing.pdf',\n    },\n    listing: {\n      href: 'listings/59ca00f463917d1c0005b2b1',\n      title: 'listing name 2',\n    },\n    periodStartDate: {\n      date: '2020-01-02T00:00:00.000Z',\n    },\n    periodEndDate: {\n      date: '2020-12-19T00:00:00.000Z',\n    },\n    price: {\n      currency: 'USD',\n      value: 400,\n    },\n    user: {\n      name: 'Frank Sinatra',\n    },\n    status: {\n      status: 'REGENERATING',\n    },\n    actions: {\n      isActionInProgress: true, // NOTE: this property will not come from data, this is used just for the demo sake\n    },\n  },\n  {\n    _id: '6',\n    id: {\n      children: '12095tdgfbvm',\n    },\n    firstName: {\n      children: 'Gil',\n    },\n    lastName: {\n      children: 'Tabak',\n    },\n    reportUrl: {\n      children:\n        'feature/5c9ca46f3da70f13f5cb2eec/pdf/8ec2ee446553816d82017c159872ef6b_Task_Batch_Editing.pdf',\n    },\n    listing: {\n      href: 'listings/59ca00f463917d1c0005b2b1',\n      title: 'listing name 2',\n    },\n    periodStartDate: {\n      date: '2020-01-02T00:00:00.000Z',\n    },\n    periodEndDate: {\n      date: '2020-12-19T00:00:00.000Z',\n    },\n    price: {\n      currency: 'USD',\n      value: 400,\n    },\n    user: {\n      name: 'Gil Tabak',\n      img: 'https://i.pravatar.cc/150?u=6',\n    },\n    status: {\n      status: 'REGENERATION_FAILED',\n    },\n  },\n  {\n    _id: '7',\n    id: {\n      children: '12095tdgfbvm',\n    },\n    firstName: {\n      children: 'Richard',\n    },\n    lastName: {\n      children: 'Brook',\n    },\n    reportUrl: {\n      children:\n        'feature/5c9ca46f3da70f13f5cb2eec/pdf/8ec2ee446553816d82017c159872ef6b_Task_Batch_Editing.pdf',\n    },\n    listing: {\n      href: 'listings/59ca00f463917d1c0005b2b1',\n      title: 'listing name 7',\n    },\n    periodEndDate: {\n      date: '2020-12-19T00:00:00.000Z',\n    },\n    user: {},\n  },\n  {\n    _id: '8',\n    id: {\n      children: '12095tdgfbvm',\n    },\n    firstName: {\n      children: 'Gil',\n    },\n    lastName: {\n      children: 'Tabak',\n    },\n    reportUrl: {\n      children:\n        'feature/5c9ca46f3da70f13f5cb2eec/pdf/8ec2ee446553816d82017c159872ef6b_Task_Batch_Editing.pdf',\n    },\n    listing: {\n      href: 'listings/59ca00f463917d1c0005b2b1',\n      title: 'listing name 2',\n    },\n    periodStartDate: {\n      date: '2020-01-02T00:00:00.000Z',\n    },\n    periodEndDate: {\n      date: '2020-12-19T00:00:00.000Z',\n    },\n    price: {\n      currency: 'USD',\n      value: 400,\n    },\n    user: {\n      name: 'Gil Tabak',\n      img: 'https://i.pravatar.cc/150?u=6',\n    },\n    status: {\n      status: 'REGENERATION_REQUIRED',\n    },\n  },\n];\n\n// console.log('data:', data);\n\nconst data2 = [\n  {\n    _id: '1',\n    id: {\n      children: '12345tdgfbvm',\n    },\n    firstName: {\n      children: 'John',\n    },\n    lastName: {\n      children: 'Doe',\n    },\n  },\n];\n\nconst UserTable = (props) => {\n  // console.log('props:', props)\n  const { api, env, config } = Resource.create();\n  const [rawData, setRawData] = useState();\n  const [data, setData] = useState();\n\n  let counter = 1;\n  const arr = [];\n  let res1;\n  let users;\n\n  // infint-scroll-table\n  const width = 200;\n  const pageSize = 25;\n  const scrollOffset = data ? data.length : 100;\n  const [isLoading, setIsLoading] = useState(false);\n  const [skip, setSkip] = useState(0);\n\n  const handleLoadMore = useCallback(async (newSkip, newPageSize) => {\n    console.log('handleLoadMore');\n\n    const addition = semiInfiniteData.slice(newSkip, newSkip + newPageSize);\n    // console.log('newPageSize:', newPageSize)\n    // console.log('newSkip:', newSkip)\n    // console.log('addition:', addition)\n    console.log('data: ', data);\n    setIsLoading(true);\n    await sleep(400);\n    setSkip(newSkip);\n    setData((prev) => [...(prev || []), ...addition]);\n    setIsLoading(false);\n  }, []);\n\n  // sortable table\n  const [sortBy, setSortBy] = useState();\n\n  const [userDeleted, setUserDeleted] = useState(false);\n  const handleSort = useCallback((newSortBy) => {\n    console.log('handleSort');\n    setSortBy(newSortBy);\n\n    const minusPrefix = newSortBy?.startsWith('-');\n    console.log('minusPrefix:', minusPrefix);\n    const direction = minusPrefix ? 'desc' : 'asc';\n    console.log('direction:', direction);\n    const id = minusPrefix ? newSortBy.substring(1) : sortBy;\n    console.log('id:', id);\n\n    setData(orderBy(rawData, `${id}.date`, direction));\n\n    console.log('data:', data);\n  }, []);\n\n  useEffect(() => {\n    console.log('useEffect');\n\n    async function getGuests() {\n      try {\n        const response = await api.get('/users'); // will go to `${config.MAILER_URL}/users`\n        console.log('response:', response)\n        users = response.data.results;\n        //  console.log('users:', users)\n        // staging/production/staging5/preprod\n\n        //  r.forEach(\n        //    user=> {\n        //    console.log('user:', user)\n\n        //    arr.push({gilad:1,...user})\n        //    }\n\n        //  )\n\n        for (let i = 0; i < users.length; i++) {\n          //  console.log(\"users[i]: \", users[i] );\n\n          const arrUser = Object.entries(users[i]);\n          //  console.log('arrUser:', arrUser)\n\n          //  firstName: {\n          //   children: 'John',\n          // },\n\n          const bigObj = {};\n\n          for (let j = 0; j < arrUser.length; j++) {\n            const obj = {};\n            // console.log(\"arrUser[j]: \",arrUser[j]);\n            // console.log(\"arrUser[0]: \",arrUser[j][0]);\n            // console.log(\"arrUser[1]: \",arrUser[j][1]);\n\n            obj.children = arrUser[j][1];\n            // console.log('obj:', obj)\n\n            if (arrUser[j][0] === '_id') {\n              bigObj.id = obj;\n\n              bigObj._id = arrUser[j][1];\n            } else {\n              bigObj[arrUser[j][0]] = obj;\n            }\n\n            // console.log('bigObj:', bigObj)\n\n            // arr.push( `${arrUser[j][0]}: {children: '${arrUser[j][1]}',}`)\n          }\n          // arr.push({gilad:1,...users[i]})\n          arr.push({ ...bigObj });\n          // arr.push({ _id: `${counter}`, ...bigObj });\n\n          counter++;\n        }\n\n        console.log('arr: ', arr);\n        //  setData(response.data.results)\n\n        setData(arr);\n\n        // const response1= await axios.get(\"https://api.guesty.com/api/v2/guests\",  {\n        //   auth: {\n        //     username: \"88ed11eb4b951e3e239bdfb11b4d6a0a\",\n        //     password: \"f1f74044be21d90c5d0880162994e236yy\"\n        //   }\n        // }\n\n        // );\n\n        //  res1= response1.data.results\n        //  console.log('res1:', res1)\n\n        // handleLoadMore(0, pageSize);\n      } catch (error) {\n        console.log('error:', error);\n      }\n    }\n    getGuests();\n  }, [userDeleted]);\n\n  const semiInfiniteData = [...Array(300)]\n    .reduce((acc) => acc.concat(data), [])\n    .map((e, index) => ({\n      ...e,\n      id: { children: index + 1 },\n      _id: index + 1,\n    }));\n\n  console.log('semiInfiniteData:', semiInfiniteData);\n\n  // useEffect(() => {\n  //   console.log('handleLoadMore')\n  //   handleLoadMore(0, pageSize);\n  // }, []);\n\n  // multi-select-table\n  const [rowSelection, setRowSelection] = useState(getEmptySelection());\n  const { allSelected, items, exceptItems } = rowSelection;\n  // console.log('exceptItems:', exceptItems);\n  // console.log('items:', items);\n  // console.log('allSelected:', allSelected);\n\n  const selectionSize =\n    allSelected && arr.length > 0 ? arr.length - exceptItems.size : items.size;\n\n  const handleRowCheckChange = (action) => {\n    console.log('handleRowCheckChange');\n    // console.log('action:', action);\n\n    const selection = getSelectionOnAction({ rowSelection, action, data });\n    // console.log('selection:', selection);\n    setRowSelection(selection);\n  };\n\n  const deleteUser = async (userId) => {\n    console.log('deleteUser');\n    try {\n      const response = await api.delete(`/users/${userId}`); // will go to `${config.MAILER_URL}/users`\n      console.log('response:', response);\n      // const data = response.data;\n      // addToast.success('user was delete')\n      setUserDeleted(true);\n      // props.history.push('/');\n\n      handleClearSelection();\n    } catch (error) {\n      console.log('error:', error);\n      // addToast.danger(\"error deleting the user\")\n    }\n  };\n\n  const handleDelete = () => {\n    console.log(rowSelection.items);\n\n    if (window.confirm('Are you sure?')) {\n      rowSelection.items.forEach((item) => deleteUser(item));\n    }\n  };\n\n  const handleClearSelection = () => {\n    console.log('handleClearSelection');\n    setRowSelection(getEmptySelection());\n  };\n\n  const handleRowClick = (...args) => {\n    console.log('handleRowClick', ...args);\n\n    const rowData = { ...args };\n    console.log('rowData:', rowData);\n    console.log('rowData:', rowData[0].id.children);\n\n    const userId = rowData[0].id.children;\n    // console.log('args:', args.id)\n\n    // props.history.push(\"www.google.com\")\n\n    props.history.push(`/user/edit/${userId}`);\n  };\n\n  return (\n    <>\n      {data && (\n        <Section col className=\"bg-white\">\n          <Section gutter={2}>\n            <AddButton\n              onClick={() => props.history.push(`/user/add`)}\n              text=\"Add User\"\n            />\n          </Section>\n\n          <Row spacing={4}>\n            <FlatButton\n              onClick={handleClearSelection}\n              disabled={!selectionSize}\n            >\n              {`Unselect ${selectionSize || ''}`}\n            </FlatButton>\n\n            {selectionSize > 0 && (\n              <>\n                <FlatButton type=\"error\" onClick={handleDelete}>\n                  <Row align=\"center\" spacing={2}>\n                    <Icon svg={BtnTrash} />\n                    <TextField> Delete</TextField>\n                  </Row>\n                </FlatButton>\n              </>\n            )}\n          </Row>\n\n          {console.log('rowSelection: ', rowSelection)}\n          <Table\n            multiselect\n            height={500}\n            data={data}\n            isLoading={isLoading}\n            pageSize={pageSize}\n            rowSelection={rowSelection}\n            onCheckedRowsChange={handleRowCheckChange}\n            onRowClick={handleRowClick}\n            infiniteScrollOptions={{\n              skip,\n              scrollOffset,\n              onLoadMore: handleLoadMore,\n              totalCount: semiInfiniteData.length,\n            }}\n            sortBy={sortBy}\n            onSort={handleSort}\n          >\n            <Column align=\"left\" dataKey=\"id\" width={width} sortable>\n              <HeaderCell id=\"id\">Id</HeaderCell>\n              <Cell />\n            </Column>\n            <Column dataKey=\"firstName\" width={width}>\n              <HeaderCell id=\"firstname\">First name</HeaderCell>\n              <Cell />\n            </Column>\n            <Column dataKey=\"lastName\" width={width}>\n              <HeaderCell id=\"lastname\">Last name</HeaderCell>\n              <Cell />\n            </Column>\n            {/* <Column dataKey=\"email\" width={width}>\n              <HeaderCell id=\"email\">Email</HeaderCell>\n              <Cell />\n            </Column> */}\n            {/* <Column dataKey=\"periodStartDate\" width={width} sortable>\n              <HeaderCell id=\"startdate\">Date Cell</HeaderCell>\n              <DateCell />\n            </Column>\n            <Column dataKey=\"periodEndDate\" width={width} sortable>\n              <HeaderCell id=\"enddate\">DateTime Cell</HeaderCell>\n              <DateTimeCell />\n            </Column> */}\n          </Table>\n        </Section>\n      )}\n    </>\n  );\n};\nexport default UserTable;\n","/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/components/NavBar.js",["297","298"],"/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/reducers/userReducers.js",[],"/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/constants/userConstants.js",[],"/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/reducers/accountReducers.js",[],"/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/reducers/blogReducers.js",[],"/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/constants/accountConstants.js",[],"/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/constants/blogConstants.js",[],"/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/actions/accountActions.js",["299","300"],"import Axios from \"axios\";\nimport {\n  ACCOUNT_DETAILS_FAIL,\n  ACCOUNT_DETAILS_REQUEST,\n  ACCOUNT_DETAILS_SUCCESS,\n  ACCOUNT_REGISTER_FAIL,\n  ACCOUNT_REGISTER_REQUEST,\n  ACCOUNT_REGISTER_SUCCESS,\n  ACCOUNT_SIGNIN_FAIL,\n  ACCOUNT_SIGNIN_REQUEST,\n  ACCOUNT_SIGNIN_SUCCESS,\n  ACCOUNT_SIGNOUT,\n  ACCOUNT_UPDATE_PROFILE_FAIL,\n  ACCOUNT_UPDATE_PROFILE_REQUEST,\n  ACCOUNT_UPDATE_PROFILE_SUCCESS,\n  ACCOUNT_LIST_REQUEST,\n  ACCOUNT_LIST_SUCCESS,\n  ACCOUNT_LIST_FAIL,\n  ACCOUNT_DELETE_REQUEST,\n  ACCOUNT_DELETE_SUCCESS,\n  ACCOUNT_DELETE_FAIL,\n  ACCOUNT_UPDATE_SUCCESS,\n  ACCOUNT_UPDATE_FAIL,\n} from \"../constants/accountConstants\";\n\nexport const register = (name, email) => async (dispatch) => {\n  dispatch({\n    type: ACCOUNT_REGISTER_REQUEST,\n    payload: { name, email },\n  });\n  try {\n    const { data } = await Axios.post(\n      \"http://localhost:3000/api/accounts/register\",\n      {\n        name,\n        email,\n      }\n    );\n\n    dispatch({ type: ACCOUNT_REGISTER_SUCCESS, payload: data });\n\n    dispatch({ type: ACCOUNT_SIGNIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"accountInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: ACCOUNT_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const signin = (email) => async (dispatch) => {\n  dispatch({ type: ACCOUNT_SIGNIN_REQUEST, payload: { email } });\n  try {\n    const { data } = await Axios.post(\n      \"http://localhost:3000/api/accounts/signin\",\n      { email }\n    );\n    dispatch({ type: ACCOUNT_SIGNIN_SUCCESS, payload: data });\n    // dispatch(emailAccount(email));\n\n    localStorage.setItem(\"accountInfo\", JSON.stringify(data));\n  } catch (error) {\n    // console.log(\"error :\", error);\n    dispatch({\n      type: ACCOUNT_SIGNIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const signout = () => (dispatch) => {\n  localStorage.removeItem(\"accountInfo\");\n\n  dispatch({ type: ACCOUNT_SIGNOUT });\n  // document.location.href = \"/signin\";\n};\n\nexport const listAccounts = () => async (dispatch, getState) => {\n  dispatch({ type: ACCOUNT_LIST_REQUEST });\n  try {\n    const {\n      accountSignin: { accountInfo },\n    } = getState();\n    const { data } = await Axios.get(\"http://localhost:3000/api/accounts\", {\n      headers: {\n        Authorization: `Bearer ${accountInfo.token}`,\n      },\n    });\n\n    dispatch({ type: ACCOUNT_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ACCOUNT_LIST_FAIL, payload: message });\n  }\n};\n\nexport const deleteAccount = (accountId) => async (dispatch, getState) => {\n  dispatch({ type: ACCOUNT_DELETE_REQUEST, payload: accountId });\n  const {\n    accountSignin: { accountInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.delete(\n      `http://localhost:3000/api/accounts/${accountId}`,\n      {\n        headers: { Authorization: `Bearer ${accountInfo.token}` },\n      }\n    );\n    dispatch({ type: ACCOUNT_DELETE_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ACCOUNT_DELETE_FAIL, payload: message });\n  }\n};\n\nexport const detailsAccount = (accountId) => async (dispatch) => {\n  dispatch({ type: ACCOUNT_DETAILS_REQUEST, payload: accountId });\n  try {\n    const { data } = await Axios.get(\n      `http://localhost:3000/api/accounts/${accountId}`,\n    );\n    dispatch({ type: ACCOUNT_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ACCOUNT_DETAILS_FAIL, payload: message });\n  }\n};\n\nexport const updateAccount = (account) => async (dispatch, getState) => {\n  console.log(\"account:\", account);\n  dispatch({ type: ACCOUNT_UPDATE_PROFILE_REQUEST, payload: account });\n  const {\n    accountSignin: { accountInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.patch(\n      `http://localhost:3000/api/accounts/${account._id}`,\n      account,\n      {\n        headers: { Authorization: `Bearer ${accountInfo.token}` },\n      }\n    );\n    dispatch({ type: ACCOUNT_UPDATE_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ACCOUNT_UPDATE_FAIL, payload: message });\n  }\n};\n","/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/actions/userActions.js",["301","302","303","304"],"/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/screens/Account/AccountAddScreen.js",["305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320"],"import React, { useEffect, useState } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { NavLink, useParams } from \"react-router-dom\";\nimport Resource from \"@guestyci/agni\";\n\nimport RaisedButton from \"@guestyci/foundation/RaisedButton\";\n\nimport { Form as FinalForm, Field } from \"react-final-form\";\n\nimport Form from \"@guestyci/foundation/Form\";\nimport Input from \"@guestyci/foundation/Input\";\nimport DateRangePicker from \"@guestyci/foundation/DatePicker/DateRangePicker\";\nimport SingleDatePicker from \"@guestyci/foundation/DatePicker/SingleDatePicker\";\nimport NumberPicker from \"@guestyci/foundation/NumberPicker\";\nimport EmailInput from \"@guestyci/foundation/EmailInput\";\nimport Dropdown, { Option } from \"@guestyci/foundation/Dropdown\";\nimport TextField from \"@guestyci/foundation/TextField\";\nimport TextArea from \"@guestyci/foundation/TextArea\";\nimport Col from \"@guestyci/foundation/Layout/Col\";\nimport Section from \"@guestyci/foundation/Layout/Section\";\nimport DurationPicker from \"@guestyci/foundation/DurationPicker\";\nimport TimePicker from \"@guestyci/foundation/TimePicker\";\n\nimport FormField from \"@guestyci/foundation/FormField\";\nimport FormGroup from \"@guestyci/foundation/FormGroup\";\nimport { FormProvider } from \"@guestyci/foundation/enums\";\n// import { email } from '@guestyci/foundation/validators';\nimport createStyles from \"@guestyci/foundation/createStyles\";\n\nimport ErrorBanner from \"@guestyci/foundation/legacy/Table/ErrorBanner\";\n\nimport { useToast } from \"@guestyci/foundation/Toast\";\nimport { register } from \"../../actions/accountActions\";\n\nconst useStyles = createStyles((theme) => ({\n  app: {\n    backgroundColor: \"white\",\n  },\n}));\n\nexport default function AccountAddScreen(props) {\n  console.log(\"email\");\n\n  const classes = useStyles();\n  const { addToast } = useToast();\n\n  const { api, env, config } = Resource.create();\n\n  // const { id } = useParams();\n  // console.log(\"id:\", id);\n\n/// states\n  const [name, setName] = useState();\n\n  const [email, setEmail] = useState();\n\n  // const [password, setPassword] = useState();\n\n  const errorMessage = \"There was a problem add the user.\";\n\n  const [error, setError] = useState(false);\n\n\n  ///selectors\n\n  const accountRegister = useSelector((state) => state.accountRegister);\n\n  const { accountInfo, loading, error:errorRegister } = accountRegister;\n\n  const accountSignin = useSelector((state) => state.accountSignin);\n  const {\n    accountInfo: accountInfoSignIn,\n    loading: loadingSignIn,\n    error: errorSignIn,\n  } = accountSignin;\n  console.log('accountSignin:', accountSignin)\n\n\n\n  /// effects\n\n  useEffect(() => {\n    if ( accountInfoSignIn) {\n      addToast.success(`account ${name} was add successfully`)\n      props.history.push(\"/\");\n    }\n    else if(errorRegister){\n      addToast.danger(\"error adding the user\")\n\n      setError(true);\n\n      \n    }\n  }, [props.history, accountInfo, accountInfoSignIn]);\n\n\n\n\n\n\n\n\n\n\n  //dispatchers\n\n  const dispatch = useDispatch();\n\n  const onSubmit = (e) => {\n    // e.preventDefault();\n\n    console.log(\"onSubmit\");\n    console.log(name);\n    console.log(email);\n\n    dispatch(register(name, email));\n\n        \n    setName(\"\");\n    setEmail(\"\");\n\n    // console.log(password);\n\n    // async function createAccount() {\n    //   try {\n    //     const response = await api.post(`/users`, {\n    //       name,\n    //       email,\n    //       // password,\n    //     }); // will go to `${config.MAILER_URL}/users`\n    //     console.log(\"response:\", response);\n    //     // const data = response.data;]\n\n    //     if (response.status === 200) {\n    //       addToast.success(`user ${name} was add successfully`);\n    //       props.history.push(\"/\");\n    //     } else {\n    //       console.log(\"response.status: \", response.status);\n    //     }\n    //   } catch (error) {\n    //     console.log(\"error:\", error);\n    //     addToast.danger(\"error adding the user\");\n\n    //     setError(true);\n\n    //     // setTimeout(() => {\n    //     //   setError(false);\n    //     // }, 3000);\n    //   }\n    // }\n    // createAccount();\n\n    // props.history.push(\"/\");\n  };\n\n  const closeError = () => {\n    setError(false);\n  };\n\n  return (\n    <Section className={classes.app} justify=\"center\">\n      <Col spacing={6} span={6}>\n        <TextField variant=\"h2\">\n          Add Account:\n          {name}\n        </TextField>\n        <FinalForm\n          onSubmit={onSubmit}\n          initialValues={{}}\n          render={({ handleSubmit }) => (\n            <Form\n              title=\"Create Account\"\n              onSubmit={handleSubmit}\n              provider={FormProvider.Final}\n              fieldInstance={Field}\n            >\n              <FormGroup>\n                <FormGroup>\n                  <FormField\n                    label=\"Account Name\"\n                    name=\"name\"\n                    //   info=\"Drama, Action etc.\"\n                  >\n                    <Input\n                      name=\"name\"\n                      value={name}\n                      placeholder={name}\n                      onChange={(e) => setName(e.target.value)}\n                    />\n                  </FormField>\n                  <FormField label=\"Email\" name=\"email\">\n                    <EmailInput\n                      name=\"email\"\n                      value={email}\n                      placeholder={email}\n                      // validate={[email]}\n                      onChange={(e) => setEmail(e.target.value)}\n                    />\n                  </FormField>\n\n                  {/* \n                  <FormField label=\"Password\" name=\"password\">\n                    <Input\n                      name=\"password\"\n                      type={password}\n                      value={password}\n                      placeholder={password}\n                      validate={[password]}\n                      onChange={(e) => setPassword(e.target.value)}\n                    />\n                  </FormField> */}\n                </FormGroup>\n                {/* <FormField label=\"Country\" info=\"e.g (US)\" name=\"country\">\n                    <Input />\n                  </FormField>\n                  <FormField label=\"Runtime\" name=\"runtime\">\n                    <Input />\n                  </FormField>\n                  <FormField label=\"Contact\" name=\"contact\">\n                    <Input />\n                  </FormField>\n                  <FormField label=\"Biography\" name=\"bigraphy\" required>\n                    <TextArea />\n                  </FormField>\n                  <FormField label=\"Age\" name=\"age\" required>\n                    <NumberPicker />\n                  </FormField> */}\n                {/* <FormField\n                  label=\"Email\"\n                  name=\"email\"\n                  validate={[email]}\n                  required\n                >\n                  <EmailInput\n                    name=\"email\"\n                    value={email}\n                    placeholder={email}\n                  />\n                </FormField> */}\n                {/* <FormField label=\"Gender\" name=\"gender\" required>\n                    <Dropdown>\n                      {['Male', 'Female'].map((gender) => (\n                        <Option value={gender} key={gender}>\n                          {gender}\n                        </Option>\n                      ))}\n                    </Dropdown>\n                  </FormField>\n                  <FormField\n                    label=\"Single Date Picker\"\n                    name=\"singleDatePicker\"\n                    required\n                  >\n                    <SingleDatePicker />\n                  </FormField>\n                  <FormField\n                    label=\"Date Range Picker\"\n                    name=\"dateRangePicker\"\n                    required\n                  >\n                    <DateRangePicker />\n                  </FormField>\n                  <FormField label=\"Time picker\" name=\"time\" required>\n                    <TimePicker />\n                  </FormField>\n                  <FormField label=\"Duration picker\" name=\"duration\" required>\n                    <DurationPicker />\n                  </FormField> */}\n                <RaisedButton type=\"submit\">Create Account</RaisedButton>\n\n                {error && (\n                  <ErrorBanner\n                    show={error}\n                    errorMessage={errorMessage}\n                    onClick={closeError}\n                    actionText=\"Try again\"\n                  />\n                )}\n              </FormGroup>\n\n              <NavLink\n                to=\"/account/signin\"\n                // activeStyle={activeStyle}\n                style={{ marginLeft: \"20px\" }}\n                exact\n              >\n                signin exist user\n              </NavLink>\n            </Form>\n          )}\n        />\n      </Col>\n    </Section>\n  );\n}\n","/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/screens/Account/AccountSigninScreen.js",["321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336"],"/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/screens/User/UserAddScreen.js",["337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352"],"/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/screens/User/UserEditScreen.js",["353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369"],"/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/screens/User/UserListScreen/UserListScreen.js",["370","371","372","373","374","375","376","377","378","379","380","381"],"/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/screens/User/UserRegisterScreen.js",["382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399"],"/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/screens/User/UserSigninScreen.js",["400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418"],"/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/screens/Blog/BlogAddScreen.js",["419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434"],"/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/screens/Blog/BlogListScreen/BlogListScreen.js",["435","436","437","438","439","440","441","442","443","444","445","446"],"/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/screens/Blog/BlogEditScreen.js",["447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463"],"/Users/giladdekel/Workspace/Guesty/boilplate/simple-app/simple-app-archive/src/actions/blogActions.js",["464","465","466"],"/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/index.js",[],["467","468"],"/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/bootstrap.js",[],"/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/store.js",["469","470","471","472"],"// import { createStore, compose, applyMiddleware, combineReducers } from \"redux\";\n// import { reducer as formReducer } from 'redux-form';\n\n// import thunk from \"redux-thunk\";\n\n// import {\n//   accountDeleteReducer,\n//   accountDetailsReducer,\n//   accountListReducer,\n//   accountRegisterReducer,\n//   accountSigninReducer,\n//   accountUpdateReducer,\n// } from \"./reducers/accountReducers\";\n\n// import {\n//   userDeleteReducer,\n//   userDetailsReducer,\n//   userListReducer,\n//   userRegisterReducer,\n//   userSigninReducer,\n//   userUpdateReducer,\n// } from \"./reducers/userReducers\";\n\n// ////\n\n// import {\n//   blogDeleteReducer,\n//   blogDetailsReducer,\n//   blogListReducer,\n//   blogRegisterReducer,\n//   blogSigninReducer,\n//   blogUpdateReducer,\n// } from \"./reducers/blogReducers\";\n\n// const initialState = {\n//   userSignin: {\n//     userInfo: localStorage.getItem(\"userInfo\")\n//       ? JSON.parse(localStorage.getItem(\"userInfo\"))\n//       : null,\n//   },\n\n//   accountSignin: {\n//     accountInfo: localStorage.getItem(\"accountInfo\")\n//       ? JSON.parse(localStorage.getItem(\"accountInfo\"))\n//       : null,\n//   },\n// };\n// const reducer = combineReducers({\n//   userRegister: userRegisterReducer,\n\n//   userSignin: userSigninReducer,\n\n//   userDetails: userDetailsReducer,\n//   userUpdate: userUpdateReducer,\n\n//   userList: userListReducer,\n//   userDelete: userDeleteReducer,\n\n//   /////\n\n//   blogRegister: blogRegisterReducer,\n\n//   blogSignin: blogSigninReducer,\n\n//   blogDetails: blogDetailsReducer,\n//   blogUpdate: blogUpdateReducer,\n\n//   blogList: blogListReducer,\n//   blogDelete: blogDeleteReducer,\n\n//   /////\n\n//   accountRegister: accountRegisterReducer,\n\n//   accountSignin: accountSigninReducer,\n\n//   accountDetails: accountDetailsReducer,\n//   accountUpdate: accountUpdateReducer,\n\n//   accountList: accountListReducer,\n//   accountDelete: accountDeleteReducer,\n// });\n// const composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n// const store = createStore(\n//   reducer,\n//   initialState,\n//   composeEnhancer(applyMiddleware(thunk))\n// );\n\n// export default store;\n\nimport { applyMiddleware, combineReducers, createStore, compose } from \"redux\";\nimport { reducer as formReducer } from \"redux-form\";\nimport thunk from \"redux-thunk\";\n\nimport {\n  accountDeleteReducer,\n  accountDetailsReducer,\n  accountListReducer,\n  accountRegisterReducer,\n  accountSigninReducer,\n  accountUpdateReducer,\n} from \"./reducers/accountReducers\";\n\nimport {\n  userDeleteReducer,\n  userDetailsReducer,\n  userListReducer,\n  userRegisterReducer,\n  userAddReducer,\n  userSigninReducer,\n  userUpdateReducer,\n} from \"./reducers/userReducers\";\n\nimport {\n  blogDeleteReducer,\n  postDeleteReducer,\n  blogDetailsReducer,\n  postDetailsReducer,\n  blogListReducer,\n  blogRegisterReducer,\n  blogAddReducer,\n  postAddReducer,\n  blogSigninReducer,\n  blogUpdateReducer,\n  postUpdateReducer\n} from \"./reducers/blogReducers\";\n\nconst initialState = {\n  accountSignin: {\n    accountInfo: localStorage.getItem(\"accountInfo\")\n      ? JSON.parse(localStorage.getItem(\"accountInfo\"))\n      : null,\n  },\n  userSignin: {\n    userInfo: localStorage.getItem(\"userInfo\")\n      ? JSON.parse(localStorage.getItem(\"userInfo\"))\n      : null,\n  },\n};\n\n// temp reducer to be removed\n// Once real reducers added you can delete this\nconst tempReducer = (state = {}, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n// shape the state structure\nconst rootReducer = combineReducers({\n  userRegister: userRegisterReducer,\n\n  userAdd: userAddReducer,\n\n  userSignin: userSigninReducer,\n\n  userDetails: userDetailsReducer,\n  userUpdate: userUpdateReducer,\n\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n\n  blogRegister: blogRegisterReducer,\n\n  blogAdd: blogAddReducer,\n\n  postAdd: postAddReducer,\n\n  blogSignin: blogSigninReducer,\n\n  blogDetails: blogDetailsReducer,\n\n  postDetails: postDetailsReducer,\n\n  blogUpdate: blogUpdateReducer,\n\n\n  postUpdate: postUpdateReducer,\n\n\n  blogList: blogListReducer,\n  blogDelete: blogDeleteReducer,\n\n  postDelete: postDeleteReducer,\n\n  accountRegister: accountRegisterReducer,\n\n  accountSignin: accountSigninReducer,\n\n  accountDetails: accountDetailsReducer,\n  accountUpdate: accountUpdateReducer,\n\n  accountList: accountListReducer,\n  accountDelete: accountDeleteReducer,\n});\n\n// Add custom middleware here\nconst featureMiddleware = [];\n\n/**\n * Initialize the redux store\n * Create the store\n * Applying extra arguments\n * To pass further arguments please config the function\n * @param initialState  {Object}  initial state for store\n * @param api {Object}  API class for api middleware\n * @return {Store<any, AnyAction> & {dispatch: any}}\n */\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n// (initialState = {\n//   userSignin: {\n//     userInfo: localStorage.getItem(\"userInfo\")\n//       ? JSON.parse(localStorage.getItem(\"userInfo\"))\n//       : null,\n//   },\n// }),\n//   api;\n\nexport default () => {\n  // console.log('initialState:', initialState)\n  const store = createStore(\n    rootReducer,\n    initialState,\n    // composeEnhancer(\n    //   applyMiddleware(...featureMiddleware, thunk.withExtraArgument(api))\n    // )\n    composeEnhancer(applyMiddleware(thunk))\n  );\n  return store;\n};\n","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/app/App.js",["473","474","475","476"],"import {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n\nimport { useSelector } from \"react-redux\";\n\nimport createStyles from \"@guestyci/foundation/createStyles\";\n// import Col from '@guestyci/foundation/Layout/Col';\n// import Icon from '@guestyci/foundation/Icon';\n// import TextField from '@guestyci/foundation/TextField';\n\nimport { ReactComponent as Logo } from \"@guestyci/foundation/icons/BtnGuestySymbol.svg\";\n// import TableExample from '../TableExample';\n\nimport Section from \"@guestyci/foundation/Layout/Section\";\nimport UserTable from \"../screens/UserTable\";\n\nimport UserEditScreen from \"../screens/User/UserEditScreen\";\n\nimport UserAddScreen from \"../screens/User/UserAddScreen\";\n\nimport AccountAddScreen from \"../screens/Account/AccountAddScreen\";\n\nimport AccountSigninScreen from \"../screens/Account/AccountSigninScreen\";\n\nimport FormControlExample from \"../FormControlExample\";\n\nimport NavBar from \"../components/NavBar\";\nimport UserListScreen from \"../screens/User/UserListScreen/UserListScreen\";\n\nimport UserRegisterScreen from \"../screens/User/UserRegisterScreen\";\nimport UserSigninScreen from \"../screens/User/UserSigninScreen\";\n\nimport BlogListScreen from \"../screens/Blog/BlogListScreen/BlogListScreen\";\n\nimport BlogEditScreen from \"../screens/Blog/BlogEditScreen\";\n\nimport BlogAddScreen from \"../screens/Blog/BlogAddScreen\";\n\nimport PostAddScreen from \"../screens/Post/PostAddScreen\";\nimport PostEditScreen from \"../screens/Post/PostEditScreen\";\n\nimport PostViewScreen from \"../screens/Post/PostViewScreen\";\n\nimport PrivateRoute from \"../components/PrivateRoute\";\nimport Home from \"../screens/Home\";\nimport UserInfoScreen from \"../screens/User/UserInfoScreen\";\n\n\nimport AccountInfoScreen from \"../screens/Account/AccountInfoScreen\";\n\n// This is a demo scaffolding for guesty create-react-app\n// One development starts clear this file and set your own App.js\n// REMOVE the styling\n// const useStyles = createStyles((theme) => ({\n//   app: {\n//     background: theme.palette.background.system,\n//     minHeight: '100vh',\n//   },\n//   appLogo: {\n//     animation: '$spin infinite 10s linear',\n//     pointerEvents: 'none',\n//     height: 100,\n//     width: 100,\n//     margin: 40,\n//   },\n//   '@keyframes spin': {\n//     from: {\n//       transform: 'rotate(0deg)',\n//     },\n//     to: {\n//       transform: 'rotate(360deg)',\n//     },\n//   },\n// }));\n\nconst useStyles = createStyles((theme) => ({\n  app: {\n    backgroundColor: \"white\",\n    height: 700,\n  },\n}));\n\n// This is your App entry point.\n// Add the desired configuration and logic here\n// REMOVE the comments once development starts\n\nconst App = () => {\n  // const userSignin = useSelector((state) => state.userSignin);\n  // const { userInfo } = userSignin;\n\n  // const accountSignin = useSelector((state) => state.accountSignin);\n  // const { accountInfo } = accountSignin;\n  const classes = useStyles();\n  return (\n    <Section className={classes.app}>\n      <Router>\n        <NavBar />\n\n        <Switch>\n          <Route path=\"/\" component={Home} exact />\n\n          <Route\n            path=\"/preprod/table\"\n            exact\n            render={({ history }) => <UserTable history={history} />}\n          />\n\n          <Route path=\"/account/signin\" component={AccountSigninScreen} exact />\n\n          <Route path=\"/account/register\" component={AccountAddScreen} exact />\n\n          <Route path=\"/account/signin\" component={AccountSigninScreen} exact />\n\n\n\n          <PrivateRoute\n            path=\"/account/info/:id\"\n            component={AccountInfoScreen}\n            exact\n          />\n\n\n          <Route path=\"/user/register\" component={UserRegisterScreen} exact />\n          <Route path=\"/user/signin\" component={UserSigninScreen} exact />\n\n          <PrivateRoute path=\"/user/list\" component={UserListScreen} exact />\n\n          <Route\n            path=\"/user/edit/:id\"\n            component={UserEditScreen}\n            exact\n          />\n\n          <Route\n            path=\"/user/info/:id\"\n            component={UserInfoScreen}\n            exact\n          />\n\n          <PrivateRoute path=\"/user/add\" component={UserAddScreen} exact />\n\n          {/* <Route path=\"/blog/list\" component={BlogListScreen} exact /> */}\n\n          <PrivateRoute path=\"/blog/list\" component={BlogListScreen} exact />\n\n          {/* <Route\n            path=\"/blog/list\"\n            exact\n            render={({ history }) =>\n              userInfo && accountInfo ? (\n                <BlogListScreen history={history} />\n              ) : (\n                <Redirect to=\"/account/signin\" />\n              )\n            }\n          /> */}\n\n          {/* <Route path=\"/blog/edit/:id\" component={BlogEditScreen} exact /> */}\n\n          {/* <Route\n            path=\"/blog/edit/:id\"\n            exact\n            render={({ history }) => <BlogEditScreen history={history} />}\n          /> */}\n\n          <PrivateRoute\n            path=\"/blog/edit/:id\"\n            component={BlogEditScreen}\n            exact\n          />\n\n          <PrivateRoute path=\"/blog/add\" component={BlogAddScreen} exact />\n\n          {/* <Route path=\"/blog/add\" component={BlogAddScreen} exact /> */}\n\n          <PrivateRoute\n            path=\"/blog/edit/:id/post/add\"\n            component={PostAddScreen}\n            exact\n          />\n\n          {/* \n          <Route\n            path=\"/blog/edit/:id/post/add\"\n            exact\n            render={({ history }) => <PostAddScreen history={history} />}\n          /> */}\n\n          <PrivateRoute\n            path=\"/blog/edit/:blogId/post/:postId\"\n            component={PostEditScreen}\n            exact\n          />\n\n          {/* <PrivateRoute\n            path=\"/blog/edit/:blogId/post/:postId\"\n            exact\n            render={({ history }) => <PostEditScreen history={history} />}\n          /> */}\n\n          {/* <Route path=\"/post/edit/:id\" component={PostEditScreen} exact /> */}\n\n          <PrivateRoute\n            path=\"/:blogId/post/:postId/view\"\n            component={PostViewScreen}\n            exact\n          />\n        </Switch>\n      </Router>\n    </Section>\n  );\n};\n\nexport default App;\n","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/FormControlExample.js",[],"/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/reducers/accountReducers.js",[],"/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/reducers/userReducers.js",[],"/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/reducers/blogReducers.js",[],"/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/UserTable.js",["477","478","479","480","481","482","483","484","485","486","487","488","489","490"],"import React, { useState, useEffect, useCallback } from 'react';\nimport Section from '@guestyci/foundation/legacy/Section';\nimport AddButton from '@guestyci/foundation/AddButton';\n\nimport Table, { Column } from '@guestyci/foundation/legacy/Table';\nimport {\n  getEmptySelection,\n  getSelectionOnAction,\n} from '@guestyci/foundation/legacy/Table/tableUtility';\nimport Cell from '@guestyci/foundation/legacy/Table/Cell';\nimport HeaderCell from '@guestyci/foundation/legacy/Table/HeaderCell';\nimport FlatButton from '@guestyci/foundation/legacy/FlatButton';\n\nimport { sleep } from '@guestyci/foundation/utils/commonUtility';\n\nimport orderBy from 'lodash/orderBy';\n\nimport DateCell from '@guestyci/foundation/legacy/Table/DateCell';\nimport DateTimeCell from '@guestyci/foundation/legacy/Table/DateTimeCell';\n\n// import data from '../../../__mocks__/tableData';\n\nimport Resource from '@guestyci/agni';\n\nimport TextField from '@guestyci/foundation/TextField';\nimport { Row } from '@guestyci/foundation/Layout';\nimport { ReactComponent as BtnTrash } from '@guestyci/foundation/icons/BtnTrash.svg';\nimport Icon from '@guestyci/foundation/Icon';\n\nimport axios from 'axios';\nimport { after } from 'lodash';\n\nconst data1 = [\n  {\n    _id: '1',\n    id: {\n      children: '12345tdgfbvm',\n    },\n    firstName: {\n      children: 'John',\n    },\n    lastName: {\n      children: 'Doe',\n    },\n    reportUrl: {\n      children:\n        'feature/5c9ca46f3da70f13f5cb2eec/pdf/8ec2ee446553816d82017c159872ef6b_Task_Batch_Editing.pdf',\n    },\n    listing: {\n      href: 'listings/59ca00f463917d1c0005b2b1',\n      title: 'listing name 1',\n    },\n    businessModel: {\n      href: 'financial/business-models/1',\n      target: '_blank',\n      title: 'business model #1',\n    },\n    periodStartDate: {\n      date: '2020-10-01T00:00:00.000Z',\n    },\n    periodEndDate: {\n      date: '2020-11-29T00:00:00.000Z',\n    },\n    price: {\n      currency: 'USD',\n      value: 100,\n    },\n    tags: {\n      tags: ['Email'],\n    },\n    user: {\n      name: 'Frank Sinatra',\n      img: 'https://i.pravatar.cc/150?u=1',\n    },\n    status: {\n      status: 'PENDING',\n    },\n  },\n  {\n    _id: '2',\n    id: {\n      children: '12343tdgfbvm',\n    },\n    firstName: {\n      children: 'Jonathan',\n    },\n    lastName: {\n      children: 'Yehie',\n    },\n    reportUrl: {\n      children:\n        'feature/5c9ca46f3da70f13f5cb2eec/pdf/8ec2ee446553816d82017c159872ef6b_Task_Batch_Editing.pdf',\n    },\n    listing: {\n      href: 'listings/59ca00f463917d1c0005b2b1',\n      title: 'listing name 2',\n    },\n    businessModel: {\n      href: 'financial/business-models/2',\n      target: '_blank',\n      title: 'business model #2',\n    },\n    periodEndDate: {\n      date: null,\n    },\n    price: {\n      currency: 'EUR',\n      value: 20000000000,\n    },\n    tags: {\n      tags: ['Email', 'Phone', 'Owners Portal'],\n    },\n    user: {\n      name: 'Frank Sinatra',\n    },\n    status: {\n      status: 'APPROVED',\n    },\n  },\n  {\n    _id: '3',\n    id: {\n      children: '43345tdgfbvm',\n    },\n    firstName: {\n      children: 'Aram',\n    },\n    lastName: {\n      children: 'Ben Shushan Erlich',\n    },\n    reportUrl: {\n      children:\n        'feature/5c9ca46f3da70f13f5cb2eec/pdf/8ec2ee446553816d82017c159872ef6b_Task_Batch_Editing.pdf',\n    },\n    listing: {\n      href: 'listings/59ca00f463917d1c0005b2b1',\n      title: 'listing name 3',\n    },\n    periodStartDate: {\n      date: '2020-07-05T00:00:00.000Z',\n    },\n    periodEndDate: {\n      date: '2020-11-15T00:00:00.000Z',\n    },\n    price: {\n      currency: 'UAH',\n      value: 300,\n    },\n    user: {\n      img: 'https://i.pravatar.cc/150?u=1',\n      name: 'John Doe',\n    },\n    status: {\n      status: 'FLAGGED',\n    },\n  },\n  {\n    _id: '4',\n    id: {\n      children: '1234rgdgfbvm',\n    },\n    firstName: {\n      children: 'Nik',\n    },\n    lastName: {\n      children: 'Frank',\n    },\n    reportUrl: {\n      children:\n        'feature/5c9ca46f3da70f13f5cb2eec/pdf/8ec2ee446553816d82017c159872ef6b_Task_Batch_Editing.pdf',\n    },\n    listing: {\n      href: 'listings/59ca00f463917d1c0005b2b1',\n      title: 'listing name 2',\n    },\n    periodStartDate: {\n      date: '2020-06-04T00:00:00.000Z',\n    },\n    periodEndDate: {\n      date: '2020-08-29T00:00:00.000Z',\n    },\n    price: {\n      currency: 'USD',\n      value: 400,\n    },\n    tags: {\n      tags: ['Email', 'Phone'],\n    },\n    user: {\n      name: 'Frank Sinatra',\n    },\n    status: {\n      status: 'ARCHIVED',\n    },\n  },\n  {\n    _id: '5',\n    id: {\n      children: '12095tdgfbvm',\n    },\n    firstName: {\n      children: 'Gil',\n    },\n    lastName: {\n      children: 'Tabak',\n    },\n    reportUrl: {\n      children:\n        'feature/5c9ca46f3da70f13f5cb2eec/pdf/8ec2ee446553816d82017c159872ef6b_Task_Batch_Editing.pdf',\n    },\n    listing: {\n      href: 'listings/59ca00f463917d1c0005b2b1',\n      title: 'listing name 2',\n    },\n    periodStartDate: {\n      date: '2020-01-02T00:00:00.000Z',\n    },\n    periodEndDate: {\n      date: '2020-12-19T00:00:00.000Z',\n    },\n    price: {\n      currency: 'USD',\n      value: 400,\n    },\n    user: {\n      name: 'Frank Sinatra',\n    },\n    status: {\n      status: 'REGENERATING',\n    },\n    actions: {\n      isActionInProgress: true, // NOTE: this property will not come from data, this is used just for the demo sake\n    },\n  },\n  {\n    _id: '6',\n    id: {\n      children: '12095tdgfbvm',\n    },\n    firstName: {\n      children: 'Gil',\n    },\n    lastName: {\n      children: 'Tabak',\n    },\n    reportUrl: {\n      children:\n        'feature/5c9ca46f3da70f13f5cb2eec/pdf/8ec2ee446553816d82017c159872ef6b_Task_Batch_Editing.pdf',\n    },\n    listing: {\n      href: 'listings/59ca00f463917d1c0005b2b1',\n      title: 'listing name 2',\n    },\n    periodStartDate: {\n      date: '2020-01-02T00:00:00.000Z',\n    },\n    periodEndDate: {\n      date: '2020-12-19T00:00:00.000Z',\n    },\n    price: {\n      currency: 'USD',\n      value: 400,\n    },\n    user: {\n      name: 'Gil Tabak',\n      img: 'https://i.pravatar.cc/150?u=6',\n    },\n    status: {\n      status: 'REGENERATION_FAILED',\n    },\n  },\n  {\n    _id: '7',\n    id: {\n      children: '12095tdgfbvm',\n    },\n    firstName: {\n      children: 'Richard',\n    },\n    lastName: {\n      children: 'Brook',\n    },\n    reportUrl: {\n      children:\n        'feature/5c9ca46f3da70f13f5cb2eec/pdf/8ec2ee446553816d82017c159872ef6b_Task_Batch_Editing.pdf',\n    },\n    listing: {\n      href: 'listings/59ca00f463917d1c0005b2b1',\n      title: 'listing name 7',\n    },\n    periodEndDate: {\n      date: '2020-12-19T00:00:00.000Z',\n    },\n    user: {},\n  },\n  {\n    _id: '8',\n    id: {\n      children: '12095tdgfbvm',\n    },\n    firstName: {\n      children: 'Gil',\n    },\n    lastName: {\n      children: 'Tabak',\n    },\n    reportUrl: {\n      children:\n        'feature/5c9ca46f3da70f13f5cb2eec/pdf/8ec2ee446553816d82017c159872ef6b_Task_Batch_Editing.pdf',\n    },\n    listing: {\n      href: 'listings/59ca00f463917d1c0005b2b1',\n      title: 'listing name 2',\n    },\n    periodStartDate: {\n      date: '2020-01-02T00:00:00.000Z',\n    },\n    periodEndDate: {\n      date: '2020-12-19T00:00:00.000Z',\n    },\n    price: {\n      currency: 'USD',\n      value: 400,\n    },\n    user: {\n      name: 'Gil Tabak',\n      img: 'https://i.pravatar.cc/150?u=6',\n    },\n    status: {\n      status: 'REGENERATION_REQUIRED',\n    },\n  },\n];\n\n// console.log('data:', data);\n\nconst data2 = [\n  {\n    _id: '1',\n    id: {\n      children: '12345tdgfbvm',\n    },\n    firstName: {\n      children: 'John',\n    },\n    lastName: {\n      children: 'Doe',\n    },\n  },\n];\n\nconst UserTable = (props) => {\n  // console.log('props:', props)\n  const { api, env, config } = Resource.create();\n  const [rawData, setRawData] = useState();\n  const [data, setData] = useState();\n\n  let counter = 1;\n  const arr = [];\n  let res1;\n  let users;\n\n  // infint-scroll-table\n  const width = 200;\n  const pageSize = 25;\n  const scrollOffset = data ? data.length : 100;\n  const [isLoading, setIsLoading] = useState(false);\n  const [skip, setSkip] = useState(0);\n\n  const handleLoadMore = useCallback(async (newSkip, newPageSize) => {\n    console.log('handleLoadMore');\n\n    const addition = semiInfiniteData.slice(newSkip, newSkip + newPageSize);\n    // console.log('newPageSize:', newPageSize)\n    // console.log('newSkip:', newSkip)\n    // console.log('addition:', addition)\n    console.log('data: ', data);\n    setIsLoading(true);\n    await sleep(400);\n    setSkip(newSkip);\n    setData((prev) => [...(prev || []), ...addition]);\n    setIsLoading(false);\n  }, []);\n\n  // sortable table\n  const [sortBy, setSortBy] = useState();\n\n  const [userDeleted, setUserDeleted] = useState(false);\n  const handleSort = useCallback((newSortBy) => {\n    console.log('handleSort');\n    setSortBy(newSortBy);\n\n    const minusPrefix = newSortBy?.startsWith('-');\n    console.log('minusPrefix:', minusPrefix);\n    const direction = minusPrefix ? 'desc' : 'asc';\n    console.log('direction:', direction);\n    const id = minusPrefix ? newSortBy.substring(1) : sortBy;\n    console.log('id:', id);\n\n    setData(orderBy(rawData, `${id}.date`, direction));\n\n    console.log('data:', data);\n  }, []);\n\n  useEffect(() => {\n    console.log('useEffect');\n\n    async function getGuests() {\n      try {\n        const response = await api.get('/users'); // will go to `${config.MAILER_URL}/users`\n        console.log('response:', response)\n        users = response.data.results;\n        //  console.log('users:', users)\n        // staging/production/staging5/preprod\n\n        //  r.forEach(\n        //    user=> {\n        //    console.log('user:', user)\n\n        //    arr.push({gilad:1,...user})\n        //    }\n\n        //  )\n\n        for (let i = 0; i < users.length; i++) {\n          //  console.log(\"users[i]: \", users[i] );\n\n          const arrUser = Object.entries(users[i]);\n          //  console.log('arrUser:', arrUser)\n\n          //  firstName: {\n          //   children: 'John',\n          // },\n\n          const bigObj = {};\n\n          for (let j = 0; j < arrUser.length; j++) {\n            const obj = {};\n            // console.log(\"arrUser[j]: \",arrUser[j]);\n            // console.log(\"arrUser[0]: \",arrUser[j][0]);\n            // console.log(\"arrUser[1]: \",arrUser[j][1]);\n\n            obj.children = arrUser[j][1];\n            // console.log('obj:', obj)\n\n            if (arrUser[j][0] === '_id') {\n              bigObj.id = obj;\n\n              bigObj._id = arrUser[j][1];\n            } else {\n              bigObj[arrUser[j][0]] = obj;\n            }\n\n            // console.log('bigObj:', bigObj)\n\n            // arr.push( `${arrUser[j][0]}: {children: '${arrUser[j][1]}',}`)\n          }\n          // arr.push({gilad:1,...users[i]})\n          arr.push({ ...bigObj });\n          // arr.push({ _id: `${counter}`, ...bigObj });\n\n          counter++;\n        }\n\n        //  setData(response.data.results)\n        // let arr = makeDataForTable(users);\n        console.log('arr: ', arr);\n\n\n\n        setData(arr);\n\n        // const response1= await axios.get(\"https://api.guesty.com/api/v2/guests\",  {\n        //   auth: {\n        //     username: \"88ed11eb4b951e3e239bdfb11b4d6a0a\",\n        //     password: \"f1f74044be21d90c5d0880162994e236yy\"\n        //   }\n        // }\n\n        // );\n\n        //  res1= response1.data.results\n        //  console.log('res1:', res1)\n\n        // handleLoadMore(0, pageSize);\n      } catch (error) {\n        console.log('error:', error);\n      }\n    }\n    getGuests();\n  }, [userDeleted]);\n\n  const semiInfiniteData = [...Array(300)]\n    .reduce((acc) => acc.concat(data), [])\n    .map((e, index) => ({\n      ...e,\n      id: { children: index + 1 },\n      _id: index + 1,\n    }));\n\n  console.log('semiInfiniteData:', semiInfiniteData);\n\n  // useEffect(() => {\n  //   console.log('handleLoadMore')\n  //   handleLoadMore(0, pageSize);\n  // }, []);\n\n  // multi-select-table\n  const [rowSelection, setRowSelection] = useState(getEmptySelection());\n  const { allSelected, items, exceptItems } = rowSelection;\n  // console.log('exceptItems:', exceptItems);\n  // console.log('items:', items);\n  // console.log('allSelected:', allSelected);\n\n  const selectionSize =\n    allSelected && arr.length > 0 ? arr.length - exceptItems.size : items.size;\n\n  const handleRowCheckChange = (action) => {\n    console.log('handleRowCheckChange');\n    // console.log('action:', action);\n\n    const selection = getSelectionOnAction({ rowSelection, action, data });\n    // console.log('selection:', selection);\n    setRowSelection(selection);\n  };\n\n  const deleteUser = async (userId) => {\n    console.log('deleteUser');\n    try {\n      const response = await api.delete(`/users/${userId}`); // will go to `${config.MAILER_URL}/users`\n      console.log('response:', response);\n      // const data = response.data;\n      // addToast.success('user was delete')\n      setUserDeleted(true);\n      // props.history.push('/');\n\n      handleClearSelection();\n    } catch (error) {\n      console.log('error:', error);\n      // addToast.danger(\"error deleting the user\")\n    }\n  };\n\n  const handleDelete = () => {\n    console.log(rowSelection.items);\n\n    if (window.confirm('Are you sure?')) {\n      rowSelection.items.forEach((item) => deleteUser(item));\n    }\n  };\n\n  const handleClearSelection = () => {\n    console.log('handleClearSelection');\n    setRowSelection(getEmptySelection());\n  };\n\n  const handleRowClick = (...args) => {\n    console.log('handleRowClick', ...args);\n\n    const rowData = { ...args };\n    console.log('rowData:', rowData);\n    console.log('rowData:', rowData[0].id.children);\n\n    const userId = rowData[0].id.children;\n    // console.log('args:', args.id)\n\n    // props.history.push(\"www.google.com\")\n\n    props.history.push(`/user/edit/${userId}`);\n  };\n\n  return (\n    <>\n      {data && (\n        <Section col className=\"bg-white\">\n          <Section gutter={2}>\n            <AddButton\n              onClick={() => props.history.push(`/user/add`)}\n              text=\"Add User\"\n            />\n          </Section>\n\n          <Row spacing={4}>\n            <FlatButton\n              onClick={handleClearSelection}\n              disabled={!selectionSize}\n            >\n              {`Unselect ${selectionSize || ''}`}\n            </FlatButton>\n\n            {selectionSize > 0 && (\n              <>\n                <FlatButton type=\"error\" onClick={handleDelete}>\n                  <Row align=\"center\" spacing={2}>\n                    <Icon svg={BtnTrash} />\n                    <TextField> Delete</TextField>\n                  </Row>\n                </FlatButton>\n              </>\n            )}\n          </Row>\n\n          {console.log('rowSelection: ', rowSelection)}\n          <Table\n            multiselect\n            height={500}\n            data={data}\n            isLoading={isLoading}\n            pageSize={pageSize}\n            rowSelection={rowSelection}\n            onCheckedRowsChange={handleRowCheckChange}\n            onRowClick={handleRowClick}\n            infiniteScrollOptions={{\n              skip,\n              scrollOffset,\n              onLoadMore: handleLoadMore,\n              totalCount: semiInfiniteData.length,\n            }}\n            sortBy={sortBy}\n            onSort={handleSort}\n          >\n            {/* <Column align=\"left\" dataKey=\"id\" width={width} sortable>\n              <HeaderCell id=\"id\">Id</HeaderCell>\n              <Cell />\n            </Column> */}\n            <Column dataKey=\"firstName\" width={width}>\n              <HeaderCell id=\"firstname\">First name</HeaderCell>\n              <Cell />\n            </Column>\n            <Column dataKey=\"lastName\" width={width}>\n              <HeaderCell id=\"lastname\">Last name</HeaderCell>\n              <Cell />\n            </Column>\n            {/* <Column dataKey=\"email\" width={width}>\n              <HeaderCell id=\"email\">Email</HeaderCell>\n              <Cell />\n            </Column> */}\n            {/* <Column dataKey=\"periodStartDate\" width={width} sortable>\n              <HeaderCell id=\"startdate\">Date Cell</HeaderCell>\n              <DateCell />\n            </Column>\n            <Column dataKey=\"periodEndDate\" width={width} sortable>\n              <HeaderCell id=\"enddate\">DateTime Cell</HeaderCell>\n              <DateTimeCell />\n            </Column> */}\n          </Table>\n        </Section>\n      )}\n    </>\n  );\n};\nexport default UserTable;\n","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/User/UserAddScreen.js",["491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506"],"import React, { useEffect, useState } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { NavLink, useParams } from \"react-router-dom\";\nimport Resource from \"@guestyci/agni\";\n\nimport RaisedButton from \"@guestyci/foundation/RaisedButton\";\n\nimport { Form as FinalForm, Field } from \"react-final-form\";\n\nimport Form from \"@guestyci/foundation/Form\";\nimport Input from \"@guestyci/foundation/Input\";\nimport DateRangePicker from \"@guestyci/foundation/DatePicker/DateRangePicker\";\nimport SingleDatePicker from \"@guestyci/foundation/DatePicker/SingleDatePicker\";\nimport NumberPicker from \"@guestyci/foundation/NumberPicker\";\nimport EmailInput from \"@guestyci/foundation/EmailInput\";\nimport Dropdown, { Option } from \"@guestyci/foundation/Dropdown\";\nimport TextField from \"@guestyci/foundation/TextField\";\nimport TextArea from \"@guestyci/foundation/TextArea\";\nimport Col from \"@guestyci/foundation/Layout/Col\";\nimport Section from \"@guestyci/foundation/Layout/Section\";\nimport DurationPicker from \"@guestyci/foundation/DurationPicker\";\nimport TimePicker from \"@guestyci/foundation/TimePicker\";\n\nimport FormField from \"@guestyci/foundation/FormField\";\nimport FormGroup from \"@guestyci/foundation/FormGroup\";\nimport { FormProvider } from \"@guestyci/foundation/enums\";\n// import { email } from '@guestyci/foundation/validators';\nimport createStyles from \"@guestyci/foundation/createStyles\";\n\nimport ErrorBanner from \"@guestyci/foundation/legacy/Table/ErrorBanner\";\n\nimport { useToast } from \"@guestyci/foundation/Toast\";\nimport { add } from \"../../actions/userActions\";\nimport { USER_ADD_RESET } from \"../../constants/userConstants\";\n\nconst useStyles = createStyles((theme) => ({\n  app: {\n    backgroundColor: \"white\",\n  },\n}));\n\nexport default function UserAddScreen(props) {\n  // console.log(\"email\");\n\n  const classes = useStyles();\n  const { addToast } = useToast();\n\n  const { api, env, config } = Resource.create();\n\n  // const { id } = useParams();\n  // console.log(\"id:\", id);\n\n  /// states\n  const [firstName, setFirstName] = useState();\n\n  const [lastName, setLastName] = useState();\n\n  const [email, setEmail] = useState();\n\n  // const [password, setPassword] = useState();\n\n  const errorMessage = \"There was a problem add the user.\";\n\n  const [error, setError] = useState(false);\n\n  ///selectors\n\n  const userAdd = useSelector((state) => state.userAdd);\n\n  const { userInfo, loading, error: errorAdd } = userAdd;\n\n  const accountSignin = useSelector((state) => state.accountSignin);\n  const { accountInfo, loadingAccount, errorAccount } = accountSignin;\n  const { _id: accountId } = accountInfo;\n  console.log(\"accountId:\", accountId);\n  /// effects\n\n  useEffect(() => {\n    if (userInfo) {\n      addToast.success(`user ${firstName} was add successfully`);\n      props.history.push(\"/user/list\");\n      dispatch({ type: USER_ADD_RESET });\n    } else if (errorAdd) {\n      addToast.danger(\"error adding the user\");\n\n      setError(true);\n    }\n  }, [props.history, userInfo, errorAdd]);\n\n  //dispatchers\n\n  const dispatch = useDispatch();\n\n  const onSubmit = (e) => {\n    // e.preventDefault();\n\n    console.log(\"onSubmit\");\n    console.log(firstName);\n    console.log(lastName);\n\n    console.log(email);\n\n    dispatch(add(firstName, lastName, email, accountId));\n\n    // setFirstName(\"\");\n    // setLastName(\"\");\n\n    // setEmail(\"\");\n\n    // console.log(password);\n\n    // async function createUser() {\n    //   try {\n    //     const response = await api.post(`/users`, {\n    //       firstName,\n    //       email,\n    //       // password,\n    //     }); // will go to `${config.MAILER_URL}/users`\n    //     console.log(\"response:\", response);\n    //     // const data = response.data;]\n\n    //     if (response.status === 200) {\n    //       addToast.success(`user ${firstName} was add successfully`);\n    //       props.history.push(\"/\");\n    //     } else {\n    //       console.log(\"response.status: \", response.status);\n    //     }\n    //   } catch (error) {\n    //     console.log(\"error:\", error);\n    //     addToast.danger(\"error adding the user\");\n\n    //     setError(true);\n\n    //     // setTimeout(() => {\n    //     //   setError(false);\n    //     // }, 3000);\n    //   }\n    // }\n    // createUser();\n\n    // props.history.push(\"/\");\n  };\n\n  const closeError = () => {\n    setError(false);\n  };\n\n  return (\n    <Section classfirstName={classes.app} justify=\"center\">\n      <Col spacing={6} span={6}>\n        <TextField variant=\"h2\">\n          Add User:\n          {firstName}\n        </TextField>\n        <FinalForm\n          onSubmit={onSubmit}\n          initialValues={{}}\n          render={({ handleSubmit }) => (\n            <Form\n              title=\"Create User\"\n              onSubmit={handleSubmit}\n              provider={FormProvider.Final}\n              fieldInstance={Field}\n            >\n              <FormGroup>\n                <FormGroup>\n                  <FormField\n                    label=\"User First Name\"\n                    name=\"firstName\"\n                    //   info=\"Drama, Action etc.\"\n                  >\n                    <Input\n                      name=\"firstName\"\n                      value={firstName}\n                      placeholder={firstName}\n                      onChange={(e) => setFirstName(e.target.value)}\n                    />\n                  </FormField>\n                  <FormField\n                    label=\"User First Name\"\n                    name=\"lastName\"\n                    //   info=\"Drama, Action etc.\"\n                  >\n                    <Input\n                      name=\"lastName\"\n                      value={lastName}\n                      placeholder={lastName}\n                      onChange={(e) => setLastName(e.target.value)}\n                    />\n                  </FormField>\n                  <FormField label=\"Email\" name=\"email\">\n                    <EmailInput\n                      name=\"email\"\n                      value={email}\n                      placeholder={email}\n                      // validate={[email]}\n                      onChange={(e) => setEmail(e.target.value)}\n                    />\n                  </FormField>\n\n                  {/* \n                  <FormField label=\"Password\" name=\"password\">\n                    <Input\n                      name=\"password\"\n                      type={password}\n                      value={password}\n                      placeholder={password}\n                      validate={[password]}\n                      onChange={(e) => setPassword(e.target.value)}\n                    />\n                  </FormField> */}\n                </FormGroup>\n                {/* <FormField label=\"Country\" info=\"e.g (US)\" name=\"country\">\n                    <Input />\n                  </FormField>\n                  <FormField label=\"Runtime\" name=\"runtime\">\n                    <Input />\n                  </FormField>\n                  <FormField label=\"Contact\" name=\"contact\">\n                    <Input />\n                  </FormField>\n                  <FormField label=\"Biography\" name=\"bigraphy\" required>\n                    <TextArea />\n                  </FormField>\n                  <FormField label=\"Age\" name=\"age\" required>\n                    <NumberPicker />\n                  </FormField> */}\n                {/* <FormField\n                  label=\"Email\"\n                  name=\"email\"\n                  validate={[email]}\n                  required\n                >\n                  <EmailInput\n                    name=\"email\"\n                    value={email}\n                    placeholder={email}\n                  />\n                </FormField> */}\n                {/* <FormField label=\"Gender\" name=\"gender\" required>\n                    <Dropdown>\n                      {['Male', 'Female'].map((gender) => (\n                        <Option value={gender} key={gender}>\n                          {gender}\n                        </Option>\n                      ))}\n                    </Dropdown>\n                  </FormField>\n                  <FormField\n                    label=\"Single Date Picker\"\n                    name=\"singleDatePicker\"\n                    required\n                  >\n                    <SingleDatePicker />\n                  </FormField>\n                  <FormField\n                    label=\"Date Range Picker\"\n                    name=\"dateRangePicker\"\n                    required\n                  >\n                    <DateRangePicker />\n                  </FormField>\n                  <FormField label=\"Time picker\" name=\"time\" required>\n                    <TimePicker />\n                  </FormField>\n                  <FormField label=\"Duration picker\" name=\"duration\" required>\n                    <DurationPicker />\n                  </FormField> */}\n                <RaisedButton type=\"submit\">Create User</RaisedButton>\n\n                {error && (\n                  <ErrorBanner\n                    show={error}\n                    errorMessage={errorMessage}\n                    onClick={closeError}\n                    actionText=\"Try again\"\n                  />\n                )}\n              </FormGroup>\n\n              <NavLink\n                to=\"/user/signin\"\n                // activeStyle={activeStyle}\n                style={{ marginLeft: \"20px\" }}\n                exact\n              >\n                signin exist user\n              </NavLink>\n            </Form>\n          )}\n        />\n      </Col>\n    </Section>\n  );\n}\n","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/Account/AccountAddScreen.js",["507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522"],"import React, { useEffect, useState } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { NavLink, useParams } from \"react-router-dom\";\nimport Resource from \"@guestyci/agni\";\n\nimport RaisedButton from \"@guestyci/foundation/RaisedButton\";\n\nimport { Form as FinalForm, Field } from \"react-final-form\";\n\nimport Form from \"@guestyci/foundation/Form\";\nimport Input from \"@guestyci/foundation/Input\";\nimport DateRangePicker from \"@guestyci/foundation/DatePicker/DateRangePicker\";\nimport SingleDatePicker from \"@guestyci/foundation/DatePicker/SingleDatePicker\";\nimport NumberPicker from \"@guestyci/foundation/NumberPicker\";\nimport EmailInput from \"@guestyci/foundation/EmailInput\";\nimport Dropdown, { Option } from \"@guestyci/foundation/Dropdown\";\nimport TextField from \"@guestyci/foundation/TextField\";\nimport TextArea from \"@guestyci/foundation/TextArea\";\nimport Col from \"@guestyci/foundation/Layout/Col\";\nimport Section from \"@guestyci/foundation/Layout/Section\";\nimport DurationPicker from \"@guestyci/foundation/DurationPicker\";\nimport TimePicker from \"@guestyci/foundation/TimePicker\";\n\nimport FormField from \"@guestyci/foundation/FormField\";\nimport FormGroup from \"@guestyci/foundation/FormGroup\";\nimport { FormProvider } from \"@guestyci/foundation/enums\";\n// import { email } from '@guestyci/foundation/validators';\nimport createStyles from \"@guestyci/foundation/createStyles\";\n\nimport ErrorBanner from \"@guestyci/foundation/legacy/Table/ErrorBanner\";\n\nimport { useToast } from \"@guestyci/foundation/Toast\";\nimport { register } from \"../../actions/accountActions\";\nimport StatusIndication from \"@guestyci/foundation/StatusIndication\";\nimport Spinner from \"@guestyci/foundation/Spinner\";\nimport { updateUser } from \"../../actions/userActions\";\n\nconst useStyles = createStyles((theme) => ({\n  app: {\n    backgroundColor: \"white\",\n  },\n}));\n\nexport default function AccountAddScreen(props) {\n  console.log(\"email\");\n\n  const classes = useStyles();\n  const { addToast } = useToast();\n\n  const { api, env, config } = Resource.create();\n\n  // const { id } = useParams();\n  // console.log(\"id:\", id);\n\n  /// states\n  const [name, setName] = useState();\n\n  const [email, setEmail] = useState();\n\n  // const [password, setPassword] = useState();\n\n  const errorMessage = \"There was a problem add the account.\";\n\n  const [error, setError] = useState(false);\n\n  ///selectors\n\n  const accountRegister = useSelector((state) => state.accountRegister);\n\n  const { accountInfo, loading, error: errorRegister } = accountRegister;\n\n  const accountSignin = useSelector((state) => state.accountSignin);\n  const {\n    accountInfo: accountInfoSignIn,\n    loading: loadingSignIn,\n    error: errorSignIn,\n  } = accountSignin;\n  // console.log(\"accountSignin:\", accountSignin);\n  let accountId = \"\";\n\n  if (accountInfoSignIn) {\n    accountId = accountInfoSignIn._id;\n  }\n\n  const userSignin = useSelector((state) => state.userSignin);\n  const {\n    userInfo,\n    loading: loadingUserSignIn,\n    error: errorUserSignIn,\n  } = userSignin;\n  console.log(\"userSignin:\", userSignin);\n\n  let userId = \"\";\n  if (userInfo) {\n    userId = userInfo._id;\n    console.log(\"userId:\", userId);\n  }\n\n  /// effects\n\n  useEffect(() => {\n    if (accountInfoSignIn) {\n      addToast.success(`account ${name} was add successfully`);\n      props.history.push(\"/\");\n    } else if (errorRegister) {\n      addToast.danger(\"error adding the account\");\n\n      setError(true);\n    }\n  }, [props.history, accountInfo, accountInfoSignIn]);\n\n  //dispatchers\n\n  const dispatch = useDispatch();\n  let userInfoFirstName = \"\";\n\n  let userInfoEmail = \"\";\n  if (userInfo) {\n    console.log('userInfo:', userInfo)\n    userInfoFirstName = userInfo.firstName;\n    console.log('userInfoFirstName:', userInfoFirstName)\n    userInfoEmail = userInfo.email;\n    console.log('userInfoEmail:', userInfoEmail)\n  }\n\n  const onSubmit = (e) => {\n    // e.preventDefault();\n\n    console.log(\"onSubmit\");\n    // console.log(name);\n    // console.log(email);\n\n    dispatch(register(name, email, userInfoFirstName, userInfoEmail, userId));\n    // dispatch(updateUser({ id, accountId }));\n\n    // console.log(password);\n\n    // async function createAccount() {\n    //   try {\n    //     const response = await api.post(`/accounts`, {\n    //       name,\n    //       email,\n    //       // password,\n    //     }); // will go to `${config.MAILER_URL}/accounts`\n    //     console.log(\"response:\", response);\n    //     // const data = response.data;]\n\n    //     if (response.status === 200) {\n    //       addToast.success(`account ${name} was add successfully`);\n    //       props.history.push(\"/\");\n    //     } else {\n    //       console.log(\"response.status: \", response.status);\n    //     }\n    //   } catch (error) {\n    //     console.log(\"error:\", error);\n    //     addToast.danger(\"error adding the account\");\n\n    //     setError(true);\n\n    //     // setTimeout(() => {\n    //     //   setError(false);\n    //     // }, 3000);\n    //   }\n    // }\n    // createAccount();\n\n    // props.history.push(\"/\");\n  };\n\n  const closeError = () => {\n    setError(false);\n  };\n\n  return (\n    <Section className={classes.app} justify=\"center\">\n      <Col spacing={6} span={6}>\n        {loadingUserSignIn && <Spinner size={80} strokeWidth={6} />}\n        {loadingSignIn && <Spinner size={80} strokeWidth={6} />}\n\n        {errorUserSignIn && (\n          <StatusIndication\n            variant=\"danger\"\n            text=\"User must be sign in to create account\"\n          />\n        )}\n\n        {errorSignIn && (\n          <StatusIndication\n            variant=\"danger\"\n            text=\"error in creating a new account\"\n          />\n        )}\n\n        {userInfo && (\n          <>\n            {\" \"}\n            <TextField variant=\"h2\">\n              Add Account:\n              {name}\n            </TextField>\n            <FinalForm\n              onSubmit={onSubmit}\n              initialValues={{}}\n              render={({ handleSubmit }) => (\n                <Form\n                  title=\"Create Account\"\n                  onSubmit={handleSubmit}\n                  provider={FormProvider.Final}\n                  fieldInstance={Field}\n                >\n                  <FormGroup>\n                    <FormGroup>\n                      <FormField\n                        label=\"Account Name\"\n                        name=\"name\"\n                        //   info=\"Drama, Action etc.\"\n                      >\n                        <Input\n                          name=\"name\"\n                          value={name}\n                          placeholder={name}\n                          onChange={(e) => setName(e.target.value)}\n                        />\n                      </FormField>\n                      <FormField label=\"Email\" name=\"email\">\n                        <EmailInput\n                          name=\"email\"\n                          value={email}\n                          placeholder={email}\n                          // validate={[email]}\n                          onChange={(e) => setEmail(e.target.value)}\n                        />\n                      </FormField>\n\n                      {/* \n                  <FormField label=\"Password\" name=\"password\">\n                    <Input\n                      name=\"password\"\n                      type={password}\n                      value={password}\n                      placeholder={password}\n                      validate={[password]}\n                      onChange={(e) => setPassword(e.target.value)}\n                    />\n                  </FormField> */}\n                    </FormGroup>\n                    {/* <FormField label=\"Country\" info=\"e.g (US)\" name=\"country\">\n                    <Input />\n                  </FormField>\n                  <FormField label=\"Runtime\" name=\"runtime\">\n                    <Input />\n                  </FormField>\n                  <FormField label=\"Contact\" name=\"contact\">\n                    <Input />\n                  </FormField>\n                  <FormField label=\"Biography\" name=\"bigraphy\" required>\n                    <TextArea />\n                  </FormField>\n                  <FormField label=\"Age\" name=\"age\" required>\n                    <NumberPicker />\n                  </FormField> */}\n                    {/* <FormField\n                  label=\"Email\"\n                  name=\"email\"\n                  validate={[email]}\n                  required\n                >\n                  <EmailInput\n                    name=\"email\"\n                    value={email}\n                    placeholder={email}\n                  />\n                </FormField> */}\n                    {/* <FormField label=\"Gender\" name=\"gender\" required>\n                    <Dropdown>\n                      {['Male', 'Female'].map((gender) => (\n                        <Option value={gender} key={gender}>\n                          {gender}\n                        </Option>\n                      ))}\n                    </Dropdown>\n                  </FormField>\n                  <FormField\n                    label=\"Single Date Picker\"\n                    name=\"singleDatePicker\"\n                    required\n                  >\n                    <SingleDatePicker />\n                  </FormField>\n                  <FormField\n                    label=\"Date Range Picker\"\n                    name=\"dateRangePicker\"\n                    required\n                  >\n                    <DateRangePicker />\n                  </FormField>\n                  <FormField label=\"Time picker\" name=\"time\" required>\n                    <TimePicker />\n                  </FormField>\n                  <FormField label=\"Duration picker\" name=\"duration\" required>\n                    <DurationPicker />\n                  </FormField> */}\n                    <RaisedButton type=\"submit\">Create Account</RaisedButton>\n\n                    {error && (\n                      <ErrorBanner\n                        show={error}\n                        errorMessage={errorMessage}\n                        onClick={closeError}\n                        actionText=\"Try again\"\n                      />\n                    )}\n                  </FormGroup>\n\n                  <NavLink\n                    to=\"/account/signin\"\n                    // activeStyle={activeStyle}\n                    style={{ marginLeft: \"20px\" }}\n                    exact\n                  >\n                    signin exist account\n                  </NavLink>\n                </Form>\n              )}\n            />\n          </>\n        )}\n      </Col>\n    </Section>\n  );\n}\n","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/User/UserEditScreen.js",["523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541"],"import React, { useEffect, useState } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { NavLink, useParams } from \"react-router-dom\";\n\nimport Resource from \"@guestyci/agni\";\n\nimport RaisedButton from \"@guestyci/foundation/RaisedButton\";\n\nimport { Form as FinalForm, Field } from \"react-final-form\";\n\nimport Form from \"@guestyci/foundation/Form\";\nimport Input from \"@guestyci/foundation/Input\";\nimport DateRangePicker from \"@guestyci/foundation/DatePicker/DateRangePicker\";\nimport SingleDatePicker from \"@guestyci/foundation/DatePicker/SingleDatePicker\";\nimport NumberPicker from \"@guestyci/foundation/NumberPicker\";\nimport EmailInput from \"@guestyci/foundation/EmailInput\";\nimport Dropdown, { Option } from \"@guestyci/foundation/Dropdown\";\nimport TextField from \"@guestyci/foundation/TextField\";\nimport TextArea from \"@guestyci/foundation/TextArea\";\nimport Col from \"@guestyci/foundation/Layout/Col\";\nimport Section from \"@guestyci/foundation/Layout/Section\";\nimport DurationPicker from \"@guestyci/foundation/DurationPicker\";\nimport TimePicker from \"@guestyci/foundation/TimePicker\";\n\nimport FormField from \"@guestyci/foundation/FormField\";\nimport FormGroup from \"@guestyci/foundation/FormGroup\";\nimport { FormProvider } from \"@guestyci/foundation/enums\";\n// import { email } from \"@guestyci/foundation/validators\";\nimport createStyles from \"@guestyci/foundation/createStyles\";\n\nimport FlatButton from \"@guestyci/foundation/FlatButton\";\nimport { Row } from \"@guestyci/foundation/Layout\";\nimport { ReactComponent as BtnTrash } from \"@guestyci/foundation/icons/BtnTrash.svg\";\nimport Icon from \"@guestyci/foundation/Icon\";\n\nimport { useToast } from \"@guestyci/foundation/Toast\";\nimport { deleteUser, detailsUser, updateUser } from \"../../actions/userActions\";\nimport {\n  USER_DELETE_RESET,\n  USER_DETAILS_RESET,\n  USER_UPDATE_RESET,\n} from \"../../constants/userConstants\";\nimport StatusIndication from '@guestyci/foundation/StatusIndication';\n\n\nconst useStyles = createStyles((theme) => ({\n  app: {\n    backgroundColor: \"white\",\n  },\n}));\n\nexport default function UserEditScreen(props) {\n  const classes = useStyles();\n\n  const { addToast } = useToast();\n\n  const { api, env, config } = Resource.create();\n\n  const { id:userId } = useParams();\n  // console.log(\"id:\", id);\n\n  const [firstName, setFirstName] = useState();\n\n  const [lastName, setLastName] = useState();\n\n  const [email, setEmail] = useState();\n\n  const [error, setError] = useState(false);\n\n  const errorMessage = \"There was a problem edit the user.\";\n\n  // useSelector\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error: errorUserDetails, user } = userDetails;\n\n  const userUpdate = useSelector((state) => state.userUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = userUpdate;\n\n  const userDelete = useSelector((state) => state.userDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = userDelete;\n\n  // useDispatch\n  const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //   console.log(\"useEffect\");\n\n  //   // async function getGuests() {\n  //   //   const response = await api.get(`/users/${id}`); // will go to `${config.MAILER_URL}/users`\n  //   //   console.log('response:', response.data);\n  //   //   const {data} = response;\n\n  //   //   setFirstName(data.firstName);\n  //   //   setLastName(data.lastName);\n  //   //   setEmailAdd(data.email);\n  //   // }\n  //   // getGuests();\n  // }, []);\n\n  //   const handleChange=(e)=>{\n  //       console.log(e.target.value)\n\n  //       setFirstName(e.target.value)\n  //   }\n\n  useEffect(() => {\n    if (successDelete) {\n      dispatch({ type: USER_DELETE_RESET });\n      dispatch({ type: USER_DETAILS_RESET });\n\n      props.history.push(\"/user/list\");\n      addToast.success(`the user ${firstName} was delete`);\n    } else if (errorDelete) {\n      addToast.danger(\"error edit the user\");\n    }\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET });\n      dispatch({ type: USER_DETAILS_RESET });\n\n      props.history.push(\"/user/list\");\n      addToast.success(`the user ${firstName} was edit`);\n    } else if (errorUpdate) {\n      addToast.danger(\"error edit the user\");\n    }\n    if (!user) {\n      dispatch(detailsUser(userId));\n    } else {\n      setFirstName(user.firstName);\n      setLastName(user.lastName);\n      setEmail(user.email);\n    }\n  }, [dispatch, props.history, successUpdate, successDelete, user, userId]);\n\n  const onSubmit = (e) => {\n    // e.preventDefault();\n    // dispatch update user\n    dispatch(updateUser({ userId, firstName, lastName, email }));\n  };\n\n  useEffect(() => {\n    dispatch({ type: USER_DETAILS_RESET });\n  }, []);\n\n  // const onSubmit = (e) => {\n  //   // e.preventDefault();\n\n  //   console.log(\"onSubmit\");\n  //   console.log(firstName);\n  //   console.log(lastName);\n  //   console.log(emailAdd);\n\n  //   async function updateUser() {\n  //     try {\n  //       const response = await api.put(`/users/${id}`, {\n  //         firstName,\n  //         lastName,\n  //         emailAdd,\n  //       }); // will go to `${config.MAILER_URL}/users`\n  //       {\n  //         firstName && addToast.success(`the user ${firstName} was edit`);\n  //       }\n\n  //       console.log(\"response:\", response.data);\n  //       // const data = response.data;\n\n  //       props.history.push(\"/\");\n  //     } catch (error) {\n  //       console.log(\"error:\", error);\n  //       addToast.danger(\"error edit the user\");\n  //     }\n  //   }\n  //   updateUser();\n\n  //   // props.history.push(\"/\");\n  // };\n\n  const handleDelete = async () => {\n    console.log(\"handleDelete\");\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteUser(user._id));\n    }\n  };\n\n  const closeError = () => {\n    setError(false);\n  };\n\n  return (\n    <Section className={classes.app} justify=\"center\">\n      <Col spacing={6} span={6}>\n        <TextField variant=\"h2\">\n          Edit the User:\n          {firstName}\n        </TextField>\n        <FinalForm\n          onSubmit={onSubmit}\n          initialValues={{}}\n          render={({ handleSubmit }) => (\n            <Form\n              title=\"Edit User\"\n              onSubmit={handleSubmit}\n              provider={FormProvider.Final}\n              fieldInstance={Field}\n            >\n              <FormGroup>\n                <FormGroup>\n                  <FormField\n                    label=\"First Name\"\n                    name=\"firstName\"\n                    //   info=\"Drama, Action etc.\"\n                  >\n                    <Input\n                      name=\"firstName\"\n                      value={firstName}\n                      placeholder={firstName}\n                      onChange={(e) => setFirstName(e.target.value)}\n                    />\n                  </FormField>\n                  <FormField label=\"Last Name\" name=\"lastName\">\n                    <Input\n                      name=\"lastName\"\n                      value={lastName}\n                      placeholder={lastName}\n                      onChange={(e) => setLastName(e.target.value)}\n                    />\n                  </FormField>\n\n                  <FormField label=\"Email\" name=\"email\">\n                    <EmailInput\n                      name=\"email\"\n                      value={email}\n                      placeholder={email}\n                      // validate={[email]}\n                      onChange={(e) => setEmail(e.target.value)}\n                    />\n                  </FormField>\n                </FormGroup>\n\n                {/* <FormField label=\"Country\" info=\"e.g (US)\" name=\"country\">\n                    <Input />\n                  </FormField>\n                  <FormField label=\"Runtime\" name=\"runtime\">\n                    <Input />\n                  </FormField>\n                  <FormField label=\"Contact\" name=\"contact\">\n                    <Input />\n                  </FormField>\n                  <FormField label=\"Biography\" name=\"bigraphy\" required>\n                    <TextArea />\n                  </FormField>\n                  <FormField label=\"Age\" name=\"age\" required>\n                    <NumberPicker />\n                  </FormField> */}\n                {/* <FormField\n                  label=\"Email\"\n                  name=\"email\"\n                  validate={[email]}\n                  required\n                >\n                  <EmailInput\n                    name=\"email\"\n                    value={email}\n                    placeholder={email}\n                  />\n                </FormField> */}\n                {/* <FormField label=\"Gender\" name=\"gender\" required>\n                    <Dropdown>\n                      {['Male', 'Female'].map((gender) => (\n                        <Option value={gender} key={gender}>\n                          {gender}\n                        </Option>\n                      ))}\n                    </Dropdown>\n                  </FormField>\n                  <FormField\n                    label=\"Single Date Picker\"\n                    name=\"singleDatePicker\"\n                    required\n                  >\n                    <SingleDatePicker />\n                  </FormField>\n                  <FormField\n                    label=\"Date Range Picker\"\n                    name=\"dateRangePicker\"\n                    required\n                  >\n                    <DateRangePicker />\n                  </FormField>\n                  <FormField label=\"Time picker\" name=\"time\" required>\n                    <TimePicker />\n                  </FormField>\n                  <FormField label=\"Duration picker\" name=\"duration\" required>\n                    <DurationPicker />\n                  </FormField> */}\n                <RaisedButton type=\"submit\">Edit User</RaisedButton>\n\n                <FlatButton type=\"error\" onClick={handleDelete}>\n                  <Row align=\"center\" spacing={2}>\n                    <Icon svg={BtnTrash} />\n                    <TextField> Delete</TextField>\n                  </Row>\n                </FlatButton>\n\n                {/* {error && (\n                  <ErrorBanner\n                    show={error}\n                    errorMessage={errorMessage}\n                    onClick={closeError}\n                    actionText=\"Try again\"\n                  />\n                )} */}\n\n                {errorUserDetails && (\n                  <StatusIndication\n                    variant=\"danger\"\n                    text=\"error getting the info\"\n                  />\n                )}\n\n                <NavLink\n                  to={`/user/info/${userId}`}\n                  // activeStyle={activeStyle}\n                  style={{ marginLeft: \"20px\" }}\n                  exact\n                >\n                  view the user\n                </NavLink>\n              </FormGroup>\n            </Form>\n          )}\n        />\n      </Col>\n    </Section>\n  );\n}\n","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/User/UserRegisterScreen.js",["542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559"],"import React, { useEffect, useState } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { NavLink, useParams } from \"react-router-dom\";\nimport Resource from \"@guestyci/agni\";\n\nimport RaisedButton from \"@guestyci/foundation/RaisedButton\";\n\nimport { Form as FinalForm, Field } from \"react-final-form\";\n\nimport Form from \"@guestyci/foundation/Form\";\nimport Input from \"@guestyci/foundation/Input\";\nimport DateRangePicker from \"@guestyci/foundation/DatePicker/DateRangePicker\";\nimport SingleDatePicker from \"@guestyci/foundation/DatePicker/SingleDatePicker\";\nimport NumberPicker from \"@guestyci/foundation/NumberPicker\";\nimport EmailInput from \"@guestyci/foundation/EmailInput\";\nimport Dropdown, { Option } from \"@guestyci/foundation/Dropdown\";\nimport TextField from \"@guestyci/foundation/TextField\";\nimport TextArea from \"@guestyci/foundation/TextArea\";\nimport Col from \"@guestyci/foundation/Layout/Col\";\nimport Section from \"@guestyci/foundation/Layout/Section\";\nimport DurationPicker from \"@guestyci/foundation/DurationPicker\";\nimport TimePicker from \"@guestyci/foundation/TimePicker\";\n\nimport FormField from \"@guestyci/foundation/FormField\";\nimport FormGroup from \"@guestyci/foundation/FormGroup\";\nimport { FormProvider } from \"@guestyci/foundation/enums\";\n// import { email } from '@guestyci/foundation/validators';\nimport createStyles from \"@guestyci/foundation/createStyles\";\n\nimport ErrorBanner from \"@guestyci/foundation/legacy/Table/ErrorBanner\";\n\nimport { useToast } from \"@guestyci/foundation/Toast\";\nimport { register } from \"../../actions/userActions\";\n\nconst useStyles = createStyles((theme) => ({\n  app: {\n    backgroundColor: \"white\",\n  },\n}));\n\nexport default function UserRegisterScreen(props) {\n  // console.log(\"email\");\n\n  const classes = useStyles();\n  const { addToast } = useToast();\n\n  const { api, env, config } = Resource.create();\n\n  // const { id } = useParams();\n  // console.log(\"id:\", id);\n\n  /// states\n  const [firstName, setFirstName] = useState();\n\n  const [lastName, setLastName] = useState();\n\n  const [email, setEmail] = useState();\n\n  // const [password, setPassword] = useState();\n\n  const errorMessage = \"There was a problem add the user.\";\n\n  const [error, setError] = useState(false);\n\n  ///selectors\n\n  const userRegister = useSelector((state) => state.userRegister);\n\n  const { userInfo, loading, error: errorRegister } = userRegister;\n\n  const userSignin = useSelector((state) => state.userSignin);\n  const {\n    userInfo: userInfoSignIn,\n    loading: loadingSignIn,\n    error: errorSignIn,\n  } = userSignin;\n  console.log(\"userSignin:\", userSignin);\n\n  const accountSignin = useSelector((state) => state.accountSignin);\n  const { accountInfo, loadingAccount, errorAccount } = accountSignin;\n  console.log(\"accountSignin:\", accountSignin);\n  let accountId ;\n  if (accountSignin && accountInfo) {\n    accountId = accountInfo._id;\n  }\n  console.log(\"accountId:\", accountId);\n\n  // const { _id:accountId } = accountInfo;\n  // console.log('accountId:', accountId)\n  /// effects\n\n  useEffect(() => {\n    if (userInfoSignIn) {\n      addToast.success(`user ${firstName} was add successfully`);\n      props.history.push(\"/user/list\");\n    } else if (errorRegister) {\n      addToast.danger(\"error adding the user\");\n\n      setError(true);\n    }\n  }, [props.history, userInfo, userInfoSignIn, errorRegister]);\n\n  //dispatchers\n\n  const dispatch = useDispatch();\n\n  const onSubmit = (e) => {\n    // e.preventDefault();\n\n    console.log(\"onSubmit\");\n    console.log(firstName);\n    console.log(lastName);\n\n    console.log(email);\n\n    dispatch(register(firstName, lastName, email, accountId));\n\n    // setFirstName(\"\");\n    // setLastName(\"\");\n\n    // setEmail(\"\");\n\n    // console.log(password);\n\n    // async function createUser() {\n    //   try {\n    //     const response = await api.post(`/users`, {\n    //       firstName,\n    //       email,\n    //       // password,\n    //     }); // will go to `${config.MAILER_URL}/users`\n    //     console.log(\"response:\", response);\n    //     // const data = response.data;]\n\n    //     if (response.status === 200) {\n    //       addToast.success(`user ${firstName} was add successfully`);\n    //       props.history.push(\"/\");\n    //     } else {\n    //       console.log(\"response.status: \", response.status);\n    //     }\n    //   } catch (error) {\n    //     console.log(\"error:\", error);\n    //     addToast.danger(\"error adding the user\");\n\n    //     setError(true);\n\n    //     // setTimeout(() => {\n    //     //   setError(false);\n    //     // }, 3000);\n    //   }\n    // }\n    // createUser();\n\n    // props.history.push(\"/\");\n  };\n\n  const closeError = () => {\n    setError(false);\n  };\n\n  return (\n    <Section classfirstName={classes.app} justify=\"center\">\n      <Col spacing={6} span={6}>\n        <TextField variant=\"h2\">\n          Add User:\n          {firstName}\n        </TextField>\n        <FinalForm\n          onSubmit={onSubmit}\n          initialValues={{}}\n          render={({ handleSubmit }) => (\n            <Form\n              title=\"Create User\"\n              onSubmit={handleSubmit}\n              provider={FormProvider.Final}\n              fieldInstance={Field}\n            >\n              <FormGroup>\n                <FormGroup>\n                  <FormField\n                    label=\"User First Name\"\n                    name=\"firstName\"\n                    //   info=\"Drama, Action etc.\"\n                  >\n                    <Input\n                      name=\"firstName\"\n                      value={firstName}\n                      placeholder={firstName}\n                      onChange={(e) => setFirstName(e.target.value)}\n                    />\n                  </FormField>\n                  <FormField\n                    label=\"User Last Name\"\n                    name=\"lastName\"\n                    //   info=\"Drama, Action etc.\"\n                  >\n                    <Input\n                      name=\"lastName\"\n                      value={lastName}\n                      placeholder={lastName}\n                      onChange={(e) => setLastName(e.target.value)}\n                    />\n                  </FormField>\n                  <FormField label=\"Email\" name=\"email\">\n                    <EmailInput\n                      name=\"email\"\n                      value={email}\n                      placeholder={email}\n                      // validate={[email]}\n                      onChange={(e) => setEmail(e.target.value)}\n                    />\n                  </FormField>\n\n                  {/* \n                  <FormField label=\"Password\" name=\"password\">\n                    <Input\n                      name=\"password\"\n                      type={password}\n                      value={password}\n                      placeholder={password}\n                      validate={[password]}\n                      onChange={(e) => setPassword(e.target.value)}\n                    />\n                  </FormField> */}\n                </FormGroup>\n                {/* <FormField label=\"Country\" info=\"e.g (US)\" name=\"country\">\n                    <Input />\n                  </FormField>\n                  <FormField label=\"Runtime\" name=\"runtime\">\n                    <Input />\n                  </FormField>\n                  <FormField label=\"Contact\" name=\"contact\">\n                    <Input />\n                  </FormField>\n                  <FormField label=\"Biography\" name=\"bigraphy\" required>\n                    <TextArea />\n                  </FormField>\n                  <FormField label=\"Age\" name=\"age\" required>\n                    <NumberPicker />\n                  </FormField> */}\n                {/* <FormField\n                  label=\"Email\"\n                  name=\"email\"\n                  validate={[email]}\n                  required\n                >\n                  <EmailInput\n                    name=\"email\"\n                    value={email}\n                    placeholder={email}\n                  />\n                </FormField> */}\n                {/* <FormField label=\"Gender\" name=\"gender\" required>\n                    <Dropdown>\n                      {['Male', 'Female'].map((gender) => (\n                        <Option value={gender} key={gender}>\n                          {gender}\n                        </Option>\n                      ))}\n                    </Dropdown>\n                  </FormField>\n                  <FormField\n                    label=\"Single Date Picker\"\n                    name=\"singleDatePicker\"\n                    required\n                  >\n                    <SingleDatePicker />\n                  </FormField>\n                  <FormField\n                    label=\"Date Range Picker\"\n                    name=\"dateRangePicker\"\n                    required\n                  >\n                    <DateRangePicker />\n                  </FormField>\n                  <FormField label=\"Time picker\" name=\"time\" required>\n                    <TimePicker />\n                  </FormField>\n                  <FormField label=\"Duration picker\" name=\"duration\" required>\n                    <DurationPicker />\n                  </FormField> */}\n                <RaisedButton type=\"submit\">Create User</RaisedButton>\n\n                {error && (\n                  <ErrorBanner\n                    show={error}\n                    errorMessage={errorMessage}\n                    onClick={closeError}\n                    actionText=\"Try again\"\n                  />\n                )}\n              </FormGroup>\n\n              <NavLink\n                to=\"/user/signin\"\n                // activeStyle={activeStyle}\n                style={{ marginLeft: \"20px\" }}\n                exact\n              >\n                signin exist user\n              </NavLink>\n            </Form>\n          )}\n        />\n      </Col>\n    </Section>\n  );\n}\n","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/Account/AccountSigninScreen.js",["560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575"],"import React, { useEffect, useState } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { NavLink, useParams } from \"react-router-dom\";\nimport Resource from \"@guestyci/agni\";\n\nimport RaisedButton from \"@guestyci/foundation/RaisedButton\";\n\nimport { Form as FinalForm, Field } from \"react-final-form\";\n\nimport Form from \"@guestyci/foundation/Form\";\nimport Input from \"@guestyci/foundation/Input\";\nimport DateRangePicker from \"@guestyci/foundation/DatePicker/DateRangePicker\";\nimport SingleDatePicker from \"@guestyci/foundation/DatePicker/SingleDatePicker\";\nimport NumberPicker from \"@guestyci/foundation/NumberPicker\";\nimport EmailInput from \"@guestyci/foundation/EmailInput\";\nimport Dropdown, { Option } from \"@guestyci/foundation/Dropdown\";\nimport TextField from \"@guestyci/foundation/TextField\";\nimport TextArea from \"@guestyci/foundation/TextArea\";\nimport Col from \"@guestyci/foundation/Layout/Col\";\nimport Section from \"@guestyci/foundation/Layout/Section\";\nimport DurationPicker from \"@guestyci/foundation/DurationPicker\";\nimport TimePicker from \"@guestyci/foundation/TimePicker\";\n\nimport FormField from \"@guestyci/foundation/FormField\";\nimport FormGroup from \"@guestyci/foundation/FormGroup\";\nimport { FormProvider } from \"@guestyci/foundation/enums\";\n// import { email } from '@guestyci/foundation/validators';\nimport createStyles from \"@guestyci/foundation/createStyles\";\n\nimport ErrorBanner from \"@guestyci/foundation/legacy/Table/ErrorBanner\";\n\nimport { useToast } from \"@guestyci/foundation/Toast\";\nimport { signin } from \"../../actions/accountActions\";\n\nconst useStyles = createStyles((theme) => ({\n  app: {\n    backgroundColor: \"white\",\n  },\n}));\n\nexport default function AccountSigninScreen(props) {\n  // console.log(\"email\");\n\n  const classes = useStyles();\n  const { addToast } = useToast();\n\n  const { api, env, config } = Resource.create();\n\n  // const { id } = useParams();\n  // console.log(\"id:\", id);\n\n  /// states\n  const [name, setName] = useState();\n\n  const [email, setEmail] = useState();\n\n  // const [password, setPassword] = useState();\n\n  const errorMessage = \"There was a problem signin the user.\";\n\n  const [error, setError] = useState(false);\n\n  ///selectors\n\n  const accountSignin = useSelector((state) => state.accountSignin);\n  const {\n    accountInfo: accountInfoSignIn,\n    loading: loadingSignIn,\n    error: errorSignIn,\n  } = accountSignin;\n  // console.log(\"accountSignin:\", accountSignin);\n\n  /// effects\n\n  useEffect(() => {\n    if (accountInfoSignIn) {\n      addToast.success(`account ${name} was add successfully`);\n      props.history.push(\"/\");\n    } else if (errorSignIn) {\n      addToast.danger(\"error signin the user\");\n\n      setError(true);\n    }\n  }, [props.history, accountInfoSignIn]);\n\n  //dispatchers\n\n  const dispatch = useDispatch();\n\n  const onSubmit = (e) => {\n    // e.preventDefault();\n\n    console.log(\"onSubmit\");\n    // console.log(name);\n    // console.log(email);\n\n    dispatch(signin(email));\n\n    // console.log(password);\n\n    // async function createAccount() {\n    //   try {\n    //     const response = await api.post(`/users`, {\n    //       name,\n    //       email,\n    //       // password,\n    //     }); // will go to `${config.MAILER_URL}/users`\n    //     console.log(\"response:\", response);\n    //     // const data = response.data;]\n\n    //     if (response.status === 200) {\n    //       addToast.success(`user ${name} was add successfully`);\n    //       props.history.push(\"/\");\n    //     } else {\n    //       console.log(\"response.status: \", response.status);\n    //     }\n    //   } catch (error) {\n    //     console.log(\"error:\", error);\n    //     addToast.danger(\"error adding the user\");\n\n    //     setError(true);\n\n    //     // setTimeout(() => {\n    //     //   setError(false);\n    //     // }, 3000);\n    //   }\n    // }\n    // createAccount();\n\n    // props.history.push(\"/\");\n  };\n\n  const closeError = () => {\n    setError(false);\n  };\n\n  return (\n    <Section className={classes.app} justify=\"center\">\n      <Col spacing={6} span={6}>\n        <TextField variant=\"h2\">\n          Signin Account:\n          {name}\n        </TextField>\n        <FinalForm\n          onSubmit={onSubmit}\n          initialValues={{}}\n          render={({ handleSubmit }) => (\n            <Form\n              title=\"Sign Account\"\n              onSubmit={handleSubmit}\n              provider={FormProvider.Final}\n              fieldInstance={Field}\n            >\n              <FormGroup>\n                <FormGroup>\n                  {/* <FormField\n                    label=\"Account Name\"\n                    name=\"name\"\n                    //   info=\"Drama, Action etc.\"\n                  >\n                    <Input\n                      name=\"name\"\n                      value={name}\n                      placeholder={name}\n                      onChange={(e) => setName(e.target.value)}\n                    />\n                  </FormField> */}\n                  <FormField label=\"Email\" name=\"email\">\n                    <EmailInput\n                      name=\"email\"\n                      value={email}\n                      placeholder={email}\n                      // validate={[email]}\n                      onChange={(e) => setEmail(e.target.value)}\n                    />\n                  </FormField>\n\n                  {/* \n                  <FormField label=\"Password\" name=\"password\">\n                    <Input\n                      name=\"password\"\n                      type={password}\n                      value={password}\n                      placeholder={password}\n                      validate={[password]}\n                      onChange={(e) => setPassword(e.target.value)}\n                    />\n                  </FormField> */}\n                </FormGroup>\n                {/* <FormField label=\"Country\" info=\"e.g (US)\" name=\"country\">\n                    <Input />\n                  </FormField>\n                  <FormField label=\"Runtime\" name=\"runtime\">\n                    <Input />\n                  </FormField>\n                  <FormField label=\"Contact\" name=\"contact\">\n                    <Input />\n                  </FormField>\n                  <FormField label=\"Biography\" name=\"bigraphy\" required>\n                    <TextArea />\n                  </FormField>\n                  <FormField label=\"Age\" name=\"age\" required>\n                    <NumberPicker />\n                  </FormField> */}\n                {/* <FormField\n                  label=\"Email\"\n                  name=\"email\"\n                  validate={[email]}\n                  required\n                >\n                  <EmailInput\n                    name=\"email\"\n                    value={email}\n                    placeholder={email}\n                  />\n                </FormField> */}\n                {/* <FormField label=\"Gender\" name=\"gender\" required>\n                    <Dropdown>\n                      {['Male', 'Female'].map((gender) => (\n                        <Option value={gender} key={gender}>\n                          {gender}\n                        </Option>\n                      ))}\n                    </Dropdown>\n                  </FormField>\n                  <FormField\n                    label=\"Single Date Picker\"\n                    name=\"singleDatePicker\"\n                    required\n                  >\n                    <SingleDatePicker />\n                  </FormField>\n                  <FormField\n                    label=\"Date Range Picker\"\n                    name=\"dateRangePicker\"\n                    required\n                  >\n                    <DateRangePicker />\n                  </FormField>\n                  <FormField label=\"Time picker\" name=\"time\" required>\n                    <TimePicker />\n                  </FormField>\n                  <FormField label=\"Duration picker\" name=\"duration\" required>\n                    <DurationPicker />\n                  </FormField> */}\n                <RaisedButton type=\"submit\">Signin Account</RaisedButton>\n\n                {errorSignIn && (\n                  <ErrorBanner\n                    show={error}\n                    errorMessage={errorMessage}\n                    onClick={closeError}\n                    actionText=\"Try again\"\n                  />\n                )}\n              </FormGroup>\n\n              <NavLink\n                to=\"/account/register\"\n                // activeStyle={activeStyle}\n                style={{ marginLeft: \"20px\" }}\n                exact\n              >\n                add new account\n              </NavLink>\n            </Form>\n          )}\n        />\n      </Col>\n    </Section>\n  );\n}\n","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/User/UserSigninScreen.js",["576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594"],"import React, { useEffect, useState } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { NavLink, useParams } from \"react-router-dom\";\nimport Resource from \"@guestyci/agni\";\n\nimport RaisedButton from \"@guestyci/foundation/RaisedButton\";\n\nimport { Form as FinalForm, Field } from \"react-final-form\";\n\nimport Form from \"@guestyci/foundation/Form\";\nimport Input from \"@guestyci/foundation/Input\";\nimport DateRangePicker from \"@guestyci/foundation/DatePicker/DateRangePicker\";\nimport SingleDatePicker from \"@guestyci/foundation/DatePicker/SingleDatePicker\";\nimport NumberPicker from \"@guestyci/foundation/NumberPicker\";\nimport EmailInput from \"@guestyci/foundation/EmailInput\";\nimport Dropdown, { Option } from \"@guestyci/foundation/Dropdown\";\nimport TextField from \"@guestyci/foundation/TextField\";\nimport TextArea from \"@guestyci/foundation/TextArea\";\nimport Col from \"@guestyci/foundation/Layout/Col\";\nimport Section from \"@guestyci/foundation/Layout/Section\";\nimport DurationPicker from \"@guestyci/foundation/DurationPicker\";\nimport TimePicker from \"@guestyci/foundation/TimePicker\";\n\nimport FormField from \"@guestyci/foundation/FormField\";\nimport FormGroup from \"@guestyci/foundation/FormGroup\";\nimport { FormProvider } from \"@guestyci/foundation/enums\";\n// import { email } from '@guestyci/foundation/validators';\nimport createStyles from \"@guestyci/foundation/createStyles\";\n\nimport ErrorBanner from \"@guestyci/foundation/legacy/Table/ErrorBanner\";\n\nimport { useToast } from \"@guestyci/foundation/Toast\";\nimport { signin } from \"../../actions/userActions\";\n\nconst useStyles = createStyles((theme) => ({\n  app: {\n    backgroundColor: \"white\",\n  },\n}));\n\nexport default function UserSigninScreen(props) {\n  console.log(\"email\");\n\n  const classes = useStyles();\n  const { addToast } = useToast();\n\n  const { api, env, config } = Resource.create();\n\n  // const { id } = useParams();\n  // console.log(\"id:\", id);\n\n  /// states\n  const [firstName, setFirstName] = useState();\n\n  const [lastName, setLastName] = useState();\n\n  const [email, setEmail] = useState();\n\n  // const [password, setPassword] = useState();\n\n  const errorMessage = \"There was a problem signin the user.\";\n\n  const [error, setError] = useState(false);\n\n  ///selectors\n\n  const userSignin = useSelector((state) => state.userSignin);\n  const {\n    userInfo: userInfoSignIn,\n    loading: loadingSignIn,\n    error: errorSignIn,\n  } = userSignin;\n  // console.log(\"userSignin:\", userSignin);\n\n  const accountSignin = useSelector((state) => state.accountSignin);\n  const { accountInfo } = accountSignin;\n\n  /// effects\n\n  useEffect(() => {\n    if (userInfoSignIn) {\n      addToast.success(`you sign in successfully`);\n      props.history.push(\"/\");\n    } else if (errorSignIn) {\n      addToast.danger(\"error signin\");\n\n      setError(true);\n    }\n  }, [props.history, userInfoSignIn, errorSignIn]);\n\n  //dispatchers\n\n  const dispatch = useDispatch();\n\n  const onSubmit = (e) => {\n    // e.preventDefault();\n    let accountId;\n    if (accountInfo) {\n      accountId = accountInfo._id;\n    } else {\n      accountId = \"\";\n    }\n    console.log(\"onSubmit\");\n\n    dispatch(signin(email, accountId));\n\n    // console.log(password);\n\n    // async function createUser() {\n    //   try {\n    //     const response = await api.post(`/users`, {\n    //       name,\n    //       email,\n    //       // password,\n    //     }); // will go to `${config.MAILER_URL}/users`\n    //     console.log(\"response:\", response);\n    //     // const data = response.data;]\n\n    //     if (response.status === 200) {\n    //       addToast.success(`user ${name} was add successfully`);\n    //       props.history.push(\"/\");\n    //     } else {\n    //       console.log(\"response.status: \", response.status);\n    //     }\n    //   } catch (error) {\n    //     console.log(\"error:\", error);\n    //     addToast.danger(\"error adding the user\");\n\n    //     setError(true);\n\n    //     // setTimeout(() => {\n    //     //   setError(false);\n    //     // }, 3000);\n    //   }\n    // }\n    // createUser();\n\n    // props.history.push(\"/\");\n  };\n\n  const closeError = () => {\n    setError(false);\n  };\n\n  return (\n    <Section className={classes.app} justify=\"center\">\n      <Col spacing={6} span={6}>\n        <TextField variant=\"h2\">Signin User </TextField>\n        <FinalForm\n          onSubmit={onSubmit}\n          initialValues={{}}\n          render={({ handleSubmit }) => (\n            <Form\n              title=\"Sign User\"\n              onSubmit={handleSubmit}\n              provider={FormProvider.Final}\n              fieldInstance={Field}\n            >\n              <FormGroup>\n                <FormGroup>\n                  {/* <FormField\n                    label=\"User Name\"\n                    name=\"name\"\n                    //   info=\"Drama, Action etc.\"\n                  >\n                    <Input\n                      name=\"name\"\n                      value={name}\n                      placeholder={name}\n                      onChange={(e) => setName(e.target.value)}\n                    />\n                  </FormField> */}\n                  <FormField label=\"Email\" name=\"email\">\n                    <EmailInput\n                      name=\"email\"\n                      value={email}\n                      placeholder={email}\n                      // validate={[email]}\n                      onChange={(e) => setEmail(e.target.value)}\n                    />\n                  </FormField>\n\n                  {/* \n                  <FormField label=\"Password\" name=\"password\">\n                    <Input\n                      name=\"password\"\n                      type={password}\n                      value={password}\n                      placeholder={password}\n                      validate={[password]}\n                      onChange={(e) => setPassword(e.target.value)}\n                    />\n                  </FormField> */}\n                </FormGroup>\n                {/* <FormField label=\"Country\" info=\"e.g (US)\" name=\"country\">\n                    <Input />\n                  </FormField>\n                  <FormField label=\"Runtime\" name=\"runtime\">\n                    <Input />\n                  </FormField>\n                  <FormField label=\"Contact\" name=\"contact\">\n                    <Input />\n                  </FormField>\n                  <FormField label=\"Biography\" name=\"bigraphy\" required>\n                    <TextArea />\n                  </FormField>\n                  <FormField label=\"Age\" name=\"age\" required>\n                    <NumberPicker />\n                  </FormField> */}\n                {/* <FormField\n                  label=\"Email\"\n                  name=\"email\"\n                  validate={[email]}\n                  required\n                >\n                  <EmailInput\n                    name=\"email\"\n                    value={email}\n                    placeholder={email}\n                  />\n                </FormField> */}\n                {/* <FormField label=\"Gender\" name=\"gender\" required>\n                    <Dropdown>\n                      {['Male', 'Female'].map((gender) => (\n                        <Option value={gender} key={gender}>\n                          {gender}\n                        </Option>\n                      ))}\n                    </Dropdown>\n                  </FormField>\n                  <FormField\n                    label=\"Single Date Picker\"\n                    name=\"singleDatePicker\"\n                    required\n                  >\n                    <SingleDatePicker />\n                  </FormField>\n                  <FormField\n                    label=\"Date Range Picker\"\n                    name=\"dateRangePicker\"\n                    required\n                  >\n                    <DateRangePicker />\n                  </FormField>\n                  <FormField label=\"Time picker\" name=\"time\" required>\n                    <TimePicker />\n                  </FormField>\n                  <FormField label=\"Duration picker\" name=\"duration\" required>\n                    <DurationPicker />\n                  </FormField> */}\n                <RaisedButton type=\"submit\">Signin User</RaisedButton>\n\n                {errorSignIn && (\n                  <ErrorBanner\n                    show={error}\n                    errorMessage={errorMessage}\n                    onClick={closeError}\n                    actionText=\"Try again\"\n                  />\n                )}\n              </FormGroup>\n\n              <NavLink\n                to=\"/user/register\"\n                // activeStyle={activeStyle}\n                style={{ marginLeft: \"20px\" }}\n                exact\n              >\n                register\n              </NavLink>\n            </Form>\n          )}\n        />\n      </Col>\n    </Section>\n  );\n}\n","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/Blog/BlogAddScreen.js",["595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613"],"import React, { useEffect, useState } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { NavLink, useParams } from \"react-router-dom\";\nimport Resource from \"@guestyci/agni\";\n\nimport RaisedButton from \"@guestyci/foundation/RaisedButton\";\n\nimport { Form as FinalForm, Field } from \"react-final-form\";\n\nimport Form from \"@guestyci/foundation/Form\";\nimport Input from \"@guestyci/foundation/Input\";\nimport DateRangePicker from \"@guestyci/foundation/DatePicker/DateRangePicker\";\nimport SingleDatePicker from \"@guestyci/foundation/DatePicker/SingleDatePicker\";\nimport NumberPicker from \"@guestyci/foundation/NumberPicker\";\nimport EmailInput from \"@guestyci/foundation/EmailInput\";\nimport Dropdown, { Option } from \"@guestyci/foundation/Dropdown\";\nimport TextField from \"@guestyci/foundation/TextField\";\nimport TextArea from \"@guestyci/foundation/TextArea\";\nimport Col from \"@guestyci/foundation/Layout/Col\";\nimport Section from \"@guestyci/foundation/Layout/Section\";\nimport DurationPicker from \"@guestyci/foundation/DurationPicker\";\nimport TimePicker from \"@guestyci/foundation/TimePicker\";\n\nimport FormField from \"@guestyci/foundation/FormField\";\nimport FormGroup from \"@guestyci/foundation/FormGroup\";\nimport { FormProvider } from \"@guestyci/foundation/enums\";\n// import { email } from '@guestyci/foundation/validators';\nimport createStyles from \"@guestyci/foundation/createStyles\";\n\nimport ErrorBanner from \"@guestyci/foundation/legacy/Table/ErrorBanner\";\n\nimport { useToast } from \"@guestyci/foundation/Toast\";\nimport { add } from \"../../actions/blogActions\";\nimport { BLOG_ADD_RESET } from \"../../constants/blogConstants\";\n\nconst useStyles = createStyles((theme) => ({\n  app: {\n    backgroundColor: \"white\",\n  },\n}));\n\nexport default function BlogAddScreen(props) {\n  // console.log(\"email\");\n\n  const classes = useStyles();\n  const { addToast } = useToast();\n\n  const { api, env, config } = Resource.create();\n\n  // const { id } = useParams();\n  // console.log(\"id:\", id);\n\n  /// states\n\n  const [title, setTitle] = useState();\n\n  const errorMessage = \"There was a problem add the blog.\";\n\n  const [error, setError] = useState(false);\n\n  ///selectors\n\n  const blogAdd = useSelector((state) => state.blogAdd);\n\n  const { blogInfo, loading, error: errorAdd } = blogAdd;\n\n  const userSignin = useSelector((state) => state.userSignin);\n  const { userInfo, loadingUser, errorUser } = userSignin;\n  const { _id: userId } = userInfo;\n  console.log(\"userId:\", userId);\n\n\n  const accountSignin = useSelector((state) => state.accountSignin);\n  const { accountInfo, loadingAccount, errorAccount } = accountSignin;\n  const { _id: accountId } = accountInfo;\n  console.log(\"accountId:\", accountId);\n  /// effects\n\n  useEffect(() => {\n    if (blogInfo) {\n      addToast.success(`blog ${title} was add successfully`);\n      props.history.push(\"/blog/list\");\n      dispatch({ type: BLOG_ADD_RESET });\n    } else if (errorAdd) {\n      addToast.danger(\"error adding the blog\");\n\n      setError(true);\n    }\n  }, [props.history, blogInfo, errorAdd]);\n\n  //dispatchers\n\n  const dispatch = useDispatch();\n\n  const onSubmit = (e) => {\n    // e.preventDefault();\n\n    console.log(\"onSubmit\");\n    console.log(title);\n\n    dispatch(add(title, userId,accountId));\n\n    // setTitle(\"\");\n    // setLastName(\"\");\n\n    // setEmail(\"\");\n\n    // console.log(password);\n\n    // async function createBlog() {\n    //   try {\n    //     const response = await api.post(`/blogs`, {\n    //       title,\n    //       email,\n    //       // password,\n    //     }); // will go to `${config.MAILER_URL}/blogs`\n    //     console.log(\"response:\", response);\n    //     // const data = response.data;]\n\n    //     if (response.status === 200) {\n    //       addToast.success(`blog ${title} was add successfully`);\n    //       props.history.push(\"/\");\n    //     } else {\n    //       console.log(\"response.status: \", response.status);\n    //     }\n    //   } catch (error) {\n    //     console.log(\"error:\", error);\n    //     addToast.danger(\"error adding the blog\");\n\n    //     setError(true);\n\n    //     // setTimeout(() => {\n    //     //   setError(false);\n    //     // }, 3000);\n    //   }\n    // }\n    // createBlog();\n\n    // props.history.push(\"/\");\n  };\n\n  const closeError = () => {\n    setError(false);\n  };\n\n  return (\n    <Section className={classes.app} justify=\"center\">\n      <Col spacing={6} span={6}>\n        <TextField variant=\"h2\">\n          Add Blog:\n          {title}\n        </TextField>\n        <FinalForm\n          onSubmit={onSubmit}\n          initialValues={{}}\n          render={({ handleSubmit }) => (\n            <Form\n              title=\"Create Blog\"\n              onSubmit={handleSubmit}\n              provider={FormProvider.Final}\n              fieldInstance={Field}\n            >\n              <FormGroup>\n                <FormGroup>\n                  <FormField\n                    label=\"Blog Title\"\n                    name=\"title\"\n                    //   info=\"Drama, Action etc.\"\n                  >\n                    <Input\n                      name=\"title\"\n                      value={title}\n                      placeholder={title}\n                      onChange={(e) => setTitle(e.target.value)}\n                    />\n                  </FormField>\n                </FormGroup>\n\n                <RaisedButton type=\"submit\">Create Blog</RaisedButton>\n\n                {error && (\n                  <ErrorBanner\n                    show={error}\n                    errorMessage={errorMessage}\n                    onClick={closeError}\n                    actionText=\"Try again\"\n                  />\n                )}\n              </FormGroup>\n\n              <NavLink\n                to=\"/blog/list\"\n                // activeStyle={activeStyle}\n                style={{ marginLeft: \"20px\" }}\n                exact\n              >\n                back to blog list\n              </NavLink>\n            </Form>\n          )}\n        />\n      </Col>\n    </Section>\n  );\n}\n","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/components/NavBar.js",["614","615"],"import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport createStyles from \"@guestyci/foundation/createStyles\";\n\nimport Section from \"@guestyci/foundation/Layout/Section\";\n\nimport { Tabs, Tab } from \"@guestyci/history/NavTabs\";\nimport { NavLink } from \"react-router-dom\";\nimport { signout } from \"../actions/accountActions\";\nimport { signoutUser } from \"../actions/userActions\";\n\nconst useStyles = createStyles(\n  (theme) => ({\n    root: {\n      backgroundColor: theme.palette.background.white,\n      padding: `0 ${theme.spacer(7)}px`,\n      height: 30,\n      minHeight: 30,\n      boxShadow: \"0 0 10px 0 rgba(0, 0, 0, 0.2)\",\n      zIndex: 1,\n    },\n    fade: {\n      position: \"relative\",\n      top: -2,\n    },\n  }),\n  { name: \"NavBar\" }\n);\n\nconst NavBar = () => {\n  // const accountSignin = useSelector((state) => state.accountSignin);\n  // const {\n  //   accountInfo: accountInfoSignIn,\n  //   loading: loadingSignIn,\n  //   error: errorSignIn,\n  // } = accountSignin;\n\n  const accountSignin = useSelector((state) => state.accountSignin);\n  const { accountInfo } = accountSignin;\n  // console.log('accountInfo:', accountInfo)\n\n  const userSignin = useSelector((state) => state.userSignin);\n  const { userInfo } = userSignin;\n\n  const dispatch = useDispatch();\n\n  const classes = useStyles();\n\n  const activeStyle = {\n    fontWeight: \"bold\",\n    color: \"red\",\n    textDecoration: \"none\",\n  };\n  return (\n    <Section className={classes.root}>\n      <NavLink to=\"/\" activeStyle={activeStyle} exact>\n        Home\n      </NavLink>\n\n      {accountInfo && (\n        <NavLink\n          style={{ marginLeft: \"20px\" }}\n          to={`/account/info/${accountInfo._id}`}\n          activeStyle={activeStyle}\n          exact\n        >\n          account: {accountInfo.name}\n        </NavLink>\n      )}\n\n      {accountInfo && (\n        <>\n          <div\n            onClick={() => dispatch(signout())}\n            activeStyle={activeStyle}\n            style={{ marginLeft: \"20px\" }}\n            exact\n          >\n            sign out account\n          </div>\n        </>\n      )}\n\n      {userInfo && !accountInfo && (\n        <NavLink\n          to=\"/account/signin\"\n          activeStyle={activeStyle}\n          style={{ marginLeft: \"20px\" }}\n          exact\n        >\n          sign in account\n        </NavLink>\n      )}\n\n      {userInfo ? (\n        <>\n          <NavLink\n            style={{ marginLeft: \"20px\" }}\n            to={`/user/info/${userInfo._id}`}\n            activeStyle={activeStyle}\n            exact\n          >\n            user:{userInfo.firstName}\n          </NavLink>\n          <div\n            onClick={() => dispatch(signoutUser())}\n            activeStyle={activeStyle}\n            style={{ marginLeft: \"20px\" }}\n            exact\n          >\n            sign out user\n          </div>\n        </>\n      ) : (\n        <NavLink\n          to=\"/user/signin\"\n          activeStyle={activeStyle}\n          style={{ marginLeft: \"20px\" }}\n          exact\n        >\n          signin user\n        </NavLink>\n      )}\n\n      {accountInfo && userInfo && (\n        <>\n          {\" \"}\n          <NavLink\n            to=\"/user/list\"\n            activeStyle={activeStyle}\n            style={{ marginLeft: \"20px\" }}\n            exact\n          >\n            User List\n          </NavLink>\n          <NavLink\n            to=\"/blog/list\"\n            activeStyle={activeStyle}\n            style={{ marginLeft: \"20px\" }}\n            exact\n          >\n            Blog List\n          </NavLink>\n        </>\n      )}\n      {/* <NavLink\n        to=\"/blog/list\"\n        activeStyle={activeStyle}\n        style={{ marginLeft: \"20px\" }}\n        exact\n      >\n        Account Blogs\n      </NavLink> */}\n\n      <NavLink\n        to=\"/preprod/table\"\n        activeStyle={activeStyle}\n        style={{ marginLeft: \"20px\" }}\n        exact\n      >\n        Prepord Table\n      </NavLink>\n\n      {/* <Tabs\n          noAnimate\n          noBorderBottom\n          exact={false}\n        >\n            <Tab\n              to=\"/\"\n              value={{path: '/', label: 'usersTable', src: '/'}}\n              key={`/`}\n            >\n\n              \n        users Table\n            </Tab>\n            <Tab\n              to={\"/user/add\"}\n              value={{path: '/user/add', label: 'userAdd', src: '/user/add'}}\n              key={`/user/add`}\n            >\n        Add New User\n            </Tab>     \n       \n        </Tabs>\n    */}\n    </Section>\n  );\n};\n\nexport default NavBar;\n","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/User/UserListScreen/UserListScreen.js",["616","617","618","619","620","621","622","623","624","625","626","627","628","629","630"],"import React, { useState, useEffect, useCallback } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteUser, listUsers } from \"../../../actions/userActions\";\nimport { USER_DETAILS_RESET } from \"../../../constants/userConstants\";\n\nimport Section from \"@guestyci/foundation/legacy/Section\";\nimport AddButton from \"@guestyci/foundation/AddButton\";\n\nimport Table, { Column } from \"@guestyci/foundation/legacy/Table\";\nimport {\n  getEmptySelection,\n  getSelectionOnAction,\n} from \"@guestyci/foundation/legacy/Table/tableUtility\";\nimport Cell from \"@guestyci/foundation/legacy/Table/Cell\";\nimport HeaderCell from \"@guestyci/foundation/legacy/Table/HeaderCell\";\nimport FlatButton from \"@guestyci/foundation/legacy/FlatButton\";\n\nimport { sleep } from \"@guestyci/foundation/utils/commonUtility\";\n\nimport orderBy from \"lodash/orderBy\";\n\nimport DateCell from \"@guestyci/foundation/legacy/Table/DateCell\";\nimport DateTimeCell from \"@guestyci/foundation/legacy/Table/DateTimeCell\";\n\n// import data from '../../../__mocks__/tableData';\n\nimport Resource from \"@guestyci/agni\";\n\nimport TextField from \"@guestyci/foundation/TextField\";\nimport { Row } from \"@guestyci/foundation/Layout\";\nimport { ReactComponent as BtnTrash } from \"@guestyci/foundation/icons/BtnTrash.svg\";\nimport Icon from \"@guestyci/foundation/Icon\";\n\nimport Spinner from \"@guestyci/foundation/Spinner\";\nimport StatusIndication from \"@guestyci/foundation/StatusIndication\";\n\nimport Radio from \"@guestyci/foundation/Radio\";\nimport RadioGroup from \"@guestyci/foundation/RadioGroup\";\n\nexport default function UserListScreen(props) {\n  // console.log('props:', props)\n  const [rawData, setRawData] = useState();\n  // const [data, setData] = useState();\n\n  const [view, setView] = useState(\"all\");\n\n  let data;\n\n  const [userDeleted, setUserDeleted] = useState(false);\n\n  const [rowSelection, setRowSelection] = useState(getEmptySelection());\n  const { allSelected, items, exceptItems } = rowSelection;\n\n  const width = 200;\n  // const pageSize = 25;\n  // const scrollOffset = data ? data.length : 100;\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [skip, setSkip] = useState(0);\n  const userList = useSelector((state) => state.userList);\n  const { loading, error, users } = userList;\n  // console.log(\"users:\", users);\n  data = users;\n  const userDelete = useSelector((state) => state.userDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = userDelete;\n\n  const accountSignin = useSelector((state) => state.accountSignin);\n  const { accountInfo, loadingAccount, errorAccount } = accountSignin;\n\n  const dispatch = useDispatch();\n  // let auth = \"gilad\";\n  useEffect(() => {\n    dispatch(listUsers(view));\n    // dispatch({\n    //   type: USER_DETAILS_RESET,\n    // });\n  }, [dispatch, successDelete, view]);\n\n  // const deleteHandler = (user) => {\n  //   console.log(\"user:\", user);\n  //   if (window.confirm(\"Are you sure?\")) {\n  //     dispatch(deleteUser(user._id));\n  //   }\n  // };\n\n  // const classes = useStyles();\n\n  // const selectionSize =\n  //  view===\"account\" && allSelected && data.length > 0\n  //     ? data.length - exceptItems.size\n  //     : items.size;\n\n  const selectionSize =\n    view === \"account\" && allSelected && data && data.length > 0 && items\n      ? items.size\n      : 0;\n\n  const handleRowCheckChange = (action) => {\n    console.log(\"handleRowCheckChange\");\n    // console.log('action:', action);\n\n    const selection = getSelectionOnAction({ rowSelection, action, data });\n    console.log(\"rowSelection:\", rowSelection);\n    console.log(\"action:\", action);\n    console.log(\"data:\", data);\n    // console.log('selection:', selection);\n    setRowSelection(selection);\n  };\n\n  const deleteUserHandler = async (userId) => {\n    console.log(\"deleteUserHandler\");\n    try {\n      // const response = await api.delete(`/users/${userId}`); // will go to `${config.MAILER_URL}/users`\n      // console.log('response:', response);\n      // const data = response.data;\n      // addToast.success('user was delete')\n      // props.history.push('/');\n      dispatch(deleteUser(userId));\n\n      setUserDeleted(true);\n\n      handleClearSelection();\n    } catch (error) {\n      console.log(\"error:\", error);\n      // addToast.danger(\"error deleting the user\")\n    }\n  };\n\n  const handleDelete = () => {\n    console.log(\"rowSelection.items: \", rowSelection.items);\n\n    if (window.confirm(\"Are you sure?\")) {\n      rowSelection.items.forEach((item) => deleteUserHandler(item));\n    }\n  };\n\n  const handleClearSelection = () => {\n    console.log(\"handleClearSelection\");\n    setRowSelection(getEmptySelection());\n  };\n\n  const handleRowClick = (...args) => {\n    console.log(\"handleRowClick\", ...args);\n\n    const rowData = { ...args };\n    console.log(\"rowData:\", rowData);\n    console.log(\"rowData:\", rowData[0].id.children);\n\n    const userId = rowData[0].id.children;\n    // console.log('args:', args.id)\n\n    // props.history.push(\"www.google.com\")\n\n    props.history.push(`/user/edit/${userId}`);\n  };\n\n  return (\n    <>\n      {/* {console.log(\"data:\", data)} */}\n      {loading && <Spinner size={80} strokeWidth={6} />}\n      {error && (\n        <StatusIndication variant=\"danger\" text=\"error getting the data \" />\n      )}\n\n      {data && (\n        <Section col className=\"bg-white\">\n          <Section gutter={2}>\n            {view === \"account\" && (\n              <AddButton\n                onClick={() => props.history.push(`/user/add`)}\n                text=\"Add User\"\n              />\n            )}\n          </Section>\n          {view === \"account\" && selectionSize > 0 && (\n            <Row spacing={4}>\n              <FlatButton\n                onClick={handleClearSelection}\n                disabled={!selectionSize}\n              >\n                {`Unselect ${selectionSize || \"\"}`}\n              </FlatButton>\n\n              {selectionSize > 0 && (\n                <>\n                  <FlatButton type=\"error\" onClick={handleDelete}>\n                    <Row align=\"center\" spacing={2}>\n                      <Icon svg={BtnTrash} />\n                      <TextField> Delete</TextField>\n                    </Row>\n                  </FlatButton>\n                </>\n              )}\n            </Row>\n          )}\n\n          {accountInfo && (\n            <RadioGroup\n              name=\"view\"\n              inline\n              onChange={(e) => setView(e.target.value)}\n              value={view}\n            >\n              <Radio value=\"account\">Account Users</Radio>\n              <Radio value=\"all\">All Users</Radio>\n            </RadioGroup>\n          )}\n\n          {console.log(\"rowSelection: \", rowSelection)}\n          {view === \"account\" && (\n            <Table\n              multiselect\n              onRowClick={handleRowClick}\n              height={500}\n              data={users}\n              // isLoading={isLoading}\n              // pageSize={pageSize}\n              rowSelection={rowSelection}\n              onCheckedRowsChange={handleRowCheckChange}\n              // infiniteScrollOptions={{\n              //   skip,\n              //   scrollOffset,\n              //   onLoadMore: handleLoadMore,\n              //   totalCount: semiInfiniteData.length,\n              // }}\n              // sortBy={sortBy}\n              // onSort={handleSort}\n            >\n              {/* <Column align=\"left\" dataKey=\"id\" width={width} sortable >\n                <HeaderCell id=\"id\">Id</HeaderCell>\n                <Cell />\n              </Column> */}\n              <Column dataKey=\"firstName\" width={width} >\n                <HeaderCell id=\"firstname\">First name</HeaderCell>\n                <Cell />\n              </Column>\n              <Column dataKey=\"lastName\" width={width}>\n                <HeaderCell id=\"lastname\">Last name</HeaderCell>\n                <Cell />\n              </Column>\n              <Column dataKey=\"email\" width={width}>\n                <HeaderCell id=\"email\">Email</HeaderCell>\n                <Cell />\n              </Column>\n\n              <Column dataKey=\"createdAt\" width={width}>\n                <HeaderCell id=\"createdAt\">created At</HeaderCell>\n                <Cell />\n              </Column>\n\n              <Column dataKey=\"updatedAt\" width={width}>\n                <HeaderCell id=\"updatedAt\">updated At</HeaderCell>\n                <Cell />\n              </Column>\n              <Column dataKey=\"accountId\" width={width}>\n                <HeaderCell id=\"accountId\">account</HeaderCell>\n                <Cell />\n              </Column>\n\n              {/* <Column dataKey=\"periodStartDate\" width={width} sortable>\n              <HeaderCell id=\"startdate\">Date Cell</HeaderCell>\n              <DateCell />\n            </Column>\n            <Column dataKey=\"periodEndDate\" width={width} sortable>\n              <HeaderCell id=\"enddate\">DateTime Cell</HeaderCell>\n              <DateTimeCell />\n            </Column> */}\n            </Table>\n          )}\n          {view === \"all\" && (\n            <Table\n              height={500}\n              data={users}\n              // isLoading={isLoading}\n              // pageSize={pageSize}\n              rowSelection={rowSelection}\n              onCheckedRowsChange={handleRowCheckChange}\n              // infiniteScrollOptions={{\n              //   skip,\n              //   scrollOffset,\n              //   onLoadMore: handleLoadMore,\n              //   totalCount: semiInfiniteData.length,\n              // }}\n              // sortBy={sortBy}\n              // onSort={handleSort}\n            >\n              {/* <Column align=\"left\" dataKey=\"id\" width={width} sortable>\n                <HeaderCell id=\"id\">Id</HeaderCell>\n                <Cell />\n              </Column> */}\n              <Column dataKey=\"firstName\" width={width}>\n                <HeaderCell id=\"firstname\">First name</HeaderCell>\n                <Cell />\n              </Column>\n              <Column dataKey=\"lastName\" width={width}>\n                <HeaderCell id=\"lastname\">Last name</HeaderCell>\n                <Cell />\n              </Column>\n              <Column dataKey=\"email\" width={width}>\n                <HeaderCell id=\"email\">Email</HeaderCell>\n                <Cell />\n              </Column>\n\n              <Column dataKey=\"createdAt\" width={width}>\n                <HeaderCell id=\"createdAt\">created At</HeaderCell>\n                <Cell />\n              </Column>\n\n              <Column dataKey=\"updatedAt\" width={width}>\n                <HeaderCell id=\"updatedAt\">updated At</HeaderCell>\n                <Cell />\n              </Column>\n              <Column dataKey=\"accountId\" width={width}>\n                <HeaderCell id=\"accountId\">account</HeaderCell>\n                <Cell />\n              </Column>\n\n              {/* <Column dataKey=\"periodStartDate\" width={width} sortable>\n              <HeaderCell id=\"startdate\">Date Cell</HeaderCell>\n              <DateCell />\n            </Column>\n            <Column dataKey=\"periodEndDate\" width={width} sortable>\n              <HeaderCell id=\"enddate\">DateTime Cell</HeaderCell>\n              <DateTimeCell />\n            </Column> */}\n            </Table>\n          )}\n        </Section>\n      )}\n    </>\n  );\n}\n","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/Blog/BlogEditScreen.js",["631","632","633","634","635","636","637","638","639","640","641","642","643","644","645","646","647","648","649","650"],"import React, { useEffect, useState } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { useParams } from \"react-router-dom\";\n\nimport Resource from \"@guestyci/agni\";\n\nimport RaisedButton from \"@guestyci/foundation/RaisedButton\";\n\nimport { Form as FinalForm, Field } from \"react-final-form\";\n\nimport Form from \"@guestyci/foundation/Form\";\nimport Input from \"@guestyci/foundation/Input\";\nimport DateRangePicker from \"@guestyci/foundation/DatePicker/DateRangePicker\";\nimport SingleDatePicker from \"@guestyci/foundation/DatePicker/SingleDatePicker\";\nimport NumberPicker from \"@guestyci/foundation/NumberPicker\";\nimport EmailInput from \"@guestyci/foundation/EmailInput\";\nimport Dropdown, { Option } from \"@guestyci/foundation/Dropdown\";\nimport TextField from \"@guestyci/foundation/TextField\";\nimport TextArea from \"@guestyci/foundation/TextArea\";\nimport Col from \"@guestyci/foundation/Layout/Col\";\nimport Section from \"@guestyci/foundation/Layout/Section\";\nimport DurationPicker from \"@guestyci/foundation/DurationPicker\";\nimport TimePicker from \"@guestyci/foundation/TimePicker\";\n\nimport FormField from \"@guestyci/foundation/FormField\";\nimport FormGroup from \"@guestyci/foundation/FormGroup\";\nimport { FormProvider } from \"@guestyci/foundation/enums\";\n// import { email } from \"@guestyci/foundation/validators\";\nimport createStyles from \"@guestyci/foundation/createStyles\";\n\nimport FlatButton from \"@guestyci/foundation/FlatButton\";\nimport { Row } from \"@guestyci/foundation/Layout\";\nimport { ReactComponent as BtnTrash } from \"@guestyci/foundation/icons/BtnTrash.svg\";\nimport Icon from \"@guestyci/foundation/Icon\";\n\nimport { useToast } from \"@guestyci/foundation/Toast\";\nimport { deleteBlog, detailsBlog, updateBlog } from \"../../actions/blogActions\";\nimport {\n  BLOG_DELETE_RESET,\n  BLOG_DETAILS_RESET,\n  BLOG_UPDATE_RESET,\n  POST_DELETE_RESET,\n} from \"../../constants/blogConstants\";\nimport PostList from \"../../components/PostList\";\n\n// posts\n\nconst useStyles = createStyles((theme) => ({\n  app: {\n    backgroundColor: \"white\",\n    marginTop: \"80px\",\n  },\n}));\n\nexport default function BlogEditScreen(props) {\n  // console.log(\"props:\", props);\n  const classes = useStyles();\n\n  const { addToast } = useToast();\n\n  // const { api, env, config } = Resource.create();\n\n  const { id } = useParams();\n  // console.log(\"id:\", id);\n\n  const [title, setTitle] = useState();\n\n  const [error, setError] = useState(false);\n\n  const errorMessage = \"There was a problem edit the blog.\";\n\n  // useSelector\n  const blogDetails = useSelector((state) => state.blogDetails);\n  const { loading, error: errorBlogDetails, blog } = blogDetails;\n\n  const blogAdminId = blog && blog.userId._id;\n  console.log(\"blogAdminId:\", blogAdminId);\n\n  const userSignin = useSelector((state) => state.userSignin);\n  const { userInfo, loadinguser, erroruser } = userSignin;\n  const { _id: userId } = userInfo;\n  console.log(\"userId:\", userId);\n\n  const blogUpdate = useSelector((state) => state.blogUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = blogUpdate;\n\n  const blogDelete = useSelector((state) => state.blogDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = blogDelete;\n\n  const postDelete = useSelector((state) => state.postDelete);\n  const {\n    loading: loadingPostDelete,\n    error: errorPostDelete,\n    success: successPostDelete,\n  } = postDelete;\n\n  // useDispatch\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (successDelete) {\n      dispatch({ type: BLOG_DELETE_RESET });\n      dispatch({ type: BLOG_DETAILS_RESET });\n      props.history.push(\"/blog/list\");\n      addToast.success(`the blog ${title} was delete`);\n    } else if (errorDelete) {\n      addToast.danger(\"error edit the blog\");\n    }\n    if (successUpdate) {\n      dispatch({ type: BLOG_UPDATE_RESET });\n      dispatch({ type: BLOG_DETAILS_RESET });\n\n      // props.history.push(\"/blog/list\");\n      addToast.success(`the blog ${title} was edit`);\n    } else if (errorUpdate) {\n      addToast.danger(\"error edit the blog\");\n    }\n    if (!blog || successPostDelete) {\n      dispatch(detailsBlog(id));\n    } else {\n      setTitle(blog.title);\n    }\n\n    if (successPostDelete) {\n      dispatch({ type: POST_DELETE_RESET });\n      // props.history.push(\"/blog/list\");\n      addToast.success(`the post  was delete`);\n    } else if (errorPostDelete) {\n      addToast.danger(\"error delete the post\");\n    }\n  }, [\n    dispatch,\n    props.history,\n    successUpdate,\n    successDelete,\n    errorPostDelete,\n    successPostDelete,\n    blog,\n    id,\n  ]);\n\n  useEffect(() => {\n    dispatch({ type: BLOG_DETAILS_RESET });\n  }, []);\n\n  const onSubmit = (e) => {\n    // e.preventDefault();\n    // dispatch update blog\n    dispatch(updateBlog({ id, title }));\n  };\n\n  const handleDelete = async () => {\n    console.log(\"handleDelete\");\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteBlog(id));\n    }\n  };\n\n  const closeError = () => {\n    setError(false);\n  };\n\n  return (\n    <>\n      <Section className={classes.app} justify=\"center\">\n        <Col spacing={6} span={6}>\n          {blog && (\n            <>\n              <h1>Blog Title: {blog.title}</h1>\n              <h6>\n                Blog Admin: {blog.userId.firstName} {blog.userId.lastName}\n              </h6>\n              <h6> Blog Admin Email: {blog.userId.email}</h6>\n            </>\n          )}\n          {blogAdminId === userId && (\n            <>\n              <TextField variant=\"h2\">\n                Edit the Blog:\n                {title}\n              </TextField>\n\n              <FinalForm\n                onSubmit={onSubmit}\n                initialValues={{}}\n                render={({ handleSubmit }) => (\n                  <Form\n                    title=\"Edit Blog\"\n                    onSubmit={handleSubmit}\n                    provider={FormProvider.Final}\n                    fieldInstance={Field}\n                  >\n                    <FormGroup>\n                      <FormGroup>\n                        <FormField\n                          label=\"Blog Title\"\n                          name=\"title\"\n                          //   info=\"Drama, Action etc.\"\n                        >\n                          <Input\n                            name=\"title\"\n                            value={title}\n                            placeholder={title}\n                            onChange={(e) => setTitle(e.target.value)}\n                          />\n                        </FormField>\n                      </FormGroup>\n\n                      <RaisedButton type=\"submit\">Edit Blog</RaisedButton>\n\n                      <FlatButton type=\"error\" onClick={handleDelete}>\n                        <Row align=\"center\" spacing={2}>\n                          <Icon svg={BtnTrash} />\n                          <TextField> Delete Blog</TextField>\n                        </Row>\n                      </FlatButton>\n\n                      {error && (\n                        <ErrorBanner\n                          show={error}\n                          errorMessage={errorMessage}\n                          onClick={closeError}\n                          actionText=\"Try again\"\n                        />\n                      )}\n                    </FormGroup>\n                  </Form>\n                )}\n              />\n            </>\n          )}{\" \"}\n          <PostList\n            blogData={blog}\n            history={props.history}\n            blogAdmin={blogAdminId === userId}\n          />\n        </Col>\n      </Section>\n\n      {/* /////////////////////// posts////////////////// */}\n    </>\n  );\n}\n","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/Blog/BlogListScreen/BlogListScreen.js",["651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667"],"import React, { useState, useEffect, useCallback } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteBlog, listBlogs } from \"../../../actions/blogActions\";\nimport { BLOG_DETAILS_RESET } from \"../../../constants/blogConstants\";\n\nimport Section from \"@guestyci/foundation/legacy/Section\";\nimport AddButton from \"@guestyci/foundation/AddButton\";\n\nimport Table, { Column } from \"@guestyci/foundation/legacy/Table\";\nimport {\n  getEmptySelection,\n  getSelectionOnAction,\n} from \"@guestyci/foundation/legacy/Table/tableUtility\";\nimport Cell from \"@guestyci/foundation/legacy/Table/Cell\";\nimport HeaderCell from \"@guestyci/foundation/legacy/Table/HeaderCell\";\nimport FlatButton from \"@guestyci/foundation/legacy/FlatButton\";\n\nimport { sleep } from \"@guestyci/foundation/utils/commonUtility\";\n\nimport orderBy from \"lodash/orderBy\";\n\nimport DateCell from \"@guestyci/foundation/legacy/Table/DateCell\";\nimport DateTimeCell from \"@guestyci/foundation/legacy/Table/DateTimeCell\";\n\n// import data from '../../../__mocks__/tableData';\n\nimport Resource from \"@guestyci/agni\";\n\nimport TextField from \"@guestyci/foundation/TextField\";\nimport { Row } from \"@guestyci/foundation/Layout\";\nimport { ReactComponent as BtnTrash } from \"@guestyci/foundation/icons/BtnTrash.svg\";\nimport Icon from \"@guestyci/foundation/Icon\";\n\nimport Spinner from \"@guestyci/foundation/Spinner\";\nimport StatusIndication from \"@guestyci/foundation/StatusIndication\";\nimport { NavLink } from \"react-router-dom\";\n\nimport Radio from \"@guestyci/foundation/Radio\";\nimport RadioGroup from \"@guestyci/foundation/RadioGroup\";\n\nexport default function BlogListScreen(props) {\n  console.log(\"props:\", props);\n  const [rawData, setRawData] = useState();\n  // const [data, setData] = useState();\n  const [view, setView] = useState(\"all\");\n\n  let data;\n\n  const [blogDeleted, setBlogDeleted] = useState(false);\n\n  const [rowSelection, setRowSelection] = useState(getEmptySelection());\n  const { allSelected, items, exceptItems } = rowSelection;\n\n  const width = 200;\n  // const pageSize = 25;\n  // const scrollOffset = data ? data.length : 100;\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [skip, setSkip] = useState(0);\n  const blogList = useSelector((state) => state.blogList);\n  const { loading, error, blogs } = blogList;\n  // console.log(\"blogs:\", blogs);\n  data = blogs;\n  const blogDelete = useSelector((state) => state.blogDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = blogDelete;\n\n  const userSignin = useSelector((state) => state.userSignin);\n  const { userInfo, loadingUser, errorUser } = userSignin;\n\n\n  const accountSignin = useSelector((state) => state.accountSignin);\n  const { accountInfo, loadingAccount, errorAccount } = accountSignin;\n\n\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(listBlogs(view));\n    // dispatch({\n    //   type: BLOG_DETAILS_RESET,\n    // });\n  }, [dispatch, successDelete, view]);\n\n  // const deleteHandler = (blog) => {\n  //   console.log(\"blog:\", blog);\n  //   if (window.confirm(\"Are you sure?\")) {\n  //     dispatch(deleteBlog(blog._id));\n  //   }\n  // };\n\n  // const classes = useStyles();\n\n  // const selectionSize =\n  //   allSelected && data.length > 0\n  //     ? data.length - exceptItems.size\n  //     : items.size;\n  const selectionSize =\n    view === \"account\" && allSelected && data && data.length > 0 && items\n      ? items.size\n      : 0;\n\n  const handleRowCheckChange = (action) => {\n    console.log(\"handleRowCheckChange\");\n    // console.log('action:', action);\n\n    const selection = getSelectionOnAction({ rowSelection, action, data });\n    console.log(\"rowSelection:\", rowSelection);\n    console.log(\"action:\", action);\n    console.log(\"data:\", data);\n    // console.log('selection:', selection);\n    setRowSelection(selection);\n  };\n\n  const deleteBlogHandler = async (blogId) => {\n    console.log(\"deleteBlogHandler\");\n    try {\n      // const response = await api.delete(`/blogs/${blogId}`); // will go to `${config.MAILER_URL}/blogs`\n      // console.log('response:', response);\n      // const data = response.data;\n      // addToast.success('blog was delete')\n      // props.history.push('/');\n      dispatch(deleteBlog(blogId));\n\n      setBlogDeleted(true);\n\n      handleClearSelection();\n    } catch (error) {\n      console.log(\"error:\", error);\n      // addToast.danger(\"error deleting the blog\")\n    }\n  };\n\n  const handleDelete = () => {\n    console.log(\"rowSelection.items: \", rowSelection.items);\n\n    if (window.confirm(\"Are you sure?\")) {\n      rowSelection.items.forEach((item) => deleteBlogHandler(item));\n    }\n  };\n\n  const handleClearSelection = () => {\n    console.log(\"handleClearSelection\");\n    setRowSelection(getEmptySelection());\n  };\n\n  const handleRowClick = (...args) => {\n    console.log(\"handleRowClick\", ...args);\n\n    const rowData = { ...args };\n    console.log(\"rowData:\", rowData);\n    console.log(\"rowData:\", rowData[0].id.children);\n\n    const blogId = rowData[0].id.children;\n    // console.log('args:', args.id)\n\n    // props.history.push(\"www.google.com\")\n\n    props.history.push(`/blog/edit/${blogId}`);\n  };\n\n  return (\n    <>\n      {/* {console.log(\"data:\", data)} */}\n      {loading && <Spinner size={80} strokeWidth={6} />}\n      {error && (\n        <StatusIndication variant=\"danger\" text=\"error getting the data \" />\n      )}\n\n      {data && (\n        <Section col className=\"bg-white\">\n          {userInfo ? (\n            <Section gutter={2}>\n              {view === \"account\" && (\n                <AddButton\n                  onClick={() => props.history.push(`/blog/add`)}\n                  text=\"Add Blog\"\n                />\n              )}\n            </Section>\n          ) : (\n            <NavLink\n              to=\"/user/signin\"\n              // activeStyle={activeStyle}\n              style={{ marginLeft: \"20px\" }}\n              exact\n            >\n              sign in to create a new blog\n            </NavLink>\n          )}\n\n          {view === \"account\" &&selectionSize > 0 && (\n            <Row spacing={4}>\n              <FlatButton\n                onClick={handleClearSelection}\n                disabled={!selectionSize}\n              >\n                {`Unselect ${selectionSize || \"\"}`}\n              </FlatButton>\n\n              {selectionSize > 0 && (\n                <>\n                  <FlatButton type=\"error\" onClick={handleDelete}>\n                    <Row align=\"center\" spacing={2}>\n                      <Icon svg={BtnTrash} />\n                      <TextField> Delete</TextField>\n                    </Row>\n                  </FlatButton>\n                </>\n              )}\n            </Row>\n          )}\n\n          {accountInfo && (\n            <RadioGroup\n              name=\"view\"\n              inline\n              onChange={(e) => setView(e.target.value)}\n              value={view}\n            >\n              <Radio value=\"account\">Account Blogs</Radio>\n              <Radio value=\"all\">All Blogs</Radio>\n            </RadioGroup>\n          )}\n\n          {console.log(\"rowSelection: \", rowSelection)}\n\n          {view === \"account\" && (\n            <Table\n              multiselect\n              height={500}\n              data={blogs}\n              // isLoading={isLoading}\n              // pageSize={pageSize}\n              rowSelection={rowSelection}\n              onCheckedRowsChange={handleRowCheckChange}\n              onRowClick={handleRowClick}\n              // infiniteScrollOptions={{\n              //   skip,\n              //   scrollOffset,\n              //   onLoadMore: handleLoadMore,\n              //   totalCount: semiInfiniteData.length,\n              // }}\n              // sortBy={sortBy}\n              // onSort={handleSort}\n            >\n              {/* <Column align=\"left\" dataKey=\"id\" width={width} sortable>\n                <HeaderCell id=\"id\">Id</HeaderCell>\n                <Cell />\n              </Column> */}\n              <Column dataKey=\"title\" width={width}>\n                <HeaderCell id=\"title\">Blog Name</HeaderCell>\n                <Cell />\n              </Column>\n              <Column dataKey=\"admin\" width={width}>\n                <HeaderCell id=\"admin\">Blog Admin</HeaderCell>\n                <Cell />\n              </Column>\n              <Column dataKey=\"email\" width={width}>\n                <HeaderCell id=\"email\">Email</HeaderCell>\n                <Cell />\n              </Column>\n              <Column dataKey=\"account\" width={width}>\n                <HeaderCell id=\"account\">account</HeaderCell>\n                <Cell />\n              </Column>\n              <Column dataKey=\"createdAt\" width={width}>\n                <HeaderCell id=\"createdAt\">created At</HeaderCell>\n                <Cell />\n              </Column>\n\n              <Column dataKey=\"updatedAt\" width={width}>\n                <HeaderCell id=\"updatedAt\">updated At</HeaderCell>\n                <Cell />\n              </Column>\n\n              {/* <Column dataKey=\"periodStartDate\" width={width} sortable>\n              <HeaderCell id=\"startdate\">Date Cell</HeaderCell>\n              <DateCell />\n            </Column>\n            <Column dataKey=\"periodEndDate\" width={width} sortable>\n              <HeaderCell id=\"enddate\">DateTime Cell</HeaderCell>\n              <DateTimeCell />\n            </Column> */}\n            </Table>\n          )}\n\n          {view === \"all\" && (\n            <Table height={500} data={blogs}>\n              {/* <Column align=\"left\" dataKey=\"id\" width={width} sortable>\n                <HeaderCell id=\"id\">Id</HeaderCell>\n                <Cell />\n              </Column> */}\n              <Column dataKey=\"title\" width={width}>\n                <HeaderCell id=\"title\">Blog Name</HeaderCell>\n                <Cell />\n              </Column>\n              <Column dataKey=\"admin\" width={width}>\n                <HeaderCell id=\"admin\">Blog Admin</HeaderCell>\n                <Cell />\n              </Column>\n              <Column dataKey=\"email\" width={width}>\n                <HeaderCell id=\"email\">Email</HeaderCell>\n                <Cell />\n              </Column>\n              <Column dataKey=\"account\" width={width}>\n                <HeaderCell id=\"account\">account</HeaderCell>\n                <Cell />\n              </Column>\n              <Column dataKey=\"createdAt\" width={width}>\n                <HeaderCell id=\"createdAt\">created At</HeaderCell>\n                <Cell />\n              </Column>\n\n              <Column dataKey=\"updatedAt\" width={width}>\n                <HeaderCell id=\"updatedAt\">updated At</HeaderCell>\n                <Cell />\n              </Column>\n\n              {/* <Column dataKey=\"periodStartDate\" width={width} sortable>\n              <HeaderCell id=\"startdate\">Date Cell</HeaderCell>\n              <DateCell />\n            </Column>\n            <Column dataKey=\"periodEndDate\" width={width} sortable>\n              <HeaderCell id=\"enddate\">DateTime Cell</HeaderCell>\n              <DateTimeCell />\n            </Column> */}\n            </Table>\n          )}\n        </Section>\n      )}\n    </>\n  );\n}\n","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/constants/userConstants.js",[],"/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/constants/accountConstants.js",[],"/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/constants/blogConstants.js",[],"/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/actions/blogActions.js",["668","669","670","671"],"import Axios from \"axios\";\nimport {\n  BLOG_DETAILS_FAIL,\n  BLOG_DETAILS_REQUEST,\n  BLOG_DETAILS_SUCCESS,\n  ////////////\n  POST_DETAILS_FAIL,\n  POST_DETAILS_REQUEST,\n  POST_DETAILS_SUCCESS,\n\n  ////////////////\n  BLOG_REGISTER_FAIL,\n  BLOG_REGISTER_REQUEST,\n  BLOG_REGISTER_SUCCESS,\n  BLOG_ADD_FAIL,\n  BLOG_ADD_REQUEST,\n  BLOG_ADD_SUCCESS,\n  POST_ADD_FAIL,\n  POST_ADD_REQUEST,\n  POST_ADD_SUCCESS,\n  BLOG_SIGNIN_FAIL,\n  BLOG_SIGNIN_REQUEST,\n  BLOG_SIGNIN_SUCCESS,\n  BLOG_SIGNOUT,\n  BLOG_UPDATE_PROFILE_FAIL,\n  BLOG_UPDATE_PROFILE_REQUEST,\n  BLOG_UPDATE_PROFILE_SUCCESS,\n  /////\n  POST_UPDATE_REQUEST,\n  POST_UPDATE_SUCCESS,\n  POST_UPDATE_FAIL,\n\n  ///////\n  BLOG_LIST_REQUEST,\n  BLOG_LIST_SUCCESS,\n  BLOG_LIST_FAIL,\n  BLOG_DELETE_REQUEST,\n  BLOG_DELETE_SUCCESS,\n  BLOG_DELETE_FAIL,\n  POST_DELETE_REQUEST,\n  POST_DELETE_SUCCESS,\n  POST_DELETE_FAIL,\n  ////\n  BLOG_UPDATE_REQUEST,\n  BLOG_UPDATE_SUCCESS,\n  BLOG_UPDATE_FAIL,\n} from \"../constants/blogConstants\";\nimport Resource from \"@guestyci/agni\";\nimport { makeDataForTable } from \"../utils\";\n// const { api, env, config } = Resource.create();\nconst temp = Resource.create(\"user\");\ntemp.api.defaults.baseURL = `http://localhost:9999/api/blogs`;\n\nconst blogApi = temp.api;\n\nexport const listBlogs = (view) => async (dispatch, getState) => {\n  dispatch({ type: BLOG_LIST_REQUEST });\n  console.log(\"BLOG_LIST_REQUEST\");\n  const {\n    accountSignin: { accountInfo },\n  } = getState();\n  try {\n    // console.log('accountInfo:', accountInfo,view)\n    const { data } = await blogApi.post(\"/\", { accountInfo, view });\n\n    // const temp = Resource.create('tasks');\n    // temp.api.defaults.baseURL = `http://localhost:9999/tasks`;\n    // export const tasksApi = temp.api;\n\n    // const data = await blogApi.get(); // will go to `${config.MAILER_URL}/blogs`\n\n    // console.log(\"data:\", data);\n\n    // let counter = 1;\n\n\n    let arr = makeDataForTable(data);\n\n    console.log(\"arr: \", arr);\n    //  setData(response.data.results)\n\n    dispatch({ type: BLOG_LIST_SUCCESS, payload: arr });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: BLOG_LIST_FAIL, payload: message });\n  }\n};\n\n//////////////////////ideal list blogs///////////////\n\n// export const listBlogs = () => async (dispatch) => {\n//   dispatch({ type: BLOG_LIST_REQUEST });\n//   console.log(\"BLOG_LIST_REQUEST\");\n//   try {\n//     const { data } = await blogApi.get();\n\n//     // const temp = Resource.create('tasks');\n//     // temp.api.defaults.baseURL = `http://localhost:9999/tasks`;\n//     // export const tasksApi = temp.api;\n\n//     // const data = await blogApi.get(); // will go to `${config.MAILER_URL}/blogs`\n\n//     console.log(\"data:\", data);\n\n//     // let counter = 1;\n//     const arr = [];\n\n//     let blogs = data;\n\n//     for (let i = 0; i < blogs.length; i++) {\n//       // console.log(\"blogs[i]: \", blogs[i]);\n\n//       const arrBlog = Object.entries(blogs[i]);\n//       console.log(\"arrBlog:\", arrBlog);\n\n//       //  title: {\n//       //   children: 'John',\n//       // },\n\n//       const bigObj = {};\n\n//       for (let j = 0; j < arrBlog.length; j++) {\n//         const obj = {};\n//         // console.log(\"arrBlog[j]: \", arrBlog[j]);\n//         // console.log(\"arrBlog[0]: \",arrBlog[j][0]);\n//         // console.log(\"arrBlog[1]: \",arrBlog[j][1]);\n\n//         // console.log(\"obj:\", obj);\n\n//         if (arrBlog[j][0] === \"_id\") {\n//           obj.children = arrBlog[j][1];\n//           //         obj= {children: '613e616d7ab4e566768e79d5'}\n\n//           bigObj.id = obj;\n//           //    bigObj= {id: {children: '613e616d7ab4e566768e79d5'}}\n\n//           bigObj._id = arrBlog[j][1];\n\n//           //   bigObj= {_id: '613e616d7ab4e566768e79d5'}\n//         } else if (\n//           arrBlog[j][0] === \"createdAt\" ||\n//           arrBlog[j][0] === \"updatedAt\"\n//         ) {\n//           // ['createdAt', '2021-09-13T08:46:49.849Z']\n\n//           obj.children = new Date(arrBlog[j][1]).toLocaleString();\n//           // {children: '9/13/2021, 11:46:49 AM'}\n\n//           bigObj[arrBlog[j][0]] = obj;\n\n//           // {createdAt: {children: '9/13/2021, 11:46:49 AM'}}\n//         } else if (arrBlog[j][0] === \"userId\") {\n//           // console.log(\"arrBlog:\", arrBlog);\n\n//           // ['userId',  {_id: '613e1486e5218626969838f0', name: 'Karamba'}]\n//           obj.children = `${arrBlog[j][1].firstName} ${arrBlog[j][1].lastName}`;\n\n//           // {children: 'Karamba'}\n\n//           let emailObj = {};\n\n//           emailObj.children = arrBlog[j][1].email;\n\n//           bigObj[\"admin\"] = obj;\n\n//           bigObj[\"email\"] = emailObj;\n\n//           let accountObj = {};\n\n//           accountObj.children = arrBlog[j][1].accountId.name;\n\n//           bigObj[\"account\"] = accountObj;\n\n//           //{ accountId: {children: 'Karamba'}}\n//         } else {\n//           // ['firstName', 'miki']\n\n//           obj.children = arrBlog[j][1];\n\n//           // {children: 'miki'}\n\n//           bigObj[arrBlog[j][0]] = obj;\n\n//           // firstName: {children: 'miki'}\n//         }\n\n//         // console.log(\"bigObj:\", bigObj);\n\n//         // arr.push( `${arrBlog[j][0]}: {children: '${arrBlog[j][1]}',}`)\n//       }\n//       // arr.push({gilad:1,...blogs[i]})\n//       arr.push({ ...bigObj });\n//       // arr.push({ _id: `${counter}`, ...bigObj });\n\n//       // counter++;\n//     }\n\n//     console.log(\"arr: \", arr);\n//     //  setData(response.data.results)\n\n//     dispatch({ type: BLOG_LIST_SUCCESS, payload: arr });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: BLOG_LIST_FAIL, payload: message });\n//   }\n// };\n\n////////////////////////////////////////\n\nexport const add = (title, userId, accountId) => async (dispatch) => {\n  dispatch({\n    type: BLOG_ADD_REQUEST,\n    payload: { title, userId },\n  });\n  try {\n    const { data } = await blogApi.post(\"/create\", {\n      title,\n      userId,\n      accountId,\n    });\n\n    dispatch({ type: BLOG_ADD_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: BLOG_ADD_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const register =\n  (title, lastName, email, userId) => async (dispatch) => {\n    dispatch({\n      type: BLOG_REGISTER_REQUEST,\n      payload: { title, lastName, email, userId },\n    });\n    try {\n      const { data } = await blogApi.post(\"/create\", {\n        title,\n        lastName,\n        email,\n        userId,\n      });\n\n      dispatch({ type: BLOG_REGISTER_SUCCESS, payload: data });\n\n      dispatch({ type: BLOG_SIGNIN_SUCCESS, payload: data });\n      localStorage.setItem(\"blogInfo\", JSON.stringify(data));\n    } catch (error) {\n      dispatch({\n        type: BLOG_REGISTER_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\nexport const signin = (email) => async (dispatch) => {\n  dispatch({ type: BLOG_SIGNIN_REQUEST, payload: { email } });\n  try {\n    const { data } = await blogApi.post(\"/signin\", { email });\n    dispatch({ type: BLOG_SIGNIN_SUCCESS, payload: data });\n    // dispatch(emailBlog(email));\n\n    localStorage.setItem(\"blogInfo\", JSON.stringify(data));\n  } catch (error) {\n    // console.log(\"error :\", error);\n    dispatch({\n      type: BLOG_SIGNIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const signoutBlog = () => (dispatch) => {\n  localStorage.removeItem(\"blogInfo\");\n\n  dispatch({ type: BLOG_SIGNOUT });\n  // document.location.href = \"/signin\";\n};\n\nexport const deleteBlog = (blogId) => async (dispatch) => {\n  console.log(\"blogId:\", blogId);\n  console.log(\"deleteBlog\");\n  dispatch({ type: BLOG_DELETE_REQUEST, payload: blogId });\n\n  try {\n    const { data } = await blogApi.delete(`/${blogId}`);\n    console.log(\"data:\", data);\n    dispatch({ type: BLOG_DELETE_SUCCESS, payload: data });\n  } catch (error) {\n    console.log(\"error\");\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: BLOG_DELETE_FAIL, payload: message });\n  }\n};\n\n/////////////////\nexport const deletePost = (postId, blogId) => async (dispatch) => {\n  console.log(\"postId:\", postId);\n  console.log(\"deletePost\");\n  dispatch({ type: POST_DELETE_REQUEST, payload: { blogId, postId } });\n\n  try {\n    const { data } = await blogApi.delete(`/${blogId}/posts/${postId}`);\n    console.log(\"data:\", data);\n    dispatch({ type: POST_DELETE_SUCCESS, payload: data });\n  } catch (error) {\n    console.log(\"error\");\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: POST_DELETE_FAIL, payload: message });\n  }\n};\n\nexport const detailsBlog = (blogId) => async (dispatch) => {\n  dispatch({ type: BLOG_DETAILS_REQUEST, payload: blogId });\n\n  try {\n    const { data } = await blogApi.get(`/${blogId}`);\n    dispatch({ type: BLOG_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: BLOG_DETAILS_FAIL, payload: message });\n  }\n};\n\n///////\nexport const detailsPost = (blogId, postId) => async (dispatch) => {\n  dispatch({ type: POST_DETAILS_REQUEST, payload: { blogId, postId } });\n\n  try {\n    const { data } = await blogApi.get(`/${blogId}/posts/${postId}`);\n    dispatch({ type: POST_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: POST_DETAILS_FAIL, payload: message });\n  }\n};\n\nexport const updateBlog = (blog) => async (dispatch) => {\n  // console.log(\"blog:\", blog.id);\n  dispatch({ type: BLOG_UPDATE_REQUEST, payload: blog });\n  try {\n    const { data } = await blogApi.patch(`/${blog.id}`, blog);\n    dispatch({ type: BLOG_UPDATE_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: BLOG_UPDATE_FAIL, payload: message });\n  }\n};\n\n/////////\nexport const updatePost =\n  ({ blogId, postId, title, content }) =>\n  async (dispatch) => {\n    dispatch({\n      type: POST_UPDATE_REQUEST,\n      payload: { blogId, postId, title, content },\n    });\n    try {\n      const { data } = await blogApi.patch(`/${blogId}/posts/${postId}`, {\n        title,\n        content,\n      });\n      dispatch({ type: POST_UPDATE_SUCCESS, payload: data });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({ type: POST_UPDATE_FAIL, payload: message });\n    }\n  };\n\n/////\n\n/////post actions\n\n////-------get\n\n// router.route('/:id/posts/:postId').get\n\n// await blogApi.get(`/${blog.id}/posts`);\n\n//---------create\n\n// router.route('/:id/posts').post(async (req, res, next)\n\n// await blogApi.post(`/${blog.id}/posts`, post);\n\nexport const addPost = (title, content, userId, blogId) => async (dispatch) => {\n  dispatch({\n    type: POST_ADD_REQUEST,\n    payload: { title, content, userId, blogId },\n  });\n  try {\n    const { data } = await blogApi.post(`/${blogId}/posts/create`, {\n      title,\n      content,\n      userId,\n      blogId,\n    });\n\n    dispatch({ type: POST_ADD_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: POST_ADD_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n///--------- update\n\n// router.route('/:id/posts/:postId').patch\n\n// await blogApi.patch(`/${blog.id}/posts/${postId}`, post)\n\n////-----------delete\n\n//router.route('/:id/posts/:postId').delete\n\n// await blogApi.delete(`/${blog.id}/posts/${postId}`)\n","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/actions/userActions.js",["672","673","674","675"],"import Axios from \"axios\";\nimport {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_ADD_FAIL,\n  USER_ADD_REQUEST,\n  USER_ADD_SUCCESS,\n  USER_SIGNIN_FAIL,\n  USER_SIGNIN_REQUEST,\n  USER_SIGNIN_SUCCESS,\n  USER_SIGNOUT,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n} from \"../constants/userConstants\";\n\nimport { makeDataForTable, prices, ratings } from \"../utils\";\n\nimport Resource from \"@guestyci/agni\";\n// const { api, env, config } = Resource.create();\nconst temp = Resource.create(\"user\");\ntemp.api.defaults.baseURL = `http://localhost:9999/api/users`;\n\n//http://localhost:9999/blog-hydra/api/users\n\nconst userApi = temp.api;\n\nexport const listUsers = (view) => async (dispatch, getState) => {\n  console.log(\"view:\", view);\n  // console.log(\"ratings:\", ratings);\n  // console.log(\"prices:\", prices);\n\n  dispatch({ type: USER_LIST_REQUEST });\n  console.log(\"USER_LIST_REQUEST\");\n\n  const {\n    accountSignin: { accountInfo },\n  } = getState();\n\n  try {\n    // console.log(\"accountInfo:\", accountInfo);\n    const { data } = await userApi.post(\"/\", { accountInfo, view });\n\n    // console.log(\"data:\", data);\n\n    // let counter = 1;\n\n    let arr = makeDataForTable(data);\n    console.log(\"arr: \", arr);\n    //  setData(response.data.results)\n\n    dispatch({ type: USER_LIST_SUCCESS, payload: arr });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: USER_LIST_FAIL, payload: message });\n  }\n};\n\n// /////////////////////// listUser ideal ///////////////\n\n// export const listUsers = () => async (dispatch) => {\n//   dispatch({ type: USER_LIST_REQUEST });\n//   console.log(\"USER_LIST_REQUEST\");\n//   try {\n//     // const temp = Resource.create('tasks');\n//     // temp.api.defaults.baseURL = `http://localhost:9999/tasks`;\n//     // export const tasksApi = temp.api;\n\n//     // const { data } = await userApi.get(\"http://localhost:9999/api/users\");\n\n//     const { data } = await userApi.get(); // will go to `${config.MAILER_URL}/users`\n\n//     console.log(\"data:\", data);\n\n//     let counter = 1;\n//     const arr = [];\n\n//     let users = data;\n\n//     for (let i = 0; i < users.length; i++) {\n//       // console.log(\"users[i]: \", users[i]);\n\n//       const arrUser = Object.entries(users[i]);\n//       console.log(\"arrUser:\", arrUser);\n\n//       //  firstName: {\n//       //   children: 'John',\n//       // },\n\n//       const bigObj = {};\n\n//       for (let j = 0; j < arrUser.length; j++) {\n//         const obj = {};\n//         // console.log(\"arrUser[j]: \", arrUser[j]);\n//         // console.log(\"arrUser[0]: \",arrUser[j][0]);\n//         // console.log(\"arrUser[1]: \",arrUser[j][1]);\n\n//         // console.log(\"obj:\", obj);\n\n//         if (arrUser[j][0] === \"_id\") {\n//           obj.children = arrUser[j][1];\n//           //         obj= {children: '613e616d7ab4e566768e79d5'}\n\n//           bigObj.id = obj;\n//           //    bigObj= {id: {children: '613e616d7ab4e566768e79d5'}}\n\n//           bigObj._id = arrUser[j][1];\n\n//           //   bigObj= {_id: '613e616d7ab4e566768e79d5'}\n//         } else if (\n//           arrUser[j][0] === \"createdAt\" ||\n//           arrUser[j][0] === \"updatedAt\"\n//         ) {\n//           // ['createdAt', '2021-09-13T08:46:49.849Z']\n\n//           obj.children = new Date(arrUser[j][1]).toLocaleString();\n//           // {children: '9/13/2021, 11:46:49 AM'}\n\n//           bigObj[arrUser[j][0]] = obj;\n\n//           // {createdAt: {children: '9/13/2021, 11:46:49 AM'}}\n//         } else if (arrUser[j][0] === \"accountId\") {\n//           // console.log(\"arrUser:\", arrUser);\n\n//           // ['accountId',  {_id: '613e1486e5218626969838f0', name: 'Karamba'}]\n//           obj.children = arrUser[j][1].name;\n\n//           // {children: 'Karamba'}\n\n//           bigObj[arrUser[j][0]] = obj;\n//           //{ accountId: {children: 'Karamba'}}\n//         } else {\n//           // ['firstName', 'miki']\n\n//           obj.children = arrUser[j][1];\n\n//           // {children: 'miki'}\n\n//           bigObj[arrUser[j][0]] = obj;\n\n//           // firstName: {children: 'miki'}\n//         }\n\n//         // console.log(\"bigObj:\", bigObj);\n\n//         // arr.push( `${arrUser[j][0]}: {children: '${arrUser[j][1]}',}`)\n//       }\n//       // arr.push({gilad:1,...users[i]})\n//       arr.push({ ...bigObj });\n//       // arr.push({ _id: `${counter}`, ...bigObj });\n\n//       counter++;\n//     }\n\n//     console.log(\"arr: \", arr);\n//     //  setData(response.data.results)\n\n//     dispatch({ type: USER_LIST_SUCCESS, payload: arr });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: USER_LIST_FAIL, payload: message });\n//   }\n// };\n\n// /////////////////////////////////////////////////\nexport const add =\n  (firstName, lastName, email, accountId) => async (dispatch) => {\n    dispatch({\n      type: USER_ADD_REQUEST,\n      payload: { firstName, lastName, email, accountId },\n    });\n    try {\n      const { data } = await userApi.post(\"/register\", {\n        firstName,\n        lastName,\n        email,\n        accountId,\n      });\n\n      dispatch({ type: USER_ADD_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({\n        type: USER_ADD_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\nexport const register =\n  (firstName, lastName, email, accountId) => async (dispatch) => {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n      payload: { firstName, lastName, email, accountId },\n    });\n    try {\n\n      \n      // const { data } = await userApi.post(\"/register\", {\n      //   firstName,\n      //   lastName,\n      //   email,\n      //   accountId,\n      // });\n\n      const { data } = await await Axios.post(\"http://localhost:9999/api/users/register\", {\n        firstName,\n        lastName,\n        email,\n        accountId,\n      });\n\n\n      dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n\n      dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n    } catch (error) {\n      dispatch({\n        type: USER_REGISTER_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\nexport const signin = (email, accountId) => async (dispatch) => {\n  // console.log(\"accountId:\", accountId);\n  dispatch({ type: USER_SIGNIN_REQUEST, payload: { email, accountId } });\n  try {\n    const { data } = await userApi.post(\"/signin\", { email, accountId });\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n    // dispatch(emailUser(email));\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    // console.log(\"error :\", error);\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const signoutUser = () => (dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n\n  dispatch({ type: USER_SIGNOUT });\n  // document.location.href = \"/signin\";\n};\n\nexport const deleteUser = (userId) => async (dispatch) => {\n  console.log(\"userId:\", userId);\n  console.log(\"deleteUser\");\n  dispatch({ type: USER_DELETE_REQUEST, payload: userId });\n\n  try {\n    const { data } = await userApi.delete(`/${userId}`);\n    console.log(\"data:\", data);\n    dispatch({ type: USER_DELETE_SUCCESS, payload: data });\n  } catch (error) {\n    console.log(\"error\");\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: USER_DELETE_FAIL, payload: message });\n  }\n};\n\nexport const detailsUser = (userId) => async (dispatch) => {\n  dispatch({ type: USER_DETAILS_REQUEST, payload: userId });\n\n  try {\n    const { data } = await userApi.get(`/${userId}`);\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: USER_DETAILS_FAIL, payload: message });\n  }\n};\n\nexport const updateUser = (user) => async (dispatch) => {\n  console.log(\"updateUser\");\n  dispatch({ type: USER_UPDATE_PROFILE_REQUEST, payload: user });\n  try {\n    console.log(\"user:\", user);\n    const { data } = await userApi.patch(`/${user.userId}`, user);\n    dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: USER_UPDATE_FAIL, payload: message });\n  }\n};\n","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/actions/accountActions.js",["676","677","678"],"import Axios from \"axios\";\nimport {\n  ACCOUNT_DETAILS_FAIL,\n  ACCOUNT_DETAILS_REQUEST,\n  ACCOUNT_DETAILS_SUCCESS,\n  ACCOUNT_REGISTER_FAIL,\n  ACCOUNT_REGISTER_REQUEST,\n  ACCOUNT_REGISTER_SUCCESS,\n  ACCOUNT_SIGNIN_FAIL,\n  ACCOUNT_SIGNIN_REQUEST,\n  ACCOUNT_SIGNIN_SUCCESS,\n  ACCOUNT_SIGNOUT,\n  ACCOUNT_UPDATE_PROFILE_FAIL,\n  ACCOUNT_UPDATE_PROFILE_REQUEST,\n  ACCOUNT_UPDATE_PROFILE_SUCCESS,\n  ACCOUNT_LIST_REQUEST,\n  ACCOUNT_LIST_SUCCESS,\n  ACCOUNT_LIST_FAIL,\n  ACCOUNT_DELETE_REQUEST,\n  ACCOUNT_DELETE_SUCCESS,\n  ACCOUNT_DELETE_FAIL,\n  ACCOUNT_UPDATE_SUCCESS,\n  ACCOUNT_UPDATE_FAIL,\n} from \"../constants/accountConstants\";\nimport { USER_SIGNOUT } from \"../constants/userConstants\";\n\nimport Resource from \"@guestyci/agni\";\nimport { updateUser } from \"./userActions\";\n// const { api, env, config } = Resource.create();\nconst temp = Resource.create(\"account\");\ntemp.api.defaults.baseURL = `http://localhost:9999/api/accounts`;\nconst accountApi = temp.api;\n\nexport const register =\n  (name, email, creatorName, creatorEmail, userId) => async (dispatch) => {\n    dispatch({\n      type: ACCOUNT_REGISTER_REQUEST,\n      payload: { name, email, creatorName, creatorEmail, userId },\n    });\n    try {\n      const { data } = await accountApi.post(\"/register\", {\n        name,\n        email,\n        creatorName,\n        creatorEmail,\n      });\n      console.log(\"data:================\", data);\n\n      let accountId= data._id;\n      // const { data } = await accountApi.post(\n      //   \"/register\",\n      //   {\n      //     name,\n      //     email,\n      //   }\n      // );\n      dispatch(updateUser({ userId, accountId }));\n\n      dispatch({ type: ACCOUNT_REGISTER_SUCCESS, payload: data });\n\n      dispatch({ type: ACCOUNT_SIGNIN_SUCCESS, payload: data });\n\n      localStorage.setItem(\"accountInfo\", JSON.stringify(data));\n    } catch (error) {\n      dispatch({\n        type: ACCOUNT_REGISTER_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\nexport const signin = (email) => async (dispatch) => {\n  dispatch({ type: ACCOUNT_SIGNIN_REQUEST, payload: { email } });\n  try {\n    const { data } = await accountApi.post(\"/signin\", { email });\n    dispatch({ type: ACCOUNT_SIGNIN_SUCCESS, payload: data });\n    // dispatch(emailAccount(email));\n\n    localStorage.setItem(\"accountInfo\", JSON.stringify(data));\n  } catch (error) {\n    // console.log(\"error :\", error);\n    dispatch({\n      type: ACCOUNT_SIGNIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const signout = () => (dispatch) => {\n  localStorage.removeItem(\"accountInfo\");\n  localStorage.removeItem(\"userInfo\");\n\n  dispatch({ type: ACCOUNT_SIGNOUT });\n\n  dispatch({ type: USER_SIGNOUT });\n\n  // document.location.href = \"/signin\";\n};\n\nexport const listAccounts = () => async (dispatch, getState) => {\n  dispatch({ type: ACCOUNT_LIST_REQUEST });\n  try {\n    const {\n      accountSignin: { accountInfo },\n    } = getState();\n    const { data } = await accountApi.get(\"\", {\n      headers: {\n        Authorization: `Bearer ${accountInfo.token}`,\n      },\n    });\n\n    dispatch({ type: ACCOUNT_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ACCOUNT_LIST_FAIL, payload: message });\n  }\n};\n\nexport const deleteAccount = (accountId) => async (dispatch, getState) => {\n  dispatch({ type: ACCOUNT_DELETE_REQUEST, payload: accountId });\n  const {\n    accountSignin: { accountInfo },\n  } = getState();\n  try {\n    const { data } = await accountApi.delete(`/${accountId}`, {\n      headers: { Authorization: `Bearer ${accountInfo.token}` },\n    });\n    dispatch({ type: ACCOUNT_DELETE_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ACCOUNT_DELETE_FAIL, payload: message });\n  }\n};\n\nexport const detailsAccount = (accountId) => async (dispatch) => {\n  dispatch({ type: ACCOUNT_DETAILS_REQUEST, payload: accountId });\n  try {\n    const { data } = await accountApi.get(`/${accountId}`);\n    dispatch({ type: ACCOUNT_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ACCOUNT_DETAILS_FAIL, payload: message });\n  }\n};\n\nexport const updateAccount = (account) => async (dispatch, getState) => {\n  console.log(\"account:\", account);\n  dispatch({ type: ACCOUNT_UPDATE_PROFILE_REQUEST, payload: account });\n  const {\n    accountSignin: { accountInfo },\n  } = getState();\n  try {\n    const { data } = await accountApi.patch(`/${account._id}`, account, {\n      headers: { Authorization: `Bearer ${accountInfo.token}` },\n    });\n    dispatch({ type: ACCOUNT_UPDATE_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ACCOUNT_UPDATE_FAIL, payload: message });\n  }\n};\n","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/components/PostList.js",["679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695"],"import React, { useState, useEffect, useCallback } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n// import { deletePost, listPosts } from \"../../../actions/postActions\";\n// import { POST_DETAILS_RESET } from \"../../../constants/postConstants\";\n\nimport Section from \"@guestyci/foundation/legacy/Section\";\nimport AddButton from \"@guestyci/foundation/AddButton\";\n\nimport Table, { Column } from \"@guestyci/foundation/legacy/Table\";\nimport {\n  getEmptySelection,\n  getSelectionOnAction,\n} from \"@guestyci/foundation/legacy/Table/tableUtility\";\nimport Cell from \"@guestyci/foundation/legacy/Table/Cell\";\nimport HeaderCell from \"@guestyci/foundation/legacy/Table/HeaderCell\";\nimport FlatButton from \"@guestyci/foundation/legacy/FlatButton\";\n\nimport { sleep } from \"@guestyci/foundation/utils/commonUtility\";\n\nimport orderBy from \"lodash/orderBy\";\n\nimport DateCell from \"@guestyci/foundation/legacy/Table/DateCell\";\nimport DateTimeCell from \"@guestyci/foundation/legacy/Table/DateTimeCell\";\n\n// import data from '../../../__mocks__/tableData';\n\nimport Resource from \"@guestyci/agni\";\n\nimport TextField from \"@guestyci/foundation/TextField\";\nimport { Row } from \"@guestyci/foundation/Layout\";\nimport { ReactComponent as BtnTrash } from \"@guestyci/foundation/icons/BtnTrash.svg\";\nimport Icon from \"@guestyci/foundation/Icon\";\n\nimport Spinner from \"@guestyci/foundation/Spinner\";\nimport StatusIndication from \"@guestyci/foundation/StatusIndication\";\nimport { NavLink } from \"react-router-dom\";\nimport { deletePost } from \"../actions/blogActions\";\nimport { POST_DELETE_RESET } from \"../constants/blogConstants\";\n\nimport { useToast } from \"@guestyci/foundation/Toast\";\nimport { makeDataForTable } from \"../utils\";\n\nexport default function PostList(props) {\n  console.log(\"PostListprops:\", props);\n  const { addToast } = useToast();\n\n  const { blogData, blogAdmin } = props;\n  console.log('blogAdmin:', blogAdmin)\n  // console.log(\"blogId:\", blogId);\n\n  // console.log(\"blogData:\", blogData);\n\n  let data;\n\n  if (blogData) {\n    let posts = blogData.posts;\n\n    data = makeDataForTable(posts);\n    // console.log(\"dataaaaaaaa===========================:\", data);\n  }\n  const [rawData, setRawData] = useState();\n  // const [data, setData] = useState();\n\n  // let data = arr;\n\n  const [postDeleted, setPostDeleted] = useState(false);\n\n  const [rowSelection, setRowSelection] = useState(getEmptySelection());\n  const { allSelected, items, exceptItems } = rowSelection;\n\n  const width = 200;\n  // const pageSize = 25;\n  // const scrollOffset = data ? data.length : 100;\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [skip, setSkip] = useState(0);\n  // const postList = useSelector((state) => state.postList);\n  // const { loading, error, posts } = postList;\n  // // console.log(\"posts:\", posts);\n  // data = posts;\n  // const postDelete = useSelector((state) => state.postDelete);\n  // const {\n  //   loading: loadingDelete,\n  //   error: errorDelete,\n  //   success: successDelete,\n  // } = postDelete;\n\n  const userSignin = useSelector((state) => state.userSignin);\n  const { userInfo, loadingAccount, errorAccount } = userSignin;\n\n  const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //   dispatch(listPosts());\n  //   // dispatch({\n  //   //   type: POST_DETAILS_RESET,\n  //   // });\n  // }, [dispatch, successDelete]);\n\n  // useEffect(() => {\n  //   if (successDelete) {\n  //     dispatch({ type: POST_DELETE_RESET });\n  //     // props.history.push(\"/blog/list\");\n  //     addToast.success(`the blog  was delete`);\n  //   } else if (errorDelete) {\n  //     addToast.danger(\"error edit the blog\");\n  //   } else if (errorDelete) {\n  //     addToast.danger(\"error delete the post\");\n  //   }\n  // }, [dispatch, successDelete, errorDelete]);\n\n  // useEffect(() => {\n  //   dispatch({ type: BLOG_DETAILS_RESET });\n  // }, []);\n\n  const selectionSize =\n    allSelected && data.length > 0\n      ? data.length - exceptItems.size\n      : items.size;\n\n  const handleRowCheckChange = (action) => {\n    console.log(\"handleRowCheckChange\");\n    // console.log('action:', action);\n\n    const selection = getSelectionOnAction({ rowSelection, action, data });\n    console.log(\"rowSelection:\", rowSelection);\n    console.log(\"action:\", action);\n    console.log(\"data:\", data);\n    // console.log('selection:', selection);\n    setRowSelection(selection);\n  };\n\n  const deletePostHandler = async (postId) => {\n    console.log(\"deletePostHandler\");\n    try {\n      // const response = await api.delete(`/posts/${postId}`); // will go to `${config.MAILER_URL}/posts`\n      // console.log('response:', response);\n      // const data = response.data;\n      // addToast.success('post was delete')\n      // props.history.push('/');\n\n      dispatch(deletePost(postId, blogData._id));\n\n      setPostDeleted(true);\n\n      handleClearSelection();\n    } catch (error) {\n      console.log(\"error:\", error);\n      // addToast.danger(\"error deleting the post\")\n    }\n  };\n\n  const handleDelete = () => {\n    console.log(\"rowSelection.items: \", rowSelection.items);\n\n    if (window.confirm(\"Are you sure?\")) {\n      rowSelection.items.forEach((item) => deletePostHandler(item));\n    }\n  };\n\n  const handleClearSelection = () => {\n    console.log(\"handleClearSelection\");\n    setRowSelection(getEmptySelection());\n  };\n\n  const handleRowClick = (...args) => {\n    console.log(\"handleRowClick\", ...args);\n\n    const rowData = { ...args };\n    console.log(\"rowData:\", rowData);\n    console.log(\"rowData:\", rowData[0].id.children);\n\n    const postId = rowData[0].id.children;\n    // console.log('args:', args.id)\n\n    // props.history.push(\"www.google.com\");\n\n    props.history.push(`/${blogData._id}/post/${postId}/view`);\n  };\n\n  return (\n    <>\n      {/* {console.log(\"data:\", data)}\n      {loading && <Spinner size={80} strokeWidth={6} />}\n      {error && (\n        <StatusIndication variant=\"danger\" text=\"error getting the data \" />\n      )} */}\n\n      {data && (\n        <Section col className=\"bg-white\" style={{width:\"900px\"}}>\n          <h1>posts:</h1>\n\n          {true ? (\n            <Section gutter={2}  >\n              {blogData && console.log(\"blogData._id: \", blogData._id)}\n              <AddButton\n                onClick={() => props.history.push(`${blogData._id}/post/add`)}\n                text=\"Add Post\"\n              />\n            </Section>\n          ) : (\n            <NavLink\n              to=\"/user/signin\"\n              // activeStyle={activeStyle}\n              style={{ marginLeft: \"20px\" }}\n              exact\n            >\n              sign in to create a new post\n            </NavLink>\n          )}\n\n          {/* {console.log(\"rowSelection: \", rowSelection)} */}\n\n          {blogAdmin ? (\n            <>\n              {selectionSize > 0 && (\n                <Row spacing={4}>\n                  <FlatButton\n                    onClick={handleClearSelection}\n                    disabled={!selectionSize}\n                  >\n                    {`Unselect ${selectionSize || \"\"}`}\n                  </FlatButton>\n\n                  {selectionSize > 0 && (\n                    <>\n                      <FlatButton type=\"error\" onClick={handleDelete}>\n                        <Row align=\"center\" spacing={2}>\n                          <Icon svg={BtnTrash} />\n                          <TextField> Delete</TextField>\n                        </Row>\n                      </FlatButton>\n                    </>\n                  )}\n                </Row>\n              )}\n              <Table\n                multiselect\n                height={500}\n                data={data}\n                // isLoading={isLoading}\n                // pageSize={pageSize}\n                rowSelection={rowSelection}\n                onCheckedRowsChange={handleRowCheckChange}\n                onRowClick={handleRowClick}\n                // infiniteScrollOptions={{\n                //   skip,\n                //   scrollOffset,\n                //   onLoadMore: handleLoadMore,\n                //   totalCount: semiInfiniteData.length,\n                // }}\n                // sortBy={sortBy}\n                // onSort={handleSort}\n              >\n                {/* <Column align=\"left\" dataKey=\"id\" width={width} sortable>\n                  <HeaderCell id=\"id\">Id</HeaderCell>\n                  <Cell />\n                </Column> */}\n                <Column dataKey=\"title\" width={width}>\n                  <HeaderCell id=\"title\">Title</HeaderCell>\n                  <Cell />\n                </Column>\n                <Column dataKey=\"content\" width={width}>\n                  <HeaderCell id=\"content\"> Content Preview</HeaderCell>\n                  <Cell />\n                </Column>\n                <Column dataKey=\"admin\" width={width}>\n                  <HeaderCell id=\"admin\"> Author</HeaderCell>\n                  <Cell />\n                </Column>\n                <Column dataKey=\"email\" width={width}>\n                  <HeaderCell id=\"email\">Email</HeaderCell>\n                  <Cell />\n                </Column>\n                <Column dataKey=\"account\" width={width}>\n                  <HeaderCell id=\"account\">Account</HeaderCell>\n                  <Cell />\n                </Column>\n                <Column dataKey=\"createdAt\" width={width}>\n                  <HeaderCell id=\"createdAt\">created At</HeaderCell>\n                  <Cell />\n                </Column>\n\n                <Column dataKey=\"updatedAt\" width={width}>\n                  <HeaderCell id=\"updatedAt\">updated At</HeaderCell>\n                  <Cell />\n                </Column>\n\n                {/* <Column dataKey=\"periodStartDate\" width={width} sortable>\n              <HeaderCell id=\"startdate\">Date Cell</HeaderCell>\n              <DateCell />\n            </Column>\n            <Column dataKey=\"periodEndDate\" width={width} sortable>\n              <HeaderCell id=\"enddate\">DateTime Cell</HeaderCell>\n              <DateTimeCell />\n            </Column> */}\n              </Table>\n            </>\n          ) : (\n            <>\n              {\" \"}\n              <Table\n                height={500}\n                data={data}\n                // isLoading={isLoading}\n                // pageSize={pageSize}\n\n                onRowClick={handleRowClick}\n                // infiniteScrollOptions={{\n                //   skip,\n                //   scrollOffset,\n                //   onLoadMore: handleLoadMore,\n                //   totalCount: semiInfiniteData.length,\n                // }}\n                // sortBy={sortBy}\n                // onSort={handleSort}\n              >\n                {/* <Column align=\"left\" dataKey=\"id\" width={width} sortable>\n                  <HeaderCell id=\"id\">Id</HeaderCell>\n                  <Cell />\n                </Column> */}\n                <Column dataKey=\"title\" width={width}>\n                  <HeaderCell id=\"title\">Title</HeaderCell>\n                  <Cell />\n                </Column>\n                <Column dataKey=\"content\" width={width}>\n                  <HeaderCell id=\"content\"> Content</HeaderCell>\n                  <Cell />\n                </Column>\n                <Column dataKey=\"admin\" width={width}>\n                  <HeaderCell id=\"admin\"> Author</HeaderCell>\n                  <Cell />\n                </Column>\n                <Column dataKey=\"email\" width={width}>\n                  <HeaderCell id=\"email\">Email</HeaderCell>\n                  <Cell />\n                </Column>\n                <Column dataKey=\"account\" width={width}>\n                  <HeaderCell id=\"account\">Account</HeaderCell>\n                  <Cell />\n                </Column>\n                <Column dataKey=\"createdAt\" width={width}>\n                  <HeaderCell id=\"createdAt\">created At</HeaderCell>\n                  <Cell />\n                </Column>\n\n                <Column dataKey=\"updatedAt\" width={width}>\n                  <HeaderCell id=\"updatedAt\">updated At</HeaderCell>\n                  <Cell />\n                </Column>\n\n                {/* <Column dataKey=\"periodStartDate\" width={width} sortable>\n              <HeaderCell id=\"startdate\">Date Cell</HeaderCell>\n              <DateCell />\n            </Column>\n            <Column dataKey=\"periodEndDate\" width={width} sortable>\n              <HeaderCell id=\"enddate\">DateTime Cell</HeaderCell>\n              <DateTimeCell />\n            </Column> */}\n              </Table>\n            </>\n          )}\n        </Section>\n      )}\n    </>\n  );\n}\n","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/Post/PostAddScreen.js",["696","697","698","699","700","701","702","703","704","705","706","707","708","709","710"],"import React, { useEffect, useState } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { NavLink, useParams } from \"react-router-dom\";\nimport Resource from \"@guestyci/agni\";\n\nimport RaisedButton from \"@guestyci/foundation/RaisedButton\";\n\nimport { Form as FinalForm, Field } from \"react-final-form\";\n\nimport Form from \"@guestyci/foundation/Form\";\nimport Input from \"@guestyci/foundation/Input\";\nimport DateRangePicker from \"@guestyci/foundation/DatePicker/DateRangePicker\";\nimport SingleDatePicker from \"@guestyci/foundation/DatePicker/SingleDatePicker\";\nimport NumberPicker from \"@guestyci/foundation/NumberPicker\";\nimport EmailInput from \"@guestyci/foundation/EmailInput\";\nimport Dropdown, { Option } from \"@guestyci/foundation/Dropdown\";\nimport TextField from \"@guestyci/foundation/TextField\";\nimport TextArea from \"@guestyci/foundation/TextArea\";\nimport Col from \"@guestyci/foundation/Layout/Col\";\nimport Section from \"@guestyci/foundation/Layout/Section\";\nimport DurationPicker from \"@guestyci/foundation/DurationPicker\";\nimport TimePicker from \"@guestyci/foundation/TimePicker\";\n\nimport FormField from \"@guestyci/foundation/FormField\";\nimport FormGroup from \"@guestyci/foundation/FormGroup\";\nimport { FormProvider } from \"@guestyci/foundation/enums\";\n// import { email } from '@guestyci/foundation/validators';\nimport createStyles from \"@guestyci/foundation/createStyles\";\n\nimport ErrorBanner from \"@guestyci/foundation/legacy/Table/ErrorBanner\";\n\nimport { useToast } from \"@guestyci/foundation/Toast\";\nimport { addPost } from \"../../actions/blogActions\";\nimport { POST_ADD_RESET } from \"../../constants/blogConstants\";\n\nconst useStyles = createStyles((theme) => ({\n  app: {\n    backgroundColor: \"white\",\n  },\n}));\n\nexport default function PostAddScreen(props) {\n  // console.log(\"email\");\n\n  const classes = useStyles();\n  const { addToast } = useToast();\n\n  const { api, env, config } = Resource.create();\n\n  const { id: blogId } = useParams();\n  // console.log(\"blogId:\", blogId);\n\n  /// states\n\n  const [title, setTitle] = useState();\n\n  const [content, setContent] = useState();\n\n  const errorMessage = \"There was a problem add the post.\";\n\n  const [error, setError] = useState(false);\n\n  ///selectors\n\n  const postAdd = useSelector((state) => state.postAdd);\n\n  const { postInfo, loading, error: errorAdd } = postAdd;\n\n  const userSignin = useSelector((state) => state.userSignin);\n  const { userInfo, loadingAccount, errorAccount } = userSignin;\n  const { _id: userId } = userInfo;\n  console.log(\"userId:\", userId);\n  /// effects\n\n  useEffect(() => {\n    if (postInfo) {\n      addToast.success(`post ${title} was add successfully`);\n      props.history.push(`/blog/edit/${blogId}`);\n      dispatch({ type: POST_ADD_RESET });\n    } else if (errorAdd) {\n      addToast.danger(\"error adding the post\");\n\n      setError(true);\n    }\n  }, [props.history, postInfo, errorAdd]);\n\n  //dispatchers\n\n  const dispatch = useDispatch();\n\n  const onSubmit = (e) => {\n    // e.preventDefault();\n\n    console.log(\"onSubmit\");\n    console.log(title);\n    dispatch(addPost(title, content, userId, blogId));\n\n    // setContent(\"\");\n    // setLastName(\"\");\n\n    // setEmail(\"\");\n\n    // console.log(password);\n\n    // async function createPost() {\n    //   try {\n    //     const response = await api.post(`/posts`, {\n    //       title,\n    //       email,\n    //       // password,\n    //     }); // will go to `${config.MAILER_URL}/posts`\n    //     console.log(\"response:\", response);\n    //     // const data = response.data;]\n\n    //     if (response.status === 200) {\n    //       addToast.success(`post ${title} was add successfully`);\n    //       props.history.push(\"/\");\n    //     } else {\n    //       console.log(\"response.status: \", response.status);\n    //     }\n    //   } catch (error) {\n    //     console.log(\"error:\", error);\n    //     addToast.danger(\"error adding the post\");\n\n    //     setError(true);\n\n    //     // setTimeout(() => {\n    //     //   setError(false);\n    //     // }, 3000);\n    //   }\n    // }\n    // createPost();\n\n    // props.history.push(\"/\");\n  };\n\n  const closeError = () => {\n    setError(false);\n  };\n\n  return (\n    <Section className={classes.app} justify=\"center\">\n      <Col spacing={6} span={6}>\n        <TextField variant=\"h2\">\n          Add Post:\n          {title}\n        </TextField>\n        <FinalForm\n          onSubmit={onSubmit}\n          initialValues={{}}\n          render={({ handleSubmit }) => (\n            <Form\n              title=\"Create Post\"\n              onSubmit={handleSubmit}\n              provider={FormProvider.Final}\n              fieldInstance={Field}\n            >\n              <FormGroup>\n                <FormGroup>\n                  <FormField\n                    label=\"Post Title\"\n                    name=\"title\"\n                    //   info=\"Drama, Action etc.\"\n                  >\n                    <Input\n                      name=\"title\"\n                      value={title}\n                      placeholder={title}\n                      onChange={(e) => setTitle(e.target.value)}\n                    />\n                  </FormField>\n\n                  <FormField\n                    label=\"Post Content\"\n                    name=\"content\"\n                    //   info=\"Drama, Action etc.\"\n                  >\n                    {/* <Input\n                      name=\"content\"\n                      value={content}\n                      placeholder={content}\n                      onChange={(e) => setContent(e.target.value)}\n                    /> */}\n\n                    <TextArea\n                      name=\"content\"\n                      placeholder={content}\n                      value={content}\n                      onChange={(e) => setContent(e.target.value)}\n                      minRows={71}\n                      maxRows={9}\n                    />\n                  </FormField>\n                </FormGroup>\n\n                <RaisedButton type=\"submit\">Create Post</RaisedButton>\n\n                {error && (\n                  <ErrorBanner\n                    show={error}\n                    errorMessage={errorMessage}\n                    onClick={closeError}\n                    actionText=\"Try again\"\n                  />\n                )}\n              </FormGroup>\n\n              <NavLink\n                to=\"/blog/list\"\n                // activeStyle={activeStyle}\n                style={{ marginLeft: \"20px\" }}\n                exact\n              >\n                back to blog list\n              </NavLink>\n            </Form>\n          )}\n        />\n      </Col>\n    </Section>\n  );\n}\n","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/Post/PostEditScreen.js",["711","712","713","714","715","716","717","718","719","720","721","722","723","724","725","726"],"import React, { useEffect, useState } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { NavLink, useParams } from \"react-router-dom\";\n\nimport Resource from \"@guestyci/agni\";\n\nimport RaisedButton from \"@guestyci/foundation/RaisedButton\";\n\nimport { Form as FinalForm, Field } from \"react-final-form\";\n\nimport Form from \"@guestyci/foundation/Form\";\nimport Input from \"@guestyci/foundation/Input\";\nimport DateRangePicker from \"@guestyci/foundation/DatePicker/DateRangePicker\";\nimport SingleDatePicker from \"@guestyci/foundation/DatePicker/SingleDatePicker\";\nimport NumberPicker from \"@guestyci/foundation/NumberPicker\";\nimport EmailInput from \"@guestyci/foundation/EmailInput\";\nimport Dropdown, { Option } from \"@guestyci/foundation/Dropdown\";\nimport TextField from \"@guestyci/foundation/TextField\";\nimport TextArea from \"@guestyci/foundation/TextArea\";\nimport Col from \"@guestyci/foundation/Layout/Col\";\nimport Section from \"@guestyci/foundation/Layout/Section\";\nimport DurationPicker from \"@guestyci/foundation/DurationPicker\";\nimport TimePicker from \"@guestyci/foundation/TimePicker\";\n\nimport FormField from \"@guestyci/foundation/FormField\";\nimport FormGroup from \"@guestyci/foundation/FormGroup\";\nimport { FormProvider } from \"@guestyci/foundation/enums\";\n// import { email } from \"@guestyci/foundation/validators\";\nimport createStyles from \"@guestyci/foundation/createStyles\";\n\nimport FlatButton from \"@guestyci/foundation/FlatButton\";\nimport { Row } from \"@guestyci/foundation/Layout\";\nimport { ReactComponent as BtnTrash } from \"@guestyci/foundation/icons/BtnTrash.svg\";\nimport Icon from \"@guestyci/foundation/Icon\";\n\nimport { useToast } from \"@guestyci/foundation/Toast\";\nimport { deletePost, detailsPost, updatePost } from \"../../actions/blogActions\";\nimport {\n  POST_DELETE_RESET,\n  POST_DETAILS_RESET,\n  POST_UPDATE_RESET,\n} from \"../../constants/blogConstants\";\n\n// posts\n\nconst useStyles = createStyles((theme) => ({\n  app: {\n    backgroundColor: \"white\",\n  },\n}));\n\nexport default function PostEditScreen(props) {\n  const classes = useStyles();\n\n  const { addToast } = useToast();\n\n  // const { api, env, config } = Resource.create();\n\n  const { blogId, postId } = useParams();\n  // console.log(\"id:\", id);\n\n  const [title, setTitle] = useState();\n\n  /////\n  const [content, setContent] = useState();\n  /////\n  const [error, setError] = useState(false);\n\n  const errorMessage = \"There was a problem edit the post.\";\n\n  // useSelector\n  const postDetails = useSelector((state) => state.postDetails);\n  const { loading, error: errorPostDetails, post } = postDetails;\n\n  const postUpdate = useSelector((state) => state.postUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = postUpdate;\n\n  const postDelete = useSelector((state) => state.postDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = postDelete;\n\n  // useDispatch\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (successDelete) {\n      dispatch({ type: POST_DELETE_RESET });\n      dispatch({ type: POST_DETAILS_RESET });\n      props.history.push(`/blog/edit/${blogId}`);\n      addToast.success(`the post ${title} was delete`);\n    } else if (errorDelete) {\n      addToast.danger(\"error edit the post\");\n    }\n    if (successUpdate) {\n      dispatch({ type: POST_UPDATE_RESET });\n      dispatch({ type: POST_DETAILS_RESET });\n\n      // props.history.push(\"/post/list\");\n      addToast.success(`the post ${title} was edit`);\n    } else if (errorUpdate) {\n      addToast.danger(\"error edit the post\");\n    }\n    if (!post) {\n      dispatch(detailsPost(blogId, postId));\n    } else {\n      setTitle(post.title);\n      ////\n      setContent(post.content);\n    }\n  }, [\n    dispatch,\n    props.history,\n    successUpdate,\n    successDelete,\n    post,\n    blogId,\n    postId,\n  ]);\n\n  useEffect(() => {\n    dispatch({ type: POST_DETAILS_RESET });\n  }, []);\n\n  const onSubmit = (e) => {\n    // e.preventDefault();\n    // dispatch update post\n    dispatch(updatePost({ blogId, postId, title, content }));\n  };\n\n  const handleDelete = async () => {\n    console.log(\"handleDelete\");\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deletePost(blogId, postId));\n    }\n  };\n\n  const closeError = () => {\n    setError(false);\n  };\n\n  return (\n    <>\n      <Section className={classes.app} justify=\"center\">\n        <Col spacing={6} span={6}>\n          <TextField variant=\"h2\">\n            Edit the Post:\n            {title}\n          </TextField>\n          <FinalForm\n            onSubmit={onSubmit}\n            initialValues={{}}\n            render={({ handleSubmit }) => (\n              <Form\n                title=\"Edit Post\"\n                onSubmit={handleSubmit}\n                provider={FormProvider.Final}\n                fieldInstance={Field}\n              >\n                <FormGroup>\n                  <FormGroup>\n                    <FormField\n                      label=\"title\"\n                      name=\"title\"\n                      //   info=\"Drama, Action etc.\"\n                    >\n                      <Input\n                        name=\"title\"\n                        value={title}\n                        placeholder={title}\n                        onChange={(e) => setTitle(e.target.value)}\n                      />\n                    </FormField>\n\n                    <FormField\n                      label=\"content\"\n                      name=\"content\"\n                      //   info=\"Drama, Action etc.\"\n                    >\n                      {/* <Input\n                        name=\"content\"\n                        value={content}\n                        placeholder={content}\n                        onChange={(e) => setContent(e.target.value)}\n                      /> */}\n                      <TextArea\n                        name=\"content\"\n                        placeholder={content}\n                        value={content}\n                        onChange={(e) => setContent(e.target.value)}\n                        minRows={100}\n                        // maxRows={15}\n                      />\n                    </FormField>\n\n                    {/* <TextField>content</TextField> */}\n                  </FormGroup>\n\n                  <RaisedButton type=\"submit\">Edit Post</RaisedButton>\n\n                  <FlatButton type=\"error\" onClick={handleDelete}>\n                    <Row align=\"center\" spacing={2}>\n                      <Icon svg={BtnTrash} />\n                      <TextField> Delete Post</TextField>\n                    </Row>\n                  </FlatButton>\n\n                  {error && (\n                    <ErrorBanner\n                      show={error}\n                      errorMessage={errorMessage}\n                      onClick={closeError}\n                      actionText=\"Try again\"\n                    />\n                  )}\n                </FormGroup>\n\n                <NavLink\n                  to={`/${blogId}/post/${postId}/view`}\n                  // activeStyle={activeStyle}\n                  style={{ marginLeft: \"20px\" }}\n                  exact\n                >\n                  view post\n                </NavLink>\n\n                <NavLink\n                  to={`/blog/edit/${blogId}`}\n                  // activeStyle={activeStyle}\n                  style={{ marginLeft: \"20px\" }}\n                  exact\n                >\n                  back to blog\n                </NavLink>\n              </Form>\n            )}\n          />\n        </Col>\n      </Section>\n      {/* /////////////////////// posts//////////////////  */}\n      {/* <PostList postId={id} /> */}\n    </>\n  );\n}\n","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/Post/PostViewScreen.js",["727","728","729","730","731","732","733","734","735","736","737","738","739","740","741","742","743","744","745","746","747","748","749","750","751","752","753","754","755","756","757","758"],"import React, { useEffect, useState } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { NavLink, useParams } from \"react-router-dom\";\n\nimport Resource from \"@guestyci/agni\";\n\nimport RaisedButton from \"@guestyci/foundation/RaisedButton\";\n\nimport { Form as FinalForm, Field } from \"react-final-form\";\n\nimport Form from \"@guestyci/foundation/Form\";\nimport Input from \"@guestyci/foundation/Input\";\nimport DateRangePicker from \"@guestyci/foundation/DatePicker/DateRangePicker\";\nimport SingleDatePicker from \"@guestyci/foundation/DatePicker/SingleDatePicker\";\nimport NumberPicker from \"@guestyci/foundation/NumberPicker\";\nimport EmailInput from \"@guestyci/foundation/EmailInput\";\nimport Dropdown, { Option } from \"@guestyci/foundation/Dropdown\";\nimport TextField from \"@guestyci/foundation/TextField\";\nimport TextArea from \"@guestyci/foundation/TextArea\";\nimport Col from \"@guestyci/foundation/Layout/Col\";\nimport Section from \"@guestyci/foundation/Layout/Section\";\nimport DurationPicker from \"@guestyci/foundation/DurationPicker\";\nimport TimePicker from \"@guestyci/foundation/TimePicker\";\n\nimport FormField from \"@guestyci/foundation/FormField\";\nimport FormGroup from \"@guestyci/foundation/FormGroup\";\nimport { FormProvider } from \"@guestyci/foundation/enums\";\n// import { email } from \"@guestyci/foundation/validators\";\nimport createStyles from \"@guestyci/foundation/createStyles\";\n\nimport FlatButton from \"@guestyci/foundation/FlatButton\";\nimport { Row } from \"@guestyci/foundation/Layout\";\nimport { ReactComponent as BtnTrash } from \"@guestyci/foundation/icons/BtnTrash.svg\";\nimport Icon from \"@guestyci/foundation/Icon\";\n\nimport { useToast } from \"@guestyci/foundation/Toast\";\nimport {\n  deletePost,\n  detailsPost,\n  detailsBlog,\n  updatePost,\n} from \"../../actions/blogActions\";\nimport {\n  POST_DELETE_RESET,\n  POST_DETAILS_RESET,\n  POST_UPDATE_RESET,\n} from \"../../constants/blogConstants\";\n\n// posts\n\nconst useStyles = createStyles((theme) => ({\n  app: {\n    backgroundColor: \"white\",\n    marginTop: \"20px\",\n  },\n}));\n\nexport default function PostViewScreen(props) {\n  const classes = useStyles();\n\n  // const { api, env, config } = Resource.create();\n\n  const { blogId, postId } = useParams();\n  // console.log(\"id:\", id);\n\n  const [title, setTitle] = useState();\n\n  const [email, setEmail] = useState();\n\n  /////\n  const [content, setContent] = useState();\n  /////\n\n  const [author, setAuthor] = useState();\n\n  const [date, setDate] = useState();\n\n  // useSelector\n  const postDetails = useSelector((state) => state.postDetails);\n  const { loading, error: errorPostDetails, post } = postDetails;\n  console.log(\"post:\", post);\n\n  const blogDetails = useSelector((state) => state.blogDetails);\n  const { loading: loadingBlog, error: errorBlogDetails, blog } = blogDetails;\n\n  // useDispatch\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!post) {\n      dispatch(detailsPost(blogId, postId));\n      dispatch(detailsBlog(blogId));\n    } else {\n      setTitle(post.title);\n      ////\n\n      setAuthor(`${post.userId.firstName} ${post.userId.lastName}`);\n\n      setEmail(post.userId.email);\n      setContent(post.content);\n      setDate(new Date(post.createdAt).toLocaleString());\n    }\n  }, [dispatch, props.history, post, blogId, postId]);\n\n  useEffect(() => {\n    dispatch({ type: POST_DETAILS_RESET });\n  }, []);\n\n  return (\n    <>\n      <Section className={classes.app} justify=\"center\">\n        <Col spacing={6} span={6}>\n          <TextField variant=\"h1\">{title}</TextField>\n          <TextField variant=\"h5\">{author}</TextField>\n          <TextField variant=\"h5\">{email}</TextField>\n\n          <TextField variant=\"h5\">{date}</TextField>\n\n          <TextField variant=\"h4\">{content}</TextField>\n\n          {post && blog && post.userId._id === blog.userId._id && (\n            <NavLink\n              to={`/blog/edit/${blogId}/post/${postId}`}\n              // activeStyle={activeStyle}\n              style={{ marginLeft: \"20px\" }}\n              exact\n            >\n              edit the post\n            </NavLink>\n          )}\n\n\n          <NavLink\n            to={`/blog/edit/${blogId}`}\n            // activeStyle={activeStyle}\n            style={{ marginLeft: \"20px\" }}\n            exact\n          >\n            back to blog\n          </NavLink>\n        </Col>\n      </Section>\n      {/* /////////////////////// posts//////////////////  */}\n      {/* <PostList postId={id} /> */}\n    </>\n  );\n}\n","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/components/PrivateRoute.js",[],"/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/Home.js",[],"/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/utils.js",[],"/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/User/UserInfoScreen.js",["759","760","761","762","763","764","765","766"],"import React, { useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { NavLink, useParams } from \"react-router-dom\";\n\nimport TextField from \"@guestyci/foundation/TextField\";\nimport Col from \"@guestyci/foundation/Layout/Col\";\nimport Section from \"@guestyci/foundation/Layout/Section\";\n\n// import { email } from \"@guestyci/foundation/validators\";\nimport createStyles from \"@guestyci/foundation/createStyles\";\n\nimport { useToast } from \"@guestyci/foundation/Toast\";\nimport { deleteUser, detailsUser, updateUser } from \"../../actions/userActions\";\nimport {\n  USER_DELETE_RESET,\n  USER_DETAILS_RESET,\n  USER_UPDATE_RESET,\n} from \"../../constants/userConstants\";\nimport StatusIndication from \"@guestyci/foundation/StatusIndication\";\nimport Spinner from \"@guestyci/foundation/Spinner\";\n\nconst useStyles = createStyles((theme) => ({\n  app: {\n    backgroundColor: \"white\",\n  },\n}));\n\nexport default function UserInfoScreen(props) {\n  const classes = useStyles();\n\n  const { id } = useParams();\n  // console.log(\"id:\", id);\n\n  // useSelector\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error: errorUserDetails, user } = userDetails;\n\n  // useDispatch\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!user) {\n      dispatch(detailsUser(id));\n    }\n  }, [dispatch, props.history, user, id]);\n\n  useEffect(() => {\n    dispatch({ type: USER_DETAILS_RESET });\n  }, []);\n\n  const closeError = () => {\n    setError(false);\n  };\n\n  return (\n    <Section className={classes.app} justify=\"center\">\n      {loading && <Spinner size={80} strokeWidth={6} />}\n\n      {errorUserDetails && (\n        <StatusIndication variant=\"danger\" text=\"error getting the info\" />\n      )}\n\n      <Col spacing={6} span={6}>\n        {user && (\n          <>\n            {\" \"}\n            {console.log(\"user:\", user)}\n            <TextField variant=\"h1\">\n              User Info: {user.firstName} {user.lastName}\n            </TextField>\n            <TextField variant=\"h3\">First Name: {user.firstName}</TextField>\n            <TextField variant=\"h3\">Last Name: {user.lastName}</TextField>\n            <TextField variant=\"h3\">Email: {user.email}</TextField>\n            {user.accountId && (\n              <TextField variant=\"h3\">Account: {user.accountId.name}</TextField>\n            )}\n            <TextField variant=\"h3\">\n              Created At: {new Date(user.createdAt).toLocaleString()}\n            </TextField>\n            <TextField variant=\"h3\">\n              Updated At: {new Date(user.updatedAt).toLocaleString()}\n            </TextField>\n            {true && (\n              <NavLink\n                to={`/user/edit/${id}`}\n                // activeStyle={activeStyle}\n                style={{ marginLeft: \"20px\" }}\n                exact\n              >\n                edit the user\n              </NavLink>\n            )}\n          </>\n        )}\n      </Col>\n    </Section>\n  );\n}\n","/Users/giladdekel/Workspace/Guesty/simple-app-archive/src/screens/Account/AccountInfoScreen.js",["767","768","769","770","771"],"import React, { useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { NavLink, useParams } from \"react-router-dom\";\n\nimport TextField from \"@guestyci/foundation/TextField\";\nimport Col from \"@guestyci/foundation/Layout/Col\";\nimport Section from \"@guestyci/foundation/Layout/Section\";\n\n// import { email } from \"@guestyci/foundation/validators\";\nimport createStyles from \"@guestyci/foundation/createStyles\";\n\nimport { useToast } from \"@guestyci/foundation/Toast\";\nimport { detailsAccount } from \"../../actions/accountActions\";\nimport { ACCOUNT_DETAILS_RESET } from \"../../constants/accountConstants\";\nimport StatusIndication from \"@guestyci/foundation/StatusIndication\";\nimport Spinner from \"@guestyci/foundation/Spinner\";\n\nconst useStyles = createStyles((theme) => ({\n  app: {\n    backgroundColor: \"white\",\n  },\n}));\n\nexport default function AccountInfoScreen(props) {\n  const classes = useStyles();\n\n  const { id } = useParams();\n  // console.log(\"id:\", id);\n\n  // useSelector\n  const accountDetails = useSelector((state) => state.accountDetails);\n  const { loading, error: errorAccountDetails, account } = accountDetails;\n  console.log('account:', account)\n\n  // useDispatch\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!account) {\n      dispatch(detailsAccount(id));\n    }\n  }, [dispatch, props.history, account, id]);\n\n  useEffect(() => {\n    dispatch({ type: ACCOUNT_DETAILS_RESET });\n  }, []);\n\n  const closeError = () => {\n    setError(false);\n  };\n\n  return (\n    <Section className={classes.app} justify=\"center\">\n      {loading && <Spinner size={80} strokeWidth={6} />}\n\n      {errorAccountDetails && (\n        <StatusIndication variant=\"danger\" text=\"error getting the info\" />\n      )}\n\n      <Col spacing={6} span={6}>\n        {account && (\n          <>\n            <TextField variant=\"h1\">Account Info: {account.name}</TextField>\n            {account.name && (\n              <TextField variant=\"h3\">Name: {account.name} </TextField>\n            )}\n            {account.email && (\n              <TextField variant=\"h3\">Email: {account.email}</TextField>\n            )}\n            <TextField variant=\"h3\">\n              Creator Name: {account.creatorName}\n            </TextField>\n\n            <TextField variant=\"h3\">\n              {\" \"}\n              Creator Email: {account.creatorEmail}\n            </TextField>\n\n            <TextField variant=\"h3\">\n              Created At: {new Date(account.createdAt).toLocaleString()}\n            </TextField>\n            <TextField variant=\"h3\">\n              Updated At: {new Date(account.updatedAt).toLocaleString()}\n            </TextField>\n          </>\n        )}\n      </Col>\n    </Section>\n  );\n}\n",{"ruleId":"772","replacedBy":"773"},{"ruleId":"774","replacedBy":"775"},{"ruleId":"776","severity":1,"message":"777","line":93,"column":21,"nodeType":"778","messageId":"779","endLine":93,"endColumn":32},{"ruleId":"776","severity":1,"message":"780","line":147,"column":7,"nodeType":"778","messageId":"779","endLine":147,"endColumn":18},{"ruleId":"776","severity":1,"message":"781","line":197,"column":7,"nodeType":"778","messageId":"779","endLine":197,"endColumn":24},{"ruleId":"782","severity":1,"message":"783","line":222,"column":1,"nodeType":"784","endLine":233,"endColumn":3},{"ruleId":"776","severity":1,"message":"785","line":8,"column":28,"nodeType":"778","messageId":"779","endLine":8,"endColumn":32},{"ruleId":"776","severity":1,"message":"786","line":22,"column":8,"nodeType":"778","messageId":"779","endLine":22,"endColumn":26},{"ruleId":"776","severity":1,"message":"787","line":18,"column":8,"nodeType":"778","messageId":"779","endLine":18,"endColumn":16},{"ruleId":"776","severity":1,"message":"788","line":19,"column":8,"nodeType":"778","messageId":"779","endLine":19,"endColumn":20},{"ruleId":"776","severity":1,"message":"789","line":30,"column":8,"nodeType":"778","messageId":"779","endLine":30,"endColumn":13},{"ruleId":"776","severity":1,"message":"790","line":31,"column":10,"nodeType":"778","messageId":"779","endLine":31,"endColumn":15},{"ruleId":"776","severity":1,"message":"791","line":33,"column":7,"nodeType":"778","messageId":"779","endLine":33,"endColumn":12},{"ruleId":"776","severity":1,"message":"792","line":337,"column":7,"nodeType":"778","messageId":"779","endLine":337,"endColumn":12},{"ruleId":"776","severity":1,"message":"793","line":354,"column":16,"nodeType":"778","messageId":"779","endLine":354,"endColumn":19},{"ruleId":"776","severity":1,"message":"794","line":354,"column":21,"nodeType":"778","messageId":"779","endLine":354,"endColumn":27},{"ruleId":"776","severity":1,"message":"795","line":355,"column":19,"nodeType":"778","messageId":"779","endLine":355,"endColumn":29},{"ruleId":"776","severity":1,"message":"796","line":360,"column":7,"nodeType":"778","messageId":"779","endLine":360,"endColumn":11},{"ruleId":"797","severity":1,"message":"798","line":383,"column":6,"nodeType":"799","endLine":383,"endColumn":8,"suggestions":"800"},{"ruleId":"797","severity":1,"message":"801","line":403,"column":6,"nodeType":"799","endLine":403,"endColumn":8,"suggestions":"802"},{"ruleId":"797","severity":1,"message":"803","line":412,"column":17,"nodeType":"804","endLine":412,"endColumn":38},{"ruleId":"776","severity":1,"message":"805","line":462,"column":11,"nodeType":"778","messageId":"779","endLine":462,"endColumn":18},{"ruleId":"776","severity":1,"message":"806","line":8,"column":10,"nodeType":"778","messageId":"779","endLine":8,"endColumn":14},{"ruleId":"776","severity":1,"message":"807","line":8,"column":16,"nodeType":"778","messageId":"779","endLine":8,"endColumn":19},{"ruleId":"776","severity":1,"message":"808","line":13,"column":3,"nodeType":"778","messageId":"779","endLine":13,"endColumn":30},{"ruleId":"776","severity":1,"message":"809","line":15,"column":3,"nodeType":"778","messageId":"779","endLine":15,"endColumn":33},{"ruleId":"776","severity":1,"message":"810","line":20,"column":3,"nodeType":"778","messageId":"779","endLine":20,"endColumn":27},{"ruleId":"776","severity":1,"message":"811","line":22,"column":3,"nodeType":"778","messageId":"779","endLine":22,"endColumn":30},{"ruleId":"776","severity":1,"message":"812","line":37,"column":7,"nodeType":"778","messageId":"779","endLine":37,"endColumn":14},{"ruleId":"776","severity":1,"message":"805","line":130,"column":7,"nodeType":"778","messageId":"779","endLine":130,"endColumn":14},{"ruleId":"776","severity":1,"message":"813","line":5,"column":19,"nodeType":"778","messageId":"779","endLine":5,"endColumn":28},{"ruleId":"776","severity":1,"message":"814","line":14,"column":8,"nodeType":"778","messageId":"779","endLine":14,"endColumn":23},{"ruleId":"776","severity":1,"message":"815","line":15,"column":8,"nodeType":"778","messageId":"779","endLine":15,"endColumn":24},{"ruleId":"776","severity":1,"message":"816","line":16,"column":8,"nodeType":"778","messageId":"779","endLine":16,"endColumn":20},{"ruleId":"776","severity":1,"message":"817","line":18,"column":8,"nodeType":"778","messageId":"779","endLine":18,"endColumn":16},{"ruleId":"776","severity":1,"message":"818","line":18,"column":20,"nodeType":"778","messageId":"779","endLine":18,"endColumn":26},{"ruleId":"776","severity":1,"message":"819","line":20,"column":8,"nodeType":"778","messageId":"779","endLine":20,"endColumn":16},{"ruleId":"776","severity":1,"message":"820","line":23,"column":8,"nodeType":"778","messageId":"779","endLine":23,"endColumn":22},{"ruleId":"776","severity":1,"message":"821","line":24,"column":8,"nodeType":"778","messageId":"779","endLine":24,"endColumn":18},{"ruleId":"776","severity":1,"message":"822","line":49,"column":11,"nodeType":"778","messageId":"779","endLine":49,"endColumn":14},{"ruleId":"776","severity":1,"message":"793","line":49,"column":16,"nodeType":"778","messageId":"779","endLine":49,"endColumn":19},{"ruleId":"776","severity":1,"message":"794","line":49,"column":21,"nodeType":"778","messageId":"779","endLine":49,"endColumn":27},{"ruleId":"776","severity":1,"message":"823","line":70,"column":24,"nodeType":"778","messageId":"779","endLine":70,"endColumn":31},{"ruleId":"776","severity":1,"message":"824","line":75,"column":14,"nodeType":"778","messageId":"779","endLine":75,"endColumn":27},{"ruleId":"776","severity":1,"message":"825","line":76,"column":12,"nodeType":"778","messageId":"779","endLine":76,"endColumn":23},{"ruleId":"797","severity":1,"message":"826","line":96,"column":6,"nodeType":"799","endLine":96,"endColumn":53,"suggestions":"827"},{"ruleId":"776","severity":1,"message":"813","line":5,"column":19,"nodeType":"778","messageId":"779","endLine":5,"endColumn":28},{"ruleId":"776","severity":1,"message":"828","line":13,"column":8,"nodeType":"778","messageId":"779","endLine":13,"endColumn":13},{"ruleId":"776","severity":1,"message":"814","line":14,"column":8,"nodeType":"778","messageId":"779","endLine":14,"endColumn":23},{"ruleId":"776","severity":1,"message":"815","line":15,"column":8,"nodeType":"778","messageId":"779","endLine":15,"endColumn":24},{"ruleId":"776","severity":1,"message":"816","line":16,"column":8,"nodeType":"778","messageId":"779","endLine":16,"endColumn":20},{"ruleId":"776","severity":1,"message":"817","line":18,"column":8,"nodeType":"778","messageId":"779","endLine":18,"endColumn":16},{"ruleId":"776","severity":1,"message":"818","line":18,"column":20,"nodeType":"778","messageId":"779","endLine":18,"endColumn":26},{"ruleId":"776","severity":1,"message":"819","line":20,"column":8,"nodeType":"778","messageId":"779","endLine":20,"endColumn":16},{"ruleId":"776","severity":1,"message":"820","line":23,"column":8,"nodeType":"778","messageId":"779","endLine":23,"endColumn":22},{"ruleId":"776","severity":1,"message":"821","line":24,"column":8,"nodeType":"778","messageId":"779","endLine":24,"endColumn":18},{"ruleId":"776","severity":1,"message":"822","line":49,"column":11,"nodeType":"778","messageId":"779","endLine":49,"endColumn":14},{"ruleId":"776","severity":1,"message":"793","line":49,"column":16,"nodeType":"778","messageId":"779","endLine":49,"endColumn":19},{"ruleId":"776","severity":1,"message":"794","line":49,"column":21,"nodeType":"778","messageId":"779","endLine":49,"endColumn":27},{"ruleId":"776","severity":1,"message":"829","line":55,"column":16,"nodeType":"778","messageId":"779","endLine":55,"endColumn":23},{"ruleId":"776","severity":1,"message":"824","line":70,"column":14,"nodeType":"778","messageId":"779","endLine":70,"endColumn":27},{"ruleId":"797","severity":1,"message":"830","line":86,"column":6,"nodeType":"799","endLine":86,"endColumn":40,"suggestions":"831"},{"ruleId":"776","severity":1,"message":"813","line":5,"column":19,"nodeType":"778","messageId":"779","endLine":5,"endColumn":28},{"ruleId":"776","severity":1,"message":"814","line":14,"column":8,"nodeType":"778","messageId":"779","endLine":14,"endColumn":23},{"ruleId":"776","severity":1,"message":"815","line":15,"column":8,"nodeType":"778","messageId":"779","endLine":15,"endColumn":24},{"ruleId":"776","severity":1,"message":"816","line":16,"column":8,"nodeType":"778","messageId":"779","endLine":16,"endColumn":20},{"ruleId":"776","severity":1,"message":"817","line":18,"column":8,"nodeType":"778","messageId":"779","endLine":18,"endColumn":16},{"ruleId":"776","severity":1,"message":"818","line":18,"column":20,"nodeType":"778","messageId":"779","endLine":18,"endColumn":26},{"ruleId":"776","severity":1,"message":"819","line":20,"column":8,"nodeType":"778","messageId":"779","endLine":20,"endColumn":16},{"ruleId":"776","severity":1,"message":"820","line":23,"column":8,"nodeType":"778","messageId":"779","endLine":23,"endColumn":22},{"ruleId":"776","severity":1,"message":"821","line":24,"column":8,"nodeType":"778","messageId":"779","endLine":24,"endColumn":18},{"ruleId":"776","severity":1,"message":"822","line":50,"column":11,"nodeType":"778","messageId":"779","endLine":50,"endColumn":14},{"ruleId":"776","severity":1,"message":"793","line":50,"column":16,"nodeType":"778","messageId":"779","endLine":50,"endColumn":19},{"ruleId":"776","severity":1,"message":"794","line":50,"column":21,"nodeType":"778","messageId":"779","endLine":50,"endColumn":27},{"ruleId":"776","severity":1,"message":"823","line":72,"column":21,"nodeType":"778","messageId":"779","endLine":72,"endColumn":28},{"ruleId":"776","severity":1,"message":"832","line":75,"column":24,"nodeType":"778","messageId":"779","endLine":75,"endColumn":38},{"ruleId":"776","severity":1,"message":"833","line":75,"column":40,"nodeType":"778","messageId":"779","endLine":75,"endColumn":52},{"ruleId":"797","severity":1,"message":"834","line":90,"column":6,"nodeType":"799","endLine":90,"endColumn":41,"suggestions":"835"},{"ruleId":"776","severity":1,"message":"814","line":15,"column":8,"nodeType":"778","messageId":"779","endLine":15,"endColumn":23},{"ruleId":"776","severity":1,"message":"815","line":16,"column":8,"nodeType":"778","messageId":"779","endLine":16,"endColumn":24},{"ruleId":"776","severity":1,"message":"816","line":17,"column":8,"nodeType":"778","messageId":"779","endLine":17,"endColumn":20},{"ruleId":"776","severity":1,"message":"817","line":19,"column":8,"nodeType":"778","messageId":"779","endLine":19,"endColumn":16},{"ruleId":"776","severity":1,"message":"818","line":19,"column":20,"nodeType":"778","messageId":"779","endLine":19,"endColumn":26},{"ruleId":"776","severity":1,"message":"819","line":21,"column":8,"nodeType":"778","messageId":"779","endLine":21,"endColumn":16},{"ruleId":"776","severity":1,"message":"820","line":24,"column":8,"nodeType":"778","messageId":"779","endLine":24,"endColumn":22},{"ruleId":"776","severity":1,"message":"821","line":25,"column":8,"nodeType":"778","messageId":"779","endLine":25,"endColumn":18},{"ruleId":"776","severity":1,"message":"822","line":53,"column":11,"nodeType":"778","messageId":"779","endLine":53,"endColumn":14},{"ruleId":"776","severity":1,"message":"793","line":53,"column":16,"nodeType":"778","messageId":"779","endLine":53,"endColumn":19},{"ruleId":"776","severity":1,"message":"794","line":53,"column":21,"nodeType":"778","messageId":"779","endLine":53,"endColumn":27},{"ruleId":"776","severity":1,"message":"823","line":70,"column":11,"nodeType":"778","messageId":"779","endLine":70,"endColumn":18},{"ruleId":"776","severity":1,"message":"836","line":70,"column":27,"nodeType":"778","messageId":"779","endLine":70,"endColumn":43},{"ruleId":"776","severity":1,"message":"837","line":74,"column":14,"nodeType":"778","messageId":"779","endLine":74,"endColumn":27},{"ruleId":"776","severity":1,"message":"838","line":82,"column":14,"nodeType":"778","messageId":"779","endLine":82,"endColumn":27},{"ruleId":"797","severity":1,"message":"839","line":139,"column":6,"nodeType":"799","endLine":139,"endColumn":70,"suggestions":"840"},{"ruleId":"841","severity":2,"message":"842","line":308,"column":20,"nodeType":"843","endLine":308,"endColumn":31},{"ruleId":"776","severity":1,"message":"844","line":1,"column":38,"nodeType":"778","messageId":"779","endLine":1,"endColumn":49},{"ruleId":"776","severity":1,"message":"845","line":5,"column":10,"nodeType":"778","messageId":"779","endLine":5,"endColumn":28},{"ruleId":"776","severity":1,"message":"846","line":19,"column":10,"nodeType":"778","messageId":"779","endLine":19,"endColumn":15},{"ruleId":"776","severity":1,"message":"847","line":21,"column":8,"nodeType":"778","messageId":"779","endLine":21,"endColumn":15},{"ruleId":"776","severity":1,"message":"787","line":23,"column":8,"nodeType":"778","messageId":"779","endLine":23,"endColumn":16},{"ruleId":"776","severity":1,"message":"788","line":24,"column":8,"nodeType":"778","messageId":"779","endLine":24,"endColumn":20},{"ruleId":"776","severity":1,"message":"848","line":28,"column":8,"nodeType":"778","messageId":"779","endLine":28,"endColumn":16},{"ruleId":"776","severity":1,"message":"849","line":39,"column":10,"nodeType":"778","messageId":"779","endLine":39,"endColumn":17},{"ruleId":"776","severity":1,"message":"795","line":39,"column":19,"nodeType":"778","messageId":"779","endLine":39,"endColumn":29},{"ruleId":"776","severity":1,"message":"850","line":44,"column":10,"nodeType":"778","messageId":"779","endLine":44,"endColumn":21},{"ruleId":"776","severity":1,"message":"838","line":60,"column":14,"nodeType":"778","messageId":"779","endLine":60,"endColumn":27},{"ruleId":"776","severity":1,"message":"851","line":61,"column":12,"nodeType":"778","messageId":"779","endLine":61,"endColumn":23},{"ruleId":"776","severity":1,"message":"813","line":5,"column":19,"nodeType":"778","messageId":"779","endLine":5,"endColumn":28},{"ruleId":"776","severity":1,"message":"814","line":14,"column":8,"nodeType":"778","messageId":"779","endLine":14,"endColumn":23},{"ruleId":"776","severity":1,"message":"815","line":15,"column":8,"nodeType":"778","messageId":"779","endLine":15,"endColumn":24},{"ruleId":"776","severity":1,"message":"816","line":16,"column":8,"nodeType":"778","messageId":"779","endLine":16,"endColumn":20},{"ruleId":"776","severity":1,"message":"817","line":18,"column":8,"nodeType":"778","messageId":"779","endLine":18,"endColumn":16},{"ruleId":"776","severity":1,"message":"818","line":18,"column":20,"nodeType":"778","messageId":"779","endLine":18,"endColumn":26},{"ruleId":"776","severity":1,"message":"819","line":20,"column":8,"nodeType":"778","messageId":"779","endLine":20,"endColumn":16},{"ruleId":"776","severity":1,"message":"820","line":23,"column":8,"nodeType":"778","messageId":"779","endLine":23,"endColumn":22},{"ruleId":"776","severity":1,"message":"821","line":24,"column":8,"nodeType":"778","messageId":"779","endLine":24,"endColumn":18},{"ruleId":"776","severity":1,"message":"822","line":49,"column":11,"nodeType":"778","messageId":"779","endLine":49,"endColumn":14},{"ruleId":"776","severity":1,"message":"793","line":49,"column":16,"nodeType":"778","messageId":"779","endLine":49,"endColumn":19},{"ruleId":"776","severity":1,"message":"794","line":49,"column":21,"nodeType":"778","messageId":"779","endLine":49,"endColumn":27},{"ruleId":"776","severity":1,"message":"823","line":71,"column":21,"nodeType":"778","messageId":"779","endLine":71,"endColumn":28},{"ruleId":"776","severity":1,"message":"824","line":76,"column":14,"nodeType":"778","messageId":"779","endLine":76,"endColumn":27},{"ruleId":"776","severity":1,"message":"825","line":77,"column":12,"nodeType":"778","messageId":"779","endLine":77,"endColumn":23},{"ruleId":"776","severity":1,"message":"832","line":82,"column":24,"nodeType":"778","messageId":"779","endLine":82,"endColumn":38},{"ruleId":"776","severity":1,"message":"833","line":82,"column":40,"nodeType":"778","messageId":"779","endLine":82,"endColumn":52},{"ruleId":"797","severity":1,"message":"852","line":96,"column":6,"nodeType":"799","endLine":96,"endColumn":61,"suggestions":"853"},{"ruleId":"776","severity":1,"message":"813","line":5,"column":19,"nodeType":"778","messageId":"779","endLine":5,"endColumn":28},{"ruleId":"776","severity":1,"message":"828","line":13,"column":8,"nodeType":"778","messageId":"779","endLine":13,"endColumn":13},{"ruleId":"776","severity":1,"message":"814","line":14,"column":8,"nodeType":"778","messageId":"779","endLine":14,"endColumn":23},{"ruleId":"776","severity":1,"message":"815","line":15,"column":8,"nodeType":"778","messageId":"779","endLine":15,"endColumn":24},{"ruleId":"776","severity":1,"message":"816","line":16,"column":8,"nodeType":"778","messageId":"779","endLine":16,"endColumn":20},{"ruleId":"776","severity":1,"message":"817","line":18,"column":8,"nodeType":"778","messageId":"779","endLine":18,"endColumn":16},{"ruleId":"776","severity":1,"message":"818","line":18,"column":20,"nodeType":"778","messageId":"779","endLine":18,"endColumn":26},{"ruleId":"776","severity":1,"message":"819","line":20,"column":8,"nodeType":"778","messageId":"779","endLine":20,"endColumn":16},{"ruleId":"776","severity":1,"message":"820","line":23,"column":8,"nodeType":"778","messageId":"779","endLine":23,"endColumn":22},{"ruleId":"776","severity":1,"message":"821","line":24,"column":8,"nodeType":"778","messageId":"779","endLine":24,"endColumn":18},{"ruleId":"776","severity":1,"message":"822","line":49,"column":11,"nodeType":"778","messageId":"779","endLine":49,"endColumn":14},{"ruleId":"776","severity":1,"message":"793","line":49,"column":16,"nodeType":"778","messageId":"779","endLine":49,"endColumn":19},{"ruleId":"776","severity":1,"message":"794","line":49,"column":21,"nodeType":"778","messageId":"779","endLine":49,"endColumn":27},{"ruleId":"776","severity":1,"message":"854","line":55,"column":10,"nodeType":"778","messageId":"779","endLine":55,"endColumn":19},{"ruleId":"776","severity":1,"message":"855","line":55,"column":21,"nodeType":"778","messageId":"779","endLine":55,"endColumn":33},{"ruleId":"776","severity":1,"message":"856","line":57,"column":10,"nodeType":"778","messageId":"779","endLine":57,"endColumn":18},{"ruleId":"776","severity":1,"message":"857","line":57,"column":20,"nodeType":"778","messageId":"779","endLine":57,"endColumn":31},{"ruleId":"776","severity":1,"message":"824","line":72,"column":14,"nodeType":"778","messageId":"779","endLine":72,"endColumn":27},{"ruleId":"797","severity":1,"message":"858","line":88,"column":6,"nodeType":"799","endLine":88,"endColumn":49,"suggestions":"859"},{"ruleId":"776","severity":1,"message":"813","line":5,"column":19,"nodeType":"778","messageId":"779","endLine":5,"endColumn":28},{"ruleId":"776","severity":1,"message":"814","line":14,"column":8,"nodeType":"778","messageId":"779","endLine":14,"endColumn":23},{"ruleId":"776","severity":1,"message":"815","line":15,"column":8,"nodeType":"778","messageId":"779","endLine":15,"endColumn":24},{"ruleId":"776","severity":1,"message":"816","line":16,"column":8,"nodeType":"778","messageId":"779","endLine":16,"endColumn":20},{"ruleId":"776","severity":1,"message":"817","line":18,"column":8,"nodeType":"778","messageId":"779","endLine":18,"endColumn":16},{"ruleId":"776","severity":1,"message":"818","line":18,"column":20,"nodeType":"778","messageId":"779","endLine":18,"endColumn":26},{"ruleId":"776","severity":1,"message":"819","line":20,"column":8,"nodeType":"778","messageId":"779","endLine":20,"endColumn":16},{"ruleId":"776","severity":1,"message":"820","line":23,"column":8,"nodeType":"778","messageId":"779","endLine":23,"endColumn":22},{"ruleId":"776","severity":1,"message":"821","line":24,"column":8,"nodeType":"778","messageId":"779","endLine":24,"endColumn":18},{"ruleId":"776","severity":1,"message":"822","line":50,"column":11,"nodeType":"778","messageId":"779","endLine":50,"endColumn":14},{"ruleId":"776","severity":1,"message":"793","line":50,"column":16,"nodeType":"778","messageId":"779","endLine":50,"endColumn":19},{"ruleId":"776","severity":1,"message":"794","line":50,"column":21,"nodeType":"778","messageId":"779","endLine":50,"endColumn":27},{"ruleId":"776","severity":1,"message":"823","line":72,"column":21,"nodeType":"778","messageId":"779","endLine":72,"endColumn":28},{"ruleId":"776","severity":1,"message":"832","line":75,"column":24,"nodeType":"778","messageId":"779","endLine":75,"endColumn":38},{"ruleId":"776","severity":1,"message":"833","line":75,"column":40,"nodeType":"778","messageId":"779","endLine":75,"endColumn":52},{"ruleId":"797","severity":1,"message":"834","line":90,"column":6,"nodeType":"799","endLine":90,"endColumn":41,"suggestions":"860"},{"ruleId":"776","severity":1,"message":"844","line":1,"column":38,"nodeType":"778","messageId":"779","endLine":1,"endColumn":49},{"ruleId":"776","severity":1,"message":"861","line":5,"column":10,"nodeType":"778","messageId":"779","endLine":5,"endColumn":28},{"ruleId":"776","severity":1,"message":"846","line":19,"column":10,"nodeType":"778","messageId":"779","endLine":19,"endColumn":15},{"ruleId":"776","severity":1,"message":"847","line":21,"column":8,"nodeType":"778","messageId":"779","endLine":21,"endColumn":15},{"ruleId":"776","severity":1,"message":"787","line":23,"column":8,"nodeType":"778","messageId":"779","endLine":23,"endColumn":16},{"ruleId":"776","severity":1,"message":"788","line":24,"column":8,"nodeType":"778","messageId":"779","endLine":24,"endColumn":20},{"ruleId":"776","severity":1,"message":"848","line":28,"column":8,"nodeType":"778","messageId":"779","endLine":28,"endColumn":16},{"ruleId":"776","severity":1,"message":"849","line":39,"column":10,"nodeType":"778","messageId":"779","endLine":39,"endColumn":17},{"ruleId":"776","severity":1,"message":"795","line":39,"column":19,"nodeType":"778","messageId":"779","endLine":39,"endColumn":29},{"ruleId":"776","severity":1,"message":"862","line":44,"column":10,"nodeType":"778","messageId":"779","endLine":44,"endColumn":21},{"ruleId":"776","severity":1,"message":"838","line":60,"column":14,"nodeType":"778","messageId":"779","endLine":60,"endColumn":27},{"ruleId":"776","severity":1,"message":"851","line":61,"column":12,"nodeType":"778","messageId":"779","endLine":61,"endColumn":23},{"ruleId":"776","severity":1,"message":"814","line":15,"column":8,"nodeType":"778","messageId":"779","endLine":15,"endColumn":23},{"ruleId":"776","severity":1,"message":"815","line":16,"column":8,"nodeType":"778","messageId":"779","endLine":16,"endColumn":24},{"ruleId":"776","severity":1,"message":"816","line":17,"column":8,"nodeType":"778","messageId":"779","endLine":17,"endColumn":20},{"ruleId":"776","severity":1,"message":"817","line":19,"column":8,"nodeType":"778","messageId":"779","endLine":19,"endColumn":16},{"ruleId":"776","severity":1,"message":"818","line":19,"column":20,"nodeType":"778","messageId":"779","endLine":19,"endColumn":26},{"ruleId":"776","severity":1,"message":"819","line":21,"column":8,"nodeType":"778","messageId":"779","endLine":21,"endColumn":16},{"ruleId":"776","severity":1,"message":"820","line":24,"column":8,"nodeType":"778","messageId":"779","endLine":24,"endColumn":22},{"ruleId":"776","severity":1,"message":"821","line":25,"column":8,"nodeType":"778","messageId":"779","endLine":25,"endColumn":18},{"ruleId":"776","severity":1,"message":"822","line":53,"column":11,"nodeType":"778","messageId":"779","endLine":53,"endColumn":14},{"ruleId":"776","severity":1,"message":"793","line":53,"column":16,"nodeType":"778","messageId":"779","endLine":53,"endColumn":19},{"ruleId":"776","severity":1,"message":"794","line":53,"column":21,"nodeType":"778","messageId":"779","endLine":53,"endColumn":27},{"ruleId":"776","severity":1,"message":"823","line":70,"column":11,"nodeType":"778","messageId":"779","endLine":70,"endColumn":18},{"ruleId":"776","severity":1,"message":"863","line":70,"column":27,"nodeType":"778","messageId":"779","endLine":70,"endColumn":43},{"ruleId":"776","severity":1,"message":"837","line":74,"column":14,"nodeType":"778","messageId":"779","endLine":74,"endColumn":27},{"ruleId":"776","severity":1,"message":"838","line":82,"column":14,"nodeType":"778","messageId":"779","endLine":82,"endColumn":27},{"ruleId":"797","severity":1,"message":"839","line":139,"column":6,"nodeType":"799","endLine":139,"endColumn":70,"suggestions":"864"},{"ruleId":"841","severity":2,"message":"842","line":308,"column":20,"nodeType":"843","endLine":308,"endColumn":31},{"ruleId":"776","severity":1,"message":"865","line":16,"column":3,"nodeType":"778","messageId":"779","endLine":16,"endColumn":27},{"ruleId":"776","severity":1,"message":"866","line":18,"column":3,"nodeType":"778","messageId":"779","endLine":18,"endColumn":30},{"ruleId":"776","severity":1,"message":"867","line":33,"column":7,"nodeType":"778","messageId":"779","endLine":33,"endColumn":14},{"ruleId":"772","replacedBy":"868"},{"ruleId":"774","replacedBy":"869"},{"ruleId":"776","severity":1,"message":"777","line":93,"column":21,"nodeType":"778","messageId":"779","endLine":93,"endColumn":32},{"ruleId":"776","severity":1,"message":"780","line":144,"column":7,"nodeType":"778","messageId":"779","endLine":144,"endColumn":18},{"ruleId":"776","severity":1,"message":"781","line":199,"column":7,"nodeType":"778","messageId":"779","endLine":199,"endColumn":24},{"ruleId":"782","severity":1,"message":"783","line":220,"column":1,"nodeType":"784","endLine":231,"endColumn":3},{"ruleId":"776","severity":1,"message":"870","line":5,"column":3,"nodeType":"778","messageId":"779","endLine":5,"endColumn":11},{"ruleId":"776","severity":1,"message":"871","line":8,"column":10,"nodeType":"778","messageId":"779","endLine":8,"endColumn":21},{"ruleId":"776","severity":1,"message":"785","line":15,"column":28,"nodeType":"778","messageId":"779","endLine":15,"endColumn":32},{"ruleId":"776","severity":1,"message":"786","line":29,"column":8,"nodeType":"778","messageId":"779","endLine":29,"endColumn":26},{"ruleId":"776","severity":1,"message":"787","line":18,"column":8,"nodeType":"778","messageId":"779","endLine":18,"endColumn":16},{"ruleId":"776","severity":1,"message":"788","line":19,"column":8,"nodeType":"778","messageId":"779","endLine":19,"endColumn":20},{"ruleId":"776","severity":1,"message":"789","line":30,"column":8,"nodeType":"778","messageId":"779","endLine":30,"endColumn":13},{"ruleId":"776","severity":1,"message":"790","line":31,"column":10,"nodeType":"778","messageId":"779","endLine":31,"endColumn":15},{"ruleId":"776","severity":1,"message":"791","line":33,"column":7,"nodeType":"778","messageId":"779","endLine":33,"endColumn":12},{"ruleId":"776","severity":1,"message":"792","line":337,"column":7,"nodeType":"778","messageId":"779","endLine":337,"endColumn":12},{"ruleId":"776","severity":1,"message":"793","line":354,"column":16,"nodeType":"778","messageId":"779","endLine":354,"endColumn":19},{"ruleId":"776","severity":1,"message":"794","line":354,"column":21,"nodeType":"778","messageId":"779","endLine":354,"endColumn":27},{"ruleId":"776","severity":1,"message":"795","line":355,"column":19,"nodeType":"778","messageId":"779","endLine":355,"endColumn":29},{"ruleId":"776","severity":1,"message":"796","line":360,"column":7,"nodeType":"778","messageId":"779","endLine":360,"endColumn":11},{"ruleId":"797","severity":1,"message":"798","line":383,"column":6,"nodeType":"799","endLine":383,"endColumn":8,"suggestions":"872"},{"ruleId":"797","severity":1,"message":"801","line":403,"column":6,"nodeType":"799","endLine":403,"endColumn":8,"suggestions":"873"},{"ruleId":"797","severity":1,"message":"803","line":412,"column":17,"nodeType":"804","endLine":412,"endColumn":38},{"ruleId":"776","severity":1,"message":"805","line":462,"column":11,"nodeType":"778","messageId":"779","endLine":462,"endColumn":18},{"ruleId":"776","severity":1,"message":"813","line":5,"column":19,"nodeType":"778","messageId":"779","endLine":5,"endColumn":28},{"ruleId":"776","severity":1,"message":"814","line":14,"column":8,"nodeType":"778","messageId":"779","endLine":14,"endColumn":23},{"ruleId":"776","severity":1,"message":"815","line":15,"column":8,"nodeType":"778","messageId":"779","endLine":15,"endColumn":24},{"ruleId":"776","severity":1,"message":"816","line":16,"column":8,"nodeType":"778","messageId":"779","endLine":16,"endColumn":20},{"ruleId":"776","severity":1,"message":"817","line":18,"column":8,"nodeType":"778","messageId":"779","endLine":18,"endColumn":16},{"ruleId":"776","severity":1,"message":"818","line":18,"column":20,"nodeType":"778","messageId":"779","endLine":18,"endColumn":26},{"ruleId":"776","severity":1,"message":"819","line":20,"column":8,"nodeType":"778","messageId":"779","endLine":20,"endColumn":16},{"ruleId":"776","severity":1,"message":"820","line":23,"column":8,"nodeType":"778","messageId":"779","endLine":23,"endColumn":22},{"ruleId":"776","severity":1,"message":"821","line":24,"column":8,"nodeType":"778","messageId":"779","endLine":24,"endColumn":18},{"ruleId":"776","severity":1,"message":"822","line":50,"column":11,"nodeType":"778","messageId":"779","endLine":50,"endColumn":14},{"ruleId":"776","severity":1,"message":"793","line":50,"column":16,"nodeType":"778","messageId":"779","endLine":50,"endColumn":19},{"ruleId":"776","severity":1,"message":"794","line":50,"column":21,"nodeType":"778","messageId":"779","endLine":50,"endColumn":27},{"ruleId":"776","severity":1,"message":"823","line":72,"column":21,"nodeType":"778","messageId":"779","endLine":72,"endColumn":28},{"ruleId":"776","severity":1,"message":"832","line":75,"column":24,"nodeType":"778","messageId":"779","endLine":75,"endColumn":38},{"ruleId":"776","severity":1,"message":"833","line":75,"column":40,"nodeType":"778","messageId":"779","endLine":75,"endColumn":52},{"ruleId":"797","severity":1,"message":"834","line":90,"column":6,"nodeType":"799","endLine":90,"endColumn":41,"suggestions":"874"},{"ruleId":"776","severity":1,"message":"813","line":5,"column":19,"nodeType":"778","messageId":"779","endLine":5,"endColumn":28},{"ruleId":"776","severity":1,"message":"814","line":14,"column":8,"nodeType":"778","messageId":"779","endLine":14,"endColumn":23},{"ruleId":"776","severity":1,"message":"815","line":15,"column":8,"nodeType":"778","messageId":"779","endLine":15,"endColumn":24},{"ruleId":"776","severity":1,"message":"816","line":16,"column":8,"nodeType":"778","messageId":"779","endLine":16,"endColumn":20},{"ruleId":"776","severity":1,"message":"817","line":18,"column":8,"nodeType":"778","messageId":"779","endLine":18,"endColumn":16},{"ruleId":"776","severity":1,"message":"818","line":18,"column":20,"nodeType":"778","messageId":"779","endLine":18,"endColumn":26},{"ruleId":"776","severity":1,"message":"819","line":20,"column":8,"nodeType":"778","messageId":"779","endLine":20,"endColumn":16},{"ruleId":"776","severity":1,"message":"820","line":23,"column":8,"nodeType":"778","messageId":"779","endLine":23,"endColumn":22},{"ruleId":"776","severity":1,"message":"821","line":24,"column":8,"nodeType":"778","messageId":"779","endLine":24,"endColumn":18},{"ruleId":"776","severity":1,"message":"875","line":38,"column":10,"nodeType":"778","messageId":"779","endLine":38,"endColumn":20},{"ruleId":"776","severity":1,"message":"822","line":52,"column":11,"nodeType":"778","messageId":"779","endLine":52,"endColumn":14},{"ruleId":"776","severity":1,"message":"793","line":52,"column":16,"nodeType":"778","messageId":"779","endLine":52,"endColumn":19},{"ruleId":"776","severity":1,"message":"794","line":52,"column":21,"nodeType":"778","messageId":"779","endLine":52,"endColumn":27},{"ruleId":"776","severity":1,"message":"823","line":72,"column":24,"nodeType":"778","messageId":"779","endLine":72,"endColumn":31},{"ruleId":"776","severity":1,"message":"876","line":84,"column":5,"nodeType":"778","messageId":"779","endLine":84,"endColumn":14},{"ruleId":"797","severity":1,"message":"826","line":112,"column":6,"nodeType":"799","endLine":112,"endColumn":53,"suggestions":"877"},{"ruleId":"776","severity":1,"message":"814","line":15,"column":8,"nodeType":"778","messageId":"779","endLine":15,"endColumn":23},{"ruleId":"776","severity":1,"message":"815","line":16,"column":8,"nodeType":"778","messageId":"779","endLine":16,"endColumn":24},{"ruleId":"776","severity":1,"message":"816","line":17,"column":8,"nodeType":"778","messageId":"779","endLine":17,"endColumn":20},{"ruleId":"776","severity":1,"message":"817","line":19,"column":8,"nodeType":"778","messageId":"779","endLine":19,"endColumn":16},{"ruleId":"776","severity":1,"message":"818","line":19,"column":20,"nodeType":"778","messageId":"779","endLine":19,"endColumn":26},{"ruleId":"776","severity":1,"message":"819","line":21,"column":8,"nodeType":"778","messageId":"779","endLine":21,"endColumn":16},{"ruleId":"776","severity":1,"message":"820","line":24,"column":8,"nodeType":"778","messageId":"779","endLine":24,"endColumn":22},{"ruleId":"776","severity":1,"message":"821","line":25,"column":8,"nodeType":"778","messageId":"779","endLine":25,"endColumn":18},{"ruleId":"776","severity":1,"message":"822","line":59,"column":11,"nodeType":"778","messageId":"779","endLine":59,"endColumn":14},{"ruleId":"776","severity":1,"message":"793","line":59,"column":16,"nodeType":"778","messageId":"779","endLine":59,"endColumn":19},{"ruleId":"776","severity":1,"message":"794","line":59,"column":21,"nodeType":"778","messageId":"779","endLine":59,"endColumn":27},{"ruleId":"776","severity":1,"message":"878","line":70,"column":10,"nodeType":"778","messageId":"779","endLine":70,"endColumn":15},{"ruleId":"776","severity":1,"message":"879","line":72,"column":9,"nodeType":"778","messageId":"779","endLine":72,"endColumn":21},{"ruleId":"776","severity":1,"message":"823","line":76,"column":11,"nodeType":"778","messageId":"779","endLine":76,"endColumn":18},{"ruleId":"776","severity":1,"message":"837","line":80,"column":14,"nodeType":"778","messageId":"779","endLine":80,"endColumn":27},{"ruleId":"776","severity":1,"message":"838","line":87,"column":14,"nodeType":"778","messageId":"779","endLine":87,"endColumn":27},{"ruleId":"797","severity":1,"message":"839","line":142,"column":6,"nodeType":"799","endLine":142,"endColumn":75,"suggestions":"880"},{"ruleId":"797","severity":1,"message":"881","line":152,"column":6,"nodeType":"799","endLine":152,"endColumn":8,"suggestions":"882"},{"ruleId":"776","severity":1,"message":"883","line":194,"column":9,"nodeType":"778","messageId":"779","endLine":194,"endColumn":19},{"ruleId":"776","severity":1,"message":"813","line":5,"column":19,"nodeType":"778","messageId":"779","endLine":5,"endColumn":28},{"ruleId":"776","severity":1,"message":"814","line":14,"column":8,"nodeType":"778","messageId":"779","endLine":14,"endColumn":23},{"ruleId":"776","severity":1,"message":"815","line":15,"column":8,"nodeType":"778","messageId":"779","endLine":15,"endColumn":24},{"ruleId":"776","severity":1,"message":"816","line":16,"column":8,"nodeType":"778","messageId":"779","endLine":16,"endColumn":20},{"ruleId":"776","severity":1,"message":"817","line":18,"column":8,"nodeType":"778","messageId":"779","endLine":18,"endColumn":16},{"ruleId":"776","severity":1,"message":"818","line":18,"column":20,"nodeType":"778","messageId":"779","endLine":18,"endColumn":26},{"ruleId":"776","severity":1,"message":"819","line":20,"column":8,"nodeType":"778","messageId":"779","endLine":20,"endColumn":16},{"ruleId":"776","severity":1,"message":"820","line":23,"column":8,"nodeType":"778","messageId":"779","endLine":23,"endColumn":22},{"ruleId":"776","severity":1,"message":"821","line":24,"column":8,"nodeType":"778","messageId":"779","endLine":24,"endColumn":18},{"ruleId":"776","severity":1,"message":"822","line":49,"column":11,"nodeType":"778","messageId":"779","endLine":49,"endColumn":14},{"ruleId":"776","severity":1,"message":"793","line":49,"column":16,"nodeType":"778","messageId":"779","endLine":49,"endColumn":19},{"ruleId":"776","severity":1,"message":"794","line":49,"column":21,"nodeType":"778","messageId":"779","endLine":49,"endColumn":27},{"ruleId":"776","severity":1,"message":"823","line":71,"column":21,"nodeType":"778","messageId":"779","endLine":71,"endColumn":28},{"ruleId":"776","severity":1,"message":"824","line":76,"column":14,"nodeType":"778","messageId":"779","endLine":76,"endColumn":27},{"ruleId":"776","severity":1,"message":"825","line":77,"column":12,"nodeType":"778","messageId":"779","endLine":77,"endColumn":23},{"ruleId":"776","severity":1,"message":"832","line":82,"column":24,"nodeType":"778","messageId":"779","endLine":82,"endColumn":38},{"ruleId":"776","severity":1,"message":"833","line":82,"column":40,"nodeType":"778","messageId":"779","endLine":82,"endColumn":52},{"ruleId":"797","severity":1,"message":"852","line":103,"column":6,"nodeType":"799","endLine":103,"endColumn":62,"suggestions":"884"},{"ruleId":"776","severity":1,"message":"813","line":5,"column":19,"nodeType":"778","messageId":"779","endLine":5,"endColumn":28},{"ruleId":"776","severity":1,"message":"828","line":13,"column":8,"nodeType":"778","messageId":"779","endLine":13,"endColumn":13},{"ruleId":"776","severity":1,"message":"814","line":14,"column":8,"nodeType":"778","messageId":"779","endLine":14,"endColumn":23},{"ruleId":"776","severity":1,"message":"815","line":15,"column":8,"nodeType":"778","messageId":"779","endLine":15,"endColumn":24},{"ruleId":"776","severity":1,"message":"816","line":16,"column":8,"nodeType":"778","messageId":"779","endLine":16,"endColumn":20},{"ruleId":"776","severity":1,"message":"817","line":18,"column":8,"nodeType":"778","messageId":"779","endLine":18,"endColumn":16},{"ruleId":"776","severity":1,"message":"818","line":18,"column":20,"nodeType":"778","messageId":"779","endLine":18,"endColumn":26},{"ruleId":"776","severity":1,"message":"819","line":20,"column":8,"nodeType":"778","messageId":"779","endLine":20,"endColumn":16},{"ruleId":"776","severity":1,"message":"820","line":23,"column":8,"nodeType":"778","messageId":"779","endLine":23,"endColumn":22},{"ruleId":"776","severity":1,"message":"821","line":24,"column":8,"nodeType":"778","messageId":"779","endLine":24,"endColumn":18},{"ruleId":"776","severity":1,"message":"822","line":49,"column":11,"nodeType":"778","messageId":"779","endLine":49,"endColumn":14},{"ruleId":"776","severity":1,"message":"793","line":49,"column":16,"nodeType":"778","messageId":"779","endLine":49,"endColumn":19},{"ruleId":"776","severity":1,"message":"794","line":49,"column":21,"nodeType":"778","messageId":"779","endLine":49,"endColumn":27},{"ruleId":"776","severity":1,"message":"829","line":55,"column":16,"nodeType":"778","messageId":"779","endLine":55,"endColumn":23},{"ruleId":"776","severity":1,"message":"824","line":70,"column":14,"nodeType":"778","messageId":"779","endLine":70,"endColumn":27},{"ruleId":"797","severity":1,"message":"830","line":86,"column":6,"nodeType":"799","endLine":86,"endColumn":40,"suggestions":"885"},{"ruleId":"776","severity":1,"message":"813","line":5,"column":19,"nodeType":"778","messageId":"779","endLine":5,"endColumn":28},{"ruleId":"776","severity":1,"message":"828","line":13,"column":8,"nodeType":"778","messageId":"779","endLine":13,"endColumn":13},{"ruleId":"776","severity":1,"message":"814","line":14,"column":8,"nodeType":"778","messageId":"779","endLine":14,"endColumn":23},{"ruleId":"776","severity":1,"message":"815","line":15,"column":8,"nodeType":"778","messageId":"779","endLine":15,"endColumn":24},{"ruleId":"776","severity":1,"message":"816","line":16,"column":8,"nodeType":"778","messageId":"779","endLine":16,"endColumn":20},{"ruleId":"776","severity":1,"message":"817","line":18,"column":8,"nodeType":"778","messageId":"779","endLine":18,"endColumn":16},{"ruleId":"776","severity":1,"message":"818","line":18,"column":20,"nodeType":"778","messageId":"779","endLine":18,"endColumn":26},{"ruleId":"776","severity":1,"message":"819","line":20,"column":8,"nodeType":"778","messageId":"779","endLine":20,"endColumn":16},{"ruleId":"776","severity":1,"message":"820","line":23,"column":8,"nodeType":"778","messageId":"779","endLine":23,"endColumn":22},{"ruleId":"776","severity":1,"message":"821","line":24,"column":8,"nodeType":"778","messageId":"779","endLine":24,"endColumn":18},{"ruleId":"776","severity":1,"message":"822","line":49,"column":11,"nodeType":"778","messageId":"779","endLine":49,"endColumn":14},{"ruleId":"776","severity":1,"message":"793","line":49,"column":16,"nodeType":"778","messageId":"779","endLine":49,"endColumn":19},{"ruleId":"776","severity":1,"message":"794","line":49,"column":21,"nodeType":"778","messageId":"779","endLine":49,"endColumn":27},{"ruleId":"776","severity":1,"message":"854","line":55,"column":10,"nodeType":"778","messageId":"779","endLine":55,"endColumn":19},{"ruleId":"776","severity":1,"message":"855","line":55,"column":21,"nodeType":"778","messageId":"779","endLine":55,"endColumn":33},{"ruleId":"776","severity":1,"message":"856","line":57,"column":10,"nodeType":"778","messageId":"779","endLine":57,"endColumn":18},{"ruleId":"776","severity":1,"message":"857","line":57,"column":20,"nodeType":"778","messageId":"779","endLine":57,"endColumn":31},{"ruleId":"776","severity":1,"message":"824","line":72,"column":14,"nodeType":"778","messageId":"779","endLine":72,"endColumn":27},{"ruleId":"797","severity":1,"message":"858","line":91,"column":6,"nodeType":"799","endLine":91,"endColumn":50,"suggestions":"886"},{"ruleId":"776","severity":1,"message":"813","line":5,"column":19,"nodeType":"778","messageId":"779","endLine":5,"endColumn":28},{"ruleId":"776","severity":1,"message":"814","line":14,"column":8,"nodeType":"778","messageId":"779","endLine":14,"endColumn":23},{"ruleId":"776","severity":1,"message":"815","line":15,"column":8,"nodeType":"778","messageId":"779","endLine":15,"endColumn":24},{"ruleId":"776","severity":1,"message":"816","line":16,"column":8,"nodeType":"778","messageId":"779","endLine":16,"endColumn":20},{"ruleId":"776","severity":1,"message":"887","line":17,"column":8,"nodeType":"778","messageId":"779","endLine":17,"endColumn":18},{"ruleId":"776","severity":1,"message":"817","line":18,"column":8,"nodeType":"778","messageId":"779","endLine":18,"endColumn":16},{"ruleId":"776","severity":1,"message":"818","line":18,"column":20,"nodeType":"778","messageId":"779","endLine":18,"endColumn":26},{"ruleId":"776","severity":1,"message":"819","line":20,"column":8,"nodeType":"778","messageId":"779","endLine":20,"endColumn":16},{"ruleId":"776","severity":1,"message":"820","line":23,"column":8,"nodeType":"778","messageId":"779","endLine":23,"endColumn":22},{"ruleId":"776","severity":1,"message":"821","line":24,"column":8,"nodeType":"778","messageId":"779","endLine":24,"endColumn":18},{"ruleId":"776","severity":1,"message":"822","line":50,"column":11,"nodeType":"778","messageId":"779","endLine":50,"endColumn":14},{"ruleId":"776","severity":1,"message":"793","line":50,"column":16,"nodeType":"778","messageId":"779","endLine":50,"endColumn":19},{"ruleId":"776","severity":1,"message":"794","line":50,"column":21,"nodeType":"778","messageId":"779","endLine":50,"endColumn":27},{"ruleId":"776","severity":1,"message":"823","line":67,"column":21,"nodeType":"778","messageId":"779","endLine":67,"endColumn":28},{"ruleId":"776","severity":1,"message":"888","line":70,"column":21,"nodeType":"778","messageId":"779","endLine":70,"endColumn":32},{"ruleId":"776","severity":1,"message":"889","line":70,"column":34,"nodeType":"778","messageId":"779","endLine":70,"endColumn":43},{"ruleId":"776","severity":1,"message":"832","line":76,"column":24,"nodeType":"778","messageId":"779","endLine":76,"endColumn":38},{"ruleId":"776","severity":1,"message":"833","line":76,"column":40,"nodeType":"778","messageId":"779","endLine":76,"endColumn":52},{"ruleId":"797","severity":1,"message":"890","line":91,"column":6,"nodeType":"799","endLine":91,"endColumn":41,"suggestions":"891"},{"ruleId":"776","severity":1,"message":"806","line":8,"column":10,"nodeType":"778","messageId":"779","endLine":8,"endColumn":14},{"ruleId":"776","severity":1,"message":"807","line":8,"column":16,"nodeType":"778","messageId":"779","endLine":8,"endColumn":19},{"ruleId":"776","severity":1,"message":"844","line":1,"column":38,"nodeType":"778","messageId":"779","endLine":1,"endColumn":49},{"ruleId":"776","severity":1,"message":"845","line":5,"column":10,"nodeType":"778","messageId":"779","endLine":5,"endColumn":28},{"ruleId":"776","severity":1,"message":"846","line":19,"column":10,"nodeType":"778","messageId":"779","endLine":19,"endColumn":15},{"ruleId":"776","severity":1,"message":"847","line":21,"column":8,"nodeType":"778","messageId":"779","endLine":21,"endColumn":15},{"ruleId":"776","severity":1,"message":"787","line":23,"column":8,"nodeType":"778","messageId":"779","endLine":23,"endColumn":16},{"ruleId":"776","severity":1,"message":"788","line":24,"column":8,"nodeType":"778","messageId":"779","endLine":24,"endColumn":20},{"ruleId":"776","severity":1,"message":"848","line":28,"column":8,"nodeType":"778","messageId":"779","endLine":28,"endColumn":16},{"ruleId":"776","severity":1,"message":"849","line":43,"column":10,"nodeType":"778","messageId":"779","endLine":43,"endColumn":17},{"ruleId":"776","severity":1,"message":"795","line":43,"column":19,"nodeType":"778","messageId":"779","endLine":43,"endColumn":29},{"ruleId":"776","severity":1,"message":"850","line":50,"column":10,"nodeType":"778","messageId":"779","endLine":50,"endColumn":21},{"ruleId":"776","severity":1,"message":"892","line":53,"column":31,"nodeType":"778","messageId":"779","endLine":53,"endColumn":42},{"ruleId":"776","severity":1,"message":"838","line":66,"column":14,"nodeType":"778","messageId":"779","endLine":66,"endColumn":27},{"ruleId":"776","severity":1,"message":"851","line":67,"column":12,"nodeType":"778","messageId":"779","endLine":67,"endColumn":23},{"ruleId":"776","severity":1,"message":"832","line":72,"column":24,"nodeType":"778","messageId":"779","endLine":72,"endColumn":38},{"ruleId":"776","severity":1,"message":"833","line":72,"column":40,"nodeType":"778","messageId":"779","endLine":72,"endColumn":52},{"ruleId":"776","severity":1,"message":"848","line":7,"column":8,"nodeType":"778","messageId":"779","endLine":7,"endColumn":16},{"ruleId":"776","severity":1,"message":"814","line":15,"column":8,"nodeType":"778","messageId":"779","endLine":15,"endColumn":23},{"ruleId":"776","severity":1,"message":"815","line":16,"column":8,"nodeType":"778","messageId":"779","endLine":16,"endColumn":24},{"ruleId":"776","severity":1,"message":"816","line":17,"column":8,"nodeType":"778","messageId":"779","endLine":17,"endColumn":20},{"ruleId":"776","severity":1,"message":"887","line":18,"column":8,"nodeType":"778","messageId":"779","endLine":18,"endColumn":18},{"ruleId":"776","severity":1,"message":"817","line":19,"column":8,"nodeType":"778","messageId":"779","endLine":19,"endColumn":16},{"ruleId":"776","severity":1,"message":"818","line":19,"column":20,"nodeType":"778","messageId":"779","endLine":19,"endColumn":26},{"ruleId":"776","severity":1,"message":"819","line":21,"column":8,"nodeType":"778","messageId":"779","endLine":21,"endColumn":16},{"ruleId":"776","severity":1,"message":"820","line":24,"column":8,"nodeType":"778","messageId":"779","endLine":24,"endColumn":22},{"ruleId":"776","severity":1,"message":"821","line":25,"column":8,"nodeType":"778","messageId":"779","endLine":25,"endColumn":18},{"ruleId":"776","severity":1,"message":"823","line":76,"column":11,"nodeType":"778","messageId":"779","endLine":76,"endColumn":18},{"ruleId":"776","severity":1,"message":"863","line":76,"column":27,"nodeType":"778","messageId":"779","endLine":76,"endColumn":43},{"ruleId":"776","severity":1,"message":"893","line":82,"column":21,"nodeType":"778","messageId":"779","endLine":82,"endColumn":32},{"ruleId":"776","severity":1,"message":"894","line":82,"column":34,"nodeType":"778","messageId":"779","endLine":82,"endColumn":43},{"ruleId":"776","severity":1,"message":"837","line":88,"column":14,"nodeType":"778","messageId":"779","endLine":88,"endColumn":27},{"ruleId":"776","severity":1,"message":"838","line":95,"column":14,"nodeType":"778","messageId":"779","endLine":95,"endColumn":27},{"ruleId":"776","severity":1,"message":"895","line":102,"column":14,"nodeType":"778","messageId":"779","endLine":102,"endColumn":31},{"ruleId":"797","severity":1,"message":"896","line":141,"column":6,"nodeType":"799","endLine":150,"endColumn":4,"suggestions":"897"},{"ruleId":"797","severity":1,"message":"881","line":154,"column":6,"nodeType":"799","endLine":154,"endColumn":8,"suggestions":"898"},{"ruleId":"841","severity":2,"message":"842","line":229,"column":26,"nodeType":"843","endLine":229,"endColumn":37},{"ruleId":"776","severity":1,"message":"844","line":1,"column":38,"nodeType":"778","messageId":"779","endLine":1,"endColumn":49},{"ruleId":"776","severity":1,"message":"861","line":5,"column":10,"nodeType":"778","messageId":"779","endLine":5,"endColumn":28},{"ruleId":"776","severity":1,"message":"846","line":19,"column":10,"nodeType":"778","messageId":"779","endLine":19,"endColumn":15},{"ruleId":"776","severity":1,"message":"847","line":21,"column":8,"nodeType":"778","messageId":"779","endLine":21,"endColumn":15},{"ruleId":"776","severity":1,"message":"787","line":23,"column":8,"nodeType":"778","messageId":"779","endLine":23,"endColumn":16},{"ruleId":"776","severity":1,"message":"788","line":24,"column":8,"nodeType":"778","messageId":"779","endLine":24,"endColumn":20},{"ruleId":"776","severity":1,"message":"848","line":28,"column":8,"nodeType":"778","messageId":"779","endLine":28,"endColumn":16},{"ruleId":"776","severity":1,"message":"849","line":44,"column":10,"nodeType":"778","messageId":"779","endLine":44,"endColumn":17},{"ruleId":"776","severity":1,"message":"795","line":44,"column":19,"nodeType":"778","messageId":"779","endLine":44,"endColumn":29},{"ruleId":"776","severity":1,"message":"862","line":50,"column":10,"nodeType":"778","messageId":"779","endLine":50,"endColumn":21},{"ruleId":"776","severity":1,"message":"892","line":53,"column":31,"nodeType":"778","messageId":"779","endLine":53,"endColumn":42},{"ruleId":"776","severity":1,"message":"838","line":66,"column":14,"nodeType":"778","messageId":"779","endLine":66,"endColumn":27},{"ruleId":"776","severity":1,"message":"851","line":67,"column":12,"nodeType":"778","messageId":"779","endLine":67,"endColumn":23},{"ruleId":"776","severity":1,"message":"888","line":72,"column":21,"nodeType":"778","messageId":"779","endLine":72,"endColumn":32},{"ruleId":"776","severity":1,"message":"889","line":72,"column":34,"nodeType":"778","messageId":"779","endLine":72,"endColumn":43},{"ruleId":"776","severity":1,"message":"832","line":76,"column":24,"nodeType":"778","messageId":"779","endLine":76,"endColumn":38},{"ruleId":"776","severity":1,"message":"833","line":76,"column":40,"nodeType":"778","messageId":"779","endLine":76,"endColumn":52},{"ruleId":"776","severity":1,"message":"899","line":1,"column":8,"nodeType":"778","messageId":"779","endLine":1,"endColumn":13},{"ruleId":"776","severity":1,"message":"865","line":25,"column":3,"nodeType":"778","messageId":"779","endLine":25,"endColumn":27},{"ruleId":"776","severity":1,"message":"900","line":26,"column":3,"nodeType":"778","messageId":"779","endLine":26,"endColumn":30},{"ruleId":"776","severity":1,"message":"866","line":27,"column":3,"nodeType":"778","messageId":"779","endLine":27,"endColumn":30},{"ruleId":"776","severity":1,"message":"810","line":16,"column":3,"nodeType":"778","messageId":"779","endLine":16,"endColumn":27},{"ruleId":"776","severity":1,"message":"811","line":18,"column":3,"nodeType":"778","messageId":"779","endLine":18,"endColumn":30},{"ruleId":"776","severity":1,"message":"901","line":29,"column":28,"nodeType":"778","messageId":"779","endLine":29,"endColumn":34},{"ruleId":"776","severity":1,"message":"902","line":29,"column":36,"nodeType":"778","messageId":"779","endLine":29,"endColumn":43},{"ruleId":"776","severity":1,"message":"899","line":1,"column":8,"nodeType":"778","messageId":"779","endLine":1,"endColumn":13},{"ruleId":"776","severity":1,"message":"808","line":13,"column":3,"nodeType":"778","messageId":"779","endLine":13,"endColumn":30},{"ruleId":"776","severity":1,"message":"809","line":15,"column":3,"nodeType":"778","messageId":"779","endLine":15,"endColumn":33},{"ruleId":"776","severity":1,"message":"903","line":1,"column":27,"nodeType":"778","messageId":"779","endLine":1,"endColumn":36},{"ruleId":"776","severity":1,"message":"844","line":1,"column":38,"nodeType":"778","messageId":"779","endLine":1,"endColumn":49},{"ruleId":"776","severity":1,"message":"846","line":19,"column":10,"nodeType":"778","messageId":"779","endLine":19,"endColumn":15},{"ruleId":"776","severity":1,"message":"847","line":21,"column":8,"nodeType":"778","messageId":"779","endLine":21,"endColumn":15},{"ruleId":"776","severity":1,"message":"787","line":23,"column":8,"nodeType":"778","messageId":"779","endLine":23,"endColumn":16},{"ruleId":"776","severity":1,"message":"788","line":24,"column":8,"nodeType":"778","messageId":"779","endLine":24,"endColumn":20},{"ruleId":"776","severity":1,"message":"848","line":28,"column":8,"nodeType":"778","messageId":"779","endLine":28,"endColumn":16},{"ruleId":"776","severity":1,"message":"904","line":35,"column":8,"nodeType":"778","messageId":"779","endLine":35,"endColumn":15},{"ruleId":"776","severity":1,"message":"905","line":36,"column":8,"nodeType":"778","messageId":"779","endLine":36,"endColumn":24},{"ruleId":"776","severity":1,"message":"906","line":39,"column":10,"nodeType":"778","messageId":"779","endLine":39,"endColumn":27},{"ruleId":"776","severity":1,"message":"907","line":46,"column":11,"nodeType":"778","messageId":"779","endLine":46,"endColumn":19},{"ruleId":"776","severity":1,"message":"849","line":62,"column":10,"nodeType":"778","messageId":"779","endLine":62,"endColumn":17},{"ruleId":"776","severity":1,"message":"795","line":62,"column":19,"nodeType":"778","messageId":"779","endLine":62,"endColumn":29},{"ruleId":"776","severity":1,"message":"908","line":67,"column":10,"nodeType":"778","messageId":"779","endLine":67,"endColumn":21},{"ruleId":"776","severity":1,"message":"909","line":89,"column":11,"nodeType":"778","messageId":"779","endLine":89,"endColumn":19},{"ruleId":"776","severity":1,"message":"832","line":89,"column":21,"nodeType":"778","messageId":"779","endLine":89,"endColumn":35},{"ruleId":"776","severity":1,"message":"833","line":89,"column":37,"nodeType":"778","messageId":"779","endLine":89,"endColumn":49},{"ruleId":"776","severity":1,"message":"814","line":14,"column":8,"nodeType":"778","messageId":"779","endLine":14,"endColumn":23},{"ruleId":"776","severity":1,"message":"815","line":15,"column":8,"nodeType":"778","messageId":"779","endLine":15,"endColumn":24},{"ruleId":"776","severity":1,"message":"816","line":16,"column":8,"nodeType":"778","messageId":"779","endLine":16,"endColumn":20},{"ruleId":"776","severity":1,"message":"887","line":17,"column":8,"nodeType":"778","messageId":"779","endLine":17,"endColumn":18},{"ruleId":"776","severity":1,"message":"817","line":18,"column":8,"nodeType":"778","messageId":"779","endLine":18,"endColumn":16},{"ruleId":"776","severity":1,"message":"818","line":18,"column":20,"nodeType":"778","messageId":"779","endLine":18,"endColumn":26},{"ruleId":"776","severity":1,"message":"820","line":23,"column":8,"nodeType":"778","messageId":"779","endLine":23,"endColumn":22},{"ruleId":"776","severity":1,"message":"821","line":24,"column":8,"nodeType":"778","messageId":"779","endLine":24,"endColumn":18},{"ruleId":"776","severity":1,"message":"822","line":50,"column":11,"nodeType":"778","messageId":"779","endLine":50,"endColumn":14},{"ruleId":"776","severity":1,"message":"793","line":50,"column":16,"nodeType":"778","messageId":"779","endLine":50,"endColumn":19},{"ruleId":"776","severity":1,"message":"794","line":50,"column":21,"nodeType":"778","messageId":"779","endLine":50,"endColumn":27},{"ruleId":"776","severity":1,"message":"823","line":69,"column":21,"nodeType":"778","messageId":"779","endLine":69,"endColumn":28},{"ruleId":"776","severity":1,"message":"832","line":72,"column":21,"nodeType":"778","messageId":"779","endLine":72,"endColumn":35},{"ruleId":"776","severity":1,"message":"833","line":72,"column":37,"nodeType":"778","messageId":"779","endLine":72,"endColumn":49},{"ruleId":"797","severity":1,"message":"910","line":87,"column":6,"nodeType":"799","endLine":87,"endColumn":41,"suggestions":"911"},{"ruleId":"776","severity":1,"message":"848","line":7,"column":8,"nodeType":"778","messageId":"779","endLine":7,"endColumn":16},{"ruleId":"776","severity":1,"message":"814","line":15,"column":8,"nodeType":"778","messageId":"779","endLine":15,"endColumn":23},{"ruleId":"776","severity":1,"message":"815","line":16,"column":8,"nodeType":"778","messageId":"779","endLine":16,"endColumn":24},{"ruleId":"776","severity":1,"message":"816","line":17,"column":8,"nodeType":"778","messageId":"779","endLine":17,"endColumn":20},{"ruleId":"776","severity":1,"message":"887","line":18,"column":8,"nodeType":"778","messageId":"779","endLine":18,"endColumn":18},{"ruleId":"776","severity":1,"message":"817","line":19,"column":8,"nodeType":"778","messageId":"779","endLine":19,"endColumn":16},{"ruleId":"776","severity":1,"message":"818","line":19,"column":20,"nodeType":"778","messageId":"779","endLine":19,"endColumn":26},{"ruleId":"776","severity":1,"message":"820","line":24,"column":8,"nodeType":"778","messageId":"779","endLine":24,"endColumn":22},{"ruleId":"776","severity":1,"message":"821","line":25,"column":8,"nodeType":"778","messageId":"779","endLine":25,"endColumn":18},{"ruleId":"776","severity":1,"message":"823","line":75,"column":11,"nodeType":"778","messageId":"779","endLine":75,"endColumn":18},{"ruleId":"776","severity":1,"message":"912","line":75,"column":27,"nodeType":"778","messageId":"779","endLine":75,"endColumn":43},{"ruleId":"776","severity":1,"message":"837","line":79,"column":14,"nodeType":"778","messageId":"779","endLine":79,"endColumn":27},{"ruleId":"776","severity":1,"message":"838","line":86,"column":14,"nodeType":"778","messageId":"779","endLine":86,"endColumn":27},{"ruleId":"797","severity":1,"message":"896","line":119,"column":6,"nodeType":"799","endLine":127,"endColumn":4,"suggestions":"913"},{"ruleId":"797","severity":1,"message":"881","line":131,"column":6,"nodeType":"799","endLine":131,"endColumn":8,"suggestions":"914"},{"ruleId":"841","severity":2,"message":"842","line":217,"column":22,"nodeType":"843","endLine":217,"endColumn":33},{"ruleId":"776","severity":1,"message":"848","line":7,"column":8,"nodeType":"778","messageId":"779","endLine":7,"endColumn":16},{"ruleId":"776","severity":1,"message":"915","line":9,"column":8,"nodeType":"778","messageId":"779","endLine":9,"endColumn":20},{"ruleId":"776","severity":1,"message":"916","line":11,"column":18,"nodeType":"778","messageId":"779","endLine":11,"endColumn":27},{"ruleId":"776","severity":1,"message":"917","line":11,"column":29,"nodeType":"778","messageId":"779","endLine":11,"endColumn":34},{"ruleId":"776","severity":1,"message":"918","line":13,"column":8,"nodeType":"778","messageId":"779","endLine":13,"endColumn":12},{"ruleId":"776","severity":1,"message":"828","line":14,"column":8,"nodeType":"778","messageId":"779","endLine":14,"endColumn":13},{"ruleId":"776","severity":1,"message":"814","line":15,"column":8,"nodeType":"778","messageId":"779","endLine":15,"endColumn":23},{"ruleId":"776","severity":1,"message":"815","line":16,"column":8,"nodeType":"778","messageId":"779","endLine":16,"endColumn":24},{"ruleId":"776","severity":1,"message":"816","line":17,"column":8,"nodeType":"778","messageId":"779","endLine":17,"endColumn":20},{"ruleId":"776","severity":1,"message":"887","line":18,"column":8,"nodeType":"778","messageId":"779","endLine":18,"endColumn":18},{"ruleId":"776","severity":1,"message":"817","line":19,"column":8,"nodeType":"778","messageId":"779","endLine":19,"endColumn":16},{"ruleId":"776","severity":1,"message":"818","line":19,"column":20,"nodeType":"778","messageId":"779","endLine":19,"endColumn":26},{"ruleId":"776","severity":1,"message":"819","line":21,"column":8,"nodeType":"778","messageId":"779","endLine":21,"endColumn":16},{"ruleId":"776","severity":1,"message":"820","line":24,"column":8,"nodeType":"778","messageId":"779","endLine":24,"endColumn":22},{"ruleId":"776","severity":1,"message":"821","line":25,"column":8,"nodeType":"778","messageId":"779","endLine":25,"endColumn":18},{"ruleId":"776","severity":1,"message":"919","line":27,"column":8,"nodeType":"778","messageId":"779","endLine":27,"endColumn":17},{"ruleId":"776","severity":1,"message":"920","line":28,"column":8,"nodeType":"778","messageId":"779","endLine":28,"endColumn":17},{"ruleId":"776","severity":1,"message":"921","line":29,"column":10,"nodeType":"778","messageId":"779","endLine":29,"endColumn":22},{"ruleId":"776","severity":1,"message":"922","line":33,"column":8,"nodeType":"778","messageId":"779","endLine":33,"endColumn":18},{"ruleId":"776","severity":1,"message":"923","line":34,"column":10,"nodeType":"778","messageId":"779","endLine":34,"endColumn":13},{"ruleId":"776","severity":1,"message":"924","line":35,"column":28,"nodeType":"778","messageId":"779","endLine":35,"endColumn":36},{"ruleId":"776","severity":1,"message":"925","line":36,"column":8,"nodeType":"778","messageId":"779","endLine":36,"endColumn":12},{"ruleId":"776","severity":1,"message":"926","line":38,"column":10,"nodeType":"778","messageId":"779","endLine":38,"endColumn":18},{"ruleId":"776","severity":1,"message":"927","line":40,"column":3,"nodeType":"778","messageId":"779","endLine":40,"endColumn":13},{"ruleId":"776","severity":1,"message":"928","line":43,"column":3,"nodeType":"778","messageId":"779","endLine":43,"endColumn":13},{"ruleId":"776","severity":1,"message":"906","line":46,"column":3,"nodeType":"778","messageId":"779","endLine":46,"endColumn":20},{"ruleId":"776","severity":1,"message":"929","line":48,"column":3,"nodeType":"778","messageId":"779","endLine":48,"endColumn":20},{"ruleId":"776","severity":1,"message":"823","line":82,"column":11,"nodeType":"778","messageId":"779","endLine":82,"endColumn":18},{"ruleId":"776","severity":1,"message":"912","line":82,"column":27,"nodeType":"778","messageId":"779","endLine":82,"endColumn":43},{"ruleId":"776","severity":1,"message":"930","line":86,"column":20,"nodeType":"778","messageId":"779","endLine":86,"endColumn":31},{"ruleId":"776","severity":1,"message":"863","line":86,"column":40,"nodeType":"778","messageId":"779","endLine":86,"endColumn":56},{"ruleId":"797","severity":1,"message":"881","line":109,"column":6,"nodeType":"799","endLine":109,"endColumn":8,"suggestions":"931"},{"ruleId":"776","severity":1,"message":"926","line":14,"column":10,"nodeType":"778","messageId":"779","endLine":14,"endColumn":18},{"ruleId":"776","severity":1,"message":"932","line":15,"column":10,"nodeType":"778","messageId":"779","endLine":15,"endColumn":20},{"ruleId":"776","severity":1,"message":"875","line":15,"column":35,"nodeType":"778","messageId":"779","endLine":15,"endColumn":45},{"ruleId":"776","severity":1,"message":"933","line":17,"column":3,"nodeType":"778","messageId":"779","endLine":17,"endColumn":20},{"ruleId":"776","severity":1,"message":"934","line":19,"column":3,"nodeType":"778","messageId":"779","endLine":19,"endColumn":20},{"ruleId":"797","severity":1,"message":"881","line":51,"column":6,"nodeType":"799","endLine":51,"endColumn":8,"suggestions":"935"},{"ruleId":"776","severity":1,"message":"883","line":53,"column":9,"nodeType":"778","messageId":"779","endLine":53,"endColumn":19},{"ruleId":"936","severity":2,"message":"937","line":54,"column":5,"nodeType":"778","messageId":"938","endLine":54,"endColumn":13},{"ruleId":"776","severity":1,"message":"939","line":5,"column":10,"nodeType":"778","messageId":"779","endLine":5,"endColumn":17},{"ruleId":"776","severity":1,"message":"926","line":14,"column":10,"nodeType":"778","messageId":"779","endLine":14,"endColumn":18},{"ruleId":"797","severity":1,"message":"881","line":48,"column":6,"nodeType":"799","endLine":48,"endColumn":8,"suggestions":"940"},{"ruleId":"776","severity":1,"message":"883","line":50,"column":9,"nodeType":"778","messageId":"779","endLine":50,"endColumn":19},{"ruleId":"936","severity":2,"message":"937","line":51,"column":5,"nodeType":"778","messageId":"938","endLine":51,"endColumn":13},"no-native-reassign",["941"],"no-negated-in-lhs",["942"],"no-unused-vars","'formReducer' is defined but never used.","Identifier","unusedVar","'tempReducer' is assigned a value but never used.","'featureMiddleware' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Logo' is defined but never used.","'FormControlExample' is defined but never used.","'DateCell' is defined but never used.","'DateTimeCell' is defined but never used.","'axios' is defined but never used.","'after' is defined but never used.","'data1' is assigned a value but never used.","'data2' is assigned a value but never used.","'env' is assigned a value but never used.","'config' is assigned a value but never used.","'setRawData' is assigned a value but never used.","'res1' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'data' and 'semiInfiniteData'. Either include them or remove the dependency array.","ArrayExpression",["943"],"React Hook useCallback has missing dependencies: 'data', 'rawData', and 'sortBy'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setData' needs the current value of 'rawData'.",["944"],"Assignments to the 'users' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","'counter' is assigned a value but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'ACCOUNT_UPDATE_PROFILE_FAIL' is defined but never used.","'ACCOUNT_UPDATE_PROFILE_SUCCESS' is defined but never used.","'USER_UPDATE_PROFILE_FAIL' is defined but never used.","'USER_UPDATE_PROFILE_SUCCESS' is defined but never used.","'userApi' is assigned a value but never used.","'useParams' is defined but never used.","'DateRangePicker' is defined but never used.","'SingleDatePicker' is defined but never used.","'NumberPicker' is defined but never used.","'Dropdown' is defined but never used.","'Option' is defined but never used.","'TextArea' is defined but never used.","'DurationPicker' is defined but never used.","'TimePicker' is defined but never used.","'api' is assigned a value but never used.","'loading' is assigned a value but never used.","'loadingSignIn' is assigned a value but never used.","'errorSignIn' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'addToast', 'errorRegister', and 'name'. Either include them or remove the dependency array.",["945"],"'Input' is defined but never used.","'setName' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'addToast', 'errorSignIn', and 'name'. Either include them or remove the dependency array.",["946"],"'loadingAccount' is assigned a value but never used.","'errorAccount' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'addToast', 'dispatch', and 'firstName'. Either include them or remove the dependency array.",["947"],"'errorUserDetails' is assigned a value but never used.","'loadingUpdate' is assigned a value but never used.","'loadingDelete' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'addToast', 'errorDelete', 'errorUpdate', and 'firstName'. Either include them or remove the dependency array.",["948"],"react/jsx-no-undef","'ErrorBanner' is not defined.","JSXIdentifier","'useCallback' is defined but never used.","'USER_DETAILS_RESET' is defined but never used.","'sleep' is defined but never used.","'orderBy' is defined but never used.","'Resource' is defined but never used.","'rawData' is assigned a value but never used.","'userDeleted' is assigned a value but never used.","'errorDelete' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'addToast' and 'firstName'. Either include them or remove the dependency array.",["949"],"'firstName' is assigned a value but never used.","'setFirstName' is assigned a value but never used.","'lastName' is assigned a value but never used.","'setLastName' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'addToast'. Either include it or remove the dependency array.",["950"],["951"],"'BLOG_DETAILS_RESET' is defined but never used.","'blogDeleted' is assigned a value but never used.","'errorBlogDetails' is assigned a value but never used.",["952"],"'BLOG_UPDATE_PROFILE_FAIL' is defined but never used.","'BLOG_UPDATE_PROFILE_SUCCESS' is defined but never used.","'blogApi' is assigned a value but never used.",["941"],["942"],"'Redirect' is defined but never used.","'useSelector' is defined but never used.",["953"],["954"],["955"],"'updateUser' is defined but never used.","'accountId' is assigned a value but never used.",["956"],"'error' is assigned a value but never used.","'errorMessage' is assigned a value but never used.",["957"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["958"],"'closeError' is assigned a value but never used.",["959"],["960"],["961"],"'EmailInput' is defined but never used.","'loadingUser' is assigned a value but never used.","'errorUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'addToast', 'dispatch', and 'title'. Either include them or remove the dependency array.",["962"],"'exceptItems' is assigned a value but never used.","'loadinguser' is assigned a value but never used.","'erroruser' is assigned a value but never used.","'loadingPostDelete' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'addToast', 'errorDelete', 'errorUpdate', and 'title'. Either include them or remove the dependency array.",["963"],["964"],"'Axios' is defined but never used.","'BLOG_UPDATE_PROFILE_REQUEST' is defined but never used.","'prices' is defined but never used.","'ratings' is defined but never used.","'useEffect' is defined but never used.","'Spinner' is defined but never used.","'StatusIndication' is defined but never used.","'POST_DELETE_RESET' is defined but never used.","'addToast' is assigned a value but never used.","'postDeleted' is assigned a value but never used.","'userInfo' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'addToast', 'blogId', 'dispatch', and 'title'. Either include them or remove the dependency array.",["965"],"'errorPostDetails' is assigned a value but never used.",["966"],["967"],"'RaisedButton' is defined but never used.","'FinalForm' is defined but never used.","'Field' is defined but never used.","'Form' is defined but never used.","'FormField' is defined but never used.","'FormGroup' is defined but never used.","'FormProvider' is defined but never used.","'FlatButton' is defined but never used.","'Row' is defined but never used.","'BtnTrash' is defined but never used.","'Icon' is defined but never used.","'useToast' is defined but never used.","'deletePost' is defined but never used.","'updatePost' is defined but never used.","'POST_UPDATE_RESET' is defined but never used.","'loadingBlog' is assigned a value but never used.",["968"],"'deleteUser' is defined but never used.","'USER_DELETE_RESET' is defined but never used.","'USER_UPDATE_RESET' is defined but never used.",["969"],"no-undef","'setError' is not defined.","undef","'NavLink' is defined but never used.",["970"],"no-global-assign","no-unsafe-negation",{"desc":"971","fix":"972"},{"desc":"973","fix":"974"},{"desc":"975","fix":"976"},{"desc":"977","fix":"978"},{"desc":"979","fix":"980"},{"desc":"981","fix":"982"},{"desc":"983","fix":"984"},{"desc":"985","fix":"986"},{"desc":"987","fix":"988"},{"desc":"989","fix":"990"},{"desc":"971","fix":"991"},{"desc":"973","fix":"992"},{"desc":"979","fix":"993"},{"desc":"975","fix":"994"},{"desc":"995","fix":"996"},{"desc":"997","fix":"998"},{"desc":"983","fix":"999"},{"desc":"977","fix":"1000"},{"desc":"985","fix":"1001"},{"desc":"1002","fix":"1003"},{"desc":"1004","fix":"1005"},{"desc":"997","fix":"1006"},{"desc":"1007","fix":"1008"},{"desc":"1009","fix":"1010"},{"desc":"997","fix":"1011"},{"desc":"997","fix":"1012"},{"desc":"997","fix":"1013"},{"desc":"997","fix":"1014"},"Update the dependencies array to be: [data, semiInfiniteData]",{"range":"1015","text":"1016"},"Update the dependencies array to be: [data, rawData, sortBy]",{"range":"1017","text":"1018"},"Update the dependencies array to be: [props.history, accountInfo, accountInfoSignIn, errorRegister, addToast, name]",{"range":"1019","text":"1020"},"Update the dependencies array to be: [props.history, accountInfoSignIn, errorSignIn, addToast, name]",{"range":"1021","text":"1022"},"Update the dependencies array to be: [props.history, userInfo, errorAdd, addToast, firstName, dispatch]",{"range":"1023","text":"1024"},"Update the dependencies array to be: [dispatch, props.history, successUpdate, successDelete, user, id, errorDelete, errorUpdate, addToast, firstName]",{"range":"1025","text":"1026"},"Update the dependencies array to be: [props.history, userInfo, userInfoSignIn, errorRegister, addToast, firstName]",{"range":"1027","text":"1028"},"Update the dependencies array to be: [props.history, userInfoSignIn, errorSignIn, addToast]",{"range":"1029","text":"1030"},"Update the dependencies array to be: [props.history, blogInfo, errorAdd, addToast, firstName, dispatch]",{"range":"1031","text":"1032"},"Update the dependencies array to be: [dispatch, props.history, successUpdate, successDelete, blog, id, errorDelete, errorUpdate, addToast, firstName]",{"range":"1033","text":"1034"},{"range":"1035","text":"1016"},{"range":"1036","text":"1018"},{"range":"1037","text":"1024"},{"range":"1038","text":"1020"},"Update the dependencies array to be: [dispatch, props.history, successUpdate, successDelete, user, userId, errorDelete, errorUpdate, addToast, firstName]",{"range":"1039","text":"1040"},"Update the dependencies array to be: [dispatch]",{"range":"1041","text":"1042"},{"range":"1043","text":"1028"},{"range":"1044","text":"1022"},{"range":"1045","text":"1030"},"Update the dependencies array to be: [props.history, blogInfo, errorAdd, addToast, title, dispatch]",{"range":"1046","text":"1047"},"Update the dependencies array to be: [dispatch, props.history, successUpdate, successDelete, errorPostDelete, successPostDelete, blog, id, errorDelete, errorUpdate, addToast, title]",{"range":"1048","text":"1049"},{"range":"1050","text":"1042"},"Update the dependencies array to be: [props.history, postInfo, errorAdd, addToast, title, blogId, dispatch]",{"range":"1051","text":"1052"},"Update the dependencies array to be: [dispatch, props.history, successUpdate, successDelete, post, blogId, postId, errorDelete, errorUpdate, addToast, title]",{"range":"1053","text":"1054"},{"range":"1055","text":"1042"},{"range":"1056","text":"1042"},{"range":"1057","text":"1042"},{"range":"1058","text":"1042"},[8535,8537],"[data, semiInfiniteData]",[9146,9148],"[data, rawData, sortBy]",[2880,2927],"[props.history, accountInfo, accountInfoSignIn, errorRegister, addToast, name]",[2731,2765],"[props.history, accountInfoSignIn, errorSignIn, addToast, name]",[2977,3012],"[props.history, userInfo, errorAdd, addToast, firstName, dispatch]",[4370,4434],"[dispatch, props.history, successUpdate, successDelete, user, id, errorDelete, errorUpdate, addToast, firstName]",[3117,3172],"[props.history, userInfo, userInfoSignIn, errorRegister, addToast, firstName]",[2731,2774],"[props.history, userInfoSignIn, errorSignIn, addToast]",[2977,3012],"[props.history, blogInfo, errorAdd, addToast, firstName, dispatch]",[4370,4434],"[dispatch, props.history, successUpdate, successDelete, blog, id, errorDelete, errorUpdate, addToast, firstName]",[8535,8537],[9146,9148],[2977,3012],[3465,3512],[4465,4534],"[dispatch, props.history, successUpdate, successDelete, user, userId, errorDelete, errorUpdate, addToast, firstName]",[4762,4764],"[dispatch]",[3314,3370],[2731,2765],[2845,2889],[3022,3057],"[props.history, blogInfo, errorAdd, addToast, title, dispatch]",[4507,4645],"[dispatch, props.history, successUpdate, successDelete, errorPostDelete, successPostDelete, blog, id, errorDelete, errorUpdate, addToast, title]",[4718,4720],[2876,2911],"[props.history, postInfo, errorAdd, addToast, title, blogId, dispatch]",[3780,3890],"[dispatch, props.history, successUpdate, successDelete, post, blogId, postId, errorDelete, errorUpdate, addToast, title]",[3963,3965],[3357,3359],[1443,1445],[1451,1453]]