"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = require("prop-types");

var _classnames = _interopRequireDefault(require("classnames"));

var _Person = _interopRequireDefault(require("../../Person"));

var _Cell = _interopRequireDefault(require("../Cell"));

var _TextCell = _interopRequireDefault(require("../TextCell"));

var _Placeholder = _interopRequireDefault(require("./Placeholder"));

function PersonCell(_ref) {
  var img = _ref.img,
      name = _ref.name,
      withAvatar = _ref.withAvatar,
      isLoading = _ref.isLoading,
      className = _ref.className,
      contentClassName = _ref.contentClassName,
      style = _ref.style,
      rest = (0, _objectWithoutProperties2["default"])(_ref, ["img", "name", "withAvatar", "isLoading", "className", "contentClassName", "style"]);
  return withAvatar ? /*#__PURE__*/_react["default"].createElement(_Cell["default"], (0, _extends2["default"])({}, rest, {
    isLoading: isLoading,
    className: (0, _classnames["default"])('person-cell', className),
    contentClassName: contentClassName,
    style: style,
    Placeholder: /*#__PURE__*/_react["default"].createElement(_Placeholder["default"], null)
  }), name && /*#__PURE__*/_react["default"].createElement(_Person["default"], {
    img: img,
    name: name,
    size: "sm"
  })) : /*#__PURE__*/_react["default"].createElement(_TextCell["default"], {
    isLoading: isLoading,
    className: (0, _classnames["default"])('person-cell', className),
    contentClassName: contentClassName,
    style: style
  }, name);
}

PersonCell.propTypes = {
  /** Image url for person */
  img: _propTypes.string,

  /** Person full name */
  name: _propTypes.string.isRequired,

  /** Whether avatar should be displayed next to person's name */
  withAvatar: _propTypes.bool,

  /** indicator that cell is yet to receive data */
  isLoading: _propTypes.bool,

  /** class name of cell */
  className: _propTypes.string,

  /** class name of cell content wrapper */
  contentClassName: _propTypes.string,

  /** styles applied to a cell */
  style: (0, _propTypes.shape)()
};
PersonCell.defaultProps = {
  withAvatar: true,
  isLoading: false
};
var _default = PersonCell;
exports["default"] = _default;