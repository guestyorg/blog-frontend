import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import React from 'react';
import PropTypes from 'prop-types';
import { FormProvider } from "../enums";
import FormContext from "./FormContext";
export var scrollToFirstError = function scrollToFirstError(offset) {
  var el = document.querySelector('.form-field-validation-error');

  if (!el) {
    return;
  }

  var _el$getBoundingClient = el.getBoundingClientRect(),
      top = _el$getBoundingClient.top;

  var scrollTop = document.documentElement.scrollTop;
  el.focus({
    preventScroll: true
  });
  window.scrollTo({
    top: top + scrollTop - offset,
    behavior: 'smooth'
  });
};
var Form = React.forwardRef(function Form(_ref, ref) {
  var onSubmit = _ref.onSubmit,
      children = _ref.children,
      className = _ref.className,
      style = _ref.style,
      provider = _ref.provider,
      fieldInstance = _ref.fieldInstance,
      props = _objectWithoutProperties(_ref, ["onSubmit", "children", "className", "style", "provider", "fieldInstance"]);

  var handleSubmit = function handleSubmit(e) {
    scrollToFirstError(300);
    onSubmit(e);
  };

  return /*#__PURE__*/React.createElement("form", _extends({
    className: className,
    style: style,
    ref: ref,
    noValidate: true,
    onSubmit: handleSubmit
  }, props), /*#__PURE__*/React.createElement(FormContext.Provider, {
    value: {
      provider: provider,
      fieldInstance: fieldInstance
    }
  }, children));
});
Form.defaultProps = {
  provider: FormProvider.Final,
  fieldInstance: null
};
Form.propTypes = {
  /** Callback function to handle form submit */
  onSubmit: PropTypes.func.isRequired,

  /** Form child element to render */
  children: PropTypes.node.isRequired,

  /** Form field instance to pass */
  fieldInstance: PropTypes.oneOfType([PropTypes.shape(), PropTypes.func]),

  /** String - the form provider to render * */
  provider: PropTypes.oneOf(['redux', 'final']),

  /** Form root level additional class */
  className: PropTypes.string,

  /** Form root level additional style */
  style: PropTypes.shape()
};
Form.displayName = 'Form';
export default Form;