import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
import React from 'react';
import { shallow, mount, configure } from 'enzyme';
import { shallowToJson } from 'enzyme-to-json';
import isEmpty from 'lodash/isEmpty';
import Adapter from 'enzyme-adapter-react-16';
configure({
  adapter: new Adapter()
});

const setup = (component, isMount = false) => isMount ? mount(component) : shallow(component);
/**
 * Base test for all component unit testing
 * @param component {Component} The component to test
 * @param props {Object}  The props supported by the component
 * @param snapShot  {{}} The component snapshot
 */


export default ((component, props = {}, snapShot = {}) => {
  describe('Base test for all component testing', () => {
    test('Should render component', () => {
      expect(component).toBeDefined();
    });
    test('Should render and equal snapshot', () => {
      const {
        children
      } = props,
            otherProps = _objectWithoutPropertiesLoose(props, ["children"]);

      const snapComponent = React.createElement(component, otherProps, children);
      const wrapper = setup(!isEmpty(snapShot) ? snapShot : snapComponent);
      expect(shallowToJson(wrapper)).toMatchSnapshot();
    });
    test('Should have expected props', () => {
      const wrapper = setup(React.createElement("component", props));
      Object.keys(props).forEach(prop => expect(wrapper.prop(prop)).toEqual(props[prop]));
    });
  });
});